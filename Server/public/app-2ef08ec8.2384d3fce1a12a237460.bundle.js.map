{"version":3,"file":"app-2ef08ec8.2384d3fce1a12a237460.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AASA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACzZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAAA;AAPA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpNA;AACA;AACA;AAEA;AAIA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AAEA;AAIA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChjiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAUA;AAAA;AARA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;AC1csources":["webpack://uccss-old-new/./src/main.js","webpack://uccss-old-new/./src/modules/acc/accCreateRequest.js","webpack://uccss-old-new/./src/modules/acc/accInstitute.js","webpack://uccss-old-new/./src/modules/acc/accInstitutions.js","webpack://uccss-old-new/./src/modules/acc/accRequests.js","webpack://uccss-old-new/./src/modules/acc/apjAssignments.js","webpack://uccss-old-new/./src/modules/acc/viewUserRequests.js","webpack://uccss-old-new/./src/modules/acc/accCreateRequest.html","webpack://uccss-old-new/./src/modules/acc/accInstitute.html","webpack://uccss-old-new/./src/modules/acc/accInstitutions.html","webpack://uccss-old-new/./src/modules/acc/accRequests.html","webpack://uccss-old-new/./src/modules/acc/apjAssignments.html","webpack://uccss-old-new/./src/modules/acc/components/Requests.html","webpack://uccss-old-new/./src/modules/acc/components/assignRequestTable.html","webpack://uccss-old-new/./src/modules/acc/components/assignmentDetails.html","webpack://uccss-old-new/./src/modules/acc/components/bo.html","webpack://uccss-old-new/./src/modules/acc/components/editRequestsForm.html","webpack://uccss-old-new/./src/modules/acc/components/erp.html","webpack://uccss-old-new/./src/modules/acc/components/hana.html","webpack://uccss-old-new/./src/modules/acc/components/instAddress.html","webpack://uccss-old-new/./src/modules/acc/components/instIs4ua.html","webpack://uccss-old-new/./src/modules/acc/components/instPeople.html","webpack://uccss-old-new/./src/modules/acc/components/institutionDetails.html","webpack://uccss-old-new/./src/modules/acc/components/institutionPanels.html","webpack://uccss-old-new/./src/modules/acc/components/institutionsForm.html","webpack://uccss-old-new/./src/modules/acc/components/institutionsTable.html","webpack://uccss-old-new/./src/modules/acc/components/requestDetails.html","webpack://uccss-old-new/./src/modules/acc/components/requestForm.html","webpack://uccss-old-new/./src/modules/acc/components/requestsTable.html","webpack://uccss-old-new/./src/modules/acc/components/viewAssignmentForm.html","webpack://uccss-old-new/./src/modules/acc/components/viewRequestsTable.html","webpack://uccss-old-new/./src/modules/acc/viewUserRequests.html"],"sourcesContent":["import environment from '../config/environment.json';\nimport {PLATFORM} from 'aurelia-pal';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(PLATFORM.moduleName('aurelia-dialog'))\n    .globalResources(PLATFORM.moduleName(\"aurelia-mask/masked-input\"))\n    .feature(PLATFORM.moduleName('resources/index'));\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin(PLATFORM.moduleName('aurelia-testing'));\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName('app')));\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from \"aurelia-router\";\r\nimport { DataTable } from '../../resources/utils/dataTable';\r\nimport { Sessions } from '../../resources/data/sessions';\r\nimport { Products } from '../../resources/data/products';\r\nimport { SiteInfo } from '../../resources/data/siteInfo';\r\nimport { APJClientRequests } from '../../resources/data/apjClientRequests';\r\nimport { AppConfig } from '../../config/appConfig';\r\nimport { Utils } from '../../resources/utils/utils';\r\nimport { People } from '../../resources/data/people';\r\nimport { Systems } from '../../resources/data/systems';\r\nimport Validation from '../../resources/utils/validation';\r\nimport { CommonDialogs } from '../../resources/dialogs/common-dialogs';\r\nimport Flatpickr from 'flatpickr';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport moment from 'moment';\r\n\r\n@inject(Router, AppConfig, Systems, Validation, People, CommonDialogs, DataTable, Utils, Sessions, Products, APJClientRequests, SiteInfo, EventAggregator)\r\nexport class ACCClientRequest {\r\n  configDate = {};\r\n\r\n  constructor(router, config, systems, validation, people, dialog, datatable, utils, sessions, products, requests, siteInfo, ea) {\r\n    this.router = router;\r\n    this.config = config;\r\n    this.validation = validation;\r\n    this.validation.initialize(this);\r\n    this.people = people;\r\n    this.dataTable = datatable;\r\n    this.dataTable.initialize(this);\r\n    this.utils = utils;\r\n    this.sessions = sessions;\r\n    this.products = products;\r\n    this.requests = requests;\r\n    this.siteInfo = siteInfo;\r\n    this.systems = systems;\r\n    this.dialog = dialog;\r\n    this.ea = ea;\r\n\r\n    this.userObj = JSON.parse(sessionStorage.getItem('user'));;\r\n    this.invoiceRelevant = false;\r\n\r\n  };\r\n\r\n  async activate() {\r\n    let responses = await Promise.all([\r\n      this.products.getProductsArray('?filter=apj|eq|true&order=name', true),\r\n      this.people.getInstitutionsArray('?filter=[and]institutionStatus|eq|01:apj|eq|true&order=name', true),\r\n      this.siteInfo.getMessageArray('?filter=category|eq|CLIENT_REQUESTS', true),\r\n      this.people.getAPJPackages(),\r\n      this.systems.getSystemsArray('?filter=apj|eq|true', true),\r\n      this.config.getConfig()\r\n    ]);\r\n\r\n    $('#loading').hide();\r\n\r\n    this.requests.selectRequest()\r\n    this.filterList();\r\n    this._setUpValidation();\r\n\r\n    // this.useSandbox = this.config.SANDBOX_USED;\r\n    // if (!this.config.SANDBOX_USED) {\r\n    // \tthis.typeSelected = true;\r\n    // \tthis.regularClient = true;\r\n    // \tthis.requestType = \"regularCourse\";\r\n    // }\r\n    this.filterInstitutions();\r\n  }\r\n\r\n  filterInstitutions() {\r\n    this.insitutionsArray = this.people.institutionsArray.filter(item => {\r\n      return item.packageId !== null;\r\n    });\r\n  }\r\n\r\n  filterInstiutionList() {\r\n    if (!this.filterValue) {\r\n      this.filterInstitutions();\r\n      return;\r\n    }\r\n    let filterValue = this.filterValue.toLowerCase();\r\n    this.insitutionsArray = this.people.institutionsArray.filter(item => {\r\n      return item.packageId !== null && item.name.toLowerCase().indexOf(filterValue) > -1;\r\n    });\r\n  }\r\n\r\n  attached() {\r\n    $('#loading').hide();\r\n  }\r\n\r\n  selectProduct(product) {\r\n    if (this.requestDetails.length >= this.selectedPackage.maxClients) {\r\n      // this.utils.showNotification(\"This university has reached their maximum requested products.\", \"error\");\r\n      return this.dialog.showMessage(\r\n        \"This university has reached their maximum requested products.  Are you sure you want to proceed?\",\r\n        \"Extra Client\",\r\n        ['Yes','No']\r\n      ).whenClosed(response => {\r\n        if(response.output.toUpperCase() == 'YES'){\r\n          this.invoiceRelevant = true;\r\n          this.addTheClient(product);\r\n          return;\r\n        } else {\r\n          this.invoiceRelevant = false;\r\n          this.addTheClient(product);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    this.invoiceRelevant = false;\r\n    this.addTheClient(product);\r\n  }\r\n\r\n  addTheClient(product) {\r\n    $(\"#requestProductsLabel\").html(\"Requested Products\");\r\n    var newObj = this.requests.emptyRequestDetail();\r\n    newObj.productId = product._id;\r\n    this.requestDetails.push(newObj);\r\n    this.requests.selectedRequest.requestDetails.push(newObj);\r\n    this.products.selectedProductFromId(newObj.productId);\r\n    this.requests.selectedRequest.requestDetails[this.requests.selectedRequest.requestDetails.length - 1].productName = product.name;\r\n    this.requests.selectedRequest.requestDetails[this.requests.selectedRequest.requestDetails.length - 1].invoiceRelevant = this.invoiceRelevant;\r\n    if (this.invoiceRelevant) {\r\n      this.requests.selectedRequest.requestDetails[this.requests.selectedRequest.requestDetails.length - 1].price = product.price;\r\n    }\r\n\r\n    this.validation.makeValid($(\"#productList\"));\r\n  }\r\n\r\n  alreadyOnList(id) {\r\n    for (let i = 0; i < this.requests.selectedRequest.requestDetails.length; i++) {\r\n      if (this.requests.selectedRequest.requestDetails[i].productId === id) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async removeProduct(index) {\r\n    if (this.requestDetails[index].requestStatus == this.config.ASSIGNED_REQUEST_CODE) {\r\n      return this.dialog.showMessage(\r\n        \"That request has already been assigned.  Are you sure you want to retire that assignment?\",\r\n        \"Retire Assignment\",\r\n        ['Yes', 'No']\r\n      ).whenClosed(response => {\r\n        if (!response.wasCancelled) {\r\n          this.requestDetails[index].requestStatus = this.config.RETIRED_REQUEST_CODE;\r\n          this.saveIt();\r\n          this.updateClient(this.requestDetails[index]);\r\n        }\r\n      });\r\n\r\n    } else {\r\n      return this.dialog.showMessage(\r\n        \"Are you sure you want to delete that request?\",\r\n        \"Delete Request\",\r\n        ['Yes', 'No']\r\n      ).whenClosed(response => {\r\n        if (!response.wasCancelled) {\r\n          this.requestDetails[index].delete = true;\r\n          this.removeRequestDetail(this.requestDetails[index]);\r\n          this.requestDetails.splice(index, 1);\r\n          this.saveIt();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  removeRequestDetail(request) {\r\n    let spliceIndex = -1;\r\n    this.requests.selectedRequest.requestDetails.forEach((item, index) => {\r\n      if (item._id === request._id) spliceIndex = index;\r\n    });\r\n    this.requests.selectedRequest.requestDetails.splice(spliceIndex, 1);\r\n  }\r\n\r\n  async updateClient(request) {\r\n    var clientToProcess;\r\n    request.assignments.forEach(item => {\r\n      clientToProcess = -1;\r\n      let retireClient = true;\r\n      this.systems.selectedSystemFromId(item.systemId);\r\n      for (let i = 0; i < this.systems.selectedSystem.clients.length; i++) {\r\n        if (this.systems.selectedSystem.clients[i].client == item.client) {\r\n          clientToProcess = i;\r\n          this.systems.selectedSystem.clients[i].assignments.forEach((assign, index) => {\r\n            if (request._id === assign.assignment) {\r\n              this.systems.selectedSystem.clients[clientToProcess].assignments[index].statusCurrent = false;\r\n            }\r\n          });\r\n          retireClient = true;\r\n          this.systems.selectedSystem.clients[clientToProcess].assignments.forEach(item => {\r\n            if (item.statusCurrent === undefined || item.statusCurrent) retireClient = false\r\n          })\r\n          if (this.systems.selectedSystem.clients[clientToProcess].assignments.length === 0 || retireClient) {\r\n            this.systems.selectedSystem.clients[clientToProcess].clientStatus = this.config.RETIRED_CLIENT_CODE;\r\n          }\r\n        }\r\n      \r\n      }\r\n      this.systems.saveSystem();\r\n    });\r\n  }\r\n\r\n  _buildRequest() {\r\n    if (this.requests.selectedRequest._id) {\r\n      this.requests.selectedRequest.requestDetails.invoiceRelevant = this.invoiceRelevant;\r\n      this.requests.selectedRequest.requestDetailsToSave = this.requests.selectedRequest.requestDetails;\r\n      this.requests.selectedRequest.requestDetailsToSave.forEach((item, index) => {\r\n        if (item.requestStatus != this.config.ASSIGNED_REQUEST_CODE && item.requestStatus != this.config.RETIRED_REQUEST_CODE) item.requestStatus = this.config.UPDATED_REQUEST_CODE;\r\n        // if (item.requestStatus == this.config.RETIRED_REQUEST_CODE) {\r\n        //   this.requests.selectedRequest.requestDetails.splice(index, 1);\r\n        // }\r\n      })\r\n      this.requests.selectedRequest.requestStatus = this.config.UPDATED_REQUEST_CODE;\r\n    } else {\r\n      this.requests.selectedRequest.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;\r\n    }\r\n    this.requests.selectedRequest.institutionId = this.selectedInstitution;\r\n  }\r\n\r\n  _cleanUp() {\r\n    this.requests.selectRequest();\r\n    this.institutionSelected = false;\r\n    this.selectedInstitution = \"\";\r\n    this.personSelected = false\r\n    this.typeSelected = false;\r\n    if (!this.config.SANDBOX_USED) {\r\n      this.typeSelected = true;\r\n      this.regularClient = true;\r\n      this.requestType = \"regularCourse\";\r\n    }\r\n    this.sandBoxClient = false;\r\n    $(\"#existingRequestInfo\").hide();\r\n    this.requestType = -1;\r\n  }\r\n\r\n  async changeInstitution(el) {\r\n    if (this.selectedInstitution != \"\") {\r\n      await this.people.selectInstitutionByID(this.selectedInstitution);\r\n      this.getPackage();\r\n      this.institutionSelected = true;\r\n      if (!this.config.SANDBOX_USED) {\r\n        this.typeSelected = true;\r\n        this.regularClient = true;\r\n        this.requestType = \"regularCourse\";\r\n      }\r\n      this.selectedPerson = \"\";\r\n      this.requestType = \"\";\r\n      $(\"#existingRequestInfo\").empty().hide();\r\n      await this.requests.getAPJInstitutionRequests('?filter=institutionId|eq|' + this.selectedInstitution, true);\r\n      if (!this.requests.apjInstitutionRequestArray.length) {\r\n        this.requests.selectRequest();\r\n      } else {\r\n        this.requests.selectRequest(0);\r\n      }\r\n      this.filterNotActiveRequests();\r\n    } else {\r\n      this.people.selectInstitution();\r\n      this.institutionSelected = false;\r\n    }\r\n\r\n  }\r\n\r\n  filterNotActiveRequests() {\r\n    this.requestDetails = [];\r\n    this.requests.selectedRequest.requestDetails.forEach(item => {\r\n      if (item.requestStatus != this.config.RETIRED_REQUEST_CODE) {\r\n        this.requestDetails.push(item);\r\n      }\r\n    })\r\n  }\r\n\r\n  getPackage() {\r\n    this.selectedPackage = undefined;\r\n    this.people.packageArray.forEach(item => {\r\n      if (this.people.selectedInstitution.packageId != null && item._id === this.people.selectedInstitution.packageId.packageId) this.selectedPackage = item;\r\n    })\r\n  }\r\n\r\n  changePerson(el) {\r\n    this.personSelected = true;\r\n    this.people.selectedPersonFromId(this.selectedPerson, 'i');\r\n    if (!this.config.SANDBOX_USED) {\r\n      this.people.getCoursesArray(true, '?filter=personId|eq|' + this.selectedPerson + '&order=number', true);\r\n    }\r\n  }\r\n\r\n  changeRequestType(el) {\r\n    switch (this.requestType) {\r\n      case -1:\r\n        if (!this.config.SANDBOX_USED) {\r\n          this.typeSelected = true;\r\n          this.regularClient = true;\r\n          this.requestType = \"regularCourse\";\r\n        }\r\n        break;\r\n      case \"regularCourse\":\r\n        this.typeSelected = true;\r\n        this.regularClient = true;\r\n        this.requestType = \"regularCourse\";\r\n        this.people.getCoursesArray(true, '?filter=personId|eq|' + this.selectedPerson + '&order=number', true);\r\n        break;\r\n      case \"sandboxCourse\":\r\n        this.courseId = this.config.SANDBOX_ID;\r\n        this.sandBoxClient = true;\r\n        this.regularClient = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  filterList() {\r\n    if (this.filter) {\r\n      var thisFilter = this.filter\r\n      this.filteredProductsArray = this.products.productsArray.filter((item) => {\r\n        return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;\r\n      });\r\n    } else {\r\n      this.filteredProductsArray = this.products.productsArray;\r\n    }\r\n  }\r\n\r\n  setDates(session) {\r\n    if (session) {\r\n      $(\"#input-startDate\").val(\"\")\r\n      $(\"#input-endDate\").val(\"\")\r\n    }\r\n    this.minStartDate = this.sessions.selectedSession.startDate;\r\n    this.maxStartDate = this.sessions.selectedSession.endDate;\r\n    this.minEndDate = this.sessions.selectedSession.startDate;\r\n    this.maxEndDate = this.sessions.selectedSession.endDate;\r\n\r\n    var nowPlusLeeway = moment(new Date()).add(this.config.REQUEST_LEEWAY, 'days');\r\n    this.minRequiredDate = moment.max(nowPlusLeeway, moment(this.sessions.selectedSession.startDate));\r\n    this.minRequiredDate = moment(this.minRequiredDate._d).format('YYYY-MM-DD');\r\n    this.maxRequiredDate = this.sessions.selectedSession.endDate;\r\n  }\r\n\r\n  _setUpValidation() {\r\n    this.validation.addRule(1, \"institution\", [\r\n      {\r\n        \"rule\": \"custom\", \"message\": \"Select an institution\",\r\n        \"valFunction\": function (context) {\r\n          return !(context.selectedInstitution == \"\");\r\n        }\r\n      }\r\n\r\n    ]);\r\n    this.validation.addRule(1, \"numberOfStudentsError\", [{\r\n      \"rule\": \"custom\", \"message\": \"Enter the number of students\",\r\n      \"valFunction\": function (context) {\r\n        var now = moment(new Date());\r\n        for (var i = 0; i < context.requests.selectedRequest.requestDetails.length; i++) {\r\n          if (moment(context.requests.selectedRequest.requestDetails[i].createdDate).diff(now, 'day') === 0) {\r\n            if (!context.requests.selectedRequest.requestDetails[i].numberOfStudents || context.requests.selectedRequest.requestDetails[i].numberOfStudents == 0) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }]);\r\n    this.validation.addRule(1, \"requiredDateError\", [{\r\n      \"rule\": \"custom\", \"message\": \"Required date cannot be earlier than 5 days from today\",\r\n      \"valFunction\": function (context) {\r\n        var nowPlusLeeway = moment(new Date()).add(context.config.REQUEST_LEEWAY + 1, 'days');\r\n        var now = moment(new Date());\r\n        for (var i = 0; i < context.requests.selectedRequest.requestDetails.length; i++) {\r\n          if (moment(context.requests.selectedRequest.requestDetails[i].createdDate).diff(now, 'day') === 0) {\r\n            if (moment(context.requests.selectedRequest.requestDetails[i].requiredDate).isBefore(nowPlusLeeway, 'day')) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }]);\r\n    this.validation.addRule(1, \"dateError\", [{\r\n      \"rule\": \"custom\", \"message\": \"Enter all required dates\",\r\n      \"valFunction\": function (context) {\r\n        for (var i = 0; i < context.requests.selectedRequest.requestDetails.length; i++) {\r\n          if (!context.requests.selectedRequest.requestDetails[i].requiredDate || context.requests.selectedRequest.requestDetails[i].requiredDate === \"\") {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }]);\r\n  }\r\n\r\n  async saveIt() {\r\n    if (this.validation.validate(1)) {\r\n      if (!this.requests.selectedRequest._id) {\r\n        this._buildRequest();\r\n        let serverResponse = await this.requests.saveRequest();\r\n        if (!serverResponse.status) {\r\n          this.systemSelected = false;\r\n          this.utils.showNotification(\"Product request \" + serverResponse.clientRequestNo + \" was updated\");\r\n        }\r\n      } else {\r\n        this._buildRequest();\r\n        let serverResponse = await this.requests.saveRequestWithId();\r\n        if (!serverResponse.status) {\r\n          this.utils.showNotification(\"The product request was updated\");\r\n          this.systemSelected = false;\r\n        }\r\n      }\r\n      this._cleanUp();\r\n    }\r\n  }\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\nimport {DataTable} from '../../resources/utils/dataTable';\nimport {AppConfig} from '../../config/appConfig';\nimport {Utils} from '../../resources/utils/utils';\nimport {People} from '../../resources/data/people';\nimport {is4ua} from '../../resources/data/is4ua';\nimport {CommonDialogs} from '../../resources/dialogs/common-dialogs';\nimport Validation from '../../resources/utils/validation';\nimport $ from 'jquery';\n\n@inject(DataTable, AppConfig, People, Utils, is4ua, CommonDialogs, Validation) \nexport class accInstitute {\n    institutionSelected = false;\n    // spinnerHTML = \"\"; \n\n    tabs = [ {id: 'instAddress', title: 'Address'}, {id: 'instPeople', title: 'People'}, {id: 'instIs4ua', title: \"IS4UA\"}];\n    tabPath = './';\n\n    dateConfig = {wrap: true};\n\n    constructor(datatable, config, people, utils, is4ua, dialog, validation) {\n        this.dataTable = datatable;\n        this.dataTable.initialize(this);\n        this.config = config;\n        this.utils = utils;\n        this.people = people;\n        this.is4ua = is4ua;\n        this.dialog = dialog;\n        this.validation = validation;\n        this._setupValidation();\n        this.validation.initialize(this);\n\n\t\tthis.userObj = JSON.parse(sessionStorage.getItem('user'));\n    }\n\n    async attached(){\n        $('[data-toggle=\"tooltip\"]').tooltip();\n        $('#loading').show();\n        let responses = await Promise.all([\n            this.people.getPeopleArray('?order=lastName'),\n            this.people.getInstitutionsArray('?filter=apj|eq|true&order=name', true),\n            this.is4ua.loadIs4ua(),\n            this.people.getAPJPackages('?order=price')\n        ]);\n\n        this.dataTable.updateArray(this.people.institutionsArray);\n        $('#loading').hide();\n        this.initialLoaded = true;\n    }\n\n    async activate() {\n        this.initialLoaded = false;\n    }\n\n    async refresh(){\n        $('#loading').show();\n        await this.people.getInstitutionsArray('?filter=apj|eq|true&order=name', true);\n        this.dataTable.updateArray(this.people.institutionArray);\n        $('#loading').hide();\n    }\n\n    edit(index, el){\n        this.editIndex = this.dataTable.getOriginalIndex(index);\n        this.people.selectInstitution(this.editIndex);\n        this.newInstitution = false;\n\n        this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.people.selectedInstitution._id, true);\n\n        $(\"#editName\").focus();\n\n        if (this.selectedRow) this.selectedRow.children().removeClass('info');\n        this.selectedRow = $(el.target).closest('tr');\n        this.selectedRow.children().addClass('info')\n        this.institutionSelected = true;\n    }\n\n    async new(){\n        this.editIndex = -1;\n        this.people.getInstitutionPeople(-1);\n        this.people.selectInstitution();\n        this.people.selectedInstitution.apj = true;\n        this.newInstitution = true;\n        $(\"#editName\").focus();\n        this.institutionSelected = true;\n    }\n\n    async save() {\n         if(this.validation.validate(1)){\n             if(!this.people.selectedInstitution._id){\n                this.people.selectedInstitution.packageId = this.people.selectedInstitution.packageId.packageId;\n             }\n            let serverResponse = await this.people.saveAPJInstitution();\n            if (!serverResponse.error) {\n                this.dataTable.updateArray(this.people.institutionsArray);\n                this.utils.showNotification(serverResponse.name + \" was updated\");\n            } else {\n                 this.utils.showNotification(\"There was a problem updating saving the institution\",'error');\n            }\n            this._cleanUp();\n        } else {\n            if(!this.people.selectedInstitution.institutionType || !this.people.selectedInstitution.memberType || !this.people.selectedInstitution.institutionStatus || !this.people.selectedInstitution.highestDegree){\n                 return this.dialog.showMessage(\n                    \"The IS4UA fields on the IS4UA tab are required\", \n                    \"Missing Data\", \n                    ['OK']\n                    ).then(response => {\n                        \n                    });\n            }\n        }\n    }\n\n    delete(){\n        return this.dialog.showMessage(\n            \"Are you sure you want to delete the institution?\", \n            \"Delete Institution\", \n            ['Yes', 'No']\n            ).whenClosed(response => {\n                if(!response.wasCancelled){\n                    this.deleteInstitution();    \n                }\n            });\n    }\n\n    async deleteInstitution(){\n        var name = this.people.selectedInstitution.name;\n        let serverResponse = await this.people.deleteInstitution();\n        if (!serverResponse.error) {\n                this.dataTable.updateArray(this.people.institutionsArray);\n                this.utils.showNotification(name + \" was deleted\");\n        } else {\n             this.utils.showNotification(\"There was a problem deleting the user\",'error');\n        }\n        this._cleanUp();\n    }\n\n    cancel(){\n         this.people.selectInstitution(this.editIndex);\n    }\n\n    back(){\n         if(this.people.isInstitutionDirty().length){\n            return this.dialog.showMessage(\n                \"The institution has been changed. Do you want to save your changes?\", \n                \"Save Changes\", \n                ['Yes', 'No']\n                ).whenClosed(response => {\n                    if(!response.wasCancelled){\n                        this.save();\n                    } else {\n                        this.institutionSelected = false;\n                    }\n                });\n        } else {\n             this.institutionSelected = false;\n        }\n\n    }\n\n    _setupValidation(){\n        this.validation.addRule(1,\"editName\",[{\"rule\":\"required\",\"message\":\"Name is required\", \"value\": \"people.selectedInstitution.name\"}]);\n        // this.validation.addRule(1,\"editInstitutonPakage\",[{\"rule\":\"required\",\"message\":\"Package is required\", \"value\": \"people.selectedInstitution.packageId\"}]);\n        this.validation.addRule(1,\"editInstitutionType\",[{\"rule\":\"required\",\"message\":\"Institution type is required\", \"value\": \"people.selectedInstitution.institutionType\"}]);\n        this.validation.addRule(1,\"editMemberType\",[{\"rule\":\"required\",\"message\":\"Institution type is required\", \"value\": \"people.selectedInstitution.memberType\"}]);\n        this.validation.addRule(1,\"editInstitutonStatusArray\",[{\"rule\":\"required\",\"message\":\"Institution status is required\", \"value\": \"people.selectedInstitution.institutionStatus\"}]);\n        this.validation.addRule(1,\"editHighestDegree\",[{\"rule\":\"required\",\"message\":\"Institution type is required\", \"value\": \"people.selectedInstitution.highestDegree\"}]);\n    }\n\n    downloadInstExcel(){\n        let csvContent = \"data:text/csv;charset=utf-8;,Name,City,State,Type\\r\\n\";\n        this.dataTable.baseArray.forEach(item => {\n            csvContent += item.name + \",\" + item.city + \",\" + item.state + \",\" + item.institutionType;\n            csvContent +=  \"\\r\\n\";\n        })\n        var encodedUri = encodeURI(csvContent);\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", \"institutions.csv\");\n        document.body.appendChild(link); // Required for FF\n\n        link.click();\n    }\n\n    _cleanUp(){\n        this.newInstitution = false;\n        this.institutionSelected = false;\n        this._cleanUpFilters();\n    }\n\n    _clearFilters(){\n        this._cleanUpFilters();\n        this.dataTable.updateArray(this.people.institutionsArray);\n    }\n\n    _cleanUpFilters(){\n        this.nameFilterValue = \"\";\n        this.institutionTypeFilter = \"\";\n        this.memberTypeFilter = \"\";\n        this.highestDegreeFilter = \"\";\n\n        $(\"#institutionStatus\").val(\"\");\n    }\n\n    async changeTab(el, index){\n        $(\"#instFormListGroup.list-group\").children().removeClass('menuButtons');\n        $(\"#instFormListGroup.list-group\").children().css(\"background-color\",\"\");\n        $(\"#instFormListGroup.list-group\").children().css(\"color\",\"\");\n        $(el.target).parent().css(\"background-color\",this.config.SUBMENU_BACKGROUND);\n        $(el.target).parent().css(\"color\",this.config.ACTIVE_SUBMENU_COLOR);\n        $(\".in\").removeClass('active').removeClass('in');\n        $(\"#\" + el.target.id + \"Tab\").addClass('in').addClass('active');\n    }\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from \"aurelia-router\";\nimport {AppConfig} from '../../config/appConfig'; \n\n@inject(Router, AppConfig)\nexport class ACCCustomers {\n    title=\"ACC Customers\"\n    \n    constructor(router, config){\n        this.router = router;\n        this.config = config;\n    }\n\n    attached(){\n        $(\".nav a\").on(\"click\", function(){\n            $(\".nav\").find(\".active\").removeClass(\"active\");\n            $(this).parent().addClass(\"active\");\n        });\n    }\n\n    activate(){\n         this.config.getConfig(true);\n    }   \n    \n    configureRouter(config, router) {\n        config.map([\n        {\n            route: ['','accInstitute'],\n            moduleId: PLATFORM.moduleName('./accInstitute'),\n            settings: { auth: true, roles: [] },\n            nav: true,\n            name: 'accInstitute',\n            title: 'Institutions'\n        }\n        // ,\n        //  {\n        //     route: 'people',\n        //     moduleId: './accPeople',\n        //     settings: { auth: true, roles: [] },\n        //     nav: true,\n        //     name: 'accPeople',\n        //     title: 'People'\n        // }\n        ]);\n\n        this.router = router;\n    }\n    \n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from \"aurelia-router\";\nimport { AppConfig } from '../../config/appConfig';\n\n@inject(Router, AppConfig)\nexport class ACCRequests {\n    title = \"ACC Client Assignments\"\n\n    constructor(router, config) {\n        this.router = router;\n        this.config = config;\n    }\n\n    attached() {\n        $(\".nav a\").on(\"click\", function () {\n            $(\".nav\").find(\".active\").removeClass(\"active\");\n            $(this).parent().addClass(\"active\");\n        });\n    }\n\n    activate() {\n        this.config.getConfig(true);\n    }\n\n    configureRouter(config, router) {\n        config.map([\n            {\n                route: ['', 'accCreateRequest'],\n                moduleId: PLATFORM.moduleName('./accCreateRequest'),\n                settings: { auth: true, roles: [] },\n                nav: true,\n                name: 'createRequest',\n                title: 'Create Request'\n            },\n            {\n                route: 'viewUserRequests',\n                moduleId: PLATFORM.moduleName('./viewUserRequests'),\n                settings: { auth: true, roles: [] },\n                nav: true,\n                name: 'viewUserRequests',\n                title: 'View User Requests'\n            },\n            \n            // {\n            //     route: 'clientRequestsAnalytics',\n            //     moduleId: '../../analytics/clientRequests',\n            //     settings: { auth: true, roles: [] },\n            //     nav: true,\n            //     name: 'clientRequests',\n            //     title: 'Client Requests Analytics'\n            // },\n            {\n                route: 'apjAssignments',\n                moduleId: PLATFORM.moduleName('./apjAssignments'),\n                settings: { auth: true, roles: [] },\n                nav: true,\n                name: 'apjAssignments',\n                title: 'Assignments'\n            }\n        ]);\n\n        this.router = router;\n    }\n\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from \"aurelia-router\";\r\nimport { DataTable } from '../../resources/utils/dataTable';\r\nimport { Sessions } from '../../resources/data/sessions';\r\nimport { Products } from '../../resources/data/products';\r\nimport { SiteInfo } from '../../resources/data/siteInfo';\r\nimport { APJClientRequests } from '../../resources/data/apjClientRequests';\r\nimport { AppConfig } from '../../config/appConfig';\r\nimport { Utils } from '../../resources/utils/utils';\r\nimport { People } from '../../resources/data/people';\r\nimport { Systems } from '../../resources/data/systems';\r\nimport Validation from '../../resources/utils/validation';\r\nimport { CommonDialogs } from '../../resources/dialogs/common-dialogs';\r\nimport Flatpickr from 'flatpickr';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport fuelux from 'fuelux';\r\nimport moment from 'moment';\r\n\r\n@inject(Router, AppConfig, Validation, People, CommonDialogs, DataTable, Utils, Sessions, Products, Systems, APJClientRequests, SiteInfo, EventAggregator)\r\nexport class APJAssignments {\r\n\r\n  constructor(router, config, validation, people, dialog, datatable, utils, sessions, products, systems, requests, siteInfo, ea) {\r\n    this.router = router;\r\n    this.config = config;\r\n    this.validation = validation;\r\n    this.validation.initialize(this);\r\n    this.people = people;\r\n    this.dataTable = datatable;\r\n    this.dataTable.initialize(this);\r\n    this.utils = utils;\r\n    this.sessions = sessions;\r\n    this.products = products;\r\n    this.requests = requests;\r\n    this.systems = systems;\r\n\r\n    this.dialog = dialog;\r\n    this.ea = ea;\r\n\r\n    this.userObj = JSON.parse(sessionStorage.getItem('user'));\r\n    // this.showTable = true;\r\n    this.assignmentDetailIndex = 0;\r\n\r\n  };\r\n\r\n  async activate() {\r\n    let responses = await Promise.all([\r\n      this.products.getProductsArray('?filter=apj|eq|true&order=name', true),\r\n      this.people.getInstitutionsArray('?filter=[and]institutionStatus|eq|01:apj|eq|true&order=name'),\r\n      this.systems.getSystemsArray('?filter=apj|eq|true', true),\r\n      this.people.getAPJPackages(),\r\n      this.config.getConfig()\r\n    ]);\r\n    this.requestSelected = \"table\";\r\n\r\n    $('#loading').hide();\r\n    this.getRequests();\r\n  }\r\n\r\n  attached() {\r\n    $('#loading').hide();\r\n  }\r\n\r\n  async getRequests() {\r\n    this.isCheckedAssigned = true;\r\n    await this.filterInAssigned();\r\n    this.clearFilters();\r\n  }\r\n\r\n  async refresh() {\r\n    $('#loading').show();\r\n    await this.getRequests();\r\n    $('#loading').hide();\r\n    this.spinnerHTML = \"\";\r\n  }\r\n\r\n  async filterInAssigned() {\r\n\r\n    this.requiredDateFilterValue = \"\";\r\n    this.createdDateFilterValue = \"\";\r\n    this.requestStatusFilter = \"\";\r\n    this.productFilterValue = \"\";\r\n    this.courseFilterValue = \"\";\r\n    this.helpTicketTypeFilterValue = \"\";\r\n    this.institutionFilterValue = \"\";\r\n    if (this.isCheckedAssigned) {\r\n      $('#loading').show();\r\n      await this.requests.getClientRequestsDetailsArray('?filter=[in]requestStatus[list]' + this.config.UNASSIGNED_REQUEST_CODE + ':' + this.config.UPDATED_REQUEST_CODE + ':' + this.config.CUSTOMER_ACTION_REQUEST_CODE, true);\r\n      $('#loading').hide();\r\n      if (this.requests.requestsDetailsArray && this.requests.requestsDetailsArray.length) {\r\n        this.noRequests = false;\r\n        this.dataTable.updateArray(this.requests.requestsDetailsArray, 'requiredDate', -1);\r\n      } else {\r\n        this.noRequests = true;\r\n        this.dataTable.displayArray = new Array();\r\n      }\r\n    } else {\r\n      $('#loading').show();\r\n      await this.requests.getClientRequestsDetailsArray('', true);\r\n      $('#loading').hide();\r\n      this.dataTable.updateArray(this.requests.requestsDetailsArray, 'requiredDate', -1);\r\n      if (this.requests.requestsDetailsArray.length) this.noRequests = false;\r\n    }\r\n\r\n  }\r\n\r\n  async clearFilters() {\r\n    this.requiredDateFilterValue = \"\";\r\n    this.createdDateFilterValue = \"\";\r\n    this.requestStatusFilter = \"\";\r\n    this.productFilterValue = \"\";\r\n    this.courseFilterValue = \"\";\r\n    this.helpTicketTypeFilterValue = \"\";\r\n    this.institutionFilterValue = \"\";\r\n    this.dataTable.updateArray(this.requests.requestsDetailsArray);\r\n  }\r\n\r\n  async selectARequest(index, request) {\r\n    this.editIndex = index;\r\n    let response = await this.requests.getRequestDetail(request._id);\r\n    if (!response.error) {\r\n      this.selectedRequestDetail = response;\r\n      this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);\r\n      if (!this.selectedRequestDetail.techComments || !this.selectedRequestDetail.techComments.length) {\r\n        this.selectedRequestDetail.techComments = this.products.selectedProduct.productInfoApj ? this.products.selectedProduct.productInfoApj : \"\";\r\n      }\r\n      if (this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0) this.systems.selectedSystemFromId(this.selectedRequestDetail.assignments[0].systemId);\r\n      await this.getProductSystems();\r\n      this.requestSelected = 'form';\r\n    }\r\n  }\r\n\r\n  async viewAssignment(index, request) {\r\n    this.editIndex = index;\r\n    let response = await this.requests.getRequestDetail(request._id);\r\n    if (!response.error) {\r\n      this.selectedRequestDetail = response;\r\n      this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);\r\n      if (this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0) this.systems.selectedSystemFromId(this.selectedRequestDetail.assignments[0].systemId);\r\n      await this.getProductSystems();\r\n      this.requestSelected = 'view';\r\n    }\r\n\r\n  }\r\n\r\n  async getProductSystems() {\r\n    this.systemConfigured = false;\r\n    this.productSystems = new Array();\r\n    var productSystemsSIDs = \"\";\r\n    this.products.selectedProduct.systems.forEach(item => {\r\n      let delimiterChar = productSystemsSIDs.length ? \":\" : \"\";\r\n      productSystemsSIDs += delimiterChar + item.sid;\r\n    });\r\n    let response = await this.systems.getAPJConfiguredProductSystems(productSystemsSIDs);\r\n    if (!response.error) {\r\n      response.forEach(item => {\r\n        if (item.active) this.productSystems.push(item);\r\n      });\r\n    }\r\n    if (this.productSystems != null && this.productSystems.length) {\r\n      this.systemConfigured = true;\r\n      this.productSystems = this.productSystems.sort((a, b) => {\r\n        return (a['sid'] < b['sid']) ? -1 : (a['sid'] > b['sid']) ? 1 : 0;\r\n      });\r\n      this.selectedSystem = this.productSystems[0];\r\n      this.clientsConfigured = true;\r\n    }\r\n  }\r\n\r\n  selectClient(index, client) {\r\n    this.selectedClientIndex = index;\r\n    for (let k = 0; k < this.selectedRequestDetail.assignments.length; k++) {\r\n      if (this.selectedRequestDetail.assignments[k].client == client.client) return;\r\n    }\r\n\r\n    this.selectedRequestDetail.assignments.push({\r\n      staffId: this.userObj._id,\r\n      client: client.client,\r\n      systemId: client.systemId\r\n\r\n    });\r\n    // this.selectedRequestDetail.techComments = this.products.selectedProduct.productInfo ? this.products.selectedProduct.productInfo : \"\";\r\n\r\n    this.insertAssignmentIntoSystem(client, this.selectedRequestDetail.assignments);\r\n    this.assignClientStatus();\r\n\r\n  }\r\n\r\n  insertAssignmentIntoSystem(client, details) {\r\n    let clientCopy = this.utils.copyObject(client);\r\n\r\n    clientCopy.assignments.push({\r\n      assignment: this.selectedRequestDetail._id,\r\n      studentIDRange: details.studentUserIds,\r\n      facultyIDRange: details.facultyUserIds,\r\n      institutionId: this.selectedRequestDetail.requestId.institutionId,\r\n      provisional: true\r\n    });\r\n    this.updateProductSystemsClient(clientCopy, clientCopy.systemId)\r\n  }\r\n\r\n  updateProductSystemsClient(client) {\r\n    this.selectedSystem.clients[this.selectedClientIndex].assignments = client.assignments;\r\n    this.clientSelectedIndex = client.assignments.length - 1;\r\n  }\r\n\r\n  assignClientStatus() {\r\n    if (this.selectedSystem.clients[this.selectedClientIndex].clientStatus !== this.config.SANDBOX_CLIENT_CODE) {\r\n      if (this.selectedSystem.clients[this.selectedClientIndex].assignments && this.selectedSystem.clients[this.selectedClientIndex].assignments.length === 0) {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.UNASSIGNED_CLIENT_CODE;\r\n      } else if (this.selectedSystem.clients[this.selectedClientIndex].assignments.length === 1) {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.ASSIGNED_CLIENT_CODE;\r\n      } else {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.SHARED_CLIENT_CODE;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*****************************************************************************************************\r\n* The user selects an assignment \r\n* index - the index of the selected assignment\r\n* el - the event object\r\n****************************************************************************************************/\r\n  selectProposedClient(index, el) {\r\n    //Save the index \r\n    this.assignmentDetailIndex = index;\r\n    this.setClientIndex(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].client);\r\n    this.setClientAssignmentIndex(this.selectedSystem.clients[this.selectedClientIndex]);\r\n\r\n    if (this.assignmentDetailIndex == -1) {\r\n      this.selectedAssignedClient = \"\";\r\n      if (this.selectedRow) this.selectedRow.children().removeClass('info');\r\n    } else {\r\n      this.selectedAssignedClient = this.selectedRequestDetail.assignments[this.assignmentDetailIndex].client;\r\n      //Highlight the table row\r\n      if (this.selectedAssignmentRow) this.selectedAssignmentRow.children().removeClass('info');\r\n      this.selectedAssignmentRow = $(el.target).closest('tr');\r\n      this.selectedAssignmentRow.children().addClass('info')\r\n    }\r\n\r\n  }\r\n\r\n  /*****************************************************************************************************\r\n    * Save the request \r\n    ****************************************************************************************************/\r\n  async save() {\r\n    if (this._buildRequest()) {\r\n      this.requests.setSelectedRequest(this.requestToSave);\r\n      let serverResponse = await this.requests.assignRequest(this.editIndex);\r\n      if (!serverResponse.status) {\r\n        this.utils.showNotification(\"The request was updated\");\r\n        this._cleanUp();\r\n        this.dataTable.updateArrayMaintainFilters(this.requests.requestsDetailsArray);\r\n        this.reSort();\r\n        await this.filterInAssigned();\r\n        this._cleanUp();\r\n      }\r\n    }\r\n  }\r\n\r\n  _cleanUp() {\r\n    this.selectedRequestDetail.assignments = [];\r\n    this.selectedSystem = {};\r\n    this.requestSelected = \"table\";\r\n    // this.showTable = true;\r\n  }\r\n\r\n  reSort() {\r\n    this.dataTable.sortArray({}, {}, true);\r\n  }\r\n\r\n  systemSelected() {\r\n    this.selectProductSystem(this.selectedSystemId)\r\n  }\r\n\r\n  selectProductSystem(id) {\r\n    this.selectedSystemId = id;\r\n    this.productSystems.forEach((item, index) => {\r\n      if (item._id === id) {\r\n        this.selectedSystem = item;\r\n        this.selectedSystemIndex = index;\r\n      }\r\n    });\r\n    this.checkClientConfigured();\r\n  }\r\n\r\n  checkClientConfigured() {\r\n    this.clientsConfigured = false;\r\n    for (let i = 0; i < this.selectedSystem.clients.length; i++) {\r\n      if (this.selectedSystem.clients[i].productId === this.products.selectedProduct._id) {\r\n        this.clientsConfigured = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*****************************************************************************************************\r\n  * Build the data objects to send to the server \r\n  ****************************************************************************************************/\r\n  _buildRequest() {\r\n    this.productSystems.forEach(system => {\r\n      system.clients.forEach(client => {\r\n        client.assignments.forEach(assignment => {\r\n          assignment.provisional = false;\r\n        });\r\n      });\r\n    });\r\n    this.systemQueue = new Array();\r\n    this.selectedRequestDetail.assignments.forEach((item, index) => {\r\n      let saveSystem = true;\r\n      this.systemQueue.forEach(system => {\r\n        if (item.systemId === system._id) saveSystem = false;\r\n      })\r\n      if (saveSystem) this.systemQueue.push(this._getSystem(item.systemId));\r\n      delete item['provisional'];\r\n\r\n      item.assignedDate = item.assignedDate ? item.assignedDate : new Date();\r\n    });\r\n\r\n    this.systemQueue.forEach(server => {\r\n      server.clients.forEach(client => {\r\n        client.assignments.forEach(assignment => {\r\n          assignment.assignment = assignment.assignment != null && assignment.assignment._id ? assignment.assignment._id : assignment.assignment;\r\n        })\r\n      })\r\n    });\r\n\r\n    this.selectedRequestDetail.requestStatus = this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0 ? this.config.ASSIGNED_REQUEST_CODE : this.config.UNASSIGNED_REQUEST_CODE;\r\n    this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);\r\n    this.requestToSave.requestDetailsToSave = new Array();\r\n    var request = this.utils.copyObject(this.selectedRequestDetail);\r\n    delete request['requestId'];\r\n    this.requestToSave.requestDetailsToSave.push(request);\r\n    this.requestToSave.systemsToSave = this.systemQueue;\r\n\r\n    return true;\r\n  }\r\n\r\n  _getSystem(id) {\r\n    for (let k = 0; k < this.productSystems.length; k++) {\r\n      if (this.productSystems[k]._id === id) return this.productSystems[k];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateClientAssignments() {\r\n    if (this.selectedClientIndex) {\r\n      // this.selectedSystem.clients[this.selectedClientIndex].assignments[this.clientSelectedIndex].studentIDRange\r\n      this.selectedSystem.clients[this.selectedClientIndex].assignments[this.clientSelectedIndex].studentIDRange = this.selectedRequestDetail.assignments[this.assignmentDetailIndex].studentUserIds;\r\n      this.selectedSystem.clients[this.selectedClientIndex].assignments[this.clientSelectedIndex].studentPassword = this.selectedRequestDetail.assignments[this.assignmentDetailIndex].studentPassword;\r\n      this.selectedSystem.clients[this.selectedClientIndex].assignments[this.clientSelectedIndex].facultyIDRange = this.selectedRequestDetail.assignments[this.assignmentDetailIndex].facultyIDRange;\r\n      this.selectedSystem.clients[this.selectedClientIndex].assignments[this.clientSelectedIndex].facultyPassword = this.selectedRequestDetail.assignments[this.assignmentDetailIndex].facultyPassword;\r\n    }\r\n  }\r\n\r\n  back() {\r\n    // this.showTable = true;\r\n    this.requestSelected = \"table\";\r\n  }\r\n\r\n  backView() {\r\n    this.requestSelected = \"table\";\r\n  }\r\n\r\n  deleteTable(assignment) {\r\n    this.setAssignmentIndex(assignment.client);\r\n    this.setClientIndex(assignment.client);\r\n    this.setClientAssignmentIndex(this.selectedSystem.clients[this.selectedClientIndex]);\r\n    this.deleteProposedClient(assignment);\r\n  }\r\n\r\n  findSystemClient(assignment) {\r\n    this.selectedClientIndex = null;\r\n    this.selectedSystem.clients.forEach((item, index) => {\r\n      if (item.client == assignment.client) {\r\n        this.selectedClientIndex = index;\r\n      }\r\n    });\r\n  }\r\n\r\n  //Find index of assignment in request detail\r\n  setAssignmentIndex(client) {\r\n    for (let k = 0; k < this.selectedRequestDetail.assignments.length; k++) {\r\n      if (this.selectedRequestDetail.assignments[k].client == client) {\r\n        this.assignmentDetailIndex = k;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  //Find index of client in selected system\r\n  setClientIndex(client) {\r\n    for (let k = 0; k < this.selectedSystem.clients.length; k++) {\r\n      if (this.selectedSystem.clients[k].client == client) {\r\n        this.selectedClientIndex = k;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  setClientAssignmentIndex(client) {\r\n    for (let k = 0; k < client.assignments.length; k++) {\r\n      if (client.assignments[k].assignment._id) {\r\n        if (client.assignments[k].assignment._id === this.selectedRequestDetail._id) {\r\n          this.clientSelectedIndex = k;\r\n          return;\r\n        }\r\n      } else if (client.assignments[k].assignment === this.selectedRequestDetail._id) {\r\n        this.clientSelectedIndex = k;\r\n        return;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /*****************************************************************************************************\r\n  * The user deletes an assignment \r\n  * index - the index of the selected assignment\r\n  ****************************************************************************************************/\r\n  async deleteProposedClient() {\r\n    //Is this a saved assignment\r\n    if (this.selectedRequestDetail.assignments[this.assignmentDetailIndex].assignedDate) {\r\n      return this.dialog.showMessage(\r\n        \"This will delete the assignment.  Are you sure you want to do that?\",\r\n        \"Delete Assignment\",\r\n        ['Yes', 'No']\r\n      ).whenClosed(response => {\r\n        if (!response.wasCancelled) {\r\n          this.deleteSaved(this.assignmentDetailIndex);\r\n        }\r\n      });\r\n    } else {\r\n      // if (this.forceManual) this.manualMode = false;\r\n      // this.forceManual = false;\r\n      //Undo the changes made by the assignment\r\n      // this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n      // this.selectedSystem.clients[this.selectedClientIndex].idsAvailable = parseInt(this.selectedSystem.clients[this.selectedClientIndex].idsAvailable) + parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n      // this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n\r\n      //Delete the assignment and the client\r\n      this.deleteProvisinoalClientAssignment();\r\n      this.assignClientStatus()\r\n      this.assignmentDetailIndex = -1;\r\n      if (this.selectedRow) this.selectedRow.children().removeClass('info');\r\n    }\r\n  }\r\n\r\n\r\n  deleteProvisinoalClientAssignment() {\r\n    this.setClientIndex(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].client);\r\n    // this.productSystems[this.selectedSystemIndex].clients[this.selectedClientIndex].assignments.splice(this.clientSelectedIndex, 1);\r\n    this.selectedSystem.clients[this.selectedClientIndex].assignments.splice(this.clientSelectedIndex, 1);\r\n    this.selectedRequestDetail.assignments.splice(this.assignmentDetailIndex, 1);\r\n  }\r\n\r\n  assignClientStatus() {\r\n    if (this.selectedSystem.clients[this.selectedClientIndex].clientStatus !== this.config.SANDBOX_CLIENT_CODE) {\r\n      if (this.selectedSystem.clients[this.selectedClientIndex].assignments && this.selectedSystem.clients[this.selectedClientIndex].assignments.length === 0) {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.UNASSIGNED_CLIENT_CODE;\r\n        // this.productSystems[this.selectedSystemIndex].clients[this.selectedClientIndex].clientStatus = this.config.UNASSIGNED_CLIENT_CODE;\r\n      } else if (this.selectedSystem.clients[this.selectedClientIndex].assignments.length === 1) {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.ASSIGNED_CLIENT_CODE;\r\n        // this.productSystems[this.selectedSystemIndex].clients[this.selectedClientIndex].clientStatus = this.config.ASSIGNED_CLIENT_CODE;\r\n      } else {\r\n        this.selectedSystem.clients[this.selectedClientIndex].clientStatus = this.config.SHARED_CLIENT_CODE;\r\n        // this.productSystems[this.selectedSystemIndex].clients[this.selectedClientIndex].clientStatus = this.config.SHARED_CLIENT_CODE;\r\n      }\r\n    }\r\n  }\r\n\r\n  institutionCustomFilter(value, item, context) {\r\n    return item.requestId && item.requestId.institutionId && item.requestId.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  }\r\n\r\n  customInstitutionsSorter(sortProperty, sortDirection, sortArray, context) {\r\n    this.sortProperty = 'institution';\r\n    this.sortDirection = sortDirection;\r\n    return sortArray.sort((a, b) => {\r\n      if (a['requestId'] !== null && b['requestId'] !== null && a['requestId']['institutionId'] && b['requestId']['institutionId']) {\r\n        var result = (a['requestId']['institutionId']['name'] < b['requestId']['institutionId']['name']) ? -1 : (a['requestId']['institutionId']['name'] > b['requestId']['institutionId']['name']) ? 1 : 0;\r\n      } else {\r\n        var result = -1;\r\n      }\r\n      return result * sortDirection;\r\n    });\r\n  }\r\n\r\n  customProductNameFilter(value, item, context) {\r\n    return item.productId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  }\r\n\r\n  getStatus(status) {\r\n    let statusDescription = \"\";\r\n    this.config.REQUEST_STATUS.forEach(item => {\r\n      if (item.code == status) statusDescription = item.description;\r\n    });\r\n    return statusDescription;\r\n  }\r\n\r\n  downloadAssignExcel() {\r\n    let csvContent = \"data:text/csv;charset=utf-8;,Due Date,Created Date,Status,Product,Institution\\r\\n\";\r\n    this.dataTable.displayArray.forEach(item => {\r\n      csvContent += moment(item.requiredDate).format('MMM Do YYYY') + \",\"\r\n        + moment(item.createdDate).format('MMM Do YYYY') + \",\"\r\n        + this.getStatus(item.requestStatus) + \",\"\r\n        + item.productId.name + \",\"\r\n        + item.requestId.institutionId.name;\r\n      csvContent += \"\\r\\n\";\r\n    })\r\n    var encodedUri = encodeURI(csvContent);\r\n    var link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"assignments.csv\");\r\n    document.body.appendChild(link); // Required for FF\r\n\r\n    link.click();\r\n  }\r\n\r\n  async editRequest(index, request) {\r\n    this.editIndex = index;\r\n    this.selectedRequestDetail = this.utils.copyObject(request);\r\n    await this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);\r\n    // await this.people.getCoursesArray(true, '?filter=personId|eq|' + this.selectedRequestDetail.requestId.personId._id);\r\n    this.editStartDate = this.selectedRequestDetail.requestId.startDate;\r\n    this.originalRequestDetail = this.utils.copyObject(this.selectedRequestDetail);\r\n\r\n    this.requestSelected = 'edit';\r\n  }\r\n\r\n  backEdit() {\r\n    this.requestSelected = 'table';\r\n  }\r\n\r\n  async saveEdit() {\r\n    this.requests.setTheSelectedRequestDetail(this.selectedRequestDetail);\r\n    let serverResponse = await this.requests.saveRequestDetail();\r\n    if (!serverResponse.error) {\r\n      this.utils.showNotification(\"The request was updated\");\r\n      this.dataTable.updateArrayMaintainFilters(this.requests.requestsDetailsArray);\r\n      this.reSort();\r\n      await this.filterInAssigned();\r\n      this._cleanUp();\r\n    }\r\n\r\n  }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { CommonDialogs } from '../../resources/dialogs/common-dialogs';\r\nimport { DataTable } from '../../resources/utils/dataTable';\r\nimport { Systems } from '../../resources/data/systems';\r\nimport { Products } from '../../resources/data/products';\r\nimport { APJClientRequests } from '../../resources/data/apjClientRequests';\r\nimport { AppConfig } from '../../config/appConfig';\r\nimport { Utils } from '../../resources/utils/utils';\r\nimport { People } from '../../resources/data/people';\r\nimport Validation from '../../resources/utils/validation';\r\n\r\nimport moment from 'moment';\r\n\r\n@inject(AppConfig, Validation, CommonDialogs, DataTable, Utils,  Products, Systems, People, APJClientRequests)\r\nexport class ViewUserAssignments {\r\n    requestSelected = 'table';\r\n    title = \"ACC Product Requests\";\r\n    spinnerHTML = \"\";\r\n    isCheckedAssigned = true;\r\n    noRequests = true;\r\n    sortProperty = '';\r\n    sortDirection;\r\n\r\n    constructor(config, validation, dialog, datatable, utils,  products, systems, people, requests) {\r\n        this.config = config;\r\n        this.validation = validation;\r\n        this.validation.initialize(this);\r\n        this._setUpValidation();\r\n        this.dataTable = datatable;\r\n        this.dataTable.initialize(this);\r\n        this.utils = utils;\r\n        this.products = products;\r\n        this.clientRequests = requests;\r\n        this.systems = systems;\r\n        this.people = people;\r\n        this.dialog = dialog;\r\n\r\n        this.userObj = JSON.parse(sessionStorage.getItem('user'));\r\n    };\r\n\r\n    async attached() {\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n        this.initialLoaded = true;\r\n\r\n        await this.getRequests();\r\n        $('#loading').hide();\r\n        setInterval(() => {\r\n            if( this.requestSelected == 'table') this.getRequests();\r\n        }, this.refreshInterval * 60 * 1000);\r\n    }\r\n\r\n    async activate() {\r\n        let responses = await Promise.all([\r\n            this.products.getProductsArray('?filter=active|eq|true&order=name', true),\r\n            this.systems.getSystemsArray('', true),\r\n            this.config.getConfig(true)\r\n        ]);\r\n        let uccRoles = \"\";\r\n        this.config.ROLES.forEach(item => {\r\n            if (item.UCConly) uccRoles += item.role + \":\";\r\n        });\r\n        this.people.getUCCStaff(uccRoles);\r\n        this.unassignedOnly = localStorage.getItem('unassignedOnly') ? localStorage.getItem('unassignedOnly') == \"true\" : false;\r\n        this.facultyDetails = localStorage.getItem(\"facultyDetails\") ? localStorage.getItem(\"facultyDetails\") == \"true\" : false;;\r\n        this.initialLoaded = false;\r\n        this.refreshInterval = this.config.CLIENT_REQUEST_REFRESH_INTERVAL;\r\n    }\r\n\r\n    async getRequests() {\r\n            this.isCheckedAssigned = true;\r\n            await this.filterInAssigned();\r\n        \r\n        this.clearFilters();\r\n    }\r\n\r\n    async refresh() {\r\n        $('#loading').show();\r\n        await this.getRequests();\r\n        $('#loading').hide();\r\n        this.spinnerHTML = \"\";\r\n    }\r\n\r\n    async editRequest(index, request) {\r\n        this.editIndex = index;\r\n        this.selectedRequestDetail = this.utils.copyObject(request);\r\n        await this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);\r\n        this.editStartDate = this.selectedRequestDetail.requestId.startDate;\r\n        this.originalRequestDetail = this.utils.copyObject(this.selectedRequestDetail);\r\n\r\n        this.requestSelected = 'edit';\r\n    }\r\n\r\n    backEdit() {\r\n        this.requestSelected = 'table';\r\n    }\r\n\r\n    async saveEdit() {\r\n        var email = {};\r\n        // this.buildAuditDetail();\r\n        this.clientRequests.setTheSelectedRequestDetail(this.selectedRequestDetail);\r\n        let serverResponse = await this.clientRequests.saveRequestDetail();\r\n        if (!serverResponse.error) {\r\n            this.utils.showNotification(\"The request was updated\");\r\n            this.dataTable.updateArrayMaintainFilters(this.clientRequests.requestsDetailsArray);\r\n            this.reSort();\r\n            this._cleanUp();\r\n        }\r\n\r\n    }\r\n\r\n    /*****************************************************************************************************\r\n     * Delete the assignment in the database\r\n     ****************************************************************************************************/\r\n    async deleteSaved(index) {\r\n        //Update the client\r\n        this.selectedSystem.clients[this.selectedClientIndex].idsAvailable = parseInt(this.selectedSystem.clients[this.selectedClientIndex].idsAvailable) + parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n        this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n        this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n\r\n        //Construct the object to submit to the server\r\n        this.selectedRequestDetail.idsAssigned = parseInt(this.selectedRequestDetail.idsAssigned) - parseInt(this.selectedRequestDetail.assignments[this.assignmentDetailIndex].idsAssigned);\r\n        this.deleteProvisinoalClientAssignment()\r\n        this.assignClientStatus();\r\n        this.selectedRequestDetail.requestStatus = this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0 ? this.config.ASSIGNED_REQUEST_CODE : this.config.UNASSIGNED_REQUEST_CODE;\r\n        this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);\r\n        this.requestToSave.requestDetailsToSave = new Array();\r\n        var request = this.utils.copyObject(this.selectedRequestDetail);\r\n        delete request['requestId'];\r\n        this.requestToSave.requestDetailsToSave.push(request);\r\n        this.requestToSave.systemsToSave = [this.selectedSystem];\r\n\r\n        this.clientRequests.setSelectedRequest(this.requestToSave);\r\n        let serverResponse = await this.clientRequests.assignRequest(this.editIndex);\r\n        if (!serverResponse.status) {\r\n            this.dataTable.updateArrayMaintainFilters(this.clientRequests.requestsDetailsArray);\r\n            this.reSort();\r\n            await this.filterInAssigned();\r\n            this.utils.showNotification(\"The assignment was deleted\")\r\n        }\r\n\r\n        this.selectedAssignedClient = \"\";\r\n\r\n    }\r\n\r\n    /**\r\n* Delete the request\r\n*/\r\n    delete() {\r\n        if (this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0) {\r\n            return this.dialog.showMessage(\r\n                \"Please delete the assignments before deleting the request\",\r\n                \"Delete Request\",\r\n                ['OK']\r\n            ).whenClosed(response => {\r\n                if (!response.wasCancelled) {\r\n                    return;\r\n                }\r\n            });\r\n        } else {\r\n            return this.dialog.showMessage(\r\n                \"Are you sure you want to delete the request?\",\r\n                \"Delete Request\",\r\n                ['Yes', 'No']\r\n            ).whenClosed(response => {\r\n                if (!response.wasCancelled) {\r\n                    this.deleteRequest();\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    async deleteRequest() {\r\n        this.clientRequests.setTheSelectedRequestDetail(this.selectedRequestDetail);\r\n        let serverResponse = await this.clientRequests.deleteRequest();\r\n        if (!serverResponse.error) {\r\n            await this.filterInAssigned()\r\n            this.utils.showNotification(\"The request was deleted\");\r\n            this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);\r\n        }\r\n        this.requestSelected = 'table';\r\n    }\r\n\r\n\t\r\n    back() {\r\n        this.clientRequests.setTheSelectedRequestDetail(this.selectedRequestDetail);\r\n        let changes = this.clientRequests.isRequestDetailDirty(this.originalRequestDetail, ['requestId', 'productId', 'techComments']);\r\n\r\n        var newAssignment = false;\r\n        if (this.selectedRequestDetail.assignments) {\r\n            this.selectedRequestDetail.assignments.forEach(item => {\r\n                if (!item.assignedDate) newAssignment = true;\r\n            })\r\n        }\r\n\r\n        if (this.selectedRequestDetail.assignments.length > 0 && (changes.length > 0 || newAssignment)) {\r\n            return this.dialog.showMessage(\r\n                \"There is an unsaved assignment. Are you sure you want to leave this page?\",\r\n                \"Confirm Back\",\r\n                ['Yes', 'No']\r\n            ).whenClosed(response => {\r\n                if (response.wasCancelled) {\r\n                    return;\r\n                } else {\r\n                    this._cleanUp();\r\n                }\r\n            });\r\n        }\r\n        this._cleanUp();\r\n    }\r\n\r\n    async viewAssignment(index, request) {\r\n        this.editIndex = index;\r\n        let response = await this.clientRequests.getRequestDetail(request._id);\r\n        if (!response.error) {\r\n            this.selectedRequestDetail = response;\r\n            if (this.selectedRequestDetail.requestId && this.selectedRequestDetail.requestId.courseId === null) this.selectedRequestDetail.requestId.courseId = { _id: this.config.SANDBOX_ID, name: this.config.SANDBOX_NAME };\r\n            this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);\r\n            if (this.selectedRequestDetail.assignments && this.selectedRequestDetail.assignments.length > 0) this.systems.selectedSystemFromId(this.selectedRequestDetail.assignments[0].systemId);\r\n            this.requestSelected = 'view';\r\n        }\r\n\r\n    }\r\n\r\n    backView() {\r\n        this.requestSelected = 'table';\r\n    }\r\n\r\n    systemSelected() {\r\n        this.selectProductSystem(this.selectedSystemId)\r\n        if (!this.products.selectedProduct.clientRelevant) {\r\n            this.calcAssignment();\r\n        }\r\n    }\r\n\r\n    selectProductSystem(id) {\r\n        this.selectedSystemId = id;\r\n        this.productSystems.forEach((item, index) => {\r\n            if (item._id === id) {\r\n                this.selectedSystem = item;\r\n                this.selectedSystemIndex = index;\r\n            }\r\n        });\r\n        this.checkClientConfigured();\r\n    }\r\n\r\n    checkClientConfigured() {\r\n        this.clientsConfigured = false;\r\n        for (let i = 0; i < this.selectedSystem.clients.length; i++) {\r\n            if (this.selectedSystem.clients[i].productId === this.products.selectedProduct._id) {\r\n                this.clientsConfigured = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n    showProfile(request, el) {\r\n        this.profileRequest = request;\r\n        $(\".hoverProfile\").css(\"top\", window.pageYOffset + el.clientY - 175);\r\n        $(\".hoverProfile\").css(\"left\", el.clientX - 200);\r\n        $(\".hoverProfile\").css(\"display\", \"block\");\r\n    }\r\n\r\n    hideProfile() {\r\n        $(\".hoverProfile\").css(\"display\", \"none\");\r\n    }\r\n\r\n    showComment(request, el) {\r\n        if (request.requestStatus == this.config.REPLIED_REQUEST_CODE) {\r\n            this.commentShown = request.requestId.comments;\r\n            $(\".hover\").css(\"top\", el.clientY - 200);\r\n            $(\".hover\").css(\"left\", el.clientX - 10);\r\n            $(\".hover\").css(\"display\", \"block\");\r\n        }\r\n    }\r\n\r\n    hideComment() {\r\n        $(\".hover\").css(\"display\", \"none\");\r\n    }\r\n\r\n   \r\n   \r\n    openFacultyDetails() {\r\n        this.facultyDetails = !this.facultyDetails;\r\n        localStorage.setItem(\"facultyDetails\", this.facultyDetails);\r\n    }\r\n\r\n    changeUnassignedOnly() {\r\n        localStorage.setItem('unassignedOnly', this.unassignedOnly);\r\n    }\r\n\r\n    _setUpValidation() {\r\n        this.validation.addRule(1, \"errorRange\", [{\r\n            \"rule\": \"custom\", \"message\": \"Invalid ID range\",\r\n            \"valFunction\": function (context) {\r\n                var valid = true;\r\n                if (context.assignmentDetails) {\r\n                    for (var i = 0; i < context.assignmentDetails.length; i++) {\r\n                        if (context.assignmentDetails[i].notValid == 'danger') valid = false;\r\n                    }\r\n                }\r\n                return valid;\r\n            }\r\n        }]);\r\n    }\r\n\r\n    _cleanUp() {\r\n        this.firstID = 0;\r\n        this.lastID = 0;\r\n        this.requestSelected = 'table';\r\n        this.customerMessage = false;\r\n        this.selectedRequestDetail.assignments = [];\r\n        this.selectedSystem = {};\r\n    }\r\n\r\n   \r\n    async clearFilters() {\r\n        this.requiredDateFilterValue = \"\";\r\n        this.createdDateFilterValue = \"\";\r\n        this.requestStatusFilter = \"\";\r\n        this.productFilterValue = \"\";\r\n        this.courseFilterValue = \"\";\r\n        this.helpTicketTypeFilterValue = \"\";\r\n        this.institutionFilterValue = \"\";\r\n        this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);\r\n        // await this.filterInAssigned();\r\n    }\r\n\r\n    async filterInAssigned() {\r\n      this.requiredDateFilterValue = \"\";\r\n      this.createdDateFilterValue = \"\";\r\n      this.requestStatusFilter = \"\";\r\n      this.productFilterValue = \"\";\r\n      this.courseFilterValue = \"\";\r\n      this.helpTicketTypeFilterValue = \"\";\r\n      this.institutionFilterValue = \"\";\r\n      if (this.isCheckedAssigned) {\r\n          $('#loading').show();\r\n          await this.clientRequests.getClientRequestsDetailsArray('?filter=[in]requestStatus[list]' + this.config.UNASSIGNED_REQUEST_CODE + ':' + this.config.UPDATED_REQUEST_CODE + ':' + this.config.CUSTOMER_ACTION_REQUEST_CODE, true);\r\n          $('#loading').hide();\r\n          if (this.clientRequests.requestsDetailsArray && this.clientRequests.requestsDetailsArray.length) {\r\n              this.noRequests = false;\r\n              this.dataTable.updateArray(this.clientRequests.requestsDetailsArray, 'requiredDate', -1);\r\n          } else {\r\n              this.noRequests = true;\r\n              this.dataTable.displayArray = new Array();\r\n          }\r\n      } else {\r\n          $('#loading').show();\r\n          await this.clientRequests.getClientRequestsDetailsArray('', true);\r\n          $('#loading').hide();\r\n          this.dataTable.updateArray(this.clientRequests.requestsDetailsArray, 'requiredDate', -1);\r\n          if (this.clientRequests.requestsDetailsArray.length) this.noRequests = false;\r\n      }\r\n\r\n        // this.requiredDateFilterValue = \"\";\r\n        // this.createdDateFilterValue = \"\";\r\n        // this.requestStatusFilter = \"\";\r\n        // this.productFilterValue = \"\";\r\n        // this.courseFilterValue = \"\";\r\n        // this.helpTicketTypeFilterValue = \"\";\r\n        // this.institutionFilterValue = \"\";\r\n        // if (this.isCheckedAssigned) {\r\n        //     $('#loading').show();\r\n        //     await this.clientRequests.getClientRequestsDetailsArray('?filter=requestStatus|in|' + this.config.UNASSIGNED_REQUEST_CODE + '$' + this.config.UPDATED_REQUEST_CODE + '$' + this.config.CUSTOMER_ACTION_REQUEST_CODE, true);\r\n        //     $('#loading').hide();\r\n        //     if (this.clientRequests.requestsDetailsArray && this.clientRequests.requestsDetailsArray.length) {\r\n        //         this.noRequests = false;\r\n        //         this.dataTable.updateArray(this.clientRequests.requestsDetailsArray, 'requiredDate', -1);\r\n        //     } else {\r\n        //         this.noRequests = true;\r\n        //         this.displayArray = new Array();\r\n        //     }\r\n\r\n        // } else {\r\n        //     $('#loading').show();\r\n        //     await this.clientRequests.getClientRequestsDetailsArray('', true);\r\n        //     $('#loading').hide();\r\n        //     this.dataTable.updateArray(this.clientRequests.requestsDetailsArray, 'requiredDate', -1);\r\n        //     if(this.clientRequests.requestsDetailsArray.length) this.noRequests = false;\r\n        // }\r\n\r\n    }\r\n\r\n    customNameFilter(value, item, context) {\r\n        return item.requestId && item.requestId.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n\r\n    statusCustomFilter(value, item, context) {\r\n        if (item.requestStatus == context.config.ASSIGNED_REQUEST_CODE || item.requestStatus == context.config.CANCELLED_REQUEST_CODE) return false;\r\n        return true;\r\n    }\r\n\r\n    institutionCustomFilter(value, item, context) {\r\n        return item.requestId && item.requestId.institutionId && item.requestId.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n\r\n    courseCustomFilter(value, item, context) {\r\n        return item.requestId && item.requestId.courseId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n\r\n    customProductNameFilter(value, item, context) {\r\n        return item.productId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n\r\n    customCourseSorter(sortProperty, sortDirection, sortArray, context) {\r\n        this.sortProperty = 'course';\r\n        this.sortDirection = sortDirection;\r\n        return sortArray.sort((a, b) => {\r\n            if (a['requestId'] !== null && b['requestId'] !== null && a['requestId']['courseId']['name'] && b['requestId']['courseId']['name']) {\r\n                var result = (a['requestId']['courseId']['name'] < b['requestId']['courseId']['name']) ? -1 : (a['requestId']['courseId']['name'] > b['requestId']['courseId']['name']) ? 1 : 0;\r\n            } else {\r\n                var result = -1;\r\n            }\r\n            return result * sortDirection;\r\n        });\r\n    }\r\n\r\n    customInstitutionsSorter(sortProperty, sortDirection, sortArray, context) {\r\n        this.sortProperty = 'institution';\r\n        this.sortDirection = sortDirection;\r\n        return sortArray.sort((a, b) => {\r\n            if (a['requestId'] !== null && b['requestId'] !== null && a['requestId']['institutionId'] && b['requestId']['institutionId']) {\r\n                var result = (a['requestId']['institutionId']['name'] < b['requestId']['institutionId']['name']) ? -1 : (a['requestId']['institutionId']['name'] > b['requestId']['institutionId']['name']) ? 1 : 0;\r\n            } else {\r\n                var result = -1;\r\n            }\r\n            return result * sortDirection;\r\n        });\r\n    }\r\n\r\n    customPersonSorter(sortProperty, sortDirection, sortArray, context) {\r\n        this.sortProperty = 'person';\r\n        this.sortDirection = sortDirection;\r\n        return sortArray.sort((a, b) => {\r\n            if (a['requestId'] !== null && b['requestId'] !== null && a['requestId']['personId']['lastName'] && b['requestId']['personId']['lastName']) {\r\n                var result = (a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName']) ? -1 : (a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName']) ? 1 : 0;\r\n            } else {\r\n                var result = -1;\r\n            }\r\n            return result * sortDirection;\r\n        });\r\n    }\r\n\r\n    customRequestStatusSorter(sortProperty, sortDirection, sortArray, context) {\r\n        this.sortProperty = 'status';\r\n        this.sortDirection = sortDirection;\r\n        return sortArray.sort((a, b) => {\r\n            var result = (a[sortProperty] < b[sortProperty]) ? -1 : (a[sortProperty] > b[sortProperty]) ? 1 : 0;\r\n            return result * sortDirection;\r\n        });\r\n    }\r\n\r\n    reSort() {\r\n        this.dataTable.sortArray({}, {}, true);\r\n    }\r\n\r\n}\r\n","// Module\nvar code = \"<template>\\r\\n  <span id=\\\"loading\\\">\\r\\n    <ul class=\\\"bokeh\\\">\\r\\n      <li></li>\\r\\n      <li></li>\\r\\n      <li></li>\\r\\n    </ul>\\r\\n  </span>\\r\\n\\r\\n  <div class=\\\"fluid-container\\\">\\r\\n    <div class=\\\"panel panel-default\\\" style=\\\"margin-top:50px;padding:5px;\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"bottomMargin list-group-item  toolbar\\\">\\r\\n            <span click.delegate=\\\"saveIt()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Save\\\"><i class=\\\"fa fa-floppy-o fa-lg fa-border\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></span>\\r\\n          </div>\\r\\n        </div> \\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n\\r\\n            <div class=\\\"topMargin\\\">\\r\\n              <div>\\r\\n                <input input.delegate=\\\"filterInstiutionList()\\\" value.bind=\\\"filterValue\\\" id=\\\"filterValue\\\"\\r\\n                  class=\\\"form-control \\\" placeholder=\\\"Filter institution\\\" type=\\\"text\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"smallTopMargin\\\">\\r\\n                <select id=\\\"institution\\\" value.bind=\\\"selectedInstitution\\\" change.delegate=\\\"changeInstitution($event)\\\"\\r\\n                  class=\\\"form-control\\\">\\r\\n                  <option value=\\\"\\\">Choose the Institution</option>\\r\\n                  <option repeat.for=\\\"item of insitutionsArray\\\" value=\\\"${item._id}\\\">${item.name}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <span show.bind=\\\"institutionSelected && selectedPackage\\\">\\r\\n              <h5>Package: <strong>${selectedPackage.name}</strong> Max Clients:\\r\\n                <strong>${selectedPackage.maxClients}</strong> Active Clients:\\r\\n                <strong>${requests.selectedRequest.requestDetails.length}</strong>\\r\\n              </h5>\\r\\n            </span>\\r\\n            <span show.bind=\\\"institutionSelected && !selectedPackage\\\">\\r\\n              <h5>Currently there is no package assigned to the institution.</h5>\\r\\n            </span>\\r\\n\\r\\n            <div show.bind=\\\"institutionSelected && requests.apjInstitutionRequestArray.length\\\" id=\\\"existingRequestInfo\\\">\\r\\n\\r\\n            </div>\\r\\n            <div show.bind=\\\"institutionSelected && !requests.apjInstitutionRequestArray.length\\\"\\r\\n              id=\\\"existingRequestInfo\\\">\\r\\n              <h3>This institution has no active requests</h3>\\r\\n            </div>\\r\\n\\r\\n            <compose view=\\\"./components/Requests.html\\\"></compose>\\r\\n\\r\\n            <div show.bind=\\\"institutionSelected\\\" class=\\\"form-group col-md-12\\\">\\r\\n              <editor value.bind=\\\"requests.selectedRequest.comments\\\" height=\\\"250\\\"></editor>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div show.bind=\\\"institutionSelected\\\" class=\\\"col-lg-8\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5 topMargin\\\">\\r\\n                <label id=\\\"productList\\\">Available Products</label>\\r\\n                <div class=\\\"well well2 overFlow\\\" style=\\\"height:400px;\\\">\\r\\n                  <input class=\\\"form-control\\\" value.bind=\\\"filter\\\" input.trigger=\\\"filterList()\\\"\\r\\n                    placeholder=\\\"Filter products\\\" />\\r\\n                  <ul class=\\\"list-group\\\">\\r\\n                    <li click.trigger=\\\"selectProduct(product)\\\" repeat.for=\\\"product of filteredProductsArray\\\"\\r\\n                      id=\\\"${product._id}\\\" class=\\\"list-group-item dropbtn\\\">\\r\\n                      <h4>${product.name}</h4>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-5 col-md-offset-1 topMargin\\\">\\r\\n                <label id=\\\"requestProductsLabel\\\">Requested Products</label>\\r\\n                <div class=\\\" overflow well well2\\\" style=\\\"height:400px;overflow-y: scroll;\\\">\\r\\n                  <ul class=\\\"list-group\\\">\\r\\n                    <li click.trigger=\\\"removeProduct($index)\\\"\\r\\n                      repeat.for=\\\"product of requestDetails\\\" id=\\\"${product.productId}\\\"\\r\\n                      class=\\\"${product.assignments.length ? 'assignedColor list-group-item dropbtn' : 'list-group-item dropbtn'}\\\">\\r\\n                      <!-- <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-12\\\"> -->\\r\\n                        <h4>${product.productId | lookupValue:products.productsArray:\\\"_id\\\":\\\"name\\\"}\\r\\n                        </h4>\\r\\n                      <!-- </div>\\r\\n                    </div> -->\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\"><span id=\\\"numberOfStudentsError\\\"></span></div>\\r\\n              <div class=\\\"col\\\"><span id=\\\"dateError\\\"></span></div>\\r\\n              <div class=\\\"col\\\"><span id=\\\"requiredDateError\\\"></span></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" id=\\\"productListTable\\\">\\r\\n              <div show.bind=\\\"requests.selectedRequest.requestDetails.length > 0\\\">\\r\\n                <table class=\\\"table table-striped table-bordered col-md-10 topMargin\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Requested Product</th>\\r\\n                      <!-- <th>Price</th> -->\\r\\n                      <th>Number of Students</th>\\r\\n                      <th>Date Required</th>\\r\\n                    </tr>\\r\\n                  <tbody id=\\\"requiredProductsTable\\\">\\r\\n                    <tr repeat.for=\\\"request of requestDetails\\\"\\r\\n                      class=\\\"${request.assignments.length ? 'success sortable' : 'sortable'}\\\">\\r\\n                      <td>${request.productId | lookupValue:products.productsArray:\\\"_id\\\":\\\"name\\\"}\\r\\n                      </td>\\r\\n                      <!-- <td>\\r\\n                        <input readonly.bind=\\\"!request.invoiceRelevant\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                          value.bind=\\\"request.price\\\">\\r\\n                        ${request.invoiceRelevant}\\r\\n                      </td> -->\\r\\n                      <td>\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" value.bind=\\\"request.numberOfStudents\\\">\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <div class=\\\"form-group  col-md-8\\\">\\r\\n                          <flat-picker controlid=\\\"requiredDate-${$index}\\\" config.bind=\\\"configDate\\\"\\r\\n                            value.bind=\\\"request.requiredDate\\\">\\r\\n                          </flat-picker>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"topMargin\\\" show.bind=\\\"sandBoxClient || personSelected\\\">\\r\\n                <editor value.bind=\\\"requests.selectedRequest.comments\\\" height=\\\"250\\\"></editor>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n        <span id=\\\"loading\\\">\\r\\n            <ul class=\\\"bokeh\\\">\\r\\n                <li></li>\\r\\n                <li></li>\\r\\n                <li></li>\\r\\n            </ul>\\r\\n        </span>\\r\\n        <div show.bind=\\\"dataTable.displayArray && dataTable.displayArray.length || initialLoaded\\\">\\r\\n            <div show.bind=\\\"!institutionSelected\\\" class=\\\"col-lg-12\\\">\\r\\n                <compose view=\\\"./components/institutionsTable.html\\\"></compose>\\r\\n            </div> <!-- Table Div -->\\r\\n            <div show.bind=\\\"institutionSelected\\\" class=\\\"col-lg-12\\\">\\r\\n                <compose view=\\\"./components/institutionsForm.html\\\"></compose>\\r\\n            </div> <!-- Form Div -->\\r\\n        </div> <!-- Panel Body -->\\r\\n    </template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <compose view='../../resources/elements/submenu.html'></compose>\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <router-view></router-view>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <compose view='../../resources/elements/submenu.html'></compose>   \\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n        <router-view></router-view>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div show.bind=\\\"requestSelected == 'table'\\\">\\r\\n        <compose view=\\\"./components/assignRequestTable.html\\\"></compose>\\r\\n    </div>\\r\\n    <div show.bind=\\\"requestSelected == 'form'\\\">\\r\\n        <compose view=\\\"./components/requestForm.html\\\"></compose>\\r\\n    </div>\\r\\n    <div show.bind=\\\"requestSelected == 'view'\\\">\\r\\n        <compose view=\\\"./components/viewAssignmentForm.html\\\"></compose>\\r\\n    </div>\\r\\n    <div show.bind=\\\"requestSelected == 'edit'\\\">\\r\\n        <compose view=\\\"./components/editRequestsForm.html\\\"></compose>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n      <div class=\\\"topMargin\\\">\\r\\n        <span id=\\\"selectProductRequestError\\\"></span>\\r\\n        <table id=\\\"clientTable\\\" show.bind=\\\"requests.selectedRequest.requestDetails.length\\\" class=\\\"table table-bordered table-responsive\\\" style=\\\"background:white;\\\">\\r\\n          <thead>\\r\\n          <tr class=\\\"header\\\">\\r\\n            <th>Product</th>\\r\\n            <th>System</th>\\r\\n            <th>Client</th>\\r\\n            <th>Status</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr class=\\\"${product.assignments.length ? 'success sortable' : 'sortable'}\\\" id=\\\"${product.id}\\\" productId=\\\"${product.productId}\\\" \\r\\n                repeat.for=\\\"product of requestDetails\\\">\\r\\n              <td>${product.productId  | lookupValue:products.productsArray:\\\"_id\\\":\\\"name\\\"}</td> \\r\\n              <td>${product.assignments[0].systemId | lookupValue:systems.systemsArray:\\\"_id\\\":\\\"sid\\\"}</td>\\r\\n              <td>${product.assignments[0].client}</td>\\r\\n              <td>${product.requestStatus | lookupValue:config.REQUEST_STATUS:\\\"code\\\":\\\"description\\\"}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <span id=\\\"client\\\"></span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <!-- Session Select -->\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"checkbox leftMargin\\\">\\r\\n          <label>\\r\\n            <input checked.bind=\\\"isCheckedAssigned\\\" change.trigger=\\\"filterInAssigned()\\\" type=\\\"checkbox\\\"> Filter out\\r\\n            Assigned Requests\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div id=\\\"no-more-tables\\\">\\r\\n      <table id=\\\"requestsTable\\\" class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <td colspan='10'>\\r\\n              <compose view=\\\"../../../resources/elements/table-navigation-bar.html\\\"></compose>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td colspan='10'>\\r\\n              <span click.delegate=\\\"refresh()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n                data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Refresh\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n              <span click.delegate=\\\"clearFilters()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n                data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Clear Filters\\\">\\r\\n                <i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n              <span click.delegate=\\\"downloadAssignExcel()\\\"\\r\\n                class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                data-original-title=\\\"Export to Excel\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n            </td>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\" click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'requiredDate'})\\\">Due\\r\\n              </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n            <th class=\\\"col-lg-1\\\" class=\\\"hidden-sm\\\">\\r\\n              <span class=\\\"sortable\\\" click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'createdDate'})\\\">Created\\r\\n              </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n            <th># of Students</th>\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {type: 'custom', sorter: customRequestStatusSorter, propertyName: 'requestStatus'})\\\">Status\\r\\n              </span>\\r\\n              <i class=\\\"fa fa-sort\\\"></i>\\r\\n            </th>\\r\\n\\r\\n            <th class=\\\"col-lg-2\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'productId.name'})\\\">Product </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionsSorter, propertyName: 'requestId.institutionId'})\\\">Institution\\r\\n              </span>\\r\\n              <i class=\\\"fa fa-sort\\\"></i>\\r\\n            </th>\\r\\n            <th show.bind=\\\"!isCheckedAssigned\\\">Assignments</th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr class=\\\"hidden-sm hidden-xs\\\">\\r\\n            <th>\\r\\n              <input type=\\\"date\\\" value.bind=\\\"requiredDateFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(requiredDateFilterValue, {type: 'date', filter: 'requiredDate',  collectionProperty: 'requiredDate', compare: 'after'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n            <th>\\r\\n              <input type=\\\"date\\\" value.bind=\\\"createdDateFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\\\"\\r\\n                class=\\\"form-control hidden-sm\\\" />\\r\\n            </th>\\r\\n            <th></th>\\r\\n            <th>\\r\\n              <select value.bind=\\\"requestStatusFilter\\\"\\r\\n                input.delegate=\\\"dataTable.filterList($event, { type: 'value',  filter: 'requestStatusFilter',  collectionProperty: 'requestStatus', displayProperty: 'requestStatus',  compare:'match'} )\\\"\\r\\n                class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option repeat.for=\\\"status of config.REQUEST_STATUS\\\" value=\\\"${status.code}\\\">${status.description}\\r\\n                </option>\\r\\n              </select>\\r\\n            </th>\\r\\n\\r\\n            <th>\\r\\n              <input value.bind=\\\"productFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(productFilterValue, { type: 'custom',  filter: customProductNameFilter,  compare:'custom'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n\\r\\n            <th>\\r\\n              <input value.bind=\\\"institutionFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n            <th show.bind=\\\"!isCheckedAssigned\\\"></th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n          <tr repeat.for=\\\"request of dataTable.displayArray\\\"\\r\\n            class=\\\"${request.requestStatus | getArrayValue:config.REQUEST_STATUS:'status':-1}\\\">\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" data-title=\\\"requiredDate\\\">${request.requiredDate |\\r\\n              dateFormat:config.DATE_FORMAT_TABLE}</td>\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" class=\\\"hidden-sm\\\" data-title=\\\"dateCreated\\\">\\r\\n              ${request.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" data-title=\\\"Students\\\">${request.numberOfStudents}</td>\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" data-title=\\\"status\\\">${request.requestStatus |\\r\\n              lookupValue:config.REQUEST_STATUS:\\\"code\\\":\\\"description\\\"}</td>\\r\\n\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" data-title=\\\"product\\\">${request.productId.name}</td>\\r\\n\\r\\n            <td click.delegate=\\\"selectARequest($index, request)\\\" data-title=\\\"Name\\\">\\r\\n              ${request.requestId.institutionId.name}</td>\\r\\n            <td show.bind=\\\"!isCheckedAssigned\\\"\\r\\n              innerhtml.bind=\\\"request.assignments | parseAssignments:systems.systemsArray\\\"></td>\\r\\n            <td>\\r\\n              <span class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                data-original-title=\\\"Edit\\\">\\r\\n                <i class=\\\"fa fa-pencil fa-lg fa-border\\\" click.delegate=\\\"editRequest($index, request)\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                data-original-title=\\\"View Assignment\\\">\\r\\n                <i class=\\\"fa fa-eye fa-lg fa-border\\\" click.delegate=\\\"viewAssignment($index, request)\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr if.bind=\\\"dataTable.displayArray.length > 20\\\">\\r\\n            <td colspan='10'>\\r\\n              <compose view=\\\"../../../resources/elements/table-navigation-bar.html\\\"></compose>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div show.bind=\\\"selectedRequestDetail.assignments.length > 0\\\">\\r\\n      <h4 class=\\\"topMargin\\\"><strong>Assignments</strong></h4>\\r\\n      <div show.bind=\\\"selectedRequestDetail.requestStatus == config.ASSIGNED_REQUEST_CODE\\\" class=\\\"panel panel-primary topMargin\\\">\\r\\n        <div class=\\\"panel-body\\\">  \\r\\n          <ul style=\\\"padding-left:10px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"list-group-item\\\" repeat.for=\\\"assign of selectedRequestDetail.assignments\\\">\\r\\n             <compose if.bind=\\\"systems.selectedSystem.type === 'ERP' || !systems.selectedSystem.type\\\" view=\\\"./erp.html\\\"></compose>\\r\\n             <compose if.bind=\\\"systems.selectedSystem.type === 'HANA'\\\" view=\\\"./hana.html\\\"></compose>\\r\\n              <compose if.bind=\\\"systems.selectedSystem.type === 'BO'\\\" view=\\\"./bo.html\\\"></compose>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n          </ul>\\r\\n\\r\\n          <label show.bind=\\\"products.selectedProduct.documents && products.selectedProduct.documents.length > 0\\\" class=\\\"topMargin\\\">Helpful Documents</label>\\r\\n          <div class=\\\"list-group\\\">\\r\\n            <a repeat.for=\\\"document of products.selectedProduct.documents\\\" href=\\\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\\\"  target=\\\"_blank\\\">${document.fileName}</a>\\r\\n          </div>\\r\\n          <label show.bind=\\\"selectedRequestDetail.techComments && selectedRequestDetail.techComments.length > 0\\\" class=\\\"topMargin\\\">Assignment Comments</label>\\r\\n          <div show.bind=\\\"selectedRequestDetail.techComments && selectedRequestDetail.techComments.length > 0\\\" class=\\\"col-lg-12 topMargin well overFlow\\\" innerhtml.bind=\\\"selectedRequestDetail.techComments\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t\\t <div class=\\\"row leftMargin\\\">\\r\\n\\t\\t\\t<h4>URL</h4>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\"><a href=\\\"${systems.selectedSystem.its}\\\" target=\\\"_blank\\\">${systems.selectedSystem.its}</a></h5>\\r\\n\\r\\n\\t\\t\\t<h4 class=\\\"topMargin\\\">Users</h4>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Student IDs: <span class=\\\"bold\\\"> ${assign.studentUserIds}</span></h5>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Student Password: <span class=\\\"bold\\\"> ${assign.studentPassword}</span></h5>\\r\\n\\t\\t\\t<span show.bind=\\\"requests.selectedRequest.courseId !== null\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"leftMargin\\\" class=\\\"topMargin\\\">Faculty IDs <span class=\\\"bold\\\">: ${selectedRequestDetail.assignments[selectedAssignmentIndex].facultyUserIds}</span></h5>\\r\\n\\t\\t\\t\\t<h5 class=\\\"leftMargin\\\">Faculty Password: <span class=\\\"bold\\\"> ${selectedRequestDetail.assignments[selectedAssignmentIndex].facultyPassword}</span></h5>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t<div class=\\\"panel panel-default rightMargin leftMargin\\\" style=\\\"margin-top:50px;\\\">\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"fluid-container\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"list-group-item toolbar\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span click.delegate=\\\"backEdit()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Back\\\"><i\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"fa fa-arrow-left fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t<span click.delegate=\\\"saveEdit()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n\\t\\t\\t\\t\\t\\t\\tdata-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Save\\\"><i\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"fa fa-floppy-o fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-10 col-lg-offset-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4>Request No. ${selectedRequestDetail.requestNo}</h4>\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"dropbtn\\\" click.delegate=\\\"showProfile(selectedRequestDetail, $event)\\\">Faculty:\\r\\n\\t\\t\\t\\t\\t\\t\\t${selectedRequestDetail.requestId.personId.fullName} <i class=\\\"fa fa-info\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\taria-hidden=\\\"true\\\"></i></h5>\\r\\n\\t\\t\\t\\t\\t\\t<h5>Institution: ${selectedRequestDetail.requestId.institutionId.name}</h5>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"topMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-control-label \\\">Status</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" value.bind=\\\"selectedRequestDetail.requestStatus\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option repeat.for=\\\"status of config.REQUEST_STATUS\\\" value=\\\"${status.code}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t${status.description}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"topMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-control-label \\\">Product</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" value.bind=\\\"selectedRequestDetail.productId._id\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option repeat.for=\\\"product of products.productsArray\\\" value=\\\"${product._id}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t${product.name}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"topMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-control-label \\\">Required Date</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<flat-picker controlid=\\\"requiredDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue.bind=\\\"selectedRequestDetail.requiredDate\\\" startdate.bind=\\\"minEndDate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tenddate.bind=\\\"maxEndDate\\\"></flat-picker>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span id='requiredDateError'></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 topMargin\\\" innerhtml.bind=\\\"selectedRequestDetail.requestId.comments\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n  <div class=\\\"row\\\" style=\\\"word-wrap: break-word;\\\">\\r\\n      <span class=\\\"col-lg-4\\\">\\r\\n        <h5 class=\\\"leftMargin\\\">System: <span class=\\\"bold\\\">${assign.systemId | lookupValue:systems.systemsArray:\\\"_id\\\":\\\"sid\\\"}</span></h5>\\r\\n        <h5 class=\\\"leftMargin\\\">Client: <span class=\\\"bold\\\"> ${assign.client} </span></h5>\\r\\n        <h5 class=\\\"leftMargin\\\">Server: <span class=\\\"bold\\\"> ${assign.systemId | lookupValue:systems.systemsArray:\\\"_id\\\":\\\"server\\\"} </span></h5>\\r\\n        <h5 class=\\\"leftMargin\\\">System Number: <span class=\\\"bold\\\"> ${assign.systemId | lookupValue:systems.systemsArray:\\\"_id\\\":\\\"instance\\\"} </span></h5>\\r\\n      </span>\\r\\n      <span class=\\\"col-lg-6\\\">\\r\\n        <h5>Student IDs: <span class=\\\"bold\\\"> ${assign.studentUserIds ? assign.studentUserIds : 'N/A'}</span></h5>\\r\\n        <h5>Student Password: <span class=\\\"bold\\\"> ${assign.studentPassword ? assign.studentPassword : 'N/A'}</span></h5>\\r\\n        <span>\\r\\n          <h5 class=\\\"topMargin\\\">Faculty IDs <span class=\\\"bold\\\">: ${assign.facultyUserIds ? assign.facultyUserIds : 'N/A'}</span></h5>\\r\\n          <h5>Faculty Password: <span class=\\\"bold\\\"> ${assign.facultyPassword ? assign.facultyPassword : 'N/A'}</span></h5>\\r\\n        </span>\\r\\n      </span>\\r\\n      <span class=\\\"col-lg-12\\\">\\r\\n          <h5 show.bind=\\\"systems.selectedSystem.its && systems.selectedSystem.its.length > 0\\\" class=\\\"leftMargin bigTopMargin\\\">ITS:</h5>\\r\\n          <h5 show.bind=\\\"systems.selectedSystem.its && systems.selectedSystem.its.length > 0\\\"><span class=\\\"bold\\\"> <a href=\\\"${systems.selectedSystem.its}\\\" target=\\\"_blank\\\">${systems.selectedSystem.its}</a> </span></h5>                       \\r\\n      </span>\\r\\n  </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t\\t <div class=\\\"row leftMargin\\\">\\r\\n\\t\\t\\t<h4>SAP HANA Launchpad URL</h4>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\"><a href=\\\"${systems.selectedSystem.its}\\\" target=\\\"_blank\\\">${systems.selectedSystem.its}</a></h5>\\r\\n\\r\\n\\t\\t\\t<h4 class=\\\"topMargin\\\">Users</h4>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Student IDs: <span class=\\\"bold\\\"> ${assign.studentUserIds}</span></h5>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Student Password: <span class=\\\"bold\\\"> ${assign.studentPassword}</span></h5>\\r\\n\\t\\t\\t<span show.bind=\\\"requests.selectedRequest.courseId !== null\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"leftMargin\\\" class=\\\"topMargin\\\">Faculty IDs <span class=\\\"bold\\\">: ${assign.facultyUserIds}</span></h5>\\r\\n\\t\\t\\t\\t\\t<!-- ${selectedRequestDetail.assignments[selectedAssignmentIndex].facultyUserIds} -->\\r\\n\\t\\t\\t\\t<h5 class=\\\"leftMargin\\\">Faculty Password: <span class=\\\"bold\\\"> ${assign.facultyPassword}</span></h5>\\r\\n\\t\\t\\t</span>\\r\\n\\r\\n\\t\\t\\t<h4 class=\\\"topMargin\\\">Lumira / Predictive Analytics Connection</h4>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">System: <span class=\\\"bold\\\">${assign.systemId | lookupValue:systems.systemsArray:\\\"_id\\\":\\\"sid\\\"}</span></h5>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Server: <span class=\\\"bold\\\"> ${systems.selectedSystem.server} </span></h5>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">Port: <span class=\\\"bold\\\"> ${systems.selectedSystem.port} </span></h5>\\r\\n\\t\\t\\t<h5 class=\\\"leftMargin\\\">System Number: <span class=\\\"bold\\\"> ${systems.selectedSystem.instance} </span></h5> \\r\\n\\t\\t</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div class=\\\"row topMargin\\\">\\r\\n        <!-- Row 5 -->\\r\\n        <div class=\\\"col-lg-6 topMargin\\\">\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Address 1</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.address1\\\" id=\\\"editAddress1\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"Address 1\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Address 2</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.address2\\\" id=\\\"editAddress1\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"Address 2\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>City</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.city\\\" id=\\\"editCity\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"City\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Region</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.region\\\" id=\\\"editRegion\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"Region\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Postal Code</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.postalCode\\\" id=\\\"editPostalCode\\\"\\r\\n                            class=\\\"form-control\\\" placeholder=\\\"Postal Code\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Country</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.country\\\" id=\\\"editCountry\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"Country\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 topMargin\\\">\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>URL</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.url\\\" id=\\\"editCountry\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"URL\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Time Zone</label>\\r\\n                        <select value.bind=\\\"people.selectedInstitution.timeZone\\\" class=\\\"form-control\\\">\\r\\n                            <option value=\\\"\\\">Select an option</option>\\r\\n                            <option repeat.for=\\\"zone of config.TIMEZONES\\\" value=\\\"${zone}\\\">${zone}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <div class=\\\"checkbox\\\">\\r\\n                            <label>\\r\\n                                <input disabled checked.bind=\\\"people.selectedInstitution.apj\\\" type=\\\"checkbox\\\"> APJ\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div class=\\\"col-lg-6 topMargin\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <label>Institution Type *</label>\\r\\n                    <select value.bind=\\\"people.selectedInstitution.institutionType\\\" id=\\\"editInstitutionType\\\" class=\\\"form-control\\\">\\r\\n                        <option value=\\\"\\\">Select an option</option>\\r\\n                        <option repeat.for=\\\"status of is4ua.institutionTypes\\\" value=\\\"${status.code}\\\">${status.description}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <label>Member Type *</label>\\r\\n                    <select value.bind=\\\"people.selectedInstitution.memberType\\\" id=\\\"editMemberType\\\" class=\\\"form-control\\\">\\r\\n                        <option value=\\\"\\\">Select an option</option>\\r\\n                        <option repeat.for=\\\"status of is4ua.memberTypes\\\" value=\\\"${status.code}\\\">${status.description}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n     <div class=\\\"col-lg-6 topMargin\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <label class=\\\"left\\\">Highest Degree *</label>\\r\\n                    <select value.bind=\\\"people.selectedInstitution.highestDegree\\\" id=\\\"editHighestDegree\\\" class=\\\"form-control\\\">\\r\\n                        <option value=\\\"\\\">Select an option</option>\\r\\n                        <option repeat.for=\\\"status of is4ua.highestDegrees\\\" value=\\\"${status.code}\\\">${status.description}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <label>Department</label>\\r\\n                    <input value.bind=\\\"people.selectedInstitution.universityDept\\\" id=\\\"editDepartment\\\" class=\\\"form-control\\\" placeholder=\\\"Department\\\" type=\\\"text\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n            <div class=\\\"col-lg-10 col-offset-lg-1\\\" style=\\\"padding:15px;\\\">\\r\\n\\r\\n            <table id=\\\"personTable2\\\" class=\\\"table table-striped table-hover\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th style=\\\"width:20rem;\\\">Name</th>\\r\\n                        <th style=\\\"width:15rem;\\\">Phone</th>\\r\\n                        <th style=\\\"width:20rem;\\\">eMail</th>\\r\\n                        <th>Role</th>\\r\\n                        <th>Status</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr repeat.for=\\\"person of people.instutionPeopleArray\\\" class=\\\"blackText\\\">\\r\\n                        <td data-title=\\\"name\\\">${person.firstName} ${person.lastName}</td>\\r\\n                        <td data-tile=\\\"phone\\\">${person.phone | phoneNumber}</td>\\r\\n                        <td data-title=\\\"email\\\">${person.email}</td>\\r\\n                        <td data-title=\\\"role\\\">${person.roles}</td>\\r\\n                        <td data-title=\\\"status\\\">${person.personStatus | lookupValue:is4ua.personStatusArray:\\\"code\\\":\\\"description\\\"}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Name *</label>\\r\\n                        <input value.bind=\\\"people.selectedInstitution.name\\\" id=\\\"editName\\\" class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"Name\\\" type=\\\"text\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Date Joined</label>\\r\\n                        <flat-picker controlid=\\\"joinDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n                            value.bind=\\\"people.selectedInstitution.joinDate\\\"></flat-picker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label class=\\\"left\\\">Status *</label>\\r\\n                        <select value.bind=\\\"people.selectedInstitution.institutionStatus\\\" id=\\\"editInstitutonStatusArray\\\"\\r\\n                            class=\\\"form-control\\\">\\r\\n                            <option value=\\\"\\\">Select an option</option>\\r\\n                            <option repeat.for=\\\"status of is4ua.institutonStatusArray\\\" value=\\\"${status.code}\\\">\\r\\n                                ${status.description}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Date Dropped</label>\\r\\n                        <flat-picker controlid=\\\"dropDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n                            value.bind=\\\"people.selectedInstitution.dropDate\\\"></flat-picker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label class=\\\"left\\\">Package *</label>\\r\\n                        <select value.bind=\\\"people.selectedInstitution.packageId.packageId\\\" id=\\\"editInstitutonPakage\\\"\\r\\n                            class=\\\"form-control\\\">\\r\\n                            <option model.bind=\\\"null\\\">Select an option</option>\\r\\n                             <option repeat.for=\\\"package of people.packageArray\\\" model.bind=\\\"package._id\\\">${package.name}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Package Start Date</label>\\r\\n                        <flat-picker controlid=\\\"packageStartDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n                            value.bind=\\\"people.selectedInstitution.packageId.dateStarted\\\"></flat-picker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Package Invoice Date</label>\\r\\n                        <flat-picker controlid=\\\"packageInvoiceDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n                            value.bind=\\\"people.selectedInstitution.packageId.dateInvoiced\\\"></flat-picker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <label>Package Pay Date</label>\\r\\n                        <flat-picker controlid=\\\"packagePayDate\\\" config.bind=\\\"dateConfig\\\"\\r\\n                            value.bind=\\\"people.selectedInstitution.packageId.datePaid\\\"></flat-picker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\n    <div class=\\\"panel panel-default topMargin panelContrastColor\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"col-lg-2\\\">\\n                <div id=\\\"instFormListGroup\\\" class=\\\"list-group\\\">\\n                    <a class=\\\"${ $first ? 'menuButtons' : ''} list-group-item\\\" repeat.for=\\\"tab of tabs\\\" href=\\\"\\\" class=\\\"list-group-item\\\"\\n                        click.delegate=\\\"changeTab($event, $index)\\\">\\n                        <h4 id=\\\"${tab.id}\\\" class=\\\"list-group-item-heading\\\">${tab.title}</h4>\\n                    </a>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-10\\\">\\n                <div class=\\\"tab-content\\\">\\n                  <div id=\\\"instAddressTab\\\" class=\\\"tab-pane fade in active' }\\\">\\n                    <compose view=\\\"./instAddress.html\\\"></compose>\\n                  </div>\\n                  <div id=\\\"instPeopleTab\\\" class=\\\"tab-pane fade\\\">\\n                    <compose view=\\\"./instPeople.html\\\"></compose>\\n                  </div>\\n                  <div id=\\\"instIs4uaTab\\\" class=\\\"tab-pane fade\\\">\\n                    <compose view=\\\"./instIs4ua.html\\\"></compose>\\n                  </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <style>\\r\\n        .menuButtons {\\r\\n            color:${config.ACTIVE_SUBMENU_COLOR}\\r\\n            ;\\r\\n            background-color:${config.BUTTONS_BACKGROUND}\\r\\n        }\\r\\n    </style>\\r\\n    <div class=\\\"list-group-item toolbar\\\">\\r\\n        <span click.delegate=\\\"back()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\"\\r\\n            title=\\\"\\\" data-original-title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n        <span click.delegate=\\\"save()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\"\\r\\n            title=\\\"\\\" data-original-title=\\\"Save\\\"><i class=\\\"fa fa-floppy-o fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n        <span click.delegate=\\\"cancel()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\"\\r\\n            title=\\\"\\\" data-original-title=\\\"Cancel Changes\\\"><i class=\\\"fa fa-ban fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n        <span show.bind=\\\"!newInstitution\\\" click.delegate=\\\"delete()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n            data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\"><i class=\\\"fa fa-trash fa-lg fa-border text-danger\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-default positionUnderToolbar\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <compose view=\\\"./institutionDetails.html\\\"></compose>\\r\\n            <compose view=\\\"./institutionPanels.html\\\"></compose>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div class=\\\"panel panel-info\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\\r\\n                    <div id=\\\"no-more-tables\\\">\\r\\n\\r\\n                        <table class=\\\"table table-striped table-hover cf\\\">\\r\\n                            <thead class=\\\"cf\\\">\\r\\n                                <tr colspan='6'>\\r\\n                                    <compose view=\\\"../../../resources/elements/table-navigation-bar.html\\\"></compose>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td colspan='6'>\\r\\n                                        <span click.delegate=\\\"refresh()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n                                            data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Refresh\\\"><i\\r\\n                                                class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                        <span click.delegate=\\\"new()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n                                            data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"New\\\"><i\\r\\n                                                class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                        <span click.delegate=\\\"downloadInstExcel()\\\" class=\\\"smallMarginRight\\\"\\r\\n                                            bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                                            data-original-title=\\\"Export to Excel\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n                                        <span click.delegate=\\\"_clearFilters()\\\" class=\\\"smallMarginRight\\\"\\r\\n                                            bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                                            data-original-title=\\\"Clear Filters\\\"><i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th><span class=\\\"sortable\\\" click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'name'})\\\">Name\\r\\n                                        </span><span><i class=\\\"fa fa-sort\\\"></i></span></th>\\r\\n                                    <th>Institution Type</th>\\r\\n                                    <th>Package</th>\\r\\n                                    <th>Status</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <th>\\r\\n                                        <input value.bind=\\\"nameFilterValue\\\" input.delegate=\\\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'name', displayProperty: 'fullnameName', matchProperty:'', compare:'match'} )\\\"\\r\\n                                            class=\\\"form-control\\\" />\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <select value.bind=\\\"institutionTypes\\\" input.delegate=\\\"dataTable.filterList($event, { type: 'value',  filter: 'institutionType',  collectionProperty: 'institutionType', displayProperty: 'institutionType', compare:'match'} )\\\"\\r\\n                                            class=\\\"form-control\\\">\\r\\n                                            <option value=\\\"\\\"></option>\\r\\n                                            <option repeat.for=\\\"institution of is4ua.institutionTypes\\\" value=\\\"${institution.code}\\\">${institution.description}</option>\\r\\n                                        </select>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <select value.bind=\\\"institutionPackageFilter\\\" input.delegate=\\\"dataTable.filterList($event, { type: 'value',  filter: 'institutionPackageFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'packageId.packageId', displayProperty: 'memberType', matchProperty:'', compare:'match'} )\\\"\\r\\n                                            class=\\\"form-control\\\">\\r\\n                                            <option value=\\\"\\\"></option>\\r\\n                                            <option repeat.for=\\\"institution of people.packageArray\\\" value=\\\"${institution._id}\\\">${institution.name}</option>\\r\\n                                        </select>\\r\\n                                    </th>\\r\\n                                    <th>\\r\\n                                        <select value.bind=\\\"institutionStatusFilter\\\" input.delegate=\\\"dataTable.filterList($event, { type: 'value',  filter: 'institutionStatusFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'institutionStatus', displayProperty: 'institutionStatus', matchProperty:'', compare:'match'} )\\\"\\r\\n                                            class=\\\"form-control\\\">\\r\\n                                            <option value=\\\"\\\"></option>\\r\\n                                            <option repeat.for='status of is4ua.institutonStatusArray' value=\\\"${status.code}\\\">${status.description}</option>\\r\\n                                        </select>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                                <tr click.trigger=\\\"edit($index, $event)\\\" repeat.for=\\\"inst of dataTable.displayArray\\\">\\r\\n                                    <td data-title=\\\"Name\\\">${inst.name}</td>\\r\\n                                    <td data-title=\\\"Type\\\">${inst.institutionType |\\r\\n                                        lookupValue:is4ua.institutionTypes:\\\"code\\\":\\\"description\\\"}</td>\\r\\n                                    <td data-tile=\\\"Phone\\\">${inst.packageId.packageId |\\r\\n                                        lookupValue:people.packageArray:\\\"_id\\\":\\\"name\\\"}</td>\\r\\n                                    <td data-title=\\\"Status\\\">${inst.institutionStatus |\\r\\n                                        lookupValue:is4ua.institutonStatusArray:\\\"code\\\":\\\"description\\\"}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t<h4 class=\\\"topMargin\\\"><strong>Request Details</strong></h4>\\r\\n\\t\\t\\t<div class=\\\"panel panel-default topMargin\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"panel-body leftJustify\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-horizontal topMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4>Product: ${selectedRequestDetail.productId.name}</h4>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5 leftMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5>Student accounts: <b>${selectedRequestDetail.numberOfStudents}</b></h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-5 leftMargin\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5>Required Date: <b>${selectedRequestDetail.requiredDate |\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdateFormat:config.DATE_FORMAT_TABLE}</b></h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\t\\t\\tshow.bind=\\\"selectedRequestDetail.requestId.customerMessage && selectedRequestDetail.requestId.customerMessage.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"topMargin\\\">Requests from the UCC</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"well\\\" innerhtml.bind=\\\"selectedRequestDetail.requestId.customerMessage\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\t\\t\\tshow.bind=\\\"selectedRequestDetail.requestId.comments && selectedRequestDetail.requestId.comments.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"topMargin\\\">Comments</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div innerhtml.bind=\\\"selectedRequestDetail.requestId.comments\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div show.bind=\\\"products.selectedProduct.productDescription\\\">\\r\\n\\t\\t<h4>Product Information</h4>\\r\\n\\t\\t<div innerhtml.bind=\\\"products.selectedProduct.productDescription\\\"></div>\\r\\n\\t</div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n  <div class=\\\"panel panel-default\\\" style=\\\"margin-top:50px;\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"list-group-item toolbar\\\">\\r\\n            <span click.delegate=\\\"back()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left fa-lg fa-border\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></span>\\r\\n            <span click.delegate=\\\"save()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n              data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Save\\\"><i class=\\\"fa fa-floppy-o fa-lg fa-border\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"leftMargin col-lg-4\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <h4>Institution: ${selectedRequestDetail.requestId.institutionId.name}\\r\\n                </h4>\\r\\n                <h5 class=\\\"topMargin\\\">Product: ${selectedRequestDetail.productId.name}</h5>\\r\\n                <h5 class=\\\"topMargin\\\">Required Date: ${selectedRequestDetail.requiredDate |\\r\\n                  dateFormat:config.DATE_FORMAT_TABLE}</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-lg-6\\\">\\r\\n                <label>Student IDs</label>\\r\\n                <input value.bind=\\\"selectedRequestDetail.assignments[assignmentDetailIndex].studentUserIds\\\"\\r\\n                  id=\\\"proposedIDRange\\\" disabled.bind=\\\"selectedClientIndex === undefined\\\"\\r\\n                  keyup.delegate=\\\"updateClientAssignments()\\\" placeholder=\\\"Proposed IDs\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                  ref=\\\"proposedIDRange\\\" />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-lg-6\\\">\\r\\n                <label>Student Password</label>\\r\\n                <input value.bind=\\\"selectedRequestDetail.assignments[assignmentDetailIndex].studentPassword\\\"\\r\\n                  id=\\\"proposedStudentPassword\\\" disabled.bind=\\\"selectedClientIndex === undefined\\\"\\r\\n                  placeholder=\\\"Proposed Password\\\" class=\\\"form-control\\\" type=\\\"text\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-lg-6\\\">\\r\\n                <label>Faculty IDs</label>\\r\\n                <input value.bind=\\\"selectedRequestDetail.assignments[assignmentDetailIndex].facultyUserIds\\\"\\r\\n                  id=\\\"proposedFacultyIDRange\\\" disabled.bind=\\\"selectedClientIndex === undefined\\\"\\r\\n                  keyup.delegate=\\\"updateClientAssignments()\\\" placeholder=\\\"Proposed Faculty IDs\\\" class=\\\"form-control\\\"\\r\\n                  type=\\\"text\\\" />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-lg-6\\\">\\r\\n                <label>Faculty Password</label>\\r\\n                <input value.bind=\\\"selectedRequestDetail.assignments[assignmentDetailIndex].facultyPassword\\\"\\r\\n                  id=\\\"proposedFacultyPassword\\\" disabled.bind=\\\"selectedClientIndex === undefined\\\"\\r\\n                  placeholder=\\\"Proposed Faculty Password\\\" class=\\\"form-control\\\" type=\\\"text\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row smallLeftMargin topMargin\\\">\\r\\n              <table id=\\\"assignmentTable\\\" class=\\\"table table-striped table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th style=\\\"width:20px;\\\">System</th>\\r\\n                    <th style=\\\"width:20px;\\\">Client</th>\\r\\n                    <th style=\\\"width:30px;\\\">Assigned Date</th>\\r\\n                    <th style=\\\"width:20px;\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr class=\\\"${client.notValid} dropbtn\\\" repeat.for=\\\"client of selectedRequestDetail.assignments\\\">\\r\\n                    <td click.trigger=\\\"selectProposedClient($index, $event)\\\">${client.systemId |\\r\\n                      lookupValue:systems.systemsArray:\\\"_id\\\":\\\"sid\\\"}</td>\\r\\n                    <td click.trigger=\\\"selectProposedClient($index, $event)\\\">${client.client}</td>\\r\\n                    <td click.trigger=\\\"selectProposedClient($index, $event)\\\">${client.assignedDate |\\r\\n                      dateFormat:config.DATE_FORMAT_TABLE}</td>\\r\\n                    <td><span click.trigger=\\\"deleteTable(client, $index)\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip\\r\\n                        data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Delete\\\"><i\\r\\n                          class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i></span></td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"row topMargin\\\">\\r\\n              <fieldset class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                  <editor value.bind=\\\"selectedRequestDetail.techComments\\\" height=\\\"250\\\"></editor>\\r\\n                </div>\\r\\n              </fieldset>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6 col-lg-offset-1\\\">\\r\\n            <div class=\\\"panel panel-default smallLeftMargin smallMarginRight\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-6 pull-right\\\">\\r\\n                    <div class=\\\"col-lg-7\\\" show.bind=\\\"!sandBoxOnly\\\">\\r\\n                      <div class=\\\"checkbox\\\">\\r\\n                        <label>\\r\\n                          <input checked.bind=\\\"unassignedOnly\\\" id=\\\"unassignedCheckBox\\\" type=\\\"checkbox\\\"\\r\\n                            change.trigger=\\\"changeUnassignedOnly()\\\" data-toggle=\\\"checkbox\\\"> Unassigned only\\r\\n                        </label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-5 pull-right\\\">\\r\\n                      <div class=\\\"checkbox\\\">\\r\\n                        <label>\\r\\n                          <input checked.bind=\\\"sandBoxOnly\\\" id=\\\"sandBoxOnlyCheckBox\\\" type=\\\"checkbox\\\"\\r\\n                            data-toggle=\\\"checkbox\\\">\\r\\n                          ${config.SANDBOX_NAME} only\\r\\n                        </label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label col-sm-3 hideOnPhone\\\">Systems</label>\\r\\n                  <select change.delegate=\\\"systemSelected()\\\" class=\\\"form-control\\\" value.bind=\\\"selectedSystemId\\\">\\r\\n                    <option repeat.for='sys of productSystems' model.bind=\\\"sys._id\\\">${sys.sid}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"topMargin smallMarginRight\\\">\\r\\n              <div show.bind=\\\"clientsConfigured\\\">\\r\\n                <table id=\\\"clientTable\\\" class=\\\"table table-striped table-hover\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th class=\\\"col-sm-1\\\">Client</th>\\r\\n                      <th class=\\\"col-sm-1\\\">Status</th>\\r\\n                      <th>Product</th>\\r\\n                      <th class=\\\"col-sm-6\\\">Assignments</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                </table>\\r\\n                <div style=\\\"overflow:auto;height:800px;\\\">\\r\\n                  <table id=\\\"clientTable2\\\" class=\\\"table table-striped table-hover\\\">\\r\\n                    <tbody>\\r\\n                      <tr  class=\\\"${client.clientStatus == config.RETIRED_CLIENT_CODE ? 'success dropbtn' : 'dropbtn'}\\\"\\r\\n                      click.trigger=\\\"selectClient($index, client)\\\"\\r\\n                        repeat.for=\\\"client of selectedSystem.clients\\\">\\r\\n                        <td class=\\\"col-sm-1\\\">${client.client}</br><span class=\\\"smallLeftMargin\\\"\\r\\n                            if.bind=\\\"client.manual\\\"><i class=\\\"fa fa-hand-paper-o\\\" aria-hidden=\\\"true\\\"></i></span></td>\\r\\n                        <td class=\\\"col-sm-1\\\">${client.clientStatus |\\r\\n                          lookupValue:config.CLIENT_STATUSES:\\\"code\\\":\\\"description\\\"}</td>\\r\\n                        <td>${products.selectedProduct.name}</td>\\r\\n                        <td class=\\\"col-sm-6\\\">\\r\\n                          <table class=\\\"col-sm-12\\\">\\r\\n                            <tr repeat.for=\\\"assignment of client.assignments\\\" class=\\\"${assignment.statusCurrent ? '': 'success'}\\\">\\r\\n                              <td>\\r\\n                                <div class=\\\"col-lg-12 list-group-item\\\">\\r\\n                                  <p class=\\\"list-group-item-text\\\">\\r\\n                                    <span>${assignment.institutionId.name}</span></br>\\r\\n                                  </p>\\r\\n                                  <p class=\\\"list-group-item-text\\\">\\r\\n                                    <span>Student IDS:\\r\\n                                      ${assignment.assignment.assignments[0].studentUserIds}</span></br>\\r\\n                                  </p>\\r\\n                                  <p>\\r\\n                                    <b>${assignment.statusCurrent === undefined || assignment.statusCurrent ? '' : 'Retired'}</b>\\r\\n                                  </p>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </td>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div show.bind=\\\"!clientsConfigured && productSystems.length\\\">\\r\\n                <h5>There are no clients configured for this product in ${systems.selectedSystem.sid}\\r\\n                </h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <!-- Session Select -->\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"checkbox leftMargin\\\">\\r\\n          <label>\\r\\n            <input checked.bind=\\\"isCheckedAssigned\\\" change.trigger=\\\"filterInAssigned()\\\" type=\\\"checkbox\\\"> Filter out\\r\\n            Assigned Requests\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div id=\\\"no-more-tables\\\">\\r\\n      <table id=\\\"requestsTable\\\" class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <td colspan='10'>\\r\\n              <compose view=\\\"../../../resources/elements/table-navigation-bar.html\\\"></compose>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td colspan='10'>\\r\\n              <span click.delegate=\\\"refresh()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n                data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Refresh\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n              <span click.delegate=\\\"clearFilters()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\"\\r\\n                data-placement=\\\"bottom\\\" title=\\\"\\\" data-original-title=\\\"Clear Filters\\\">\\r\\n                <i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\" click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'requiredDate'})\\\">Due\\r\\n              </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n            <th class=\\\"col-lg-1\\\" class=\\\"hidden-sm\\\">\\r\\n              <span class=\\\"sortable\\\" click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'createdDate'})\\\">Created\\r\\n              </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n            <th># of Students</th>\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {type: 'custom', sorter: customRequestStatusSorter, propertyName: 'requestStatus'})\\\">Status\\r\\n              </span>\\r\\n              <i class=\\\"fa fa-sort\\\"></i>\\r\\n            </th>\\r\\n\\r\\n            <th class=\\\"col-lg-2\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {propertyName: 'productId.name'})\\\">Product </span>\\r\\n              <span>\\r\\n                <i class=\\\"fa fa-sort\\\"></i>\\r\\n              </span>\\r\\n            </th>\\r\\n\\r\\n            <th class=\\\"col-lg-1\\\">\\r\\n              <span class=\\\"sortable\\\"\\r\\n                click.trigger=\\\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionsSorter, propertyName: 'requestId.institutionId'})\\\">Institution\\r\\n              </span>\\r\\n              <i class=\\\"fa fa-sort\\\"></i>\\r\\n            </th>\\r\\n            <th show.bind=\\\"!isCheckedAssigned\\\">Assignments</th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr class=\\\"hidden-sm hidden-xs\\\">\\r\\n            <th>\\r\\n              <input type=\\\"date\\\" value.bind=\\\"requiredDateFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(requiredDateFilterValue, {type: 'date', filter: 'requiredDate',  collectionProperty: 'requiredDate', compare: 'after'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n            <th>\\r\\n              <input type=\\\"date\\\" value.bind=\\\"createdDateFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\\\"\\r\\n                class=\\\"form-control hidden-sm\\\" />\\r\\n            </th>\\r\\n            <th></th>\\r\\n            <th>\\r\\n              <select value.bind=\\\"requestStatusFilter\\\"\\r\\n                input.delegate=\\\"dataTable.filterList($event, { type: 'value',  filter: 'requestStatusFilter',  collectionProperty: 'requestStatus', displayProperty: 'requestStatus',  compare:'match'} )\\\"\\r\\n                class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option repeat.for=\\\"status of config.REQUEST_STATUS\\\" value=\\\"${status.code}\\\">${status.description}\\r\\n                </option>\\r\\n              </select>\\r\\n            </th>\\r\\n\\r\\n            <th>\\r\\n              <input value.bind=\\\"productFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(productFilterValue, { type: 'custom',  filter: customProductNameFilter,  compare:'custom'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n\\r\\n            <th>\\r\\n              <input value.bind=\\\"institutionFilterValue\\\"\\r\\n                input.delegate=\\\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\\\"\\r\\n                class=\\\"form-control\\\" />\\r\\n            </th>\\r\\n            <th show.bind=\\\"!isCheckedAssigned\\\"></th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n          <tr repeat.for=\\\"request of dataTable.displayArray\\\"\\r\\n            class=\\\"${request.requestStatus | getArrayValue:config.REQUEST_STATUS:'status':-1}\\\">\\r\\n            <td  data-title=\\\"requiredDate\\\">${request.requiredDate |\\r\\n              dateFormat:config.DATE_FORMAT_TABLE}</td>\\r\\n            <td class=\\\"hidden-sm\\\" data-title=\\\"dateCreated\\\">\\r\\n              ${request.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\\r\\n            <td data-title=\\\"Students\\\">${request.numberOfStudents}</td>\\r\\n            <td data-title=\\\"status\\\">${request.requestStatus |\\r\\n              lookupValue:config.REQUEST_STATUS:\\\"code\\\":\\\"description\\\"}</td>\\r\\n           \\r\\n            <td data-title=\\\"product\\\">${request.productId.name}</td>\\r\\n\\r\\n            <td data-title=\\\"Name\\\">\\r\\n              ${request.requestId.institutionId.name}</td>\\r\\n            <td show.bind=\\\"!isCheckedAssigned\\\"\\r\\n              innerhtml.bind=\\\"request.assignments | parseAssignments:systems.systemsArray\\\"></td>\\r\\n            <td>\\r\\n              <span class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                data-original-title=\\\"Edit\\\">\\r\\n                <i class=\\\"fa fa-pencil fa-lg fa-border\\\" click.delegate=\\\"editRequest($index, request)\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <span class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"\\\"\\r\\n                data-original-title=\\\"View Assignment\\\">\\r\\n                <i class=\\\"fa fa-eye fa-lg fa-border\\\" click.delegate=\\\"viewAssignment($index, request)\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i>\\r\\n              </span>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr if.bind=\\\"dataTable.displayArray.length > 20\\\">\\r\\n            <td colspan='10'>\\r\\n              <compose view=\\\"../../../resources/elements/table-navigation-bar.html\\\"></compose>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t<div class=\\\"panel panel-default\\\" style=\\\"margin-top:50px;\\\">\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"fluid-container\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Buttons -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"toolbar list-group-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span click.delegate=\\\"backView()\\\" class=\\\"smallMarginRight\\\" bootstrap-tooltip data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\"\\r\\n\\t\\t\\t\\t\\t\\t title=\\\"\\\" data-original-title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left fa-lg fa-border\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<compose view=\\\"./requestDetails.html\\\"></compose>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<compose view=\\\"./assignmentDetails.html\\\"></compose> \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div show.bind=\\\"dataTable.displayArray && dataTable.displayArray.length || initialLoaded\\\" class=\\\"panel panel-default rightMargin leftMargin\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n \\r\\n    \\r\\n    </div>\\r\\n\\r\\n      <div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <compose view=\\\"./requestsTable.html\\\"></compose>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n  </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <span id=\\\"loading\\\">\\r\\n        <ul class=\\\"bokeh\\\">\\r\\n            <li></li>\\r\\n            <li></li>\\r\\n            <li></li>\\r\\n        </ul>\\r\\n    </span>\\r\\n\\r\\n    <div show.bind=\\\"requestSelected == 'table'\\\">\\r\\n        <compose view=\\\"./components/viewRequestsTable.html\\\"></compose>\\r\\n    </div>\\r\\n    <div show.bind=\\\"requestSelected == 'edit'\\\">\\r\\n        <compose view=\\\"./components/editRequestsForm.html\\\"></compose>\\r\\n    </div>\\r\\n    <div show.bind=\\\"requestSelected == 'view'\\\">\\r\\n        <compose view=\\\"./components/viewAssignmentForm.html\\\"></compose>\\r\\n    </div>\\r\\n\\r\\n</template>\";\n// Exports\nexport default code;"],"names":[],"sourceRoot":""}