define('app',['exports', 'aurelia-framework', './config/routerConfig', './resources/data/dataServices'], function (exports, _aureliaFramework, _routerConfig, _dataServices) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.App = undefined;

  var _routerConfig2 = _interopRequireDefault(_routerConfig);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var App = exports.App = (_dec = (0, _aureliaFramework.inject)(_routerConfig2.default, _dataServices.DataServices), _dec(_class = function () {
    function App(appRouterConfig, data) {
      _classCallCheck(this, App);

      this.appRouterConfig = appRouterConfig;
      this.data = data;
      this.message = 'Hello World!';
    }

    App.prototype.activate = function activate() {
      this.appRouterConfig.configure();
    };

    return App;
  }()) || _class);
});
define('environment',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    debug: true,
    testing: true
  };
});
define('main',['exports', './environment', 'regenerator-runtime'], function (exports, _environment, _regeneratorRuntime) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.configure = configure;

  var _environment2 = _interopRequireDefault(_environment);

  var _regeneratorRuntime2 = _interopRequireDefault(_regeneratorRuntime);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  window.regeneratorRuntime = _regeneratorRuntime2.default;

  Promise.config({
    longStackTraces: false,
    warnings: {
      wForgottenReturn: false
    }
  });

  function configure(aurelia) {
    aurelia.use.standardConfiguration().globalResources("aurelia-mask").plugin("aurelia-dialog").plugin("aurelia-chart").plugin('aurelia-notification', function (config) {
      config.configure({
        translate: false,
        notifications: {
          'success': 'humane-libnotify-success',
          'error': 'humane-libnotify-error',
          'info': 'humane-libnotify-info'
        }
      });
    }).feature('resources');

    if (_environment2.default.debug) {
      aurelia.use.developmentLogging();
    }

    if (_environment2.default.testing) {
      aurelia.use.plugin('aurelia-testing');
    }

    aurelia.start().then(function () {
      return aurelia.setRoot();
    });
  }
});
define('config/appConfig',['exports', 'aurelia-framework', 'aurelia-http-client'], function (exports, _aureliaFramework, _aureliaHttpClient) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.AppConfig = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var AppConfig = exports.AppConfig = (_dec = (0, _aureliaFramework.inject)(_aureliaHttpClient.HttpClient), _dec(_class = function () {
        function AppConfig(http) {
            _classCallCheck(this, AppConfig);

            this.HOST = location.origin;
            this.DOWNLOAD_URL = this.HOST + '/uploadedFiles';
            this.BASE_URL = this.HOST + "/api/";
            this.IMG_DOWNLOAD_URL = this.HOST + '/img/';
            this.HELPTICKET_FILE_DOWNLOAD_URL = this.HOST + "/uploadedFiles/helpTickets";
            this.PRODUCT_FILE_DOWNLOAD_URL = this.HOST + "/uploadedFiles/productFiles";
            this.DOWNLOAD_FILE_DOWNLOAD_URL = this.HOST + '/uploadedFiles/downloads';
            this.DOCUMENT_FILE_DOWNLOAD_URL = this.HOST + '/uploadedFiles/documents';
            this.DOCUMENT_FILE_CURRICULUM_URL = this.HOST + '/uploadedFiles/curriculum';
            this.SITE_FILE_DOWNLOAD_URL = this.HOST + '/uploadedFiles/site/';
            this.PERSON_IMAGE_DOWNLOAD_URL = this.HOST + '/uploadedFiles/peopleImages';
            this.INSTITUTIONS_ACTIVE = '01';
            this.ACTIVE_PERSON = "01";
            this.INACTIVE_PERSON = "02";
            this.ROLES = [{ role: 'USER', label: 'User', UCConly: false, authLevel: 2 }, { role: 'PROV', label: "Provisional", UCConly: false, authLevel: 1 }, { role: 'LEGL', label: 'Legal', UCConly: false, authLevel: 2 }, { role: 'BUSI', label: 'Billing', UCConly: false, authLevel: 2 }, { role: 'PRIM', label: 'Primary', UCConly: false, authLevel: 4 }, { role: 'TECH', label: 'Technical', UCConly: false, authLevel: 2 }, { role: 'UCCT', label: 'UCC Technical Staff', UCConly: true, authLevel: 8 }, { role: 'UCCA', label: 'UCC Admin Staff', UCConly: true, authLevel: 6 }, { role: 'UCSA', label: 'UCCSS Admin', UCConly: true, authLevel: 11 }, { role: 'BLOG', label: 'Blog Author', UCConly: false, authLevel: 2 }, { role: "TMAN", label: "Director", UCConly: true, authLevel: 11 }, { role: "EDIR", label: "Executive Director", UCConly: true, authLevel: 11 }, { role: "TDIR", label: "Technical Director", UCConly: true, authLevel: 11 }, { role: "TMGR", label: "Technical Manager", UCConly: true, authLevel: 11 }, { role: "STUT", label: "Student Worker", UCConly: true, authLevel: 8 }, { role: "UAST", label: "UA Staff", UCConly: false, authLevel: 7 }];
            this.UCC_ROLE = 6;
            this.UCC_TECH_ROLE = 8;
            this.UA_ROLE = 7;
            this.USER_ROLE = 4;
            this.PROV_USER = 1;
            this.rowOptions = [5, 10, 15, 20, 50];
            this.defaultPageSize = 20;
            this.systemTypes = ['Switch', 'Router', 'Server', 'Storage', 'Other'];
            this.SESSION_STATUSES = ["Closed", "Active", "Requests", "Next"];
            this.ASSIGNED_REQUEST_CODE = 2;
            this.UNASSIGNED_REQUEST_CODE = 1;
            this.UPDATED_REQUEST_CODE = 3;
            this.CUSTOMER_ACTION_REQUEST_CODE = 4;
            this.CANCELLED_REQUEST_CODE = 5;
            this.PROVISIONAL_REQUEST_CODE = 6;
            this.REPLIED_REQUEST_CODE = 7;
            this.REQUEST_STATUS = [{ code: this.UNASSIGNED_REQUEST_CODE, description: 'Unassigned', status: "" }, { code: this.ASSIGNED_REQUEST_CODE, description: 'Assigned', status: "" }, { code: this.UPDATED_REQUEST_CODE, description: 'Updated', status: "info" }, { code: this.CUSTOMER_ACTION_REQUEST_CODE, description: 'Customer Action', status: "warning" }, { code: this.CANCELLED_REQUEST_CODE, description: 'Cancelled', status: "" }, { code: this.PROVISIONAL_REQUEST_CODE, description: 'Provisional', status: "" }, { code: this.REPLIED_REQUEST_CODE, description: 'Replied', status: "danger" }];
            this.SANDBOX_ID = 'a1a1a1a1a1a1a1a1a1a1a1a1';
            this.ID_WILDCARD = "#";
            this.SANDBOX_NAME = "Trial Client";
            this.FIRST_DEFAULT_ID = 1;
            this.FACULTY_ID_BUFFER = 2;
            this.DEFAULT_FACULTY_IDS = 2;
            this.ASSIGNED_CLIENT_CODE = 4;
            this.UNASSIGNED_CLIENT_CODE = 1;
            this.SHARED_CLIENT_CODE = 2;
            this.REFRESHED_CLIENT_CODE = 3;
            this.SANDBOX_CLIENT_CODE = 5;
            this.CLIENT_STATUSES = [{ code: 1, description: "Unassigned", OKToDelete: true, lock: false }, { code: this.SHARED_CLIENT_CODE, description: "Shared", OKToDelete: false, lock: false }, { code: this.REFRESHED_CLIENT_CODE, description: "Refresh", OKToDelete: true, lock: true }, { code: this.ASSIGNED_CLIENT_CODE, description: "Assigned", OKToDelete: false, lock: true }, { code: this.SANDBOX_CLIENT_CODE, description: "SANDBOX", OKToDelete: false, lock: false }];
            this.HELP_TICKET_OTHER_TYPE = "2";
            this.HELP_TICKET_APP_TYPE = 3;
            this.HELP_TICKET_PASSWORD_RESET_TYPE = "02";
            this.HELP_TICKET_CURRICULUM_TYPE = "01";
            this.HELP_TICKET_PRODUCT_REQUESTS = 0;
            this.HELP_TICKET_CLIENT_REFRESH_TYPE = 5;
            this.HELP_TICKET_LOGON_TYPE = 6;
            this.HELP_TICKET_CLIENT_OTHER_TYPE = 7;
            this.HELP_TICKET_APP_ERROR_TYPE = "1";
            this.HELP_TICKET_APP_LICENSE_TYPE = 9;
            this.HELP_TICKET_APP_OTHER_TYPE = 10;
            this.HELP_TICKET_OTHER_UA_TYPE = 11;
            this.HELP_TICKET_OTHER_UCCSS_TYPE = 12;
            this.HELP_TICKET_OTHER_CURRICULUM_TYPE = 13;
            this.HELP_TICKET_OTHER_TYPE = 99;
            this.HELP_TICKET_PRIORITIES = [{ priority: "Low", message: "Not time sensitive", status: "" }, { priority: "Medium", message: "Time sensitive but doesn't require immediate attention", status: "warning" }, { priority: "Critical", message: "Critical, time sensitive issue", status: "danger" }];
            this.REFRESH_KEYWORDS = ["ERPSIM"];
            this.NEW_HELPTICKET_STATUS = 1;
            this.REVIEW_HELPTICKET_STATUS = 2;
            this.IN_PROCESS_HELPTICKET_STATUS = 3;
            this.CUSTOMER_ACTION_HELPTICKET_STATUS = 4;
            this.REPLIED_HELPTICKET_STATUS = 5;
            this.CLOSED_HELPTICKET_STATUS = 6;
            this.HELP_TICKET_EMAIL_CREATE = 1;
            this.HELP_TICKET_EMAIL_STATUS_CHANGE = 9;
            this.HELP_TICKET_STATUSES = [{
                "code": this.NEW_HELPTICKET_STATUS,
                "description": "New"
            }, {
                "code": this.REVIEW_HELPTICKET_STATUS,
                "description": "Review"
            }, {
                "code": this.IN_PROCESS_HELPTICKET_STATUS,
                "description": "In Process"
            }, {
                "code": this.CUSTOMER_ACTION_HELPTICKET_STATUS,
                "description": "Customer Action"
            }, {
                "code": this.REPLIED_HELPTICKET_STATUS,
                "description": "Replied"
            }, {
                "code": this.CLOSED_HELPTICKET_STATUS,
                "description": "Closed"
            }];
            this.SITE_INFO_TYPES = [{
                'type': 'INFO',
                'description': 'Session Information'
            }, {
                'type': 'NEWS',
                'description': 'UCC and UA News'
            }, {
                'type': 'ILNK',
                'description': 'Useful Links - Useful Info Page'
            }, {
                'type': 'OLNK',
                'description': 'Useful Links - Home Page'
            }, {
                'type': 'SYST',
                'description': 'System Status'
            }, {
                'type': "DLNK",
                'description': 'Useful Information - Home Page'
            }, {
                'type': "ALRT",
                'description': 'Alerts'
            }, {
                'type': "CARO",
                'description': 'Carousel'
            }, {
                'type': "CONT",
                'description': 'Contact Info'
            }];
            this.MESSAGE_TYPES = ['CLIENT_REQUESTS', 'HELP_TICKETS'];

            this.http = http;
        }

        AppConfig.prototype.getConfig = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh) {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(refresh || !this.configArray)) {
                                    _context.next = 2;
                                    break;
                                }

                                return _context.abrupt('return', this.http.createRequest('/config').asGet().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).send().then(function (response) {
                                    if (!response.isSuccess) {
                                        return response;
                                    } else {
                                        _this.configArray = JSON.parse(response.response);
                                        _this.setParameters();
                                    }
                                }).catch(function (e) {
                                    _this.configArray = new Array();
                                    console.log(e);
                                    return { error: true, code: e.statusCode, message: e.statusText };
                                }));

                            case 2:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function getConfig(_x) {
                return _ref.apply(this, arguments);
            }

            return getConfig;
        }();

        AppConfig.prototype.getSessions = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(refresh) {
                var _this2 = this;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!(refresh || !this.SESSION_PARAMS)) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return', this.http.createRequest('/semesterConfig').asGet().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).send().then(function (response) {
                                    if (!response.isSuccess) {
                                        return response;
                                    } else {
                                        _this2.SESSION_PARAMS = JSON.parse(response.response);
                                    }
                                }).catch(function (e) {
                                    _this2.SESSION_PARAMS = new Array();
                                    console.log(e);
                                    return { error: true, code: e.statusCode, message: e.statusText };
                                }));

                            case 2:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getSessions(_x2) {
                return _ref2.apply(this, arguments);
            }

            return getSessions;
        }();

        AppConfig.prototype.setParameters = function setParameters() {
            this.DEFAULT_FACULTY_IDS = parseInt(this.getParameter('DEFAULT_FACULTY_IDS'));
            this.REQUEST_LIMIT = parseInt(this.getParameter('REQUEST_LIMIT'));
            this.REQUEST_LEEWAY = parseInt(this.getParameter('REQUEST_LEEWAY'));
            this.REGULAR_ID_BUFFER = parseInt(this.getParameter('REGULAR_ID_BUFFER'));
            this.REGULAR_ID_ALLOWANCE = parseInt(this.getParameter('REGULAR_ID_ALLOWANCE'));
            this.SANDBOX_ID_BUFFER = parseInt(this.getParameter('SANDBOX_ID_BUFFER'));
            this.SHARED_ID_BUFFER = parseInt(this.getParameter('SHARED_ID_BUFFER'));
            this.SANDBOX_ID_COUNT = parseInt(this.getParameter('SANDBOX_ID_COUNT'));
            this.CLIENT_INTERVAL = parseInt(this.getParameter('CLIENT_INTERVAL'));
            this.DATE_FORMAT_TABLE = this.getParameter('DATE_FORMAT_TABLE');
            this.UCC_HOME = this.getParameter('UCC_HOME');
            this.SANDBOX_USED = this.getParameter('SANDBOX_USED');
            this.HOME_WELCOME = this.getParameter('HOME_WELCOME');
            this.DEFAULT_HOME_IMAGE = this.getParameter('DEFAULT_HOME_IMAGE');
            this.WEATHER_API_KEY = this.getParameter('WEATHER_API_KEY');
            this.UCC_PHONE = this.getParameter('UCC_PHONE');
            this.UCC_EMAIL = this.getParameter('UCC_EMAIL');
            this.UCC_ADMIN_PHONE = this.getParameter('UCC_ADMIN_PHONE');
            this.UCC_ADMIN_EMAIL = this.getParameter('UCC_ADMIN_EMAIL');
            this.UCC_ADDRESS = this.getParameter('UCC_ADDRESS');
            this.SHOW_STAFF_CONTACT = this.getParameter('SHOW_STAFF_CONTACT');
            this.UCC_HEADER_IMAGE = this.getParameter('UCC_HEADER_IMAGE');
            this.CONTACT_CONTENT = this.getParameter('CONTACT_CONTENT');
            this.SEND_EMAILS = this.getParameter('SEND_EMAILS');
            this.TEMP_SCALE = this.getParameter('TEMP_SCALE');
            this.HELP_TICKET_EMAIL_LIST = this.getParameter('HELP_TICKET_EMAIL_LIST');
            this.SESSION_EXPLANATION = this.getParameter('SESSION_EXPLANATION');
            this.SUBMENU_BACKGROUND = this.getParameter('SUBMENU_BACKGROUND');
            this.SUBMENU_COLOR = this.getParameter('SUBMENU_COLOR');
            this.ACTIVE_SUBMENU_COLOR = this.getParameter('ACTIVE_SUBMENU_COLOR');
            this.SUBMENU_BACKGROUND = this.getParameter('SUBMENU_BACKGROUND');
            this.MENU_COLOR = this.getParameter('MENU_COLOR');
            this.MENU_BACKGROUND = this.getParameter('MENU_BACKGROUND');
            this.ACTIVE_MENU_COLOR = this.getParameter('ACTIVE_MENU_COLOR');
            this.MENU_BACKGROUND = this.getParameter('MENU_BACKGROUND');
            this.HOVER_SUBMENU_BACKGROUND = this.getParameter('HOVER_SUBMENU_BACKGROUND');
            this.HOME_PAGE_UCC_TITLE = this.getParameter('HOME_PAGE_UCC_TITLE');
            this.HOME_PAGE_LEFT = this.getParameter('HOME_PAGE_LEFT');
            this.HOME_PAGE_MIDDLE = this.getParameter('HOME_PAGE_MIDDLE');
            this.HOME_PAGE_RIGHT = this.getParameter('HOME_PAGE_RIGHT');
            this.UCC_PARALLAX_LOGO = this.getParameter('UCC_PARALLAX_LOGO');
            this.NAVBAR_LOGO = this.getParameter('NAVBAR_LOGO');
            this.PRODUCT_REQUESTS_EMAIL_LIST = this.getParameter('PRODUCT_REQUESTS_EMAIL_LIST');
            this.BUTTONS_BACKGROUND = this.getParameter('BUTTONS_BACKGROUND');
            this.ACTIVE_REQUEST_OVERLAP = this.getParameter('ACTIVE_REQUEST_OVERLAP');
        };

        AppConfig.prototype.getParameter = function getParameter(parameter) {
            for (var i = 0; i < this.configArray.length; i++) {
                if (this.configArray[i].parameter === parameter) {
                    if (this.configArray[i].type === 'boolean') {
                        return this.configArray[i].value == "true";
                    } else {
                        return this.configArray[i].value;
                    }
                }
            }
            return null;
        };

        return AppConfig;
    }()) || _class);
});
define('config/routerConfig',['exports', 'aurelia-framework', 'aurelia-router'], function (exports, _aureliaFramework, _aureliaRouter) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var _default = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router), _dec(_class = function () {
    function _default(router) {
      _classCallCheck(this, _default);

      this.router = router;
    }

    _default.prototype.configure = function configure() {
      var appRouterConfig = function appRouterConfig(config) {
        config.addPipelineStep('authorize', AuthorizeStep);
        config.map([{
          route: ['', 'home'],
          moduleId: './modules/home/home',
          name: 'Home',
          settings: { auth: false, roles: [] }
        }, {
          route: 'about',
          moduleId: './modules/home/about',
          name: 'About',
          settings: { auth: false, roles: [] }
        }, {
          route: 'register',
          moduleId: './modules/home/register',
          name: 'Register',
          settings: { auth: false, roles: [] }
        }, {
          route: 'user',
          moduleId: './modules/user/user',
          name: 'User',
          settings: { auth: true, roles: [] }
        }, {
          route: 'profile',
          moduleId: './modules/user/profile',
          name: 'Profile',
          settings: { auth: true, roles: [] }
        }, {
          route: 'resetPassword/:id',
          moduleId: './modules/user/resetPassword',
          name: 'ResetPassword',
          settings: { auth: false, roles: [] }
        }, {
          route: 'system',
          moduleId: './modules/admin/system/system',
          name: 'system',
          settings: { auth: true, roles: [] }
        }, {
          route: 'customers',
          moduleId: './modules/admin/Customers/customers',
          name: 'customers',
          settings: { auth: true, roles: [] }
        }, {
          route: 'inventory',
          moduleId: './modules/admin/inventory/editInventory',
          name: 'inventory',
          settings: { auth: true, roles: [] }
        }, {
          route: 'site',
          moduleId: './modules/admin/site/site',
          name: 'site',
          settings: { auth: true, roles: [] }
        }, {
          route: 'documents',
          moduleId: './modules/admin/documents/documents',
          name: 'documents',
          settings: { auth: true, roles: [] }
        }, {
          route: 'notes',
          moduleId: './modules/admin/notes/notes',
          name: 'notes',
          settings: { auth: true, roles: [] }
        }, {
          route: 'facco',
          moduleId: './modules/facco/facco',
          name: 'facco',
          settings: { auth: true, roles: [] }
        }, {
          route: 'support',
          moduleId: './modules/user/support/support',
          name: 'support',
          settings: { auth: true, roles: [] }
        }, {
          route: 'analytics',
          moduleId: './modules/analytics/analytics',
          name: 'analytics',
          settings: { auth: true, roles: [] }
        }, {
          route: 'clientRequests',
          moduleId: './modules/user/requests/clientRequests',
          name: 'clientRequests',
          settings: { auth: true, roles: [] }
        }, {
          route: 'techHt',
          moduleId: './modules/tech/support/support',
          name: 'techHt',
          settings: { auth: true, roles: [] }
        }, {
          route: 'techRq',
          moduleId: './modules/tech/requests/techRequests',
          name: 'techRq',
          settings: { auth: true, roles: [] }
        }, {
          route: 'social',
          moduleId: './modules/social/social',
          name: 'social',
          settings: { auth: true, roles: [] }
        }, {
          route: 'htNote/:id',
          moduleId: './modules/tech/support/support',
          name: 'htNote',
          settings: { auth: true, roles: [] }
        }]);

        config.mapUnknownRoutes('home');
      };
      this.router.configure(appRouterConfig);
    };

    return _default;
  }()) || _class);

  exports.default = _default;

  var AuthorizeStep = function () {
    function AuthorizeStep() {
      _classCallCheck(this, AuthorizeStep);
    }

    AuthorizeStep.prototype.run = function run(navigationInstruction, next) {
      if (navigationInstruction.getAllInstructions().some(function (i) {
        return i.config.settings.auth;
      })) {
        var role = sessionStorage.getItem('role');
        if (!role) {
          return next.cancel(new Redirect('home'));
        }
      }
      return next();
    };

    return AuthorizeStep;
  }();
});
define('resources/index',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.configure = configure;
  function configure(config) {
    config.globalResources(['./editor/editor', './elements/calendar', './elements/tree-node', './elements/submenu', './elements/nav-bar', './elements/rate-it', './elements/loading-indicator', './elements/table-navigation-bar', './elements/flat-picker', './elements/add-systems', './value-converters/info-filter', './value-converters/request-status-class', './value-converters/course-name', './value-converters/session-name', './value-converters/session-type', './value-converters/date-format', './value-converters/gravatar-url', './value-converters/gravatar-url-id', './value-converters/ucc-title', './value-converters/phone-number', './value-converters/lookup-value', './value-converters/sandbox', './value-converters/idsRequested', './value-converters/person-status-button', './value-converters/session-status-button', './value-converters/translate-status', './value-converters/to-uppercase', './value-converters/sort-array', './value-converters/system-list', './value-converters/check-box', './value-converters/activate-button', './value-converters/help-ticket-type', './value-converters/help-ticket-subtypes', './value-converters/session', './value-converters/sort-date-time', './value-converters/file-type', './value-converters/format-digits', './value-converters/format-phone', './value-converters/onoff-switch', './value-converters/get-array-value', './value-converters/help-ticket-statuses', './value-converters/stat-value', './value-converters/filter-clients', './value-converters/overlap', './value-converters/filter-array', './value-converters/filter-sessions']);
  }
});
define('modules/analytics/analytics',['exports', 'aurelia-framework', 'aurelia-router', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Analytics = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Analytics = exports.Analytics = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Analytics(router, config) {
            _classCallCheck(this, Analytics);

            this.title = "Analytics";

            this.router = router;
            this.config = config;
        }

        Analytics.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Analytics.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Analytics.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'clientRequestsAnalytics'],
                moduleId: './clientRequests',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'clientRequests',
                title: 'Client Requests'
            }, {
                route: 'helpTicketAnalytics',
                moduleId: './helpTickets',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'helpTickets',
                title: 'Help Tickets'
            }, {
                route: 'institutions',
                moduleId: './institutions',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'institutions',
                title: 'Institutions'
            }]);

            this.router = router;
        };

        return Analytics;
    }()) || _class);
});
define('modules/analytics/clientRequests',['exports', 'aurelia-framework', 'aurelia-router', '../../resources/dialogs/common-dialogs', '../../resources/utils/dataTable', '../../resources/data/sessions', '../../resources/data/systems', '../../resources/data/products', '../../resources/data/clientRequests', '../../config/appConfig', '../../resources/utils/utils', '../../resources/data/people', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _commonDialogs, _dataTable, _sessions, _systems, _products, _clientRequests, _appConfig, _utils, _people, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ClientRequestAnalytics = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ClientRequestAnalytics = exports.ClientRequestAnalytics = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _commonDialogs.CommonDialogs, _people.People, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _systems.Systems, _clientRequests.ClientRequests), _dec(_class = function () {
        function ClientRequestAnalytics(router, config, dialog, people, datatable, utils, sessions, products, systems, requests) {
            _classCallCheck(this, ClientRequestAnalytics);

            this.chartOptions = { legend: { display: false } };
            this.summerTable = true;
            this.categories = [{
                code: 0,
                description: 'Requests by Institution'
            }, {
                code: 1,
                description: 'Requests by Product'
            }];
            this.backgroundColors = ['#cc3300', '#99e600', '#0099cc', '#ff0066', '#6666ff', '#1a8cff', '#000080', '#66ff99', '#1aff66', '#808000', '#ffff66', '#4d4d00', '#ccffff', '#006666', '#339933', '#b3ffff', '#000099', '#66ff33', '#269900', '#ffff00', '#ffff66', '#9999ff', '#6600cc', '#009933', '', '#0000b3', '#ff0000', '#00004d', '#0000cc', '#ff0000', '#ff0000', '#ffb3b3', '#ffb3b3', '#e63900', '#ffb3b3', '#330d00', '#ffb3b3', '#3333ff', '#0000cc'];
            this.selectedTab = "institution";
            this.institutionTableSelected = true;
            this.productTableSelected = true;

            this.router = router;
            this.config = config;
            this.dialog = dialog;
            this.people = people;
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.sessions = sessions;
            this.products = products;
            this.requests = requests;
            this.systems = systems;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        ClientRequestAnalytics.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        ClientRequestAnalytics.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.sessions.getSessionsArray('?filter=[in]sessionStatus[list]Active:Requests&order=startDate', true), this.people.getInstitutionsArray('?order=name'), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.selectedCategory = this.categories[0];
                                this.selectedSession = this.sessions.sessionsArray[0]._id;
                                this.getInstitutionRequests();
                                this.getProductsRequests();

                            case 7:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        ClientRequestAnalytics.prototype.typeChanged = function typeChanged(category, el) {
            this.selectedCategory = category;
            $('.categoryButtons').css("background-color", "");
            $('.categoryButtons').css("color", "");
            $('.categoryButtons').removeClass('menuButtons');
            if (el) {
                $(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
                $(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);
            }
            switch (category.code) {
                case 0:
                    this.getInstitutionRequests();
                    this.selectedTab = "institution";
                    break;
                case 1:
                    this.getProductsRequests();
                    this.dataTable.updateArray(this.requests.analyticsProductsResultArray);
                    this.selectedTab = "products";
                    break;
            }
        };

        ClientRequestAnalytics.prototype.getSessionData = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.t0 = this.selectedTab;
                                _context2.next = _context2.t0 === 'institution' ? 3 : _context2.t0 === 'products' ? 6 : 9;
                                break;

                            case 3:
                                _context2.next = 5;
                                return this.getInstitutionRequests();

                            case 5:
                                return _context2.abrupt('break', 9);

                            case 6:
                                _context2.next = 8;
                                return this.getProductsRequests();

                            case 8:
                                return _context2.abrupt('break', 9);

                            case 9:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getSessionData() {
                return _ref2.apply(this, arguments);
            }

            return getSessionData;
        }();

        ClientRequestAnalytics.prototype.getInstitutionRequests = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.selectedSession) {
                                    _context3.next = 14;
                                    break;
                                }

                                this.numCols = this.config.REQUEST_STATUS.length + 1;
                                this.sessions.selectSessionById(this.selectedSession);
                                _context3.next = 5;
                                return this.requests.getClientRequestsDetailsArrayAnalytics('?filter=sessionId|eq|' + this.selectedSession);

                            case 5:
                                if (!(this.requests.requestsDetailsArrayAnalytics && this.requests.requestsDetailsArrayAnalytics.length)) {
                                    _context3.next = 14;
                                    break;
                                }

                                _context3.next = 8;
                                return this.requests.groupRequestsByInstitution();

                            case 8:
                                this.totalsInstitutionArray = new Array();
                                this.config.REQUEST_STATUS.forEach(function (item) {
                                    _this.totalsInstitutionArray.push(0);
                                });
                                this.totalsInstitutionArray.push(0);
                                this.requests.analyticsInstitutionResultArray.forEach(function (item) {
                                    _this.totalsInstitutionArray[0] += item['total'];
                                    _this.totalsInstitutionArray[1] += item[1];
                                    _this.totalsInstitutionArray[2] += item[2];
                                    _this.totalsInstitutionArray[3] += item[3];
                                    _this.totalsInstitutionArray[4] += item[4];
                                    _this.totalsInstitutionArray[5] += item[5];
                                    _this.totalsInstitutionArray[6] += item[6];
                                    _this.totalsInstitutionArray[7] += item[7];
                                });

                                this.dataTable.updateArray(this.requests.analyticsInstitutionResultArray);
                                this.institutionChartDataFunction();

                            case 14:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function getInstitutionRequests() {
                return _ref3.apply(this, arguments);
            }

            return getInstitutionRequests;
        }();

        ClientRequestAnalytics.prototype.institutionChartDataFunction = function institutionChartDataFunction() {
            var data = new Array();
            var categories = new Array();

            this.config.REQUEST_STATUS.forEach(function (item) {
                data.push(new Array());
            });

            var sortedArray = this.requests.analyticsInstitutionResultArray.sort(function (a, b) {
                return a['total'] < b['total'] ? -1 : a['total'] > b['total'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                data[0].push(item["1"]);
                data[1].push(item["2"]);
                data[2].push(item["3"]);
                data[3].push(item["4"]);
                data[4].push(item["5"]);
                data[5].push(item["6"]);
                data[6].push(item["7"]);
                categories.push(item.name);
            });

            this.institutionChartData = {
                labels: categories,
                maintainAspectRatio: false,
                datasets: [{
                    label: this.config.REQUEST_STATUS[0].description,
                    data: data[0],
                    backgroundColor: this.backgroundColors[0],
                    hoverBackgroundColor: this.backgroundColors[0],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[1].description,
                    data: data[1],
                    backgroundColor: this.backgroundColors[1],
                    hoverBackgroundColor: this.backgroundColors[1],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[2].description,
                    data: data[2],
                    backgroundColor: this.backgroundColors[2],
                    hoverBackgroundColor: this.backgroundColors[2],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[3].description,
                    data: data[3],
                    backgroundColor: this.backgroundColors[3],
                    hoverBackgroundColor: this.backgroundColors[3],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[4].description,
                    data: data[4],
                    backgroundColor: this.backgroundColors[4],
                    hoverBackgroundColor: this.backgroundColors[4],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[5].description,
                    data: data[5],
                    backgroundColor: this.backgroundColors[5],
                    hoverBackgroundColor: this.backgroundColors[5],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[6].description,
                    data: data[6],
                    backgroundColor: this.backgroundColors[6],
                    hoverBackgroundColor: this.backgroundColors[6],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        ClientRequestAnalytics.prototype.getProductsRequests = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!this.selectedSession) {
                                    _context4.next = 8;
                                    break;
                                }

                                this.numCols = this.config.REQUEST_STATUS.length + 1;
                                this.sessions.selectSessionById(this.selectedSession);
                                _context4.next = 5;
                                return this.requests.getClientRequestsDetailsArrayAnalytics('?filter=sessionId|eq|' + this.selectedSession);

                            case 5:
                                if (this.requests.requestsDetailsArrayAnalytics && this.requests.requestsDetailsArrayAnalytics.length) {
                                    this.requests.groupRequestsByProduct();
                                    this.productChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context4.next = 9;
                                break;

                            case 8:
                                this.displayArray = new Array();

                            case 9:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function getProductsRequests() {
                return _ref4.apply(this, arguments);
            }

            return getProductsRequests;
        }();

        ClientRequestAnalytics.prototype.productChartDataFunction = function productChartDataFunction() {

            var data = new Array();
            var categories = new Array();

            this.config.REQUEST_STATUS.forEach(function (item) {
                data.push(new Array());
            });

            var sortedArray = this.requests.analyticsProductsResultArray.sort(function (a, b) {
                return a['total'] < b['total'] ? -1 : a['total'] > b['total'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                data[0].push(item["1"]);
                data[1].push(item["2"]);
                data[2].push(item["3"]);
                data[3].push(item["4"]);
                data[4].push(item["5"]);
                data[5].push(item["6"]);
                data[6].push(item["7"]);
                categories.push(item.productId.name);
            });

            this.productChartData = {
                labels: categories,

                maintainAspectRatio: false,

                datasets: [{
                    label: this.config.REQUEST_STATUS[0].description,
                    data: data[0],
                    backgroundColor: this.backgroundColors[0],
                    hoverBackgroundColor: this.backgroundColors[0],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[1].description,
                    data: data[1],
                    backgroundColor: this.backgroundColors[1],
                    hoverBackgroundColor: this.backgroundColors[1],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[2].description,
                    data: data[2],
                    backgroundColor: this.backgroundColors[2],
                    hoverBackgroundColor: this.backgroundColors[2],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[3].description,
                    data: data[3],
                    backgroundColor: this.backgroundColors[3],
                    hoverBackgroundColor: this.backgroundColors[3],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[4].description,
                    data: data[4],
                    backgroundColor: this.backgroundColors[4],
                    hoverBackgroundColor: this.backgroundColors[4],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[5].description,
                    data: data[5],
                    backgroundColor: this.backgroundColors[5],
                    hoverBackgroundColor: this.backgroundColors[5],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }, {
                    label: this.config.REQUEST_STATUS[6].description,
                    data: data[6],
                    backgroundColor: this.backgroundColors[6],
                    hoverBackgroundColor: this.backgroundColors[6],
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        ClientRequestAnalytics.prototype.showProductDetail = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(product) {
                var response;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                this.summerTable = !this.summerTable;

                                if (this.summerTable) {
                                    _context5.next = 9;
                                    break;
                                }

                                _context5.next = 4;
                                return this.requests.getClientRequestsDetailsArray('?filter=[and]productId|eq|' + product.productId._id + ':sessionId|eq|' + this.selectedSession, true);

                            case 4:
                                response = _context5.sent;

                                this.dataTable.updateArray(this.requests.requestsDetailsArray);
                                this.selectedProductDetails = product.productId.name;
                                _context5.next = 10;
                                break;

                            case 9:
                                this.getProductsRequests();

                            case 10:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function showProductDetail(_x) {
                return _ref5.apply(this, arguments);
            }

            return showProductDetail;
        }();

        ClientRequestAnalytics.prototype.showInstitutionTable = function showInstitutionTable() {
            this.institutionTableSelected = true;
        };

        ClientRequestAnalytics.prototype.showInstitutionGraph = function showInstitutionGraph() {
            this.institutionTableSelected = false;
        };

        ClientRequestAnalytics.prototype.showProductTable = function showProductTable() {
            this.productTableSelected = true;
        };

        ClientRequestAnalytics.prototype.showProductGraph = function showProductGraph() {
            this.productTableSelected = false;
        };

        ClientRequestAnalytics.prototype.customerActionDialog = function customerActionDialog() {
            var _this2 = this;

            if (this.profileRequest) {
                this.model = 'header';
                this.selectedRequestNo = this.profileRequest.requestId.clientRequestNo;
                this.requestId = this.profileRequest.requestId._id;
                this.course = this.profileRequest.requestId.courseId ? this.profileRequest.requestId.courseId.name : this.config.SANDBOX_NAME;
                this.productName = this.profileRequest.productId.name;
                this.requiredDate = this.profileRequest.requiredDate;
                this.email = this.profileRequest.requestId.personId.email;
                this.hideProfile();
            }

            var subject = "Question about product request " + this.selectedRequestNo;
            var email = { emailBody: "", emailSubject: subject, emailId: this.email };
            return this.dialog.showEmail("Enter Email", email, ['Submit', 'Cancel']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.sendTheEmail(response.output);
                } else {
                    console.log("Cancelled");
                }
            });
        };

        ClientRequestAnalytics.prototype.sendTheEmail = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(email) {
                var date, day, month, year, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!email) {
                                    _context6.next = 10;
                                    break;
                                }

                                date = new Date(this.requiredDate);
                                day = date.getDate();
                                month = date.getMonth() + 1;
                                year = date.getFullYear();

                                this.message = {
                                    reason: 3,
                                    id: this.requestId,
                                    customerMessage: email.email.emailBody,
                                    email: email.email.emailId,
                                    subject: email.email.emailSubject,
                                    clientRequestNo: this.selectedRequestNo,
                                    product: [{ name: this.productName, requiredDate: month + "/" + day + "/" + year }],
                                    session: this.sessions.selectedSession.session + ' ' + this.sessions.selectedSession.year,
                                    course: this.course,
                                    requestStatus: this.config.CUSTOMER_ACTION_REQUEST_CODE,
                                    model: this.model,
                                    audit: {
                                        property: 'Send Message',
                                        eventDate: new Date(),
                                        newValue: email.email.emailBody,
                                        personId: this.userObj._id
                                    }
                                };
                                _context6.next = 8;
                                return this.requests.sendCustomerMessage(this.message);

                            case 8:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The message was sent");
                                }

                            case 10:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function sendTheEmail(_x2) {
                return _ref6.apply(this, arguments);
            }

            return sendTheEmail;
        }();

        ClientRequestAnalytics.prototype.showProfile = function showProfile(request, el) {
            this.profileRequest = request;
            $(".hoverProfile").css("top", el.clientY - 250);
            $(".hoverProfile").css("left", el.clientX - 300);
            $(".hoverProfile").css("display", "block");
        };

        ClientRequestAnalytics.prototype.hideProfile = function hideProfile() {
            $(".hoverProfile").css("display", "none");
        };

        ClientRequestAnalytics.prototype.customProductSorter = function customProductSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['productId']['name'] < b['productId']['name'] ? -1 : a['productId']['name'] > b['productId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ClientRequestAnalytics.prototype.customInstitutionSorter = function customInstitutionSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['name'] < b['name'] ? -1 : a['name'] > b['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ClientRequestAnalytics.prototype.customNameFilterValue = function customNameFilterValue(value, item, context) {
            return item.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        ClientRequestAnalytics.prototype.customProductFilterValue = function customProductFilterValue(value, item, context) {
            return item.productId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        ClientRequestAnalytics.prototype.customPersonSorter = function customPersonSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName'] ? -1 : a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ClientRequestAnalytics.prototype.customInstituteSorter = function customInstituteSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['institutionId']['name'] < b['requestId']['institutionId']['name'] ? -1 : a['requestId']['institutionId']['name'] > b['requestId']['institutionId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ClientRequestAnalytics.prototype.customRequestStatusSorter = function customRequestStatusSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a[sortProperty] < b[sortProperty] ? -1 : a[sortProperty] > b[sortProperty] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ClientRequestAnalytics.prototype.customNameFilter = function customNameFilter(value, item, context) {
            return item.requestId.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        ClientRequestAnalytics.prototype.statusCustomFilter = function statusCustomFilter(value, item, context) {
            if (item.requestStatus == value) return false;
            return true;
        };

        ClientRequestAnalytics.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
            return item.requestId.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        return ClientRequestAnalytics;
    }()) || _class);
});
define('modules/analytics/helpTickets',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../resources/data/helpTickets', '../../config/appConfig', '../../resources/utils/utils', 'moment'], function (exports, _aureliaFramework, _dataTable, _helpTickets, _appConfig, _utils, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.HelpTicketAnalytics = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var HelpTicketAnalytics = exports.HelpTicketAnalytics = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig, _dataTable.DataTable, _utils.Utils, _helpTickets.HelpTickets), _dec(_class = function () {
        function HelpTicketAnalytics(config, datatable, utils, helpTickets) {
            _classCallCheck(this, HelpTicketAnalytics);

            this.chartOptions = { legend: { display: false } };
            this.backgroundColors = ['#cc3300', '#99e600', '#0099cc', '#ff0066', '#6666ff', '#1a8cff', '#000080', '#66ff99', '#1aff66', '#808000', '#ffff66', '#4d4d00', '#ccffff', '#006666', '#339933', '#b3ffff', '#000099', '#66ff33', '#269900', '#ffff00', '#ffff66', '#9999ff', '#6600cc', '#009933', '', '#0000b3', '#ff0000', '#00004d', '#0000cc', '#ff0000', '#ff0000', '#ffb3b3', '#ffb3b3', '#e63900', '#ffb3b3', '#330d00', '#ffb3b3', '#3333ff', '#0000cc'];
            this.categories = [{
                code: 0,
                description: 'Help Tickets By Types'
            }, {
                code: 1,
                description: 'Help Tickets by Curriculum'
            }, {
                code: 2,
                description: 'Help Tickets by Institution'
            }, {
                code: 3,
                description: 'Help Tickets by People'
            }, {
                code: 4,
                description: 'Help Tickets by Status'
            }];
            this.backgroundColors = ['#cc3300', '#99e600', '#0099cc', '#ff0066', '#6666ff', '#006666', '#000080', '#66ff99', '#1aff66', '#808000', '#ffff66', '#4d4d00', '#ccffff', '#006666', '#339933', '#b3ffff', '#000099', '#66ff33', '#269900', '#ffff00', '#ffff66', '#9999ff', '#6600cc', '#009933', '', '#0000b3', '#ff0000', '#00004d', '#0000cc', '#ff0000', '#ff0000', '#ffb3b3', '#ffb3b3', '#e63900', '#ffb3b3', '#330d00', '#ffb3b3', '#3333ff', '#0000cc'];
            this.selectedTab = "types";
            this.typeTableSelected = true;
            this.curriculumtableSelected = true;
            this.institutiontableSelected = true;
            this.peopleTableSelected = true;
            this.statusTableSelected = true;

            this.config = config;
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.helpTickets = helpTickets;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        HelpTicketAnalytics.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        HelpTicketAnalytics.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.helpTickets.getHelpTicketTypes(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.selectedCategory = this.categories[0];
                                this.getTypeHelpTickets();
                                this.getInstitutionHelpTickets();
                                this.getCurriculumHelpTickets();
                                this.getPeopleHelpTickets();
                                this.getStatusHelpTickets();

                            case 9:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        HelpTicketAnalytics.prototype.typeChanged = function typeChanged(category, el) {
            this.selectedCategory = category;
            $('.categoryButtons').css("background-color", "");
            $('.categoryButtons').css("color", "");
            $('.categoryButtons').removeClass('menuButtons');
            if (el) {
                $(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
                $(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);
            }
            switch (category.code) {
                case 0:
                    this.dataTable.updateArray(this.helpTickets.helpTicketTypeArrayAnalytics);
                    this.selectedTab = "types";
                    break;
                case 1:
                    this.selectedTab = "curriculum";
                    this.dataTable.updateArray(this.helpTickets.helpTicketCurriculumArrayAnalytics);
                    break;
                case 2:
                    this.dataTable.updateArray(this.helpTickets.helpTicketInstitutionArrayAnalytics);
                    this.selectedTab = 'institutions';
                    break;
                case 3:
                    this.getPeopleHelpTickets();
                    this.dataTable.updateArray(this.helpTickets.helpTicketPeopleArrayAnalytics);
                    this.selectedTab = 'people';
                    break;
                case 4:
                    this.getStatusHelpTickets();
                    this.dataTable.updateArray(this.helpTickets.helpTicketStatusArrayAnalytics);
                    this.selectedTab = 'status';
                    break;
            }
        };

        HelpTicketAnalytics.prototype.getTypeHelpTickets = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!this.selectedTab) {
                                    _context2.next = 7;
                                    break;
                                }

                                this.numCols = 2;
                                _context2.next = 4;
                                return this.helpTickets.getHelpTicketsArrayAnalytics();

                            case 4:
                                if (this.helpTickets.helpTicketArrayAnalytics && this.helpTickets.helpTicketArrayAnalytics.length) {
                                    this.helpTickets.groupRequestsByType();
                                    this.substituteTypeDescriptions();
                                    this.dataTable.updateArray(this.helpTickets.helpTicketTypeArrayAnalytics);
                                    this.typeChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context2.next = 8;
                                break;

                            case 7:
                                this.displayArray = new Array();

                            case 8:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getTypeHelpTickets() {
                return _ref2.apply(this, arguments);
            }

            return getTypeHelpTickets;
        }();

        HelpTicketAnalytics.prototype.substituteTypeDescriptions = function substituteTypeDescriptions() {
            var _this = this;

            this.helpTickets.helpTicketTypeArrayAnalytics.forEach(function (item, index) {
                for (var i = 0; i < _this.helpTickets.helpTicketTypesArray.length; i++) {
                    for (var j = 0; j < _this.helpTickets.helpTicketTypesArray[i].subtypes.length; j++) {
                        if (_this.helpTickets.helpTicketTypesArray[i].subtypes[j].type == item.helpTicketType) {
                            _this.helpTickets.helpTicketTypeArrayAnalytics[index].description = _this.helpTickets.helpTicketTypesArray[i].subtypes[j].description;
                        }
                    }
                }
            });
        };

        HelpTicketAnalytics.prototype.typeChartDataFunction = function typeChartDataFunction() {

            var data = new Array();
            var categories = new Array();

            var sortedArray = this.helpTickets.helpTicketTypeArrayAnalytics.sort(function (a, b) {
                return a['description'] < b['description'] ? -1 : a['description'] > b['description'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                categories.push(item.description);
                data.push(item.count);
            });

            this.typeChartData = {
                labels: categories,

                datasets: [{
                    data: data,
                    backgroundColor: this.backgroundColors,
                    hoverBackgroundColor: this.backgroundColors,
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        HelpTicketAnalytics.prototype.getCurriculumHelpTickets = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.selectedTab) {
                                    _context3.next = 6;
                                    break;
                                }

                                _context3.next = 3;
                                return this.helpTickets.getHelpTicketsArrayAnalytics();

                            case 3:
                                if (this.helpTickets.helpTicketArrayAnalytics && this.helpTickets.helpTicketArrayAnalytics.length) {
                                    this.helpTickets.groupRequestsByCurriculum();
                                    this.curriculumChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context3.next = 7;
                                break;

                            case 6:
                                this.displayArray = new Array();

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function getCurriculumHelpTickets() {
                return _ref3.apply(this, arguments);
            }

            return getCurriculumHelpTickets;
        }();

        HelpTicketAnalytics.prototype.curriculumChartDataFunction = function curriculumChartDataFunction() {
            var data = new Array();
            var categories = new Array();

            var sortedArray = this.helpTickets.helpTicketCurriculumArrayAnalytics.sort(function (a, b) {
                return a['curriculumTitle'] < b['curriculumTitle'] ? -1 : a['curriculumTitle'] > b['curriculumTitle'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                categories.push(item.curriculumTitle);
                data.push(item.count);
            });

            this.curriculumChartData = {
                labels: categories,
                datasets: [{
                    data: data,
                    backgroundColor: this.backgroundColors,
                    hoverBackgroundColor: this.backgroundColors,
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        HelpTicketAnalytics.prototype.getInstitutionHelpTickets = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!this.selectedTab) {
                                    _context4.next = 6;
                                    break;
                                }

                                _context4.next = 3;
                                return this.helpTickets.getHelpTicketsArrayAnalytics();

                            case 3:
                                if (this.helpTickets.helpTicketArrayAnalytics && this.helpTickets.helpTicketArrayAnalytics.length) {
                                    this.helpTickets.groupHelpTicketsByInstitution();
                                    this.institutionChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context4.next = 7;
                                break;

                            case 6:
                                this.displayArray = new Array();

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function getInstitutionHelpTickets() {
                return _ref4.apply(this, arguments);
            }

            return getInstitutionHelpTickets;
        }();

        HelpTicketAnalytics.prototype.institutionChartDataFunction = function institutionChartDataFunction() {
            var data = new Array();
            var categories = new Array();

            var sortedArray = this.helpTickets.helpTicketInstitutionArrayAnalytics.sort(function (a, b) {
                return a['institution'] < b['institution'] ? -1 : a['institution'] > b['institution'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                categories.push(item.institution);
                data.push(item.count);
            });

            this.institutionChartData = {
                labels: categories,
                datasets: [{
                    data: data,
                    backgroundColor: this.backgroundColors,
                    hoverBackgroundColor: this.backgroundColors,
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        HelpTicketAnalytics.prototype.getPeopleHelpTickets = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.selectedTab) {
                                    _context5.next = 6;
                                    break;
                                }

                                _context5.next = 3;
                                return this.helpTickets.getHelpTicketsArrayAnalytics();

                            case 3:
                                if (this.helpTickets.helpTicketArrayAnalytics && this.helpTickets.helpTicketArrayAnalytics.length) {
                                    this.helpTickets.groupHelpTicketsByPeople();
                                    this.peopleChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context5.next = 7;
                                break;

                            case 6:
                                this.displayArray = new Array();

                            case 7:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function getPeopleHelpTickets() {
                return _ref5.apply(this, arguments);
            }

            return getPeopleHelpTickets;
        }();

        HelpTicketAnalytics.prototype.peopleChartDataFunction = function peopleChartDataFunction() {
            var data = new Array();
            var categories = new Array();

            var sortedArray = this.helpTickets.helpTicketPeopleArrayAnalytics.sort(function (a, b) {
                return a['name'] < b['name'] ? -1 : a['name'] > b['name'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                categories.push(item.name);
                data.push(item.count);
            });

            this.peopleChartData = {
                labels: categories,
                datasets: [{
                    data: data,
                    backgroundColor: this.backgroundColors,
                    hoverBackgroundColor: this.backgroundColors,
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        HelpTicketAnalytics.prototype.getStatusHelpTickets = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!this.selectedTab) {
                                    _context6.next = 6;
                                    break;
                                }

                                _context6.next = 3;
                                return this.helpTickets.getHelpTicketsArrayAnalytics();

                            case 3:
                                if (this.helpTickets.helpTicketArrayAnalytics && this.helpTickets.helpTicketArrayAnalytics.length) {
                                    this.helpTickets.groupHelpTicketsByStatus();
                                    this.substituteStatusDescriptions();
                                    this.statusChartDataFunction();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context6.next = 7;
                                break;

                            case 6:
                                this.displayArray = new Array();

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function getStatusHelpTickets() {
                return _ref6.apply(this, arguments);
            }

            return getStatusHelpTickets;
        }();

        HelpTicketAnalytics.prototype.substituteStatusDescriptions = function substituteStatusDescriptions() {
            var _this2 = this;

            this.helpTickets.helpTicketStatusArrayAnalytics.forEach(function (item, index) {
                for (var i = 0; i < _this2.config.HELP_TICKET_STATUSES.length; i++) {
                    if (_this2.config.HELP_TICKET_STATUSES[i].code == item.helpTicketStatus) {
                        _this2.helpTickets.helpTicketStatusArrayAnalytics[index].helpTicketStatus = _this2.config.HELP_TICKET_STATUSES[i].description;
                    }
                }
            });
        };

        HelpTicketAnalytics.prototype.statusChartDataFunction = function statusChartDataFunction() {
            var data = new Array();
            var categories = new Array();

            var sortedArray = this.helpTickets.helpTicketStatusArrayAnalytics.sort(function (a, b) {
                return a['helpTicketStatus'] < b['helpTicketStatus'] ? -1 : a['helpTicketStatus'] > b['helpTicketStatus'] ? 1 : 0;
            });

            sortedArray.forEach(function (item) {
                categories.push(item.helpTicketStatus);
                data.push(item.count);
            });

            this.statusChartData = {
                labels: categories,
                datasets: [{
                    data: data,
                    backgroundColor: this.backgroundColors,
                    hoverBackgroundColor: this.backgroundColors,
                    hoverBorderWidth: 2,
                    hoverBorderColor: 'lightgrey'
                }]
            };
        };

        HelpTicketAnalytics.prototype.showTypeTable = function showTypeTable() {
            this.typeTableSelected = true;
        };

        HelpTicketAnalytics.prototype.showTypeGraph = function showTypeGraph() {
            this.typeTableSelected = false;
        };

        HelpTicketAnalytics.prototype.showCurriculumTable = function showCurriculumTable() {
            this.curriculumtableSelected = true;
        };

        HelpTicketAnalytics.prototype.showCurriculumGraph = function showCurriculumGraph() {
            this.curriculumtableSelected = false;
        };

        HelpTicketAnalytics.prototype.showInstitutionTable = function showInstitutionTable() {
            this.institutiontableSelected = true;
        };

        HelpTicketAnalytics.prototype.showInstitutionGraph = function showInstitutionGraph() {
            this.institutiontableSelected = false;
        };

        HelpTicketAnalytics.prototype.showPeopleTable = function showPeopleTable() {
            this.peopleTableSelected = true;
        };

        HelpTicketAnalytics.prototype.showPeopleGraph = function showPeopleGraph() {
            this.peopleTableSelected = false;
        };

        HelpTicketAnalytics.prototype.showStatusTable = function showStatusTable() {
            this.statusTableSelected = true;
        };

        HelpTicketAnalytics.prototype.showStatusGraph = function showStatusGraph() {
            this.statusTableSelected = false;
        };

        HelpTicketAnalytics.prototype.customHelpTicketTypeFilter = function customHelpTicketTypeFilter(value, item, context) {
            var foo = value.toUpperCase();
            for (var i = 0; i < context.helpTickets.helpTicketTypesArray.length; i++) {
                for (var j = 0; j < context.helpTickets.helpTicketTypesArray[i].subtypes.length; j++) {
                    if (context.helpTickets.helpTicketTypesArray[i].subtypes[j].type == item.helpTicketType) {
                        return context.helpTickets.helpTicketTypesArray[i].subtypes[j].description.toUpperCase().indexOf(foo) > -1;
                    }
                }
            }
            return false;
        };

        HelpTicketAnalytics.prototype.customProductSorter = function customProductSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['productId']['name'] < b['productId']['name'] ? -1 : a['productId']['name'] > b['productId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        HelpTicketAnalytics.prototype.customInstitutionSorter = function customInstitutionSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['name'] < b['name'] ? -1 : a['name'] > b['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        HelpTicketAnalytics.prototype.customNameFilterValue = function customNameFilterValue(value, item, context) {
            return item.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        HelpTicketAnalytics.prototype.customProductFilterValue = function customProductFilterValue(value, item, context) {
            return item.productId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        return HelpTicketAnalytics;
    }()) || _class);
});
define('modules/analytics/institutions',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../config/appConfig', '../../resources/utils/utils', '../../resources/data/people', '../../resources/data/is4ua', 'node_modules/chart.js/dist/Chart.js'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _people, _is4ua, _Chart) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.Institutions = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var Institutions = exports.Institutions = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _utils.Utils, _people.People, _is4ua.is4ua), _dec(_class = function () {
		function Institutions(datatable, config, utils, people, is4ua) {
			_classCallCheck(this, Institutions);

			this.spinnerHTML = "";
			this.unselectedFields = [{ field: 'address', displayName: 'Address' }, { field: 'postalCode', displayName: 'Postal Code' }, { field: 'dropDate', displayName: 'Drop Date' }, { field: 'joinDate', displayName: 'Join Date' }];
			this.selectedFields = [{ field: 'name', displayName: 'Name' }, { field: 'institutionType', displayName: 'Institution Type' }, { field: 'memberType', displayName: 'Member Type' }, { field: 'highestDegree', displayName: 'Highest Degree' }, { field: 'region', displayName: 'Region' }, { field: 'country', displayName: 'Country' }, { field: 'institutionStatus', displayName: 'Status' }];
			this.fileName = 'institutions.csv';
			this.tableSelected = true;
			this.backgroundColors = ['#cc3300', '#99e600', '#0099cc', '#ff0066', '#6666ff', '#1a8cff', '#000080', '#66ff99', '#1aff66', '#808000', '#ffff66', '#4d4d00', '#ccffff', '#006666', '#339933', '#b3ffff', '#000099', '#66ff33', '#269900', '#ffff00', '#ffff66', '#9999ff', '#6600cc', '#009933', '', '#0000b3', '#ff0000', '#00004d', '#0000cc', '#ff0000', '#ff0000', '#ffb3b3', '#ffb3b3', '#e63900', '#ffb3b3', '#330d00', '#ffb3b3', '#3333ff', '#0000cc'];

			this.dataTable = datatable;
			this.dataTable.initialize(this);
			this.config = config;
			this.utils = utils;
			this.people = people;
			this.is4ua = is4ua;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
			this.DynamicDoughnutData = {};
			this.SimpleLineData = {};
		}

		Institutions.prototype.resetPieData = function resetPieData() {
			this.DynamicDoughnutData = {
				labels: ["Red", "Green", "Yellow"],
				datasets: [{
					data: [300, 50, 100],
					backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56"],
					hoverBackgroundColor: ["#FF6384", "#36A2EB", "#FFCE56"]
				}]
			};
		};

		Institutions.prototype.resetLineData = function resetLineData() {
			this.SimpleLineData = {
				labels: ["January", "February", "March", "April", "May", "June", "July"],
				datasets: [{
					label: "Healthy People",
					backgroundColor: "rgba(220,220,220,0.2)",
					borderColor: "rgba(220,220,220,1)",
					pointColor: "rgba(220,220,220,1)",
					pointStrokeColor: "#fff",
					pointHighlightFill: "#fff",
					pointHighlightStroke: "rgba(220,220,220,1)",
					data: [65, 59, 80, 81, 56, 55, 40]
				}, {
					label: "Ill People",
					backgroundColor: "rgba(151,187,205,0.2)",
					borderColor: "rgba(151,187,205,1)",
					pointColor: "rgba(151,187,205,1)",
					pointStrokeColor: "#fff",
					pointHighlightFill: "#fff",
					pointHighlightStroke: "rgba(151,187,205,1)",
					data: [28, 48, 40, 19, 86, 27, 90]
				}]
			};
		};

		Institutions.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		Institutions.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.people.getInstitutionsArray('?order=name', true), this.is4ua.loadIs4ua()]);

							case 2:
								responses = _context.sent;


								this.config.getConfig(true);
								this.dataTable.updateArray(this.people.institutionsArray);
								this.resetIS4UADataIT();
								this.resetIS4UADataMT();
								this.resetIS4UADataHD();
								this.resetCountryData();
								this.resetRegionData();
								this.resetStatusDataMT();

							case 11:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		Institutions.prototype.refresh = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								_context2.next = 2;
								return this.people.getInstitutionsArray('?order=name', true);

							case 2:
								this.dataTable.updateArray(this.people.institutionsArray);

							case 3:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function refresh() {
				return _ref2.apply(this, arguments);
			}

			return refresh;
		}();

		Institutions.prototype.showTable = function showTable() {
			this.tableSelected = true;
		};

		Institutions.prototype.showGraph = function showGraph() {
			this.tableSelected = false;
		};

		Institutions.prototype.resetIS4UADataIT = function resetIS4UADataIT() {
			var labels = new Array();
			var data = new Array();
			var categories = new Array();
			var index;
			this.is4ua.institutionTypes.forEach(function (item, i) {
				labels.push(item.description);
				categories.push(item.code);
				data.push(0);
			});

			this.people.institutionsArray.forEach(function (item) {
				index = categories.indexOf(item.institutionType);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutData = {
				labels: labels,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.resetIS4UADataHD = function resetIS4UADataHD() {
			var _this = this;

			var labels = new Array();
			var data = new Array();
			var categories = new Array();
			var index;
			var backGroundColors = new Array();
			this.is4ua.highestDegrees.forEach(function (item, i) {
				labels.push(item.description);
				categories.push(item.code);
				data.push(0);
				backGroundColors.push(_this.backgroundColors[i]);
			});

			this.people.institutionsArray.forEach(function (item) {
				index = categories.indexOf(item.highestDegree);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutDataHD = {
				labels: labels,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.resetIS4UADataMT = function resetIS4UADataMT() {
			var _this2 = this;

			var labels = new Array();
			var data = new Array();
			var categories = new Array();
			var index;
			var backGroundColors = new Array();
			this.is4ua.memberTypes.forEach(function (item, i) {
				labels.push(item.description);
				categories.push(item.code);
				data.push(0);
				backGroundColors.push(_this2.backgroundColors[i]);
			});

			this.people.institutionsArray.forEach(function (item) {
				index = categories.indexOf(item.memberType);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutDataMT = {
				labels: labels,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.resetCountryData = function resetCountryData() {
			var data = new Array();
			var categories = new Array();
			var index;
			var backGroundColors = new Array();

			this.people.institutionsArray.forEach(function (item) {
				if (categories.indexOf(item.country) === -1) {
					categories.push(item.country);
					data.push(0);
				}
				index = categories.indexOf(item.country);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutDataCountries = {
				labels: categories,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.resetRegionData = function resetRegionData() {
			var data = new Array();
			var categories = new Array();
			var index;
			var backGroundColors = new Array();

			this.people.institutionsArray.forEach(function (item) {
				if (categories.indexOf(item.region) === -1) {
					categories.push(item.region);
					data.push(0);
				}
				index = categories.indexOf(item.region);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutDataRegions = {
				labels: categories,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.resetStatusDataMT = function resetStatusDataMT() {
			var labels = new Array();
			var data = new Array();
			var categories = new Array();
			var index;
			this.is4ua.institutonStatusArray.forEach(function (item, i) {
				labels.push(item.description);
				categories.push(item.code);
				data.push(0);
			});

			this.people.institutionsArray.forEach(function (item) {
				index = categories.indexOf(item.institutionStatus);
				if (index > -1) data[index]++;
			});

			this.DynamicDoughnutDataStatus = {
				labels: labels,
				datasets: [{
					data: data,
					backgroundColor: this.backgroundColors,
					hoverBackgroundColor: this.backgroundColors
				}]
			};
		};

		Institutions.prototype.export = function _export() {
			this.showExportPanel = !this.showExportPanel;
		};

		Institutions.prototype.selectField = function selectField(index) {
			this.selectedFields.push(this.unselectedFields.splice(index, 1)[0]);
		};

		Institutions.prototype.removeField = function removeField(index) {
			this.unselectedFields.push(this.selectedFields.splice(index, 1)[0]);
		};

		Institutions.prototype.downloadCSV = function downloadCSV() {
			var _this3 = this;

			if (this.selectedFields.length) {
				var exportArray = this.utils.copyArray(this.dataTable.displayArray);
				var csvContent = "";
				var lines = new Array();
				var delimiter = ',';
				var lineDelimiter = '\n';
				var numFields = this.selectedFields.length;
				if (this.substituteDescriptions) exportArray = this.subIs4uaValues(exportArray);
				exportArray.forEach(function (item) {
					var line = "";
					_this3.selectedFields.forEach(function (field, index) {
						line += item[field.field];
						if (index < numFields) {
							line += delimiter;
						}
					});
					lines.push(line);
				});
				csvContent = lines.join(lineDelimiter);
				console.log(csvContent);
				var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
				if (navigator.msSaveBlob) {
					navigator.msSaveBlob(blob, this.fileName);
				} else {
					var link = document.createElement("a");
					if (link.download !== undefined) {
						var url = URL.createObjectURL(blob);
						link.setAttribute("href", url);
						link.setAttribute("download", this.fileName);
						link.style.visibility = 'hidden';
						document.body.appendChild(link);
						link.click();
						document.body.removeChild(link);
					}
				}

				this.showExportPanel = false;
			}
		};

		Institutions.prototype.downloadExcel = function downloadExcel() {
			var _this4 = this;

			if (this.selectedFields.length) {
				var exportArray = this.utils.copyArray(this.dataTable.baseArray);
				var htmlContent = "<table><tr>";
				var numFields = this.selectedFields.length;
				if (this.substituteDescriptions) exportArray = this.subIs4uaValues(exportArray);

				this.selectedFields.forEach(function (item) {
					htmlContent += "<th>" + item.displayName + "</th>";
				});
				htmlContent += "</tr>";

				exportArray.forEach(function (item) {
					var line = "<tr>";
					_this4.selectedFields.forEach(function (field, index) {
						line += "<td>" + item[field.field] + "</td>";
					});
					line += "</tr>";
					htmlContent += line;
				});
				htmlContent += "</table>";
				window.open('data:application/vnd.ms-excel,' + htmlContent);
				this.showExportPanel = false;
			} else {
				this.utils.showNotification("You haven't chosen any fields to include");
			}
		};

		Institutions.prototype.subIs4uaValues = function subIs4uaValues(exportArray) {
			var _this5 = this;

			var institutionType = $.grep(this.selectedFields, function (e) {
				return e.field == 'institutionType';
			});
			var memberType = $.grep(this.selectedFields, function (e) {
				return e.field == 'memberType';
			});
			var highestDegree = $.grep(this.selectedFields, function (e) {
				return e.field == 'highestDegree';
			});

			if (institutionType.length) {
				exportArray.forEach(function (item) {
					var obj = _this5.dataTable.findObj(_this5.is4ua.institutionTypes, 'code', item.institutionType);
					item['institutionType'] = obj ? obj['description'] : null;
				});
			}
			if (memberType.length) {
				exportArray.forEach(function (item) {
					var obj = _this5.dataTable.findObj(_this5.is4ua.memberTypes, 'code', item.memberType);
					item['memberType'] = obj ? obj['description'] : null;
				});
			}
			if (highestDegree.length) {
				exportArray.forEach(function (item) {
					var obj = _this5.dataTable.findObj(_this5.is4ua.highestDegrees, 'code', item.highestDegree);
					item['highestDegree'] = obj ? obj['description'] : null;
				});
			}
			return exportArray;
		};

		Institutions.prototype.cancelDownload = function cancelDownload() {
			this.showExportPanel = false;
		};

		Institutions.prototype.customInstitutionTypeSorter = function customInstitutionTypeSorter(sortProperty, sortDirection, sortArray, context) {
			sortArray.forEach(function (item) {
				var obj = context.dataTable.findObj(context.is4ua.institutionTypes, 'code', item.institutionType);
				item['sortProperty'] = obj ? obj['description'] : null;
			});

			return sortArray.sort(function (a, b) {
				var result = a['sortProperty'] < b['sortProperty'] ? -1 : a['sortProperty'] > b['sortProperty'] ? 1 : 0;
				return result * sortDirection;
			});
		};

		Institutions.prototype.customMemberTypeSorter = function customMemberTypeSorter(sortProperty, sortDirection, sortArray, context) {
			sortArray.forEach(function (item) {
				var obj = context.dataTable.findObj(context.is4ua.memberTypes, 'code', item.memberType);
				item['sortProperty'] = obj ? obj['description'] : null;
			});

			return sortArray.sort(function (a, b) {
				var result = a['sortProperty'] < b['sortProperty'] ? -1 : a['sortProperty'] > b['sortProperty'] ? 1 : 0;
				return result * sortDirection;
			});
		};

		Institutions.prototype.customHighestDegreeSorter = function customHighestDegreeSorter(sortProperty, sortDirection, sortArray, context) {
			sortArray.forEach(function (item) {
				var obj = context.dataTable.findObj(context.is4ua.highestDegrees, 'code', item.highestDegree);
				item['sortProperty'] = obj ? obj['description'] : null;
			});

			return sortArray.sort(function (a, b) {
				var result = a['sortProperty'] < b['sortProperty'] ? -1 : a['sortProperty'] > b['sortProperty'] ? 1 : 0;
				return result * sortDirection;
			});
		};

		return Institutions;
	}()) || _class);
});
define('modules/facco/editPeople',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../config/appConfig', '../../resources/utils/utils', '../../resources/data/people', '../../resources/data/is4ua', '../../resources/dialogs/common-dialogs'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _people, _is4ua, _commonDialogs) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditPeople = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditPeople = exports.EditPeople = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _people.People, _utils.Utils, _is4ua.is4ua, _commonDialogs.CommonDialogs), _dec(_class = function () {
        function EditPeople(dataTable, config, people, utils, is4ua, dialog) {
            _classCallCheck(this, EditPeople);

            this.spinnerHTML = "";

            this.dataTable = dataTable;
            this.dataTable.initialize(this);
            this.config = config;
            this.utils = utils;
            this.people = people;
            this.is4ua = is4ua;
            this.dialog = dialog;
        }

        EditPeople.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        EditPeople.prototype.canActivate = function canActivate() {
            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        };

        EditPeople.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.userObj.institutionId._id + '&order=lastName', true), this.is4ua.loadIs4ua(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.pageSize = this.config.defaultPageSize;
                                this.dataTable.updateArray(this.people.instutionPeopleArray);

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditPeople.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.userObj.institutionId._id + '&order=lastName', true);

                            case 3:
                                this.dataTable.updateArray(this.people.instutionPeopleArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditPeople.prototype.buildAudit = function buildAudit() {
            var _this = this;

            var changes = this.people.isPersonDirty(this.originalPerson);
            changes.forEach(function (item) {
                _this.people.selectedPerson.audit.push({
                    property: item.property,
                    eventDate: new Date(),
                    oldValue: item.oldValue,
                    newValue: item.newValue,
                    personId: _this.userObj._id
                });
            });
        };

        EditPeople.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.buildAudit();
                                _context3.next = 3;
                                return this.people.savePerson();

                            case 3:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    if (this.people.selectedPerson.personStatus === '01') this.sendActivateEmail();
                                    this.people.instutionPeopleArray[this.people.editIndex] = this.utils.copyObject(this.people.selectedPerson);
                                    this.dataTable.updateArray(this.people.instutionPeopleArray);
                                    this.utils.showNotification(serverResponse.firstName + " " + serverResponse.lastName + " was updated");
                                }
                                this.personSelected = false;

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        EditPeople.prototype.sendActivateEmail = function sendActivateEmail() {
            var email = {
                email: this.people.selectedPerson.email,
                name: this.people.selectedPerson.firstName
            };
            this.people.activateAccountEmail(email);
        };

        EditPeople.prototype.updateStatus = function updateStatus(person) {
            this.people.selectedPersonFromId(person._id, 'i');
            this.originalPerson = this.utils.copyObject(this.people.selectedPerson);
            if (this.people.selectedPerson.personStatus === '01') {
                this.people.selectedPerson.personStatus = '02';
            } else {
                this.people.selectedPerson.personStatus = '01';
            }
            this.save();
        };

        EditPeople.prototype.cancel = function cancel() {
            this.people.selectPerson(this.editIndex);
        };

        EditPeople.prototype.back = function back() {
            var _this2 = this;

            if (this.people.isPersonDirty().length) {
                return this.dialog.showMessage("The account has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.personSelected = false;
                    }
                });
            } else {
                this.personSelected = false;
            }
        };

        EditPeople.prototype.customRoleFilter = function customRoleFilter(value, item) {
            var value = value.toUpperCase();
            for (var i = 0; i < item.roles.length; i++) {
                if (item.roles[i].indexOf(value) > -1) return true;
            }
            return false;
        };

        EditPeople.prototype.customStatusFilter = function customStatusFilter(value, item) {
            var value = value.toUpperCase();
            for (var i = 0; i < item.roles.length; i++) {
                if (item.roles[i].indexOf(value) > -1) return true;
            }
            return false;
        };

        return EditPeople;
    }()) || _class);
});
define('modules/facco/facco',['exports', 'aurelia-framework', 'aurelia-router', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.FacCo = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var FacCo = exports.FacCo = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function FacCo(router, config) {
            _classCallCheck(this, FacCo);

            this.title = "Faculty Coordinator";

            this.router = router;
            this.config = config;
        }

        FacCo.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        FacCo.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        FacCo.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'editPeople'],
                moduleId: './editPeople',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editPeople',
                title: 'People'
            }, {
                route: 'viewRequests',
                moduleId: './viewRequests',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'viewRequests',
                title: 'Clients Requests'
            }]);

            this.router = router;
        };

        return FacCo;
    }()) || _class);
});
define('modules/facco/viewRequests',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../resources/data/sessions', '../../resources/data/systems', '../../resources/data/products', '../../resources/data/clientRequests', '../../config/appConfig', '../../resources/utils/utils', '../../resources/data/people'], function (exports, _aureliaFramework, _dataTable, _sessions, _systems, _products, _clientRequests, _appConfig, _utils, _people) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ViewRequests = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ViewRequests = exports.ViewRequests = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig, _people.People, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _systems.Systems, _clientRequests.ClientRequests), _dec(_class = function () {
        function ViewRequests(config, people, datatable, utils, sessions, products, systems, requests) {
            _classCallCheck(this, ViewRequests);

            this.spinnerHTML = "";

            this.config = config;
            this.people = people;
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.sessions = sessions;
            this.products = products;
            this.requests = requests;
            this.systems = systems;
        }

        ViewRequests.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        ViewRequests.prototype.canActivate = function canActivate() {
            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        };

        ViewRequests.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.sessions.getSessionsArray('?filter=[in]sessionStatus[list]Active:Requests&order=startDate', true), this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.userObj.institutionId._id + '&order=lastName'), this.products.getProductsArray('?filter=active|eq|true&order=name'), this.systems.getSystemsArray(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                            case 3:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        ViewRequests.prototype.getRequests = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!this.selectedSession) {
                                    _context2.next = 7;
                                    break;
                                }

                                this.sessions.selectSessionById(this.selectedSession);
                                _context2.next = 4;
                                return this.requests.getClientRequestsDetailFaccoArray(this.selectedSession, this.userObj.institutionId._id);

                            case 4:
                                this.dataTable.updateArray(this.requests.requestsDetailsArray);
                                _context2.next = 8;
                                break;

                            case 7:
                                this.dataTable.updateArray([]);

                            case 8:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getRequests() {
                return _ref2.apply(this, arguments);
            }

            return getRequests;
        }();

        ViewRequests.prototype.refresh = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context3.next = 3;
                                return this.getRequests();

                            case 3:
                                this.spinnerHTML = "";

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function refresh() {
                return _ref3.apply(this, arguments);
            }

            return refresh;
        }();

        ViewRequests.prototype.courseCustomFilter = function courseCustomFilter(value, item, context) {
            if (value == 'Regular' && item.requestId.courseId != context.config.SANDBOX_ID) return true;
            if (value == context.config.SANDBOX_ID && item.requestId.courseId == context.config.SANDBOX_ID) return true;
            return false;
        };

        ViewRequests.prototype.nameCustomFilter = function nameCustomFilter(value, item, context) {
            for (var i = 0; i < context.people.instutionPeopleArray.length; i++) {
                if (item.requestId.personId == context.people.instutionPeopleArray[i]._id) {
                    return context.people.instutionPeopleArray[i].fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        ViewRequests.prototype.customNameSorter = function customNameSorter(sortProperty, sortDirection, sortArray, context) {
            var sortProperty = 'fullName';
            sortArray.forEach(function (item) {
                var obj = context.dataTable.findObj(context.people.instutionPeopleArray, '_id', item.requestId.personId);
                item[sortProperty] = obj ? obj[sortProperty] : null;
            });

            return sortArray.sort(function (a, b) {
                var result = a[sortProperty] < b[sortProperty] ? -1 : a[sortProperty] > b[sortProperty] ? 1 : 0;
                return result * sortDirection;
            });
        };

        ViewRequests.prototype.productSorter = function productSorter(sortProperty, sortDirection, sortArray, context) {
            var sortProperty = 'name';
            sortArray.forEach(function (item) {
                var obj = context.dataTable.findObj(context.products.productsArray, '_id', item.productId);
                item[sortProperty] = obj ? obj[sortProperty] : null;
            });

            return sortArray.sort(function (a, b) {
                var result = a[sortProperty] < b[sortProperty] ? -1 : a[sortProperty] > b[sortProperty] ? 1 : 0;
                return result * sortDirection;
            });
        };

        return ViewRequests;
    }()) || _class);
});
define('modules/home/about',['exports', 'aurelia-framework', 'aurelia-router', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.About = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var About = exports.About = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function About(router, config) {
            _classCallCheck(this, About);

            this.title = "UCC Contact Information";

            this.router = router;
            this.config = config;
        }

        About.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        About.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        About.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'contact'],
                moduleId: './contact',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'contact',
                title: 'Contact Us'
            }, {
                route: 'institutions',
                moduleId: './institutions',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'institutions',
                title: 'Our Customers'
            }, {
                route: 'products',
                moduleId: './products',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'products',
                title: 'Products we support'
            }]);

            this.router = router;
        };

        return About;
    }()) || _class);
});
define('modules/home/contact',['exports', 'aurelia-framework', '../../resources/data/siteInfo', '../../resources/data/people', '../../config/appConfig'], function (exports, _aureliaFramework, _siteInfo, _people, _appConfig) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.Contact = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var Contact = exports.Contact = (_dec = (0, _aureliaFramework.inject)(_siteInfo.SiteInfo, _people.People, _appConfig.AppConfig), _dec(_class = function () {
		function Contact(siteinfo, people, config) {
			_classCallCheck(this, Contact);

			this.siteinfo = siteinfo;
			this.people = people;
			this.config = config;
		}

		Contact.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var _this = this;

				var uccRoles;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								uccRoles = "";

								this.config.ROLES.forEach(function (item) {
									if (item.UCConly) uccRoles += item.role + ":";
								});

								_context.next = 4;
								return this.config.getConfig();

							case 4:
								_context.next = 6;
								return this.people.getUCCStaff(uccRoles);

							case 6:

								this.showPersonalContactInfo = this.config.SHOW_STAFF_CONTACT == 0;

								this.directors = new Array();
								this.staff = new Array();
								this.admin = new Array();
								this.people.uccPeople.forEach(function (item) {
									if (item.roles.indexOf('TMAN') > -1) {
										_this.directors.push({ item: item, role: 'TMAN' });
									} else if (item.roles.indexOf('EDIR') > -1) {
										_this.directors.push({ item: item, role: 'EDIR' });
									} else if (item.roles.indexOf('TDIR') > -1) {
										_this.directors.push({ item: item, role: 'TDIR' });
									} else if (item.roles.indexOf('TMGR') > -1) {
										_this.directors.push({ item: item, role: 'TMGR' });
									} else if (item.roles.indexOf('UCCT') > -1 && item.roles.indexOf('STUT') == -1) {
										_this.staff.push(item);
									} else if (item.roles.indexOf('UCCA') > -1) {
										_this.admin.push(item);
									}
								});

								this.staff = this.staff.sort(function (a, b) {
									return a.lastName > b.lastName;
								});

								this.directors = this.directors.sort(function (a, b) {
									return a.role > b.role;
								});

							case 13:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		return Contact;
	}()) || _class);
});
define('modules/home/home',['exports', 'aurelia-framework', '../../resources/data/siteInfo', '../../resources/data/sessions', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _siteInfo, _sessions, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Home = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Home = exports.Home = (_dec = (0, _aureliaFramework.inject)(_siteInfo.SiteInfo, _sessions.Sessions, _appConfig.AppConfig, _aureliaFramework.TemplatingEngine), _dec(_class = function () {
        function Home(siteinfo, sessions, config, templatingEngine) {
            _classCallCheck(this, Home);

            this.email = '';
            this.password = '';
            this.loginError = '';

            this.sessions = sessions;
            this.siteinfo = siteinfo;
            this.config = config;
            this.config.getConfig(true);
            this.templatingEngine = templatingEngine;
        }

        Home.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var currentDate, options, responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                currentDate = (0, _moment2.default)(new Date()).format("MM-DD-YYYY");
                                options = '?filter=expiredDate|gt|' + currentDate + '&order=sortOrder';
                                _context.next = 4;
                                return Promise.all([this.sessions.getSessionsArray('?order=startDate', true), this.siteinfo.getInfoArray(true, options)]);

                            case 4:
                                responses = _context.sent;

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Home.prototype.attached = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                setTimeout(function () {
                                    setTimeout(function () {
                                        _this.letsEnhance();
                                    }, 100);
                                }, 100);

                            case 1:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function attached() {
                return _ref2.apply(this, arguments);
            }

            return attached;
        }();

        Home.prototype.letsEnhance = function letsEnhance() {
            $("#leftContainer").html(this.config.HOME_PAGE_LEFT);
            var el1 = document.getElementById('leftContainer');

            if (el1) {
                if (!el1.querySelectorAll('.au-target').length) {
                    this.templatingEngine.enhance({ element: el1, bindingContext: this });
                }
            }

            $("#middleContainer").html(this.config.HOME_PAGE_MIDDLE);
            var el2 = document.getElementById('middleContainer');

            if (el2) {
                if (!el2.querySelectorAll('.au-target').length) {
                    this.templatingEngine.enhance({ element: el2, bindingContext: this });
                }
            }

            $("#rightContainer").html(this.config.HOME_PAGE_RIGHT);
            var el3 = document.getElementById('rightContainer');

            if (el3) {
                if (!el3.querySelectorAll('.au-target').length) {
                    this.templatingEngine.enhance({ element: el3, bindingContext: this });
                }
            }
        };

        return Home;
    }()) || _class);
});
define('modules/home/institutions',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../config/appConfig', '../../resources/data/people', '../../resources/data/is4ua'], function (exports, _aureliaFramework, _dataTable, _appConfig, _people, _is4ua) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ViewInstitutions = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ViewInstitutions = exports.ViewInstitutions = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _people.People, _is4ua.is4ua), _dec(_class = function () {
        function ViewInstitutions(datatable, config, people, is4ua) {
            _classCallCheck(this, ViewInstitutions);

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.people = people;
            this.is4ua = is4ua;
        }

        ViewInstitutions.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getInstitutionsArray('?order=name'), this.is4ua.loadIs4ua()]);

                            case 2:
                                responses = _context.sent;


                                this.dataTable.updateArray(this.people.institutionsArray);
                                this.dataTable.numRowsShown = "50";
                                this.dataTable.updateTake();

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        return ViewInstitutions;
    }()) || _class);
});
define('modules/home/products',['exports', 'aurelia-framework', '../../resources/utils/dataTable', '../../config/appConfig', '../../resources/data/products', '../../resources/data/is4ua'], function (exports, _aureliaFramework, _dataTable, _appConfig, _products, _is4ua) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ViewProducts = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ViewProducts = exports.ViewProducts = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _products.Products, _is4ua.is4ua, _appConfig.AppConfig), _dec(_class = function () {
        function ViewProducts(datatable, products, is4ua, config) {
            _classCallCheck(this, ViewProducts);

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.products = products;
            this.is4ua = is4ua;
            this.config = config;
        }

        ViewProducts.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.products.getProductsArray('?filter=active|eq|true&order=name'), this.is4ua.loadIs4ua(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.products.productsArray);
                                this.dataTable.numRowsShown = "50";
                                this.dataTable.updateTake();

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        return ViewProducts;
    }()) || _class);
});
define('modules/home/register',['exports', 'aurelia-framework', 'aurelia-router', '../../resources/utils/utils', '../../resources/data/people', '../../resources/data/is4ua', '../../resources/dialogs/common-dialogs', '../../resources/utils/validation', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _utils, _people, _is4ua, _commonDialogs, _validation, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Register = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var Register = exports.Register = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _people.People, _is4ua.is4ua, _utils.Utils, _appConfig.AppConfig, _commonDialogs.CommonDialogs, _validation2.default), _dec(_class = function () {
    function Register(router, people, is4ua, utils, config, dialog, validation) {
      _classCallCheck(this, Register);

      this.title = "Create a new Account";

      this.router = router;
      this.people = people;
      this.is4ua = is4ua;
      this.utils = utils;
      this.validation = validation;
      this.config = config;
      this.dialog = dialog;
      this.validation.initialize(this);

      this.thresholdLength = 6;
      this.threshold = 3;
    }

    Register.prototype.attached = function attached() {
      this._setUpValidation();
      $('[data-toggle="tooltip"]').tooltip();
    };

    Register.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.people.getInstitutionsArray('?filter=institutionStatus|eq|01&order=name&fields=_id name');

              case 2:
                _context.next = 4;
                return this.is4ua.loadIs4ua();

              case 4:
                this.people.selectPerson();
                this.config.getConfig(true);

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    Register.prototype.checkEmail = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.people.checkEmail();

              case 2:
                if (!_context2.sent) {
                  _context2.next = 7;
                  break;
                }

                this.duplicateAccount = true;
                this.validation.validate(2);
                _context2.next = 9;
                break;

              case 7:
                this.duplicateAccount = false;
                this.validation.makeValid($("#register_email"));

              case 9:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function checkEmail() {
        return _ref2.apply(this, arguments);
      }

      return checkEmail;
    }();

    Register.prototype.checkName = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.people.checkName();

              case 2:
                if (!_context3.sent) {
                  _context3.next = 7;
                  break;
                }

                this.duplicateName = true;
                this.validation.validate(3);
                _context3.next = 9;
                break;

              case 7:
                this.duplicateName = false;
                this.validation.makeValid($("#register_institution"));

              case 9:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function checkName() {
        return _ref3.apply(this, arguments);
      }

      return checkName;
    }();

    Register.prototype.passwordComplexity = function passwordComplexity() {

      var newValue = this.people.selectedPerson.password;

      this.longPassword = newValue.length >= this.thresholdLength;

      var strength = 0;
      strength += /[A-Z]+/.test(newValue) ? 1 : 0;
      strength += /[a-z]+/.test(newValue) ? 1 : 0;
      strength += /[0-9]+/.test(newValue) ? 1 : 0;
      strength += /[\W]+/.test(newValue) ? 1 : 0;

      this.complexPassword = strength >= this.threshold && this.longPassword;
      this.validation.validate(4);
    };

    Register.prototype._setUpValidation = function _setUpValidation() {
      this.validation.addRule(1, "register_firstName", [{ "rule": "required", "message": "First Name is required", "value": "people.selectedPerson.firstName" }]);
      this.validation.addRule(1, "register_lastName", [{ "rule": "required", "message": "Last Name is required", "value": "people.selectedPerson.lastName" }]);
      this.validation.addRule(1, "register_email", [{ "rule": "required", "message": "Email is required", "value": "people.selectedPerson.email" }, { "rule": "custom", "message": "An account with that email exists",
        "valFunction": function valFunction(context) {
          return !context.duplicateAccount;
        } }, { "rule": "custom", "message": "Enter a valid email address",
        "valFunction": function valFunction(context) {
          return context.people.selectedPerson.email.indexOf('@') > -1;
        }
      }]);
      this.validation.addRule(1, "register_phone", [{ "rule": "required", "message": "Phone number is required", "value": "people.selectedPerson.phone" }, { "rule": "length", "message": "Phone number isn't valid", "value": "people.selectedPerson.phone", "ruleValue": 10 }]);
      this.validation.addRule(1, "register_mobile", [{ "rule": "length", "message": "Phone number isn't valid", "value": "people.selectedPerson.mobile", "ruleValue": 10 }]);
      this.validation.addRule(1, "register_institution", [{ "rule": "required", "message": "Institution is required", "value": "people.selectedPerson.institutionId" }, { "rule": "custom", "message": "An account with that name at this institution exists",
        "valFunction": function valFunction(context) {
          return !context.duplicateName;
        } }]);
      this.validation.addRule(1, "register_password", [{ "rule": "required", "message": "Password is required", "value": "people.selectedPerson.password" }]);
      this.validation.addRule(1, "register_password_repeat", [{ "rule": "custom", "message": "Passwords must match",
        "valFunction": function valFunction(context) {
          return context.people.selectedPerson.password === context.password_repeat;
        } }], true);
      this.validation.addRule(2, "register_email", [{ "rule": "custom", "message": "An account with that email exists",
        "valFunction": function valFunction(context) {
          return !context.duplicateAccount;
        } }]);
      this.validation.addRule(3, "register_institution", [{ "rule": "custom", "message": "An account with that name at this institution exists",
        "valFunction": function valFunction(context) {
          return !context.duplicateName;
        } }]);
      this.validation.addRule(4, "register_password", [{ "rule": "custom", "message": "Password should be at least " + this.thresholdLength + " characters long and should contain " + (this.threshold < 4 ? "at least " + this.threshold + " of the following groups:" : "a combination of") + " of the following groups: a combination of lowercase letters, uppercase letters, digits or special characters",
        "valFunction": function valFunction(context) {
          return context.complexPassword;
        } }]);
    };

    Register.prototype.save = function () {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
        var _this = this;

        var response;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!this.validation.validate(1)) {
                  _context4.next = 10;
                  break;
                }

                this.people.selectedPerson.personStatus = this.config.INACTIVE_PERSON;
                _context4.next = 4;
                return this.people.savePerson('register');

              case 4:
                response = _context4.sent;

                if (response.error) {
                  _context4.next = 9;
                  break;
                }

                return _context4.abrupt('return', this.dialog.showMessage("Your account has been created.  Your faculty coordinator must activate the account before you can log on to the UCCSS.", "Account Created", ['OK']).whenClosed(function (response) {
                  _this.sendFacDevEmail();
                }));

              case 9:
                this.utils.showNotification("An error occurred creating the account");

              case 10:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function save() {
        return _ref4.apply(this, arguments);
      }

      return save;
    }();

    Register.prototype.sendFacDevEmail = function sendFacDevEmail() {
      var email = new Object();
      this.people.selectInstitutionByID(this.people.selectedPerson.institutionId);
      email.email = this.people.selectedPerson.email;
      email.institutionId = this.people.selectedPerson.institutionId;
      email.institution = this.people.selectedInstitution.name;
      email.fullName = this.people.selectedPerson.firstName + " " + this.people.selectedPerson.lastName;
      email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";

      this.people.sendNewRegisterEmail(email);
      this.router.navigate("home");
    };

    Register.prototype.back = function back() {
      window.history.back();
    };

    return Register;
  }()) || _class);
});
define('modules/social/editBlog',['exports', 'aurelia-framework', '../../resources/data/social', '../../resources/data/people', '../../config/appConfig', '../../resources/utils/validation', '../../resources/utils/utils'], function (exports, _aureliaFramework, _social, _people, _appConfig, _validation, _utils) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.EditBlogs = undefined;

	var _validation2 = _interopRequireDefault(_validation);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var EditBlogs = exports.EditBlogs = (_dec = (0, _aureliaFramework.inject)(_social.Social, _people.People, _appConfig.AppConfig, _validation2.default, _utils.Utils), _dec(_class = function () {
		function EditBlogs(social, people, config, validation, utils) {
			_classCallCheck(this, EditBlogs);

			this.blogSelected = false;

			this.social = social;
			this.people = people;
			this.config = config;
			this.utils = utils;
			this.validation = validation;
			this.validation.initialize(this);

			this._setupValidation();
		}

		EditBlogs.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		EditBlogs.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.people.getPeopleArray(), this.social.getBlogArray('?order=-dateCreated', true)]);

							case 2:
								responses = _context.sent;

							case 3:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		EditBlogs.prototype.selectBlog = function selectBlog(index) {
			this.social.selectBlog(index);
			this.selectedIndex = index;
			this.blogSelected = true;
		};

		EditBlogs.prototype.toggleActivation = function toggleActivation() {
			this.social.selectedBlog.active = !this.social.selectedBlog.active;
			this.social.saveBlog();
		};

		EditBlogs.prototype.back = function back() {
			this.blogSelected = false;
		};

		EditBlogs.prototype.save = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var serverResponse;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!this.validation.validate(1)) {
									_context2.next = 5;
									break;
								}

								_context2.next = 3;
								return this.social.saveBlog();

							case 3:
								serverResponse = _context2.sent;

								if (serverResponse && !serverResponse.error) {
									this.utils.showNotification("The blog was saved");
								}

							case 5:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function save() {
				return _ref2.apply(this, arguments);
			}

			return save;
		}();

		EditBlogs.prototype.cancel = function cancel() {
			this.social.selectBlog(this.selectedIndex);
		};

		EditBlogs.prototype.delete = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
				var response;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								_context3.next = 2;
								return this.social.deleteBlog();

							case 2:
								response = _context3.sent;

								if (!response.error) {
									this.utils.showNotification("The blog was deleted");
									this.blogSelected = false;
								}

							case 4:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function _delete() {
				return _ref3.apply(this, arguments);
			}

			return _delete;
		}();

		EditBlogs.prototype._setupValidation = function _setupValidation() {
			this.validation.addRule(1, "editTitle", [{ "rule": "required", "message": "Title is required", "value": "social.selectedBlog.title" }]);
			this.validation.addRule(1, "editTeaser", [{ "rule": "required", "message": "Teaser is required", "value": "social.selectedBlog.teaser" }]);
			this.validation.addRule(1, "blogContent", [{ "rule": "required", "message": "Content is required", "value": "social.selectedBlog.text" }]);
		};

		return EditBlogs;
	}()) || _class);
});
define('modules/social/social',['exports', 'aurelia-framework', 'aurelia-router', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Social = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Social = exports.Social = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Social(router, config) {
            _classCallCheck(this, Social);

            this.title = "Social";

            this.router = router;
            this.config = config;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
            this.blogAuthor = this.userObj.roles.indexOf('BLOG') > -1;
            this.uccStaff = this.userObj.roles.indexOf('BLOG') > -1;
        }

        Social.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Social.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Social.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'blogs'],
                moduleId: './viewBlogs',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'blogs',
                title: 'Blogs'
            }, {
                route: 'forums',
                moduleId: './viewForums',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'forums',
                title: 'Forums'
            }, {
                route: 'writeBlog',
                moduleId: './writeBlog',
                settings: { auth: false, roles: [] },
                nav: false,
                name: 'writeBlog',
                title: 'Write Blog'
            }, {
                route: 'editBlog',
                moduleId: './editBlog',
                settings: { auth: false, roles: [] },
                nav: false,
                name: 'editBlog',
                title: 'Edit Blog'
            }]);

            this.router = router;
        };

        return Social;
    }()) || _class);
});
define('modules/social/viewBlogs',['exports', 'aurelia-framework', '../../resources/data/social', '../../config/appConfig'], function (exports, _aureliaFramework, _social, _appConfig) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ViewBlogs = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var ViewBlogs = exports.ViewBlogs = (_dec = (0, _aureliaFramework.inject)(_social.Social, _appConfig.AppConfig), _dec(_class = function () {
		function ViewBlogs(social, config) {
			_classCallCheck(this, ViewBlogs);

			this.blogSelected = false;

			this.social = social;
			this.config = config;
		}

		ViewBlogs.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		ViewBlogs.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.social.getBlogArray('?order=-dateCreated', true)]);

							case 2:
								responses = _context.sent;

							case 3:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		ViewBlogs.prototype.selectBlog = function selectBlog(index) {
			this.selectedIndex = index;
			this.social.blogArray[index].views = this.social.blogArray[index].views ? this.social.blogArray[index].views + 1 : 1;
			this.social.selectBlog(index);
			this.social.updateViews();
			this.blogSelected = true;
		};

		ViewBlogs.prototype.like = function like(index) {
			if (index === 999) index = this.selectedIndex;
			this.social.blogArray[index].likes = this.social.blogArray[index].likes ? this.social.blogArray[index].likes + 1 : 1;
			this.social.selectBlog(index);
			this.social.updateViews();
		};

		ViewBlogs.prototype.back = function back() {
			this.blogSelected = false;
		};

		return ViewBlogs;
	}()) || _class);
});
define('modules/social/viewForums',['exports', 'aurelia-framework', '../../resources/data/social', '../../resources/data/people', '../../config/appConfig', '../../resources/utils/utils'], function (exports, _aureliaFramework, _social, _people, _appConfig, _utils) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ViewForums = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var ViewForums = exports.ViewForums = (_dec = (0, _aureliaFramework.inject)(_social.Social, _people.People, _appConfig.AppConfig, _utils.Utils), _dec(_class = function () {
		function ViewForums(social, people, config, utils) {
			_classCallCheck(this, ViewForums);

			this.forumSelected = false;
			this.openNewForumForm = false;
			this.openNewTopicForm = false;

			this.social = social;
			this.people = people;
			this.config = config;
			this.utils = utils;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		}

		ViewForums.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		ViewForums.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.people.getPeopleArray(), this.social.getForumArray('?order=-dateCreated', true)]);

							case 2:
								responses = _context.sent;

							case 3:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		ViewForums.prototype.selectForum = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(index) {
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								this.selectedIndex = index;
								this.social.selectForum(index);
								_context2.next = 4;
								return this.social.getForumMessages('?filter=discusssionId|eq|' + this.social.selectedForum._id + '&order=-dateCreated', true);

							case 4:
								this.forumSelected = true;

							case 5:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function selectForum(_x) {
				return _ref2.apply(this, arguments);
			}

			return selectForum;
		}();

		ViewForums.prototype.newForum = function newForum() {
			this.social.selectForum();
			this.openNewForumForm = true;
		};

		ViewForums.prototype.saveForum = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
				var response;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								this.social.selectedForum.title = this.title;
								this.social.selectedForum.text = this.text;
								this.social.selectedForum.personId = this.userObj._id;
								_context3.next = 5;
								return this.social.saveForum();

							case 5:
								response = _context3.sent;

								if (!response.error) {
									this.utils.showNotification('The forum was saved');
									this._cleanUp();
								}

							case 7:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function saveForum() {
				return _ref3.apply(this, arguments);
			}

			return saveForum;
		}();

		ViewForums.prototype._cleanUp = function _cleanUp() {
			this.openNewForumForm = false;
			this.openNewTopicForm = false;
		};

		ViewForums.prototype.cancel = function cancel() {
			this.text = "";
			this.title = "";
			this.openNewTopicForm = false;
			this.openMessageForm = false;
		};

		ViewForums.prototype.newForumTopic = function newForumTopic() {
			this.social.selectForumTopic();
			this.openNewTopicForm = true;
			this.openMessageForm = true;
		};

		ViewForums.prototype.saveForumTopic = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
				var response;
				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								if (this.openNewTopicForm) {
									this.social.selectedForumTopic.title = this.FormTopicTitle;
									this.social.selectedForumTopic.text = this.ForumTopicText;
									this.social.selectedForumTopic.personId = this.userObj._id;
									this.social.selectedForumTopic.parentId = this.social.selectedForum._id;
								} else {
									this.social.selectedFormTopic.messages[this.selectedTopicIndex].messages.push();
								}
								_context4.next = 3;
								return this.social.saveForumTopic();

							case 3:
								response = _context4.sent;

								if (!response.error) {
									this.utils.showNotification('The forum was saved');
									this._cleanUp();
								}

							case 5:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function saveForumTopic() {
				return _ref4.apply(this, arguments);
			}

			return saveForumTopic;
		}();

		ViewForums.prototype.respond = function respond(message, index) {
			this.social.selectForumTopic(message, index);
			this.selectedTopicIndex = index;
			this.openMessageForm = true;
			this.openNewTopicForm = false;
		};

		ViewForums.prototype.back = function back() {
			this.forumSelected = false;
			this.openNewTopicForm = false;
		};

		return ViewForums;
	}()) || _class);
});
define('modules/social/writeBlog',['exports', 'aurelia-framework', '../../resources/data/social', '../../resources/data/people', '../../resources/utils/validation', '../../resources/utils/utils'], function (exports, _aureliaFramework, _social, _people, _validation, _utils) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.WriteBlogs = undefined;

	var _validation2 = _interopRequireDefault(_validation);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var WriteBlogs = exports.WriteBlogs = (_dec = (0, _aureliaFramework.inject)(_social.Social, _people.People, _validation2.default, _utils.Utils), _dec(_class = function () {
		function WriteBlogs(social, people, validation, utils) {
			_classCallCheck(this, WriteBlogs);

			this.blogSelected = false;

			this.social = social;
			this.people = people;
			this.validation = validation;
			this.validation.initialize(this);
			this.utils = utils;
			this._setupValidation();

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		}

		WriteBlogs.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		WriteBlogs.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.people.getPeopleArray(), this.social.getBlogArray('?order=-dateCreated', true), this.social.getBlogArray("?filter=personId|eq|" + this.userObj._id + "&order=-dateCreated", true)]);

							case 2:
								responses = _context.sent;

								this.social.selectBlog();

							case 4:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		WriteBlogs.prototype.new = function _new() {
			this.social.selectBlog();
			this.blogSelected = true;
		};

		WriteBlogs.prototype.save = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var serverResponse;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!this.validation.validate(1)) {
									_context2.next = 6;
									break;
								}

								this.social.selectedBlog.personId = this.userObj._id;
								_context2.next = 4;
								return this.social.saveBlog();

							case 4:
								serverResponse = _context2.sent;

								if (serverResponse && !serverResponse.error) {
									this.utils.showNotification("The blog was saved");
								}

							case 6:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function save() {
				return _ref2.apply(this, arguments);
			}

			return save;
		}();

		WriteBlogs.prototype.selectBlog = function selectBlog(index) {
			this.social.selectBlog(index);
			this.blogSelected = true;
		};

		WriteBlogs.prototype.back = function back() {
			this.blogSelected = false;
		};

		WriteBlogs.prototype._setupValidation = function _setupValidation() {
			this.validation.addRule(1, "editTitle", [{ "rule": "required", "message": "Title is required", "value": "social.selectedBlog.title" }]);
			this.validation.addRule(1, "editTeaser", [{ "rule": "required", "message": "Teaser is required", "value": "social.selectedBlog.teaser" }]);
			this.validation.addRule(1, "blogContent", [{ "rule": "required", "message": "Content is required", "value": "social.selectedBlog.text" }]);
		};

		return WriteBlogs;
	}()) || _class);
});
define('modules/user/profile',['exports', 'aurelia-framework', 'aurelia-router', '../../resources/utils/validation', '../../resources/utils/utils', '../../resources/data/is4ua', '../../resources/data/people', '../../resources/dialogs/common-dialogs', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _validation, _utils, _is4ua, _people, _commonDialogs, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Profile = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Profile = exports.Profile = (_dec = (0, _aureliaFramework.inject)(_is4ua.is4ua, _people.People, _aureliaRouter.Router, _utils.Utils, _validation2.default, _commonDialogs.CommonDialogs, _appConfig.AppConfig), _dec(_class = function () {
        function Profile(is4ua, people, router, utils, validation, dialog, config) {
            _classCallCheck(this, Profile);

            this.title = "Profile";

            this.is4ua = is4ua;
            this.people = people;
            this.router = router;
            this.utils = utils;
            this.dialog = dialog;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setupValidation();

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        Profile.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editFirstName", [{ "rule": "required", "message": "First Name is required", "value": "people.selectedPerson.firstName" }]);
            this.validation.addRule(1, "editLastName", [{ "rule": "required", "message": "Last Name is required", "value": "people.selectedPerson.lastName" }]);
            this.validation.addRule(1, "editInstitution", [{ "rule": "required", "message": "Institution is required", "value": "people.selectedPerson.institutionId" }]);
            this.validation.addRule(1, "register_password", [{ "rule": "required", "message": "Password is required", "value": "people.selectedPerson.password" }]);
            this.validation.addRule(1, "register_password_repeat", [{ "rule": "custom", "message": "Passwords must match",
                "valFunction": function valFunction(context) {
                    return context.password === context.password_repeat;
                } }], true);
            this.validation.addRule(4, "register_password", [{ "rule": "custom", "message": "Password should be at least " + this.thresholdLength + " characters long and should contain " + (this.threshold < 4 ? "at least " + this.threshold + " of the following groups:" : "a combination of") + " of the following groups: a combination of lowercase letters, uppercase letters, digits or special characters",
                "valFunction": function valFunction(context) {
                    return context.complexPassword;
                } }]);
        };

        Profile.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        Profile.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getPerson(this.userObj._id), this.people.getInstitutionsArray('?fields=_id name&order=name'), this.is4ua.loadIs4ua()]);

                            case 2:
                                responses = _context.sent;

                                this.config.getConfig(true);
                                this.user = this.people.selectedPerson;
                                if (this.people.selectedPerson.file && this.people.selectedPerson.file.fileName) {
                                    this.personImage = this.people.selectedPerson.file.fileName;
                                }

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Profile.prototype.buildAudit = function buildAudit() {
            var _this = this;

            var changes = this.people.isPersonDirty(this.user);
            changes.forEach(function (item) {
                _this.people.selectedPerson.audit.push({
                    property: item.property,
                    eventDate: new Date(),
                    oldValue: item.oldValue,
                    newValue: item.newValue,
                    personId: JSON.parse(sessionStorage.getItem('user'))._id
                });
            });
        };

        Profile.prototype.save = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var response;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!this.validation.validate(1, this)) {
                                    _context2.next = 17;
                                    break;
                                }

                                if (this.password && this.password.length > 0) {
                                    this.people.selectedPerson.password = this.password;
                                }
                                if (this.people.selectedPerson.roles.indexOf("PROV") > -1) {
                                    this.people.selectedPerson.roles.splice(this.people.selectedPerson.roles.indexOf("PROV"), 1);
                                }
                                this.buildAudit();
                                _context2.next = 6;
                                return this.people.savePerson();

                            case 6:
                                response = _context2.sent;

                                if (response.error) {
                                    _context2.next = 16;
                                    break;
                                }

                                if (!(this.filesToUpload && this.filesToUpload.length > 0)) {
                                    _context2.next = 12;
                                    break;
                                }

                                _context2.next = 11;
                                return this.people.uploadFile(this.filesToUpload);

                            case 11:
                                this.personImage = this.people.selectedPerson._id + this.people.selectedPerson.file.fileName.substring(this.people.selectedPerson.file.fileName.indexOf('.'));

                            case 12:
                                this.utils.showNotification("Your profile has been updated.");
                                this.showPreview = false;
                                _context2.next = 17;
                                break;

                            case 16:
                                this.utils.showNotification("An error occurred updating your profile");

                            case 17:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function save() {
                return _ref2.apply(this, arguments);
            }

            return save;
        }();

        Profile.prototype.changePassword = function changePassword() {
            var _this2 = this;

            var passwords = { password: "", password_repeat: "" };
            return this.dialog.showPassword("Change Password", passwords, ['Submit', 'Cancel']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.savePassword(response.output.password);
                } else {
                    console.log("Cancelled");
                }
            });
        };

        Profile.prototype.savePassword = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(password) {
                var obj, response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                obj = {
                                    password: password
                                };
                                _context3.next = 3;
                                return this.people.updatePassword(obj);

                            case 3:
                                response = _context3.sent;

                                if (!response.error) {
                                    this.utils.showNotification("The password was updated");
                                }

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function savePassword(_x) {
                return _ref3.apply(this, arguments);
            }

            return savePassword;
        }();

        Profile.prototype.cancel = function cancel() {
            this.utils.copyObject(this.users, this.people.selectedPerson);
        };

        Profile.prototype.changeFiles = function changeFiles() {
            if (this.files[0].size > 100000) {
                this.utils.showNotification("That image is too large.  The limit is 100,000 KB");
                return;
            }
            if (!this.people.selectedPerson.file) this.people.selectedPerson.file = new Object();
            this.filesToUpload = new Array();
            this.filesToUpload.push(this.files[0]);
            this.people.selectedPerson.file.fileName = this.filesToUpload[0].name;
            this.previewFile();
        };

        Profile.prototype.previewFile = function previewFile() {
            var preview = this.preview;
            var reader = new FileReader();
            this.showPreview = true;

            reader.onloadend = function () {
                preview.src = reader.result;
            };

            if (this.files[0]) {
                reader.readAsDataURL(this.files[0]);
            } else {
                preview.src = "";
            }
        };

        Profile.prototype.deleteImage = function deleteImage() {
            this.people.selectedPerson.file = new Object();
            this.preview.src = "";
            document.getElementById("fileUpload").value = "";
            this.personImage = undefined;
            this.showPreview = false;
        };

        return Profile;
    }()) || _class);
});
define('modules/user/resetPassword',['exports', 'aurelia-framework', 'aurelia-router', '../../resources/utils/validation', '../../resources/utils/utils', '../../resources/data/people'], function (exports, _aureliaFramework, _aureliaRouter, _validation, _utils, _people) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.ResetPassword = undefined;

	var _validation2 = _interopRequireDefault(_validation);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var ResetPassword = exports.ResetPassword = (_dec = (0, _aureliaFramework.inject)(_people.People, _aureliaRouter.Router, _validation2.default, _utils.Utils), _dec(_class = function () {
		function ResetPassword(people, router, validation, utils) {
			_classCallCheck(this, ResetPassword);

			this.people = people;
			this.router = router;
			this.validation = validation;
			this.validation.initialize(this);
			this._setupValidation();
			this.utils = utils;
			this.thresholdLength = 6;
			this.threshold = 3;
			this.showForm = true;
			this.passwordReset = true;
		}

		ResetPassword.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(params) {
				var validationCode, response;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								if (!params.id) this.router.navigate("home");
								validationCode = atob(params.id).substring(0, 24);
								_context.next = 4;
								return this.people.getPasswordReset(validationCode);

							case 4:
								response = _context.sent;

								if (response.code === 404) {
									this.showForm = false;
								}

							case 6:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate(_x) {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		ResetPassword.prototype.passwordComplexity = function passwordComplexity() {

			var newValue = this.newPassword;

			this.longPassword = newValue.length >= this.thresholdLength;

			var strength = 0;
			strength += /[A-Z]+/.test(newValue) ? 1 : 0;
			strength += /[a-z]+/.test(newValue) ? 1 : 0;
			strength += /[0-9]+/.test(newValue) ? 1 : 0;
			strength += /[\W]+/.test(newValue) ? 1 : 0;

			this.complexPassword = strength >= this.threshold && this.longPassword;
			this.validation.validate(4);
		};

		ResetPassword.prototype.savePassword = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var obj, response;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!this.validation.validate(1)) {
									_context2.next = 6;
									break;
								}

								obj = {
									password: this.newPassword
								};
								_context2.next = 4;
								return this.people.updatePassword(obj);

							case 4:
								response = _context2.sent;

								if (!response.error) {
									this.utils.showNotification("The password was updated");
									this.router.navigate("home");
								}

							case 6:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function savePassword() {
				return _ref2.apply(this, arguments);
			}

			return savePassword;
		}();

		ResetPassword.prototype._setupValidation = function _setupValidation() {
			this.validation.addRule(1, "register_password", [{ "rule": "required", "message": "Password is required", "value": "newPassword" }]);
			this.validation.addRule(1, "register_password_repeat", [{ "rule": "custom", "message": "Passwords must match",
				"valFunction": function valFunction(context) {
					return context.newPassword === context.password_repeat;
				} }], true);
			this.validation.addRule(4, "register_password", [{ "rule": "custom", "message": "Password should be at least " + this.thresholdLength + " characters long and should contain " + (this.threshold < 4 ? "at least " + this.threshold + " of the following groups:" : "a combination of") + " of the following groups: a combination of lowercase letters, uppercase letters, digits or special characters",
				"valFunction": function valFunction(context) {
					return context.complexPassword;
				} }]);
		};

		return ResetPassword;
	}()) || _class);
});
define('modules/user/user',['exports', 'aurelia-framework', 'aurelia-router', '../../resources/utils/utils', '../../config/appConfig', '../../resources/data/siteInfo', '../../resources/data/sessions', '../../resources/data/people', '../../resources/data/helpTickets', '../../resources/data/clientRequests', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _utils, _appConfig, _siteInfo, _sessions, _people, _helpTickets, _clientRequests, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.User = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var User = exports.User = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _utils.Utils, _appConfig.AppConfig, _siteInfo.SiteInfo, _sessions.Sessions, _helpTickets.HelpTickets, _clientRequests.ClientRequests, _people.People), _dec(_class = function () {
        function User(router, utils, config, siteinfo, sessions, helpTickets, requests, people) {
            _classCallCheck(this, User);

            this.router = router;
            this.utils = utils;
            this.config = config;
            this.siteinfo = siteinfo;
            this.sessions = sessions;
            this.helpTickets = helpTickets;
            this.requests = requests;
            this.people = people;
        }

        User.prototype.attached = function attached() {
            $('.carousel').carousel({
                interval: 10000
            });

            this.updateTwitter(document, "script", "twitter-wjs");

            this.alertIndex = this.utils.arrayContainsValue(this.siteinfo.siteArray, "itemType", "ALRT");
            if (!sessionStorage.getItem('alert')) {
                if (this.alertIndex > -1) {
                    this.openAlert(this.siteinfo.siteArray[this.alertIndex]);
                }
            }
        };

        User.prototype.updateTwitter = function updateTwitter(d, s, id) {
            var js,
                fjs = d.getElementsByTagName(s)[0],
                t = window.twttr || {};
            if (d.getElementById(id)) return t;
            js = d.createElement(s);
            js.id = id;
            js.src = "https://platform.twitter.com/widgets.js";
            fjs.parentNode.insertBefore(js, fjs);

            t._e = [];
            t.ready = function (f) {
                t._e.push(f);
            };

            return t;
        };

        User.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.getData();

                            case 2:
                                this.config.getConfig(true);

                                this.helpTicketArray = [{
                                    value: this.helpTickets.newHelpTickets || 0,
                                    color: "#F7464A",
                                    highlight: "#FF5A5E",
                                    label: "New"
                                }, {
                                    value: this.helpTickets.underReviewHelpTickets || 0,
                                    color: "#46BFBD",
                                    highlight: "#5AD3D1",
                                    label: "Under Review"
                                }, {
                                    value: this.helpTickets.customerActionHelpTickets || 0,
                                    color: "#FDB45C",
                                    highlight: "#FFC870",
                                    label: "Customer Action"
                                }];

                                this.clientRequestsArray = [{
                                    value: this.requests.unassignedRequests || 0,
                                    color: "#F7464A",
                                    highlight: "#FF5A5E",
                                    label: "Unassigned"
                                }, {
                                    value: this.requests.updatedRequests || 0,
                                    color: "#46BFBD",
                                    highlight: "#5AD3D1",
                                    label: "Updated"
                                }, {
                                    value: this.requests.customerActionRequests || 0,
                                    color: "#FDB45C",
                                    highlight: "#FFC870",
                                    label: "Customer Action"
                                }];

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        User.prototype.getData = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _this = this;

                var currentDate, options, countOptions, responses, _responses, requestCountArray, weather, weatherObj, _weather, uccweather;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.userObj = JSON.parse(sessionStorage.getItem('user'));
                                currentDate = (0, _moment2.default)(new Date()).format("MM-DD-YYYY");
                                options = '?filter=expiredDate|gt|' + currentDate + '&order=sortOrder';

                                if (!(this.userObj.userRole >= this.config.UCC_ROLE)) {
                                    _context2.next = 14;
                                    break;
                                }

                                countOptions = '';

                                this.countHeader = "Recent Request History";
                                _context2.next = 8;
                                return Promise.all([this.helpTickets.getCurrentCount(), this.requests.getCurrentCount(), this.requests.getClientRequestsDetailsArray('?filter=institutionId|eq|' + this.userObj.institutionId._id, true), this.sessions.getSessionsArray('?order=startDate'), this.siteinfo.getInfoArray(true, options), this.config.getConfig()]);

                            case 8:
                                responses = _context2.sent;

                                this.showRequests = this.requests.updatedRequests + this.requests.unassignedRequests;
                                this.showHelpTickets = this.helpTickets.newHelpTickets;
                                this.showCarousel = this.siteinfo.showCarousel();
                                _context2.next = 22;
                                break;

                            case 14:
                                countOptions = '?filter=institutionId|eq|' + this.userObj.institutionId._id;

                                this.countHeader = "Your Institution's Recent Request History";
                                _context2.next = 18;
                                return Promise.all([this.helpTickets.getCurrentCount('?filter=personId|eq|' + this.userObj._id), this.requests.getCurrentCount('?filter=audit[0].personId|eq|' + this.userObj._id), this.sessions.getSessionsArray('?order=startDate'), this.siteinfo.getInfoArray(true, options), this.config.getConfig()]);

                            case 18:
                                _responses = _context2.sent;

                                this.showRequests = this.requests.customerActionRequests;
                                this.showHelpTickets = this.helpTickets.customerActionHelpTickets;
                                this.showCarousel = this.siteinfo.showCarousel();

                            case 22:
                                this.requestsCount = new Array();
                                this.countLabels = new Array();
                                _context2.next = 26;
                                return this.requests.getSessionCount(this.sessions.sessionsArray, 4, countOptions);

                            case 26:
                                requestCountArray = _context2.sent;

                                if (requestCountArray) {
                                    requestCountArray.forEach(function (item) {
                                        _this.requestsCount.push(item.count);
                                        _this.countLabels.push(item.session);
                                    });
                                }

                                this.temp = undefined;

                                if (sessionStorage.getItem('weather')) {
                                    _context2.next = 41;
                                    break;
                                }

                                if (!this.userObj.postalCode) {
                                    _context2.next = 39;
                                    break;
                                }

                                _context2.next = 33;
                                return this.siteinfo.getWeather(this.userObj.institutionId.postalCode);

                            case 33:
                                weather = _context2.sent;

                                this.temp = parseFloat(weather.main.temp) - 273.15;
                                if (this.config.TEMP_SCALE == 'C') {
                                    this.temp = this.temp.toFixed(1) + '\xB0 C';
                                } else {
                                    this.temp = (parseFloat(this.temp) * 1.8 + 32).toFixed(1) + '\xB0 F';
                                }
                                this.weatherIcon = this.config.IMG_DOWNLOAD_URL + "icons/" + weather.weather[0].icon + ".png";
                                weatherObj = { temp: this.temp, url: this.weatherIcon };

                                sessionStorage.setItem('weather', JSON.stringify(weatherObj));

                            case 39:
                                _context2.next = 44;
                                break;

                            case 41:
                                _weather = JSON.parse(sessionStorage.getItem('weather'));

                                this.temp = _weather.temp;
                                this.weatherIcon = _weather.url;

                            case 44:
                                if (sessionStorage.getItem('uccweather')) {
                                    uccweather = JSON.parse(sessionStorage.getItem('uccweather'));

                                    this.ucctemp = parseFloat(uccweather.temp) - 273.15;
                                    if (this.config.TEMP_SCALE == 'C') {
                                        this.ucctemp = this.ucctemp.toFixed(1) + '\xB0 C';
                                    } else {
                                        this.ucctemp = (parseFloat(this.ucctemp) * 1.8 + 32).toFixed(1) + '\xB0 F';
                                    }
                                    this.uccweatherIcon = this.config.IMG_DOWNLOAD_URL + 'icons/' + uccweather.icon + ".png";
                                    console.log(this.uccweatherIcon);
                                }

                            case 45:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getData() {
                return _ref2.apply(this, arguments);
            }

            return getData;
        }();

        User.prototype.moreInfoExists = function moreInfoExists(item) {
            return item.url && item.url.length > 0;
        };

        return User;
    }()) || _class);
});
define('resources/charts/bar-chart',['exports', './chart-element'], function (exports, _chartElement) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BarChart = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var BarChart = exports.BarChart = (_dec = (0, _chartElement.chartElement)('Bar'), _dec(_class = function BarChart() {
    _classCallCheck(this, BarChart);
  }) || _class);
});
define('resources/charts/chart-data',['exports', 'aurelia-framework'], function (exports, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ChartData = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;

  var ChartData = exports.ChartData = (_dec = (0, _aureliaFramework.noView)(), _dec(_class = (_class2 = function ChartData() {
    _classCallCheck(this, ChartData);

    _initDefineProp(this, 'data', _descriptor, this);

    _initDefineProp(this, 'label', _descriptor2, this);

    _initDefineProp(this, 'height', _descriptor3, this);

    _initDefineProp(this, 'width', _descriptor4, this);

    _initDefineProp(this, 'fillColor', _descriptor5, this);

    _initDefineProp(this, 'strokeColor', _descriptor6, this);

    _initDefineProp(this, 'pointStrokeColor', _descriptor7, this);

    _initDefineProp(this, 'pointHighlightFill', _descriptor8, this);

    _initDefineProp(this, 'pointHighlightStroke', _descriptor9, this);

    _initDefineProp(this, 'highlightFill', _descriptor10, this);

    _initDefineProp(this, 'highlightStroke', _descriptor11, this);
  }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'data', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return [];
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'label', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return '';
    }
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'height', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 150;
    }
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'width', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 300;
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, 'fillColor', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 'rgba(220,220,220,0.2)';
    }
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, 'strokeColor', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 'rgba(220,220,220,1)';
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, 'pointStrokeColor', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return "#fff";
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, 'pointHighlightFill', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return "#fff";
    }
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, 'pointHighlightStroke', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return "rgba(220,220,220,1)";
    }
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, 'highlightFill', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 'rgba(220,220,220,1)';
    }
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, 'highlightStroke', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 'rgba(220,220,220,1)';
    }
  })), _class2)) || _class);
});
define('resources/charts/chart-element',['exports', 'node_modules/chart.js/dist/Chart.js', 'aurelia-framework'], function (exports, _Chart, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.chartElement = chartElement;
  function chartElement(api) {
    return function (target) {
      (0, _aureliaFramework.bindable)('labels')(target);
      (0, _aureliaFramework.children)({ selector: 'chart-data', name: 'datasets' })(target);
      (0, _aureliaFramework.inlineView)('\n    <template>\n      <canvas class="center-block"ref="canvas"></canvas>\n      <div ref="legend" style="font-size:small;"></div>\n      <slot></slot>\n    </template>\n    ')(target);

      target.prototype.bind = function () {
        this.context = this.canvas.getContext('2d');
      };

      target.prototype.attached = function () {
        this.render();
      };

      target.prototype.render = function () {
        if (this.chart) {
          this.chart.destroy();
        }

        if (api === 'Doughnut') {
          var data = this.datasets[0].data;
          this.chart = new _Chart.Chart(this.context).Doughnut(data, {
            animateScale: true,
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\" style=\"list-style: none;\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>;width: 1em;height: 1em;display: inline-block; margin-right: 5px;\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
          });
          var legend = this.chart.generateLegend();
          this.legend.innerHTML = legend;
        } else {
          var _data = {
            labels: this.labels,
            datasets: this.datasets
          };
          this.canvas.width = this.datasets[0].width;
          this.canvas.height = this.datasets[0].height;
          this.chart = new _Chart.Chart(this.context)[api](_data);
        }
      };

      target.prototype.detached = function () {
        if (this.chart) {
          this.chart.destroy();
        }
      };
    };
  }
});
define('resources/charts/doughnut-chart',['exports', './chart-element'], function (exports, _chartElement) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DoughnutChart = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var DoughnutChart = exports.DoughnutChart = (_dec = (0, _chartElement.chartElement)('Doughnut'), _dec(_class = function DoughnutChart() {
    _classCallCheck(this, DoughnutChart);
  }) || _class);
});
define('resources/data/admin',['exports', 'aurelia-framework', './dataServices'], function (exports, _aureliaFramework, _dataServices) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.AdminData = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var AdminData = exports.AdminData = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices), _dec(_class = function () {
		function AdminData(data) {
			_classCallCheck(this, AdminData);

			this.AUTH_SERVICE = "/adminLog/";
			this.LOG_SERVICE = "/log/";
			this.FILES_SERVICE = '/files/';
			this.FOREVER_SERVICE = '/foreverLog/';

			this.data = data;
		}

		AdminData.prototype.getLogs = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(type) {
				var url, response;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								url = void 0;
								_context.t0 = type;
								_context.next = _context.t0 === 'auth' ? 4 : _context.t0 === 'log' ? 6 : _context.t0 === 'forl' ? 8 : _context.t0 === 'fore' ? 10 : _context.t0 === 'foro' ? 12 : 14;
								break;

							case 4:
								url = this.AUTH_SERVICE;
								return _context.abrupt('break', 14);

							case 6:
								url = this.LOG_SERVICE;
								return _context.abrupt('break', 14);

							case 8:
								url = this.FOREVER_SERVICE + 'fileList/f';
								return _context.abrupt('break', 14);

							case 10:
								url = this.FOREVER_SERVICE + 'fileList/e';
								return _context.abrupt('break', 14);

							case 12:
								url = this.FOREVER_SERVICE + 'fileList/o';
								return _context.abrupt('break', 14);

							case 14:
								_context.next = 16;
								return this.data.get(url);

							case 16:
								response = _context.sent;

								if (!response.error) {
									this.logFileArray = response;
								}
								return _context.abrupt('return', response);

							case 19:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function getLogs(_x) {
				return _ref.apply(this, arguments);
			}

			return getLogs;
		}();

		AdminData.prototype.getLogFile = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(fileName, type) {
				var url, response;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!(fileName && type)) {
									_context2.next = 15;
									break;
								}

								url = void 0;
								_context2.t0 = type;
								_context2.next = _context2.t0 === 'auth' ? 5 : _context2.t0 === 'log' ? 7 : _context2.t0 === 'forl' ? 9 : _context2.t0 === 'fore' ? 9 : _context2.t0 === 'foreo' ? 9 : 10;
								break;

							case 5:
								url = this.AUTH_SERVICE;
								return _context2.abrupt('break', 10);

							case 7:
								url = this.LOG_SERVICE;
								return _context2.abrupt('break', 10);

							case 9:
								url = this.FOREVER_SERVICE;

							case 10:
								_context2.next = 12;
								return this.data.get(url + fileName);

							case 12:
								response = _context2.sent;

								if (!response.error) {
									this.logContents = response;
								}
								return _context2.abrupt('return', response);

							case 15:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function getLogFile(_x2, _x3) {
				return _ref2.apply(this, arguments);
			}

			return getLogFile;
		}();

		AdminData.prototype.getAuthLogFile = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(fileName) {
				var response;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								if (!fileName) {
									_context3.next = 6;
									break;
								}

								_context3.next = 3;
								return this.data.get(this.AUTH_SERVICE + fileName);

							case 3:
								response = _context3.sent;

								if (!response.error) {
									this.authLogContents = response;
								}
								return _context3.abrupt('return', response);

							case 6:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function getAuthLogFile(_x4) {
				return _ref3.apply(this, arguments);
			}

			return getAuthLogFile;
		}();

		AdminData.prototype.deleteAuthFiles = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(filesToDelete) {
				var obj, response;
				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								obj = {
									files: filesToDelete
								};
								_context4.next = 3;
								return this.data.saveObject(obj, this.AUTH_SERVICE, "put");

							case 3:
								response = _context4.sent;
								return _context4.abrupt('return', response);

							case 5:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function deleteAuthFiles(_x5) {
				return _ref4.apply(this, arguments);
			}

			return deleteAuthFiles;
		}();

		AdminData.prototype.deleteLogFiles = function () {
			var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(filesToDelete) {
				var obj, response;
				return regeneratorRuntime.wrap(function _callee5$(_context5) {
					while (1) {
						switch (_context5.prev = _context5.next) {
							case 0:
								obj = {
									files: filesToDelete
								};
								_context5.next = 3;
								return this.data.saveObject(obj, this.LOG_SERVICE, "put");

							case 3:
								response = _context5.sent;
								return _context5.abrupt('return', response);

							case 5:
							case 'end':
								return _context5.stop();
						}
					}
				}, _callee5, this);
			}));

			function deleteLogFiles(_x6) {
				return _ref5.apply(this, arguments);
			}

			return deleteLogFiles;
		}();

		AdminData.prototype.getFiles = function () {
			var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
				var response;
				return regeneratorRuntime.wrap(function _callee6$(_context6) {
					while (1) {
						switch (_context6.prev = _context6.next) {
							case 0:
								_context6.next = 2;
								return this.data.get(this.FILES_SERVICE);

							case 2:
								response = _context6.sent;

								if (!response.error) {
									this.parseFileList(response);
								}
								return _context6.abrupt('return', response);

							case 5:
							case 'end':
								return _context6.stop();
						}
					}
				}, _callee6, this);
			}));

			function getFiles() {
				return _ref6.apply(this, arguments);
			}

			return getFiles;
		}();

		AdminData.prototype.parseFileList = function parseFileList(response) {
			var _this = this;

			this.files = response;
			this.filesList = {
				name: "Uploaded Files",
				value: "root",
				file: false,
				children: new Array()
			};
			this.files.forEach(function (item) {
				var parts = item.split('\\');
				var index = _this.categoryIndex(parts[2]);
				if (index === -1) {
					_this.filesList.children.push({
						name: parts[2],
						value: parts[2],
						file: false,
						children: []
					});
				}
			});
			for (var index = 0; index < this.files.length; index++) {
				var parts = this.files[index].split('\\');
				var fileListindex = this.categoryIndex(parts[2]);
				if (parts.length === 4) {
					index = this.processShallowTree(fileListindex, index);
				} else {
					index = this.processDeepTree(fileListindex, index);
				}
			}
		};

		AdminData.prototype.processShallowTree = function processShallowTree(fileListindex, index) {
			var parts = this.files[index].split('\\');
			var thisCategory = parts[2];
			var fileName = parts[3];
			do {
				this.filesList.children[fileListindex].children.push({
					name: fileName,
					value: thisCategory + '-' + fileName,
					file: true,
					path: this.files[index]
				});
				index++;
				parts = this.files[index].split('\\');
				fileName = parts[3];
			} while (thisCategory === parts[2]);

			return --index;
		};

		AdminData.prototype.processDeepTree = function processDeepTree(fileListindex, index) {
			var parts = this.files[index].split('\\');
			var thisCategory = parts[2];
			var thisSubCategory = parts[3];
			var fileName = parts[4];
			this.filesList.children[fileListindex].children.push({
				name: thisSubCategory,
				value: thisCategory + '-' + thisSubCategory,
				file: false,
				children: [{
					name: fileName,
					value: thisSubCategory + '-' + fileName,
					file: true,
					path: this.files[index]
				}]
			});
			index++;
			if (index < this.files.length) {
				parts = this.files[index].split('\\');
				var childIndex = this.filesList.children[fileListindex].children.length - 1;
				while (thisSubCategory === parts[3]) {
					fileName = parts[4];
					this.filesList.children[fileListindex].children[childIndex].children.push({
						name: fileName,
						value: thisSubCategory + '-' + fileName,
						file: true,
						path: this.files[index]
					});
					index++;
					if (index < this.files.length) {
						parts = this.files[index].split('\\');
					} else {
						break;
					}
				}
			}
			return --index;
		};

		AdminData.prototype.categoryIndex = function categoryIndex(category) {
			for (var i = 0; i < this.filesList.children.length; i++) {
				if (this.filesList.children[i].name === category) return i;
			}
			return -1;
		};

		AdminData.prototype.deleteFile = function () {
			var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(file) {
				var response;
				return regeneratorRuntime.wrap(function _callee7$(_context7) {
					while (1) {
						switch (_context7.prev = _context7.next) {
							case 0:
								if (!file) {
									_context7.next = 6;
									break;
								}

								file = file.split('\\').join('$@');
								_context7.next = 4;
								return this.data.deleteObject(this.FILES_SERVICE + "/" + file);

							case 4:
								response = _context7.sent;
								return _context7.abrupt('return', response);

							case 6:
							case 'end':
								return _context7.stop();
						}
					}
				}, _callee7, this);
			}));

			function deleteFile(_x7) {
				return _ref7.apply(this, arguments);
			}

			return deleteFile;
		}();

		return AdminData;
	}()) || _class);
});
define('resources/data/auth',['exports', 'aurelia-framework', 'aurelia-event-aggregator', './dataServices', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaEventAggregator, _dataServices, _appConfig) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.Auth = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var Auth = exports.Auth = (_dec = (0, _aureliaFramework.inject)(_aureliaEventAggregator.EventAggregator, _dataServices.DataServices, _appConfig.AppConfig), _dec(_class = function () {
		function Auth(eventAggregator, data, config) {
			_classCallCheck(this, Auth);

			this.loginUrl = 'users/login';
			this.logoutUrl = 'users/logout';

			this.eventAggregator = eventAggregator;
			this.data = data;
			this.config = config;
		}

		Auth.prototype.login = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(email, password) {
				var content, response;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								content = {
									'email': email,
									'password': password
								};
								_context.next = 3;
								return this.data.login(content, this.loginUrl);

							case 3:
								response = _context.sent;

								if (!response.error) {
									response.user.userRole = this.setRole(response.user.roles);
									sessionStorage.setItem('token', response.token);
									sessionStorage.setItem('user', JSON.stringify(response.user));
								}
								this.eventAggregator.publish('auth:login', response);
								return _context.abrupt('return', response);

							case 7:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function login(_x, _x2) {
				return _ref.apply(this, arguments);
			}

			return login;
		}();

		Auth.prototype.logout = function logout(email) {
			this.data.saveObject({ email: email }, this.logoutUrl, 'post');
			sessionStorage.removeItem('token');
			sessionStorage.removeItem('user');
			sessionStorage.removeItem('role');
			sessionStorage.removeItem('alert');
		};

		Auth.prototype.isAuthenticated = function isAuthenticated() {
			var token = sessionStorage.getItem('token');

			if (!token) {
				return false;
			}

			if (token.split('.').length !== 3) {
				return true;
			}

			var exp = void 0;
			try {
				var base64Url = token.split('.')[1];
				var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
				exp = JSON.parse(window.atob(base64)).exp;
			} catch (error) {
				return false;
			}

			if (exp) {
				return Math.round(new Date().getTime() / 1000) <= exp;
			}

			return true;
		};

		Auth.prototype.setRole = function setRole(roles) {
			var _this = this;

			var userRole = 1;

			var _loop = function _loop(i) {
				_this.config.ROLES.forEach(function (item) {
					if (roles[i] == item.role) {
						userRole = item.authLevel > userRole ? item.authLevel : userRole;
					}
				});
			};

			for (var i = 0; i < roles.length; i++) {
				_loop(i);
			}
			return userRole;
		};

		return Auth;
	}()) || _class);
});
define('resources/data/clientRequests',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ClientRequests = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ClientRequests = exports.ClientRequests = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function ClientRequests(data, utils, config) {
            _classCallCheck(this, ClientRequests);

            this.CLIENT_REQUESTS_SERVICES = 'clientRequests';
            this.CLIENT_REQUEST_DETAILS = 'clientRequestsDetails';
            this.CLIENT_REQUEST_LOCK_SERVICES = 'clientRequestLocks';
            this.CUSTOMER_ACTION = 'clientRequests/customerAction';
            this.CLIENT_REQUEST_EMAIL = "clientRequests/sendMail";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        ClientRequests.prototype.getClientRequestsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.requestsArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.CLIENT_REQUESTS_SERVICES;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.requestsArray = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getClientRequestsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getClientRequestsArray;
        }();

        ClientRequests.prototype.getActiveClientRequestsArray = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(personId, sessions) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                url = this.CLIENT_REQUESTS_SERVICES;

                                url += "/" + personId + "/" + sessions;
                                _context2.prev = 2;
                                _context2.next = 5;
                                return this.data.get(url);

                            case 5:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.requestsArray = serverResponse;
                                } else {
                                    this.requestsArray = new Array();
                                }
                                _context2.next = 12;
                                break;

                            case 9:
                                _context2.prev = 9;
                                _context2.t0 = _context2['catch'](2);

                                console.log(_context2.t0);

                            case 12:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this, [[2, 9]]);
            }));

            function getActiveClientRequestsArray(_x3, _x4) {
                return _ref2.apply(this, arguments);
            }

            return getActiveClientRequestsArray;
        }();

        ClientRequests.prototype.selectRequest = function selectRequest(index) {
            if (index === undefined) {
                this.selectedRequest = this.emptyRequest();
            } else {
                try {
                    this.selectedRequest = this.utils.copyObject(this.requestsArray[index]);
                    this.editRequestIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedRequest = this.emptyRequest();
                }
            }
        };

        ClientRequests.prototype.selectRequstById = function selectRequstById(id) {
            this.selectedRequest = null;
            for (var i = 0; i < this.requestsArray.length; i++) {
                if (this.requestsArray[i]._id === id) {
                    this.selectedRequest = this.utils.copyObject(this.requestsArray[i]);
                    this.editRequestIndex = i;
                    break;
                }
            }
        };

        ClientRequests.prototype.setSelectedRequest = function setSelectedRequest(request) {
            this.selectedRequest = this.utils.copyObject(request);
        };

        ClientRequests.prototype.emptyRequest = function emptyRequest() {
            var newObj = new Object();;
            newObj.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;
            newObj.undergradIds = 0;
            newObj.graduateIds = 0;
            newObj.startDate = "";
            newObj.endDate = "";
            newObj.addUndergraduates = 0;
            newObj.addGraduates = 0;
            newObj.comments = "";
            newObj.requestDetails = new Array();
            newObj.audit = new Array();
            newObj.audit.push({
                event: 'Created',
                eventDate: new Date(),
                personId: ""
            });
            return newObj;
        };

        ClientRequests.prototype.getCurrentCount = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(options) {
                var url, response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                url = this.CLIENT_REQUESTS_SERVICES + '/current/count';

                                url += options ? options : "";
                                _context3.next = 4;
                                return this.data.get(url);

                            case 4:
                                response = _context3.sent;

                                if (response.error) {
                                    _context3.next = 12;
                                    break;
                                }

                                this.unassignedRequests = this.utils.countItems(this.config.UNASSIGNED_REQUEST_CODE, 'requestStatus', response);
                                this.updatedRequests = this.utils.countItems(this.config.UPDATED_REQUEST_CODE, 'requestStatus', response);
                                this.customerActionRequests = this.utils.countItems(this.config.CUSTOMER_ACTION_REQUEST_CODE, 'requestStatus', response);
                                return _context3.abrupt('return', response.count);

                            case 12:
                                return _context3.abrupt('return', null);

                            case 13:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function getCurrentCount(_x5) {
                return _ref3.apply(this, arguments);
            }

            return getCurrentCount;
        }();

        ClientRequests.prototype.getClientRequestsDetailsArray = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!(!this.requestsArray || refresh)) {
                                    _context4.next = 13;
                                    break;
                                }

                                url = this.CLIENT_REQUEST_DETAILS;

                                url += options ? options : "";
                                _context4.prev = 3;
                                _context4.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.requestsDetailsArray = serverResponse;
                                }
                                _context4.next = 13;
                                break;

                            case 10:
                                _context4.prev = 10;
                                _context4.t0 = _context4['catch'](3);

                                console.log(_context4.t0);

                            case 13:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this, [[3, 10]]);
            }));

            function getClientRequestsDetailsArray(_x6, _x7) {
                return _ref4.apply(this, arguments);
            }

            return getClientRequestsDetailsArray;
        }();

        ClientRequests.prototype.getClientRequestsDetailsArrayAnalytics = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!(!this.requestsArray || refresh)) {
                                    _context5.next = 13;
                                    break;
                                }

                                url = this.CLIENT_REQUEST_DETAILS + "/analytics";

                                url += options ? options : "";
                                _context5.prev = 3;
                                _context5.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.requestsDetailsArrayAnalytics = serverResponse;
                                }
                                _context5.next = 13;
                                break;

                            case 10:
                                _context5.prev = 10;
                                _context5.t0 = _context5['catch'](3);

                                console.log(_context5.t0);

                            case 13:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this, [[3, 10]]);
            }));

            function getClientRequestsDetailsArrayAnalytics(_x8, _x9) {
                return _ref5.apply(this, arguments);
            }

            return getClientRequestsDetailsArrayAnalytics;
        }();

        ClientRequests.prototype.getClientRequestsDetailFaccoArray = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(sessionId, institutionId) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return this.data.get(this.CLIENT_REQUEST_DETAILS + '/' + sessionId + '/' + institutionId);

                            case 2:
                                serverResponse = _context6.sent;

                                if (serverResponse.error) {
                                    _context6.next = 7;
                                    break;
                                }

                                this.requestsDetailsArray = serverResponse;
                                _context6.next = 8;
                                break;

                            case 7:
                                return _context6.abrupt('return', undefined);

                            case 8:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function getClientRequestsDetailFaccoArray(_x10, _x11) {
                return _ref6.apply(this, arguments);
            }

            return getClientRequestsDetailFaccoArray;
        }();

        ClientRequests.prototype.saveRequest = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(email) {
                var url, _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (this.selectedRequest) {
                                    _context7.next = 2;
                                    break;
                                }

                                return _context7.abrupt('return');

                            case 2:
                                url = this.CLIENT_REQUESTS_SERVICES;

                                if (this.selectedRequest._id) {
                                    _context7.next = 11;
                                    break;
                                }

                                _context7.next = 6;
                                return this.data.saveObject(this.selectedRequest, url, "post");

                            case 6:
                                _serverResponse = _context7.sent;

                                if (!_serverResponse.error) {
                                    if (email.email) {
                                        email.clientRequestNo = _serverResponse.clientRequestNo;
                                        email.reason = 1;
                                        this.data.saveObject(email, this.CLIENT_REQUEST_EMAIL, "post");
                                    }
                                    if (this.requestsArray) {
                                        this.requestsArray.push(this.selectedRequest);
                                    }
                                }
                                return _context7.abrupt('return', _serverResponse);

                            case 11:
                                _context7.next = 13;
                                return this.data.saveObject(this.selectedRequest, url, "put");

                            case 13:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    if (email.email) {
                                        email.requestNo = this.selectedRequest.requestNo;
                                        email.reason = 2;
                                        this.data.saveObject(email, this.CLIENT_REQUEST_EMAIL, "post");
                                    }
                                    if (this.requestsArray && this.editRequestIndex) {
                                        this.requestsArray[this.editRequestIndex] = this.utils.copyObject(this.selectedRequest);
                                    }
                                }
                                return _context7.abrupt('return', serverResponse);

                            case 16:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveRequest(_x12) {
                return _ref7.apply(this, arguments);
            }

            return saveRequest;
        }();

        ClientRequests.prototype.assignRequest = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(email) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (this.selectedRequest) {
                                    _context8.next = 2;
                                    break;
                                }

                                return _context8.abrupt('return');

                            case 2:
                                url = email ? this.CLIENT_REQUESTS_SERVICES + '/assign/?email=1' : this.CLIENT_REQUESTS_SERVICES + '/assign';
                                _context8.next = 5;
                                return this.data.saveObject(this.selectedRequest, url, "put");

                            case 5:
                                serverResponse = _context8.sent;

                                if (!serverResponse.error) {
                                    if (email.email) {
                                        this.data.saveObject(email, this.CLIENT_REQUEST_EMAIL, "post");
                                    }
                                    if (this.requestsArray && this.editRequestIndex) {
                                        this.requestsArray[this.editRequestIndex] = this.utils.copyObject(this.selectedRequest);
                                    }
                                }
                                return _context8.abrupt('return', serverResponse);

                            case 8:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function assignRequest(_x13) {
                return _ref8.apply(this, arguments);
            }

            return assignRequest;
        }();

        ClientRequests.prototype.deleteRequest = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                if (this.selectedRequestDetail._id) {
                                    _context9.next = 2;
                                    break;
                                }

                                return _context9.abrupt('return');

                            case 2:
                                _context9.next = 4;
                                return this.data.deleteObject(this.CLIENT_REQUEST_DETAILS + '/' + this.selectedRequestDetail._id + '/' + this.selectedRequestDetail.requestId._id);

                            case 4:
                                serverResponse = _context9.sent;

                                if (serverResponse.error) {
                                    _context9.next = 10;
                                    break;
                                }

                                this.requestsDetailsArray.splice(this.requestDetailIndex, 1);
                                return _context9.abrupt('return', serverResponse);

                            case 10:
                                return _context9.abrupt('return', undefined);

                            case 11:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function deleteRequest() {
                return _ref9.apply(this, arguments);
            }

            return deleteRequest;
        }();

        ClientRequests.prototype.isRequestDirty = function isRequestDirty(obj) {
            if (this.selectedRequest) {
                if (!obj) {
                    var obj = this.emptyRequest();
                }
                var skip = ['audit'];
                return this.utils.objectsEqual(this.selectedRequest, obj, skip);
            }
            return new Array();
        };

        ClientRequests.prototype.selectRequestDetail = function selectRequestDetail(index) {
            if (index === undefined || index > this.requestsDetailsArray.length - 1) {
                this.emptyRequestDetail();
            } else {
                this.selectedRequestDetail = this.requestsDetailsArray[index];
                this.requestDetailIndex = index;
            }
            return this.selectedRequestDetail;
        };

        ClientRequests.prototype.selectRequestDetailFromId = function selectRequestDetailFromId(id) {
            var _this = this;

            this.requestsDetailsArray.forEach(function (item, index) {
                if (item._id === id) {
                    _this.selectedRequestDetail = _this.utils.copyObject(item);
                    _this.requestDetailIndex = index;
                    return;
                }
            });
            return null;
        };

        ClientRequests.prototype.setTheSelectedRequestDetail = function setTheSelectedRequestDetail(request) {
            this.selectedRequestDetail = this.utils.copyObject(request);
        };

        ClientRequests.prototype.emptyRequestDetail = function emptyRequestDetail() {
            var newObj = new Object();;
            newObj.createdDate = new Date();
            newObj.modifiedDate = new Date();
            newObj.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;
            return newObj;
        };

        ClientRequests.prototype.saveRequestDetail = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
                var response;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                if (this.selectedRequestDetail) {
                                    _context10.next = 2;
                                    break;
                                }

                                return _context10.abrupt('return');

                            case 2:
                                _context10.next = 4;
                                return this.data.saveObject(this.selectedRequestDetail, this.CLIENT_REQUEST_DETAILS, "put");

                            case 4:
                                response = _context10.sent;

                                if (response.error) {
                                    _context10.next = 8;
                                    break;
                                }

                                this.requestsDetailsArray[this.requestDetailIndex] = this.utils.copyObject(this.selectedRequestDetail);
                                return _context10.abrupt('return', response);

                            case 8:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function saveRequestDetail() {
                return _ref10.apply(this, arguments);
            }

            return saveRequestDetail;
        }();

        ClientRequests.prototype.isRequestDetailDirty = function isRequestDetailDirty(obj) {
            if (this.selectedRequestDetail) {
                if (!obj) {
                    var obj = this.emptyRequestDetail();
                }
                var skip = ['audit'];
                return this.utils.objectsEqual(this.selectedRequestDetail, obj, skip);
            }
            return new Array();
        };

        ClientRequests.prototype.getClientRequest = function () {
            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(id) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                _context11.next = 2;
                                return this.data.get(this.CLIENT_REQUEST_DETAILS + '/' + id);

                            case 2:
                                serverResponse = _context11.sent;

                                if (!serverResponse.error) {
                                    this.selectedRequest = serverResponse;
                                }
                                return _context11.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, this);
            }));

            function getClientRequest(_x14) {
                return _ref11.apply(this, arguments);
            }

            return getClientRequest;
        }();

        ClientRequests.prototype.getSessionCount = function () {
            var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(sessionArray, numSessions, options, requestStatus) {
                var url, response, sessions, sessionCount, i;
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                url = this.CLIENT_REQUESTS_SERVICES;

                                url += options ? options : "";
                                _context12.next = 4;
                                return this.data.get(url);

                            case 4:
                                response = _context12.sent;

                                if (response.error) {
                                    _context12.next = 13;
                                    break;
                                }

                                sessions = new Array();
                                sessionCount = new Array();

                                numSessions = numSessions < sessionArray.length ? numSessions : sessionArray.length - 1;
                                for (i = 0; i <= numSessions; i++) {
                                    sessions.push(sessionArray[i]._id);
                                    sessionCount.push({ count: 0, session: sessionArray[i].session });
                                }
                                requestStatus = requestStatus ? requestStatus.split(':') : undefined;
                                response.forEach(function (request) {
                                    var index = sessions.indexOf(request.sessionId);
                                    if (index > -1) {
                                        if (requestStatus) {
                                            request.requestDetails.forEach(function (detail) {
                                                if (requestStatus.indexOf(detail.requestStatus) > -1) {
                                                    sessionCount[index].count += 1;
                                                }
                                            });
                                        } else {
                                            sessionCount[index].count += request.requestDetails.length;
                                        }
                                    }
                                });
                                return _context12.abrupt('return', sessionCount);

                            case 13:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, this);
            }));

            function getSessionCount(_x15, _x16, _x17, _x18) {
                return _ref12.apply(this, arguments);
            }

            return getSessionCount;
        }();

        ClientRequests.prototype.sendCustomerMessage = function () {
            var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(message) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee13$(_context13) {
                    while (1) {
                        switch (_context13.prev = _context13.next) {
                            case 0:
                                console.log(message);
                                _context13.next = 3;
                                return this.data.saveObject(message, this.CLIENT_REQUEST_EMAIL, "post");

                            case 3:
                                serverResponse = _context13.sent;
                                return _context13.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context13.stop();
                        }
                    }
                }, _callee13, this);
            }));

            function sendCustomerMessage(_x19) {
                return _ref13.apply(this, arguments);
            }

            return sendCustomerMessage;
        }();

        ClientRequests.prototype.updateDetailStatuses = function updateDetailStatuses(selectedRequestNo, status) {
            var _this2 = this;

            this.requestsDetailsArray.forEach(function (item) {
                if (item.requestId && item.requestId.clientRequestNo == selectedRequestNo) {
                    if (item.requestStatus != _this2.config.ASSIGNED_REQUEST_CODE) item.requestStatus = status;
                }
            });
        };

        ClientRequests.prototype.updateDetailStatus = function updateDetailStatus(id, status) {
            var _this3 = this;

            this.requestsDetailsArray.forEach(function (item) {
                if (item.requestId._id == id) {
                    if (item.requestStatus != _this3.config.ASSIGNED_REQUEST_CODE) item.requestStatus = status;
                }
            });
        };

        ClientRequests.prototype.groupRequestsByInstitution = function () {
            var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
                var sortedArray, instID, numStatuses, templateObj, i, that;
                return regeneratorRuntime.wrap(function _callee14$(_context14) {
                    while (1) {
                        switch (_context14.prev = _context14.next) {
                            case 0:
                                if (this.requestsDetailsArrayAnalytics) {
                                    _context14.next = 2;
                                    break;
                                }

                                return _context14.abrupt('return');

                            case 2:
                                sortedArray = this.requestsDetailsArrayAnalytics.sort(function (a, b) {
                                    var result = a['requestId'].institutionId.name < b['requestId'].institutionId.name ? -1 : a['requestId'].institutionId.name > b['requestId'].institutionId.name ? 1 : 0;
                                    return result;
                                });


                                this.analyticsInstitutionResultArray = new Array();
                                instID = "";
                                numStatuses = this.config.REQUEST_STATUS.length;
                                templateObj = new Object();

                                templateObj['total'] = 0;
                                for (i = 0; i < numStatuses; i++) {
                                    templateObj[this.config.REQUEST_STATUS[i].code] = 0;
                                }
                                that = this;

                                sortedArray.forEach(function (item) {
                                    if (item.requestId.institutionId.name != instID) {
                                        instID = item.requestId.institutionId.name;
                                        var obj = that.utils.copyObject(templateObj);
                                        obj.name = item.requestId.institutionId.name;
                                        that.analyticsInstitutionResultArray.push(obj);
                                    }
                                    that.analyticsInstitutionResultArray[that.analyticsInstitutionResultArray.length - 1]['total'] += 1;
                                    that.analyticsInstitutionResultArray[that.analyticsInstitutionResultArray.length - 1][item.requestStatus] += 1;
                                });

                            case 11:
                            case 'end':
                                return _context14.stop();
                        }
                    }
                }, _callee14, this);
            }));

            function groupRequestsByInstitution() {
                return _ref14.apply(this, arguments);
            }

            return groupRequestsByInstitution;
        }();

        ClientRequests.prototype.groupRequestsByProduct = function groupRequestsByProduct() {
            var _this4 = this;

            if (!this.requestsDetailsArrayAnalytics) {
                return;
            }
            var sortedArray = this.requestsDetailsArrayAnalytics.sort(function (a, b) {
                var result = a.productId.name < b.productId.name ? -1 : a.productId.name > b.productId.name ? 1 : 0;
                return result;
            });

            this.analyticsProductsResultArray = new Array();
            var prodID = "";
            var numStatuses = this.config.REQUEST_STATUS.length;
            var templateObj = new Object();
            for (var i = 0; i < numStatuses; i++) {
                templateObj[this.config.REQUEST_STATUS[i].code] = 0;
            }

            sortedArray.forEach(function (item) {
                if (item.productId.name != prodID) {
                    prodID = item.productId.name;
                    var obj = _this4.utils.copyObject(templateObj);
                    obj.productId = item.productId;
                    _this4.analyticsProductsResultArray.push(obj);
                }
                _this4.analyticsProductsResultArray[_this4.analyticsProductsResultArray.length - 1][item.requestStatus] += 1;
            });
        };

        ClientRequests.prototype.lockRequest = function lockRequest(obj) {
            if (obj.requestId) {
                var response = this.data.saveObject(obj, this.CLIENT_REQUEST_LOCK_SERVICES, "post");
            }
        };

        ClientRequests.prototype.getRequestLock = function () {
            var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(id) {
                var response;
                return regeneratorRuntime.wrap(function _callee15$(_context15) {
                    while (1) {
                        switch (_context15.prev = _context15.next) {
                            case 0:
                                _context15.next = 2;
                                return this.data.get(this.CLIENT_REQUEST_LOCK_SERVICES + "/" + id);

                            case 2:
                                response = _context15.sent;

                                if (response.error) {
                                    _context15.next = 7;
                                    break;
                                }

                                return _context15.abrupt('return', response);

                            case 7:
                                this.data.processError(response, "There was an error retrieving the help ticket lock.");

                            case 8:
                            case 'end':
                                return _context15.stop();
                        }
                    }
                }, _callee15, this);
            }));

            function getRequestLock(_x20) {
                return _ref15.apply(this, arguments);
            }

            return getRequestLock;
        }();

        ClientRequests.prototype.removeRequestLock = function () {
            var _ref16 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(id) {
                return regeneratorRuntime.wrap(function _callee16$(_context16) {
                    while (1) {
                        switch (_context16.prev = _context16.next) {
                            case 0:
                                _context16.next = 2;
                                return this.data.deleteObject(this.CLIENT_REQUEST_LOCK_SERVICES + "/" + id);

                            case 2:
                            case 'end':
                                return _context16.stop();
                        }
                    }
                }, _callee16, this);
            }));

            function removeRequestLock(_x21) {
                return _ref16.apply(this, arguments);
            }

            return removeRequestLock;
        }();

        return ClientRequests;
    }()) || _class);
});
define('resources/data/config',['exports', 'aurelia-framework', './dataServices'], function (exports, _aureliaFramework, _dataServices) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Config = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Config = exports.Config = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices), _dec(_class = function () {
        function Config(data) {
            _classCallCheck(this, Config);

            this.CONFIG_SERVICE = 'config';
            this.SESSIONS_CONFIG_SERVICE = 'semesterConfig';

            this.data = data;
        }

        Config.prototype.getConfigArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.configArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.data.CONFIG_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.configArray = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getConfigArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getConfigArray;
        }();

        Config.prototype.saveAll = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(saveConfigArray) {
                var saveObj, response;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!saveConfigArray) {
                                    _context2.next = 11;
                                    break;
                                }

                                saveObj = { parameters: saveConfigArray };
                                _context2.next = 4;
                                return this.data.saveObject(saveObj, this.CONFIG_SERVICE + '/saveAll', "put");

                            case 4:
                                response = _context2.sent;

                                if (response.error) {
                                    _context2.next = 9;
                                    break;
                                }

                                return _context2.abrupt('return', response);

                            case 9:
                                this.data.processError(response, "There was an error updating the configuration.");

                            case 10:
                                return _context2.abrupt('return', response);

                            case 11:
                                return _context2.abrupt('return', null);

                            case 12:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveAll(_x3) {
                return _ref2.apply(this, arguments);
            }

            return saveAll;
        }();

        Config.prototype.saveSessions = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(saveSessionArray) {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!saveSessionArray) {
                                    _context3.next = 10;
                                    break;
                                }

                                _context3.next = 3;
                                return this.data.saveObject(saveSessionArray, this.SESSIONS_CONFIG_SERVICE, "put");

                            case 3:
                                response = _context3.sent;

                                if (response.error) {
                                    _context3.next = 8;
                                    break;
                                }

                                return _context3.abrupt('return', response);

                            case 8:
                                this.data.processError(response, "There was an error updating the configuration.");

                            case 9:
                                return _context3.abrupt('return', response);

                            case 10:
                                return _context3.abrupt('return', null);

                            case 11:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function saveSessions(_x4) {
                return _ref3.apply(this, arguments);
            }

            return saveSessions;
        }();

        return Config;
    }()) || _class);
});
define('resources/data/curriculum',['exports', 'aurelia-framework', '../utils/utils', './dataServices'], function (exports, _aureliaFramework, _utils, _dataServices) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Curriculum = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Curriculum = exports.Curriculum = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils), _dec(_class = function () {
        function Curriculum(data, utils) {
            _classCallCheck(this, Curriculum);

            this.curriculumArray = undefined;
            this.curriculumCatArray = undefined;
            this.CURRICULUM_SERVICE = 'curriculum';
            this.CURRICULUM_CATEGORY_SERVICE = 'curriculumcategory';

            this.data = data;
            this.utils = utils;
        }

        Curriculum.prototype.getCurriculumArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.configArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.CURRICULUM_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.curriculumArray = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getCurriculumArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getCurriculumArray;
        }();

        Curriculum.prototype.getCurriculumCategoryArray = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!(!this.configArray || refresh)) {
                                    _context2.next = 13;
                                    break;
                                }

                                url = this.CURRICULUM_CATEGORY_SERVICE;

                                url += options ? options : "";
                                _context2.prev = 3;
                                _context2.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.curriculumCatArray = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context2.next = 13;
                                break;

                            case 10:
                                _context2.prev = 10;
                                _context2.t0 = _context2['catch'](3);

                                console.log(_context2.t0);

                            case 13:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this, [[3, 10]]);
            }));

            function getCurriculumCategoryArray(_x3, _x4) {
                return _ref2.apply(this, arguments);
            }

            return getCurriculumCategoryArray;
        }();

        Curriculum.prototype.selectCurriculum = function selectCurriculum(index) {
            if (index === undefined) {
                this.selectedCurriculum = this.emptyCurriculum();
            } else {
                try {
                    this.selectedCurriculum = this.utils.copyObject(this.curriculumArray[index]);
                    this.editIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedCurriculum = this.emptyCurriculum();
                }
            }
        };

        Curriculum.prototype.selectCurriculumById = function selectCurriculumById(id) {
            if (!id) {
                this.selectedCurriculum = this.emptyCurriculum();
            } else {
                for (var i = 0; i < this.curriculumArray.length; i++) {
                    if (this.curriculumArray[i]._id === id) {
                        this.selectedCurriculum = this.utils.copyObject(this.curriculumArray[i]);
                        this.editIndex = i;
                        return;
                    }
                }
            }
        };

        Curriculum.prototype.emptyCurriculum = function emptyCurriculum() {
            var obj = new Object();
            obj.category = "";
            obj.title = "";
            obj.description = "";
            obj.notes = "";
            obj.rating = 0;
            obj.comments = new Array();
            obj.products = new Array();
            return obj;
        };

        Curriculum.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var response, _response;

                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (this.selectedCurriculum._id) {
                                    _context3.next = 8;
                                    break;
                                }

                                _context3.next = 3;
                                return this.data.saveObject(this.selectedCurriculum, this.CURRICULUM_SERVICE, "post");

                            case 3:
                                response = _context3.sent;

                                if (!response.error) {
                                    if (this.curriculumArray) {
                                        this.curriculumArray.push(response);;
                                    }
                                } else {
                                    this.data.processError(response, "There was an error creating the curriculum.");
                                }
                                return _context3.abrupt('return', response);

                            case 8:
                                _context3.next = 10;
                                return this.data.saveObject(this.selectedCurriculum, this.CURRICULUM_SERVICE, "put");

                            case 10:
                                _response = _context3.sent;

                                if (!_response.error) {
                                    if (this.curriculumArray) {
                                        this.curriculumArray[this.editIndex] = this.utils.copyObject(this.selectedCurriculum, this.curriculumArray[this.editIndex]);
                                    }
                                }
                                return _context3.abrupt('return', _response);

                            case 13:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        Curriculum.prototype.isDirty = function isDirty(obj) {
            if (this.selectedCurriculum) {
                if (!obj) {
                    var obj = this.emptyCurriculum();
                }
                return this.utils.objectsEqual(this.selectedCurriculum, obj, ['file']);
            }
            return new Array();
        };

        Curriculum.prototype.delete = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!this.selectedCurriculum._id) {
                                    _context4.next = 6;
                                    break;
                                }

                                _context4.next = 3;
                                return this.data.deleteObject(this.CURRICULUM_SERVICE + '/' + this.selectedCurriculum._id);

                            case 3:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.curriculumArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                }
                                return _context4.abrupt('return', serverResponse);

                            case 6:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function _delete() {
                return _ref4.apply(this, arguments);
            }

            return _delete;
        }();

        Curriculum.prototype.selectCurriculumCategory = function selectCurriculumCategory(index) {
            if (index === undefined) {
                this.selectedCurriculumCategory = this.emptyCurriculumCategory();
            } else {
                try {
                    this.selectedCurriculumCategory = this.utils.copyObject(this.curriculumCatArray[index]);
                    this.editCategoryIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedCurriculumCategory = this.emptyCurriculumCategory();
                }
            }
        };

        Curriculum.prototype.selectCurriculumCategoryByName = function selectCurriculumCategoryByName(name) {
            if (name === undefined) {
                this.selectedCurriculumCategory = this.emptyCurriculumCategory();
            } else {
                try {
                    for (var i = 0; i < this.curriculumCatArray.length; i++) {
                        if (this.curriculumCatArray[i].name === name) {
                            this.selectedCurriculumCategory = this.utils.copyObject(this.curriculumCatArray[i]);
                            this.editCategoryIndex = i;
                            break;
                        }
                    }
                } catch (error) {
                    console.log(error);
                    this.selectedCurriculumCategory = this.emptyCurriculumCategory();
                }
            }
        };

        Curriculum.prototype.emptyCurriculumCategory = function emptyCurriculumCategory() {
            var obj = new Object();
            obj.name = "";
            obj.description = "";
            return obj;
        };

        Curriculum.prototype.saveCategory = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var response, _response2;

                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (this.selectedCurriculumCategory._id) {
                                    _context5.next = 8;
                                    break;
                                }

                                _context5.next = 3;
                                return this.data.saveObject(this.selectedCurriculumCategory, this.CURRICULUM_CATEGORY_SERVICE, "post");

                            case 3:
                                response = _context5.sent;

                                if (!response.error) {
                                    if (this.curriculumCatArray) {
                                        this.curriculumCatArray.push(response);;
                                    }
                                } else {
                                    this.data.processError(response, "There was an error creating the curriculum catgory.");
                                }
                                return _context5.abrupt('return', response);

                            case 8:
                                _context5.next = 10;
                                return this.data.saveObject(this.selectedCurriculumCategory, this.CURRICULUM_CATEGORY_SERVICE, "put");

                            case 10:
                                _response2 = _context5.sent;

                                if (!_response2.error) {
                                    if (this.curriculumCatArray) {
                                        this.curriculumCatArray[this.editCategoryIndex] = this.utils.copyObject(this.selectedCurriculumCategory, this.curriculumCatArray[this.editCategoryIndex]);
                                    }
                                } else {
                                    this.data.processError(_response2, "There was an error creating the curriculum catgory.");
                                }
                                return _context5.abrupt('return', _response2);

                            case 13:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function saveCategory() {
                return _ref5.apply(this, arguments);
            }

            return saveCategory;
        }();

        Curriculum.prototype.deleteCategory = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!this.selectedCurriculumCategory._id) {
                                    _context6.next = 6;
                                    break;
                                }

                                _context6.next = 3;
                                return this.data.deleteObject(this.CURRICULUM_CATEGORY_SERVICE + '/' + this.selectedCurriculumCategory._id);

                            case 3:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.curriculumCatArray.splice(this.editCategoryIndex, 1);
                                    this.editCategoryIndex = -1;
                                }
                                return _context6.abrupt('return', serverResponse);

                            case 6:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteCategory() {
                return _ref6.apply(this, arguments);
            }

            return deleteCategory;
        }();

        Curriculum.prototype.curriculumExist = function curriculumExist(category) {
            var exists = false;
            for (var i = 0; i < this.curriculumArray.length; i++) {
                if (this.curriculumArray[i].category === category) {
                    exists = true;
                    break;
                }
            }
            return exists;
        };

        Curriculum.prototype.uploadFile = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(files) {
                var response;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                _context7.next = 2;
                                return this.data.uploadFiles(files, this.CURRICULUM_SERVICE + "/upload" + "/" + this.selectedCurriculum._id + '/' + this.selectedCurriculum.category);

                            case 2:
                                response = _context7.sent;

                                if (!response.error) {
                                    this.curriculumArray[this.editIndex].file = response.file;
                                }

                            case 4:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function uploadFile(_x5) {
                return _ref7.apply(this, arguments);
            }

            return uploadFile;
        }();

        return Curriculum;
    }()) || _class);
});
define('resources/data/dataServices',['exports', 'aurelia-framework', 'aurelia-http-client', '../utils/utils', '../../config/appConfig', 'aurelia-event-aggregator'], function (exports, _aureliaFramework, _aureliaHttpClient, _utils, _appConfig, _aureliaEventAggregator) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.DataServices = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var DataServices = exports.DataServices = (_dec = (0, _aureliaFramework.inject)(_aureliaHttpClient.HttpClient, _utils.Utils, _appConfig.AppConfig, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
        function DataServices(http, utils, config, eventAggregator) {
            var _this = this;

            _classCallCheck(this, DataServices);

            this.isRequesting = false;
            this.FILE_URL = "http://localhost:5000/api/upload";
            this.FILE_DOWNLOAD_URL = "http://localhost:5000/";
            this.IS4UA = 'is4ua';
            this.CLIENTS_SERVICE = 'clients';
            this.DELETE_ALL_CLIENTS = 'clients/system/SYSTEMID';
            this.COURSES_SERVICE = 'courses';
            this.PERSON_COURSES_SERVICE = 'courses/person/PERSONID';
            this.CONFIG_SERVICE = 'config';
            this.SESSIONS_CONFIG_SERVICE = 'semesterConfig';
            this.DOCUMENTS_FILE_UPLOAD = 'documents/file';

            this.http = http;
            this.utils = utils;
            this.config = config;
            this.eventAggregator = eventAggregator;

            this.http.configure(function (x) {
                x.withBaseUrl(_this.config.BASE_URL);
            });
        }

        DataServices.prototype.activate = function activate() {};

        DataServices.prototype.get = function get(url) {
            var _this2 = this;

            this.isRequesting = true;
            return this.http.createRequest(url).asGet().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).send().then(function (response) {
                _this2.isRequesting = false;
                if (!response.isSuccess) {
                    return response;
                } else {
                    return JSON.parse(response.response);
                }
            }).catch(function (e) {
                _this2.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.getNoAuth = function getNoAuth(url) {
            var _this3 = this;

            this.isRequesting = true;
            return this.http.createRequest(url).asGet().send().then(function (response) {
                _this3.isRequesting = false;
                if (!response.isSuccess) {
                    return response;
                } else {
                    return JSON.parse(response.response);
                }
            }).catch(function (e) {
                _this3.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.saveObject = function saveObject(content, url, method) {
            var _this4 = this;

            this.isRequesting = true;
            if (method === 'put') {
                return this.http.createRequest(url).asPut().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).withContent(content).send().then(function (response) {
                    _this4.isRequesting = false;
                    if (!response.isSuccess) {
                        return response;
                    } else {
                        return JSON.parse(response.response);
                    }
                }).catch(function (e) {
                    _this4.isRequesting = false;
                    console.log(e);
                    return { error: true, code: e.statusCode, message: e.statusText };
                });
            } else if (method === 'post') {
                return this.http.createRequest(url).asPost().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).withContent(content).send().then(function (response) {
                    _this4.isRequesting = false;
                    if (!response.isSuccess) {
                        return response;
                    } else {
                        return JSON.parse(response.response);
                    }
                }).catch(function (e) {
                    _this4.isRequesting = false;
                    console.log(e);
                    return { error: true, code: e.statusCode, message: e.statusText };
                });
            }
        };

        DataServices.prototype.deleteObject = function deleteObject(url) {
            var _this5 = this;

            this.isRequesting = true;
            return this.http.createRequest(url).asDelete().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).send().then(function (response) {
                _this5.isRequesting = false;
                if (!response.isSuccess) {
                    return response;
                } else {
                    if (response.statusCode === 204) {
                        return response;
                    } else {
                        return JSON.parse(response.response);
                    }
                }
            }).catch(function (e) {
                _this5.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.sendMail = function sendMail(content) {
            var _this6 = this;

            this.isRequesting = true;
            return this.http.createRequest('sendMail').asPost().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).withContent(content).send().then(function (response) {
                _this6.isRequesting = false;
                if (!response.isSuccess) {
                    return response;
                } else {
                    return JSON.parse(response.response);
                }
            }).catch(function (e) {
                _this6.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.login = function login(content, url) {
            var _this7 = this;

            return this.http.createRequest(url).asPost().withContent(content).send().then(function (response) {
                _this7.isRequesting = false;
                return JSON.parse(response.response);
            }).catch(function (e) {
                _this7.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.uploadFiles = function uploadFiles(files, url) {
            var _this8 = this;

            this.progress = 0;
            var formData = new FormData();

            files.forEach(function (item, index) {
                formData.append("file" + index, item);
            });

            return this.http.createRequest(url).asPost().withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token')).withContent(formData).skipContentProcessing().withProgressCallback(function (progress) {
                _this8.eventAggregator.publish('upload-progress', { progress: progress.loaded, total: progress.total });
                _this8.progress = progress.loaded / progress.total;
            }).send().then(function (response) {
                _this8.isRequesting = false;
                if (!response.isSuccess) {
                    return response;
                } else {
                    return JSON.parse(response.response);
                }
            }).catch(function (e) {
                _this8.isRequesting = false;
                console.log(e);
                return { error: true, code: e.statusCode, message: e.statusText };
            });
        };

        DataServices.prototype.processError = function processError(obj, message) {
            console.log(obj);
            var msg = (message ? message : "") + " ";
            switch (obj.code) {
                case 404:
                    msg = undefined;
                    break;
                case 422:
                    msg = msg += "The request was bad.  Contact your UCC.";
                    break;
                case 409:
                    msg = msg += "The record already exists.";
                    break;
                case 500:
                    msg = msg += "An unspecified error occured on the server.  Contact your UCC.";
                    break;
                default:
                    msg = msg += "An unspecified error occured.  Contact your UCC.";
            }
            if (msg && msg.length > 0) this.utils.showNotification(msg);
        };

        return DataServices;
    }()) || _class);
});
define('resources/data/documents',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.DocumentsServices = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var DocumentsServices = exports.DocumentsServices = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function DocumentsServices(data, utils, config) {
            _classCallCheck(this, DocumentsServices);

            this.DOCUMENTS_SERVICE = "documents";
            this.DOCUMENTS_CATEGORY_SERVICE = "documentCategory";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        DocumentsServices.prototype.getDocumentsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.documentsArray || refresh)) {
                                    _context.next = 18;
                                    break;
                                }

                                url = this.DOCUMENTS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (serverResponse.status) {
                                    _context.next = 11;
                                    break;
                                }

                                this.documentsArray = serverResponse;
                                _context.next = 12;
                                break;

                            case 11:
                                return _context.abrupt('return', undefined);

                            case 12:
                                _context.next = 18;
                                break;

                            case 14:
                                _context.prev = 14;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);
                                return _context.abrupt('return', undefined);

                            case 18:
                                return _context.abrupt('return', this.documentsArray);

                            case 19:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 14]]);
            }));

            function getDocumentsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getDocumentsArray;
        }();

        DocumentsServices.prototype.selectDocument = function selectDocument(index) {
            if (!index && index != 0) {
                this.selectedDocument = this.emptyDocument();
            } else {
                try {
                    this.selectedDocument = this.utils.copyObject(this.documentsArray[index]);
                    this.editDocumentIndex = index;
                } catch (error) {
                    this.selectedDocument = this.emptyDocument();
                }
            }
        };

        DocumentsServices.prototype.emptyDocument = function emptyDocument() {
            var newObj = new Object();
            newObj.name = "";
            newObj.description = "";
            newObj.type = 0;
            newObj.files = new Array();
            newObj.active = true;
            newObj.createdDate = new Date();

            return newObj;
        };

        DocumentsServices.prototype.saveDocument = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedDocument) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedDocument._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedDocument, this.DOCUMENTS_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.status) {
                                    this.selectedDocument = _serverResponse;
                                    this.documentsArray.push(this.selectedDocument);
                                    this.editDocumentIndex = this.documentsArray.length - 1;
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedDocument, this.DOCUMENTS_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.status) {
                                    this.documentsArray[this.editDocumentIndex] = this.utils.copyObject(this.selectedDocument, this.documentsArray[this.editDocumentIndex]);
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveDocument() {
                return _ref2.apply(this, arguments);
            }

            return saveDocument;
        }();

        DocumentsServices.prototype.uploadFile = function uploadFile(files, version) {
            var path = this.selectedCat.code + '$@' + this.selectedDocument.name;
            this.data.uploadFiles(files, this.data.DOCUMENTS_FILE_UPLOAD + "/" + path + '/' + version);
        };

        DocumentsServices.prototype.deleteFile = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(index) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!(!this.selectedDocument || !this.selectedDocument._id)) {
                                    _context3.next = 2;
                                    break;
                                }

                                return _context3.abrupt('return');

                            case 2:
                                _context3.next = 4;
                                return this.data.deleteObject(this.data.DOCUMENTS_FILE_UPLOAD + '/' + this.selectedDocument._id + '/' + index);

                            case 4:
                                serverResponse = _context3.sent;

                                if (!serverResponse.status) {
                                    this.selectedDocument.files.splice(index, 1);
                                    this.documentsArray[this.editDocumentIndex] = this.utils.copyObject(this.selectedDocument, this.documentsArray[this.editDocumentIndex]);
                                }
                                return _context3.abrupt('return', serverResponse);

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function deleteFile(_x3) {
                return _ref3.apply(this, arguments);
            }

            return deleteFile;
        }();

        DocumentsServices.prototype.deleteDocument = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return this.data.deleteObject(this.DOCUMENTS_SERVICE + '/' + this.selectedDocument._id);

                            case 2:
                                serverResponse = _context4.sent;

                                if (serverResponse.status === 204) {
                                    this.documentsArray.splice(this.editDocumentIndex, 1);
                                    this.editDownloadIndex = -1;
                                }
                                return _context4.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function deleteDocument() {
                return _ref4.apply(this, arguments);
            }

            return deleteDocument;
        }();

        DocumentsServices.prototype.isDirty = function isDirty(obj) {
            if (this.selectedDocument) {
                if (!obj) {
                    var obj = this.emptyDocument();
                }
                var skip = ['file'];
                return this.utils.objectsEqual(this.selectedDocument, obj, skip);
            }
            return new Array();
        };

        DocumentsServices.prototype.getDocumentsCategoriesArray = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!(!this.docCatsArray || refresh)) {
                                    _context5.next = 19;
                                    break;
                                }

                                url = this.DOCUMENTS_CATEGORY_SERVICE;

                                url += options ? options : "";;
                                _context5.prev = 4;
                                _context5.next = 7;
                                return this.data.get(url);

                            case 7:
                                serverResponse = _context5.sent;

                                if (serverResponse.error) {
                                    _context5.next = 12;
                                    break;
                                }

                                this.docCatsArray = serverResponse;
                                _context5.next = 13;
                                break;

                            case 12:
                                return _context5.abrupt('return', undefined);

                            case 13:
                                _context5.next = 19;
                                break;

                            case 15:
                                _context5.prev = 15;
                                _context5.t0 = _context5['catch'](4);

                                console.log(_context5.t0);
                                return _context5.abrupt('return', undefined);

                            case 19:
                                return _context5.abrupt('return', this.docCatsArray);

                            case 20:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this, [[4, 15]]);
            }));

            function getDocumentsCategoriesArray(_x4, _x5) {
                return _ref5.apply(this, arguments);
            }

            return getDocumentsCategoriesArray;
        }();

        DocumentsServices.prototype.selectCategory = function selectCategory(index) {
            if (!index && index != 0) {
                this.selectedCat = this.emptyCat();
            } else {
                try {
                    this.selectedCat = this.utils.copyObject(this.docCatsArray[index]);
                    this.editCatIndex = index;
                } catch (error) {
                    this.selectedCat = this.emptyCat();
                }
            }
        };

        DocumentsServices.prototype.selectCategoryByCode = function selectCategoryByCode(index) {
            if (!index && index != 0) {
                this.selectedCat = this.emptyCat();
            } else {
                try {
                    for (var i = 0; i < this.docCatsArray.length; i++) {
                        if (this.docCatsArray[i].code == index) {
                            index = i;
                            break;
                        }
                    }
                    this.selectedCat = this.utils.copyObject(this.docCatsArray[index]);
                    this.editCatIndex = index;
                } catch (error) {
                    this.selectedCat = this.emptyCat();
                }
            }
        };

        DocumentsServices.prototype.emptyCat = function emptyCat() {
            var newObj = new Object();
            var newCode = 0;
            for (var i = 0; i < this.docCatsArray.length; i++) {
                if (this.docCatsArray[i].code > newCode) newCode = this.docCatsArray[i].code;
            }
            newObj.code = newCode + 1;
            newObj.description = "";

            return newObj;
        };

        DocumentsServices.prototype.saveCategory = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var _serverResponse2, serverResponse;

                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (this.selectedCat) {
                                    _context6.next = 2;
                                    break;
                                }

                                return _context6.abrupt('return');

                            case 2:
                                if (this.selectedCat._id) {
                                    _context6.next = 10;
                                    break;
                                }

                                _context6.next = 5;
                                return this.data.saveObject(this.selectedCat, this.DOCUMENTS_CATEGORY_SERVICE, "post");

                            case 5:
                                _serverResponse2 = _context6.sent;

                                if (!_serverResponse2.status) {
                                    this.docCatsArray.push(_serverResponse2);
                                    this.editCatIndex = this.docCatsArray.length - 1;
                                }
                                return _context6.abrupt('return', _serverResponse2);

                            case 10:
                                _context6.next = 12;
                                return this.data.saveObject(this.selectedCat, this.DOCUMENTS_CATEGORY_SERVICE, "put");

                            case 12:
                                serverResponse = _context6.sent;

                                if (!serverResponse.status) {
                                    this.docCatsArray[this.editCatIndex] = this.utils.copyObject(this.selectedCat, this.docCatsArray[this.editCatIndex]);
                                }
                                return _context6.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function saveCategory() {
                return _ref6.apply(this, arguments);
            }

            return saveCategory;
        }();

        DocumentsServices.prototype.deleteCat = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.selectedCat._id) {
                                    _context7.next = 8;
                                    break;
                                }

                                _context7.next = 3;
                                return this.data.deleteObject(this.DOCUMENTS_CATEGORY_SERVICE + '/' + this.selectedCat._id);

                            case 3:
                                serverResponse = _context7.sent;

                                if (serverResponse.status === 204) {
                                    this.docCatsArray.splice(this.editCatIndex, 1);
                                    this.editCatIndex = -1;
                                }
                                return _context7.abrupt('return', serverResponse);

                            case 8:
                                return _context7.abrupt('return', { error: "no category selected" });

                            case 9:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function deleteCat() {
                return _ref7.apply(this, arguments);
            }

            return deleteCat;
        }();

        return DocumentsServices;
    }()) || _class);
});
define('resources/data/downloads',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Downloads = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Downloads = exports.Downloads = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function Downloads(data, utils, config) {
            _classCallCheck(this, Downloads);

            this.DOWNLOADS_SERVICE = "apps";
            this.APPLICATION_CATEGORY_SERVICE = "appsCategory";
            this.DOWNLOADS_UPLOADS = "downloads/upload";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        Downloads.prototype.getDownloadsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.appDownloadsArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.DOWNLOADS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.appDownloadsArray = serverResponse;
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getDownloadsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getDownloadsArray;
        }();

        Downloads.prototype.selectDownload = function selectDownload(index) {
            if (!index && index != 0) {
                this.selectedDownload = this.emptyDownload();
            } else {
                try {
                    this.selectedDownload = this.utils.copyObject(this.appDownloadsArray[index]);
                    this.editDownloadIndex = index;
                } catch (error) {
                    this.selectedDownload = this.emptyDownload();
                }
            }
        };

        Downloads.prototype.emptyDownload = function emptyDownload() {
            var newObj = new Object();
            newObj.name = "";
            newObj.description = "";
            newObj.type = 0;
            newObj.file = "";
            newObj.createdDate = new Date();
            newObj.active = true;
            newObj.helpTicketRelevant = false;

            return newObj;
        };

        Downloads.prototype.saveDownload = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedDownload) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedDownload._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedDownload, this.DOWNLOADS_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.selectedDownload = _serverResponse;
                                    this.appDownloadsArray.push(this.selectedDownload);
                                    this.editDownloadIndex = this.appDownloadsArray.length - 1;
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedDownload, this.DOWNLOADS_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.appDownloadsArray[this.editDownloadIndex] = this.utils.copyObject(this.selectedDownload, this.appDownloadsArray[this.editDownloadIndex]);
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveDownload() {
                return _ref2.apply(this, arguments);
            }

            return saveDownload;
        }();

        Downloads.prototype.uploadFile = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(files) {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.data.uploadFiles(files, this.DOWNLOADS_UPLOADS + "/" + this.selectedDownload._id + '/' + this.selectedDownload.downCatcode);

                            case 2:
                                response = _context3.sent;

                                if (!response.error) {
                                    this.appDownloadsArray[this.editDownloadIndex].file = response.file;
                                }

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function uploadFile(_x3) {
                return _ref3.apply(this, arguments);
            }

            return uploadFile;
        }();

        Downloads.prototype.deleteDownload = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return this.data.deleteObject(this.DOWNLOADS_SERVICE + '/' + this.selectedDownload._id);

                            case 2:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.appDownloadsArray.splice(this.editDownloadIndex, 1);
                                    this.editDownloadIndex = -1;
                                }
                                return _context4.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function deleteDownload() {
                return _ref4.apply(this, arguments);
            }

            return deleteDownload;
        }();

        Downloads.prototype.isDirty = function isDirty(obj) {
            if (this.selectedDownload) {
                if (!obj) {
                    var obj = this.emptyDownload();
                }
                var skip = ['file'];
                return this.utils.objectsEqual(this.selectedDownload, obj, skip);
            }
            return new Array();
        };

        Downloads.prototype.getDownloadCategoriesArray = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!(!this.appCatsArray || refresh)) {
                                    _context5.next = 14;
                                    break;
                                }

                                url = this.APPLICATION_CATEGORY_SERVICE;

                                url += options ? options : "";;
                                _context5.prev = 4;
                                _context5.next = 7;
                                return this.data.get(url);

                            case 7:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.appCatsArray = serverResponse;
                                }
                                _context5.next = 14;
                                break;

                            case 11:
                                _context5.prev = 11;
                                _context5.t0 = _context5['catch'](4);

                                console.log(_context5.t0);

                            case 14:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this, [[4, 11]]);
            }));

            function getDownloadCategoriesArray(_x4, _x5) {
                return _ref5.apply(this, arguments);
            }

            return getDownloadCategoriesArray;
        }();

        Downloads.prototype.selectCategory = function selectCategory(index) {
            if (!index && index != 0) {
                this.selectedCat = this.emptyCat();
            } else {
                try {
                    this.selectedCat = this.utils.copyObject(this.appCatsArray[index]);
                    this.editCatIndex = index;
                } catch (error) {
                    this.selectedCat = this.emptyCat();
                }
            }
        };

        Downloads.prototype.selectCategoryByCode = function selectCategoryByCode(code) {
            var _this = this;

            if (!code && code != 0) {
                this.selectedCat = this.emptyCat();
            } else {
                try {
                    this.editCatIndex = 0;
                    this.appCatsArray.forEach(function (item, index) {
                        if (item.downCatcode == code) _this.editCatIndex = index;
                    });
                    this.selectedCat = this.utils.copyObject(this.appCatsArray[this.editCatIndex]);
                } catch (error) {
                    this.selectedCat = this.emptyCat();
                }
            }
        };

        Downloads.prototype.emptyCat = function emptyCat() {
            var newObj = new Object();
            newObj.code = 0;
            newObj.description = "";

            return newObj;
        };

        Downloads.prototype.documentsExist = function documentsExist(code) {
            if (!code && code != 0) {
                return false;
            } else {
                for (var i = 0; i < this.appDownloadsArray.length; i++) {
                    if (this.appDownloadsArray[i].downCatcode == code) return true;
                }
                return false;
            }
        };

        Downloads.prototype.saveCategory = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var _serverResponse2, serverResponse;

                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (this.selectedCat) {
                                    _context6.next = 2;
                                    break;
                                }

                                return _context6.abrupt('return');

                            case 2:
                                if (this.selectedCat._id) {
                                    _context6.next = 10;
                                    break;
                                }

                                _context6.next = 5;
                                return this.data.saveObject(this.selectedCat, this.APPLICATION_CATEGORY_SERVICE, "post");

                            case 5:
                                _serverResponse2 = _context6.sent;

                                if (!_serverResponse2.error) {
                                    this.appCatsArray.push(_serverResponse2);
                                    this.selectedCat = serverReponse;
                                    this.editCatIndex = this.appCatsArrayInternal.length - 1;
                                }
                                return _context6.abrupt('return', _serverResponse2);

                            case 10:
                                _context6.next = 12;
                                return this.data.saveObject(this.selectedCat, this.APPLICATION_CATEGORY_SERVICE, "put");

                            case 12:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.appCatsArray[this.editCatIndex] = this.utils.copyObject(this.selectedCat, this.appCatsArray[this.editCatIndex]);
                                }
                                return _context6.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function saveCategory() {
                return _ref6.apply(this, arguments);
            }

            return saveCategory;
        }();

        Downloads.prototype.deleteCat = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.selectedCat._id) {
                                    _context7.next = 8;
                                    break;
                                }

                                _context7.next = 3;
                                return this.data.deleteObject(this.APPLICATION_CATEGORY_SERVICE + '/' + this.selectedCat._id);

                            case 3:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    this.appCatsArray.splice(this.editCatIndex, 1);
                                    this.editCatIndex = -1;
                                }
                                return _context7.abrupt('return', serverResponse);

                            case 8:
                                return _context7.abrupt('return', { error: "no category selected" });

                            case 9:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function deleteCat() {
                return _ref7.apply(this, arguments);
            }

            return deleteCat;
        }();

        return Downloads;
    }()) || _class);
});
define('resources/data/events',['exports', 'aurelia-framework', './dataServices', '../utils/utils'], function (exports, _aureliaFramework, _dataServices, _utils) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Events = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Events = exports.Events = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils), _dec(_class = function () {
        function Events(data, utils) {
            _classCallCheck(this, Events);

            this.EVENTS_SERVICE = 'events';

            this.data = data;
            this.utils = utils;
        }

        Events.prototype.getEventsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.eventArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.EVENTS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    if (Object.prototype.toString.call(serverResponse) == '[object Array]') {
                                        this.eventArray = serverResponse;
                                    } else {
                                        this.eventArray = new Array();;
                                    }
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getEventsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getEventsArray;
        }();

        Events.prototype.selectEvent = function selectEvent(index) {
            if (index === undefined) {
                this.selectedEvent = this.emptyEvent();
            } else {
                this.selectedEvent = this.utils.copyObject(this.eventArray[index]);
                this.editIndex = index;
            }
        };

        Events.prototype.selectEventById = function selectEventById(eventId) {
            if (eventId == undefined) {
                this.selectedEvent = this.emptyEvent();
            } else {
                for (var i = 0; i < this.eventArray.length; i++) {
                    if (this.eventArray[i]._id === eventId) {
                        this.editIndex = i;
                        this.selectedEvent = this.utils.copyObject(this.eventArray[i]);
                        return;
                    }
                }
            }
            this.selectedEvent = this.emptyEvent();
        };

        Events.prototype.emptyEvent = function emptyEvent() {
            var obj = new Object();
            obj.title = "";
            obj.eventType = "";
            obj.allDay = false;
            obj.notes = "";
            obj.scope = "p";
            return obj;
        };

        Events.prototype.saveEvent = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var response, _response;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedEvent._id) {
                                    _context2.next = 8;
                                    break;
                                }

                                _context2.next = 3;
                                return this.data.saveObject(this.selectedEvent, this.EVENTS_SERVICE, "post");

                            case 3:
                                response = _context2.sent;

                                if (!response.error) {
                                    if (this.eventArray) {
                                        this.selectedEvent = response;
                                        this.eventArray.push(response);
                                    }
                                } else {
                                    this.data.processError(response, "There was an error creating the event.");
                                }
                                return _context2.abrupt('return', response);

                            case 8:
                                _context2.next = 10;
                                return this.data.saveObject(this.selectedEvent, this.EVENTS_SERVICE, "put");

                            case 10:
                                _response = _context2.sent;

                                if (!_response.error) {
                                    if (this.eventArray) {
                                        this.eventArray[this.editIndex] = this.utils.copyObject(this.selectedEvent, this.eventArray[this.editIndex]);
                                    }
                                }
                                return _context2.abrupt('return', _response);

                            case 13:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveEvent() {
                return _ref2.apply(this, arguments);
            }

            return saveEvent;
        }();

        Events.prototype.deleteEvent = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.selectedEvent._id) {
                                    _context3.next = 6;
                                    break;
                                }

                                _context3.next = 3;
                                return this.data.deleteObject(this.EVENTS_SERVICE + '/' + this.selectedEvent._id);

                            case 3:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.eventArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                }
                                return _context3.abrupt('return', serverResponse);

                            case 6:
                                return _context3.abrupt('return', null);

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function deleteEvent() {
                return _ref3.apply(this, arguments);
            }

            return deleteEvent;
        }();

        return Events;
    }()) || _class);
});
define('resources/data/helpTickets',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.HelpTickets = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var HelpTickets = exports.HelpTickets = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function HelpTickets(data, utils, config) {
            _classCallCheck(this, HelpTickets);

            this.newHelpTicket = false;
            this.HELP_TICKET_SERVICES = 'helpTickets';
            this.HELP_TICKET_CONTENT_SERVICES = "helpTickets/content/HELPTICKETID/STATUS";
            this.HELP_TICKET_LOCK_SERVICES = "helpTicketLocks";
            this.HELP_TICKET_TYPES = "helpTicketsTypes";
            this.HELP_TICKET_EMAIL = "helpTickets/sendMail";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        HelpTickets.prototype.getHelpTicketArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.helpTicketsArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.HELP_TICKET_SERVICES;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.helpTicketsArray = serverResponse;
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getHelpTicketArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getHelpTicketArray;
        }();

        HelpTickets.prototype.getHelpTicketsArrayAnalytics = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!(!this.requestsArray || refresh)) {
                                    _context2.next = 13;
                                    break;
                                }

                                url = this.HELP_TICKET_SERVICES + "/analytics";

                                url += options ? options : "";
                                _context2.prev = 3;
                                _context2.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.helpTicketArrayAnalytics = serverResponse;
                                }
                                _context2.next = 13;
                                break;

                            case 10:
                                _context2.prev = 10;
                                _context2.t0 = _context2['catch'](3);

                                console.log(_context2.t0);

                            case 13:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this, [[3, 10]]);
            }));

            function getHelpTicketsArrayAnalytics(_x3, _x4) {
                return _ref2.apply(this, arguments);
            }

            return getHelpTicketsArrayAnalytics;
        }();

        HelpTickets.prototype.getCurrentCount = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(options) {
                var url, response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                url = this.HELP_TICKET_SERVICES + '/current/count';

                                url += options ? "/" + options : "";
                                _context3.next = 4;
                                return this.data.get(url);

                            case 4:
                                response = _context3.sent;

                                if (response.status) {
                                    _context3.next = 12;
                                    break;
                                }

                                this.newHelpTickets = this.utils.countItems(this.config.NEW_HELPTICKET_STATUS, 'helpTicketStatus', response);
                                this.underReviewHelpTickets = this.utils.countItems(this.config.UNDER_REVIEW_HELPTICKET_STATUS, 'helpTicketStatus', response);
                                this.customerActionHelpTickets = this.utils.countItems(this.config.CUSTOMER_ACTION_HELPTICKET_STATUS, 'helpTicketStatus', response);
                                return _context3.abrupt('return', response.count);

                            case 12:
                                return _context3.abrupt('return', null);

                            case 13:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function getCurrentCount(_x5) {
                return _ref3.apply(this, arguments);
            }

            return getCurrentCount;
        }();

        HelpTickets.prototype.selectHelpTicket = function selectHelpTicket(index) {
            if (!index && index != 0) {
                this.emptyHelpTicket();
            } else {
                try {
                    this.selectedHelpTicket = this.utils.copyObject(this.helpTicketsArray[index]);
                    this.newHelpTicket = false;
                    this.editIndex = index;
                } catch (error) {
                    this.selectedHelpTicket = this.emptyHelpTicket();
                }
            }
        };

        HelpTickets.prototype.selectHelpTicketByID = function selectHelpTicketByID(id) {
            var _this = this;

            this.helpTicketsArray.forEach(function (item, index) {
                if (item._id === id) {
                    _this.selectedHelpTicket = _this.utils.copyObject(item);
                    _this.editIndex = index;
                    return;
                }
            });
            return null;
        };

        HelpTickets.prototype.emptyHelpTicket = function emptyHelpTicket() {
            var newHelpTicketObj = new Object();

            newHelpTicketObj.sessionId = "";
            newHelpTicketObj.type = "";
            newHelpTicketObj.courseId = "";
            newHelpTicketObj.personId = "";
            newHelpTicketObj.helpTicketType = "";
            newHelpTicketObj.helpTicketStatus = this.config.NEW_HELPTICKET_STATUS;
            newHelpTicketObj.priority = 0;
            newHelpTicketObj.content = new Array();
            newHelpTicketObj.owner = new Array();
            newHelpTicketObj.createdDate = new Date();
            newHelpTicketObj.modifiedDate = new Date();
            newHelpTicketObj.audit = new Array();
            newHelpTicketObj.audit.push({
                event: 'Created',
                eventDate: new Date()
            });

            this.selectedHelpTicket = newHelpTicketObj;

            this.emptyHelpTicketContent();
        };

        HelpTickets.prototype.selectHelpTicketContent = function selectHelpTicketContent(index) {
            if (!index && index != 0) {
                this.emptyHelpTicketContent();
            } else {
                try {} catch (error) {
                    console.log(error);
                    this.emptyHelpTicketContent();
                }
            }
        };

        HelpTickets.prototype.emptyHelpTicketContent = function emptyHelpTicketContent() {
            var newHelpTicketContent = new Object();
            newHelpTicketContent.type = 0;
            newHelpTicketContent.createdDate = new Date();
            newHelpTicketContent.helpTicketId = "";
            newHelpTicketContent.files = new Array();
            newHelpTicketContent.confidential = false;
            newHelpTicketContent.personId = "";
            newHelpTicketContent.content = {};
            newHelpTicketContent.content.comments = "";
            this.selectedHelpTicketContent = newHelpTicketContent;
        };

        HelpTickets.prototype.updateOwner = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(email, userObj) {
                var response;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (this.selectedHelpTicket) {
                                    _context4.next = 2;
                                    break;
                                }

                                return _context4.abrupt('return');

                            case 2:
                                _context4.next = 4;
                                return this.data.saveObject(email, this.HELP_TICKET_SERVICES + "/owner/" + this.selectedHelpTicket._id, "put");

                            case 4:
                                response = _context4.sent;

                                if (!response.error) {
                                    if (email.email) {
                                        email.helpTicketNo = response.helpTicketNo;
                                        this.data.saveObject(email, this.HELP_TICKET_EMAIL, "post");
                                    }
                                    this.selectedHelpTicket.owner[0].personId = {
                                        _id: userObj._id,
                                        firstName: userObj.firstName,
                                        lastName: userObj.lastName,
                                        fullName: userObj.fullName
                                    };
                                    this.helpTicketsArray[this.helpTicketsArray[this.editIndex].baseIndex] = this.utils.copyObject(this.selectedHelpTicket, this.helpTicketsArray[this.helpTicketsArray[this.editIndex].baseIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket.");
                                }
                                return _context4.abrupt('return', response);

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function updateOwner(_x6, _x7) {
                return _ref4.apply(this, arguments);
            }

            return updateOwner;
        }();

        HelpTickets.prototype.updateStatus = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(email) {
                var response;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (this.selectedHelpTicket) {
                                    _context5.next = 2;
                                    break;
                                }

                                return _context5.abrupt('return');

                            case 2:
                                _context5.next = 4;
                                return this.data.saveObject(this.selectedHelpTicket, this.HELP_TICKET_SERVICES + "/status/" + this.selectedHelpTicket._id, "put");

                            case 4:
                                response = _context5.sent;

                                if (!response.error) {
                                    if (email.email) this.data.saveObject(email, this.HELP_TICKET_EMAIL, "post");
                                    this.helpTicketsArray[this.editIndex].helpTicketStatus = response.helpTicketStatus;
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket.");
                                }
                                return _context5.abrupt('return', response);

                            case 7:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function updateStatus(_x8) {
                return _ref5.apply(this, arguments);
            }

            return updateStatus;
        }();

        HelpTickets.prototype.updateKeywords = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var response;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (this.selectedHelpTicket) {
                                    _context6.next = 2;
                                    break;
                                }

                                return _context6.abrupt('return');

                            case 2:
                                _context6.next = 4;
                                return this.data.saveObject(this.selectedHelpTicket, this.HELP_TICKET_SERVICES + "/keywords/" + this.selectedHelpTicket._id, "put");

                            case 4:
                                response = _context6.sent;

                                if (!response.error) {
                                    this.helpTicketsArray[this.editIndex].keyWords = response.keyWords;
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket.");
                                }
                                return _context6.abrupt('return', response);

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function updateKeywords() {
                return _ref6.apply(this, arguments);
            }

            return updateKeywords;
        }();

        HelpTickets.prototype.saveHelpTicket = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(email) {
                var url, response;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (this.selectedHelpTicket) {
                                    _context7.next = 2;
                                    break;
                                }

                                return _context7.abrupt('return');

                            case 2:
                                url = this.HELP_TICKET_SERVICES;

                                if (this.selectedHelpTicket._id) {
                                    _context7.next = 11;
                                    break;
                                }

                                _context7.next = 6;
                                return this.data.saveObject(this.selectedHelpTicket, url, "post");

                            case 6:
                                response = _context7.sent;

                                if (!response.error) {
                                    if (email.email) {
                                        email.helpTicketNo = response.helpTicketNo;
                                        this.data.saveObject(email, this.HELP_TICKET_EMAIL, "post");
                                    }
                                    this.selectedHelpTicket = this.utils.copyObject(response);
                                    if (this.helpTicketsArray) this.helpTicketsArray.push(this.selectedHelpTicket);
                                } else {
                                    this.data.processError(response, "There was an error creating the help ticket.");
                                }
                                return _context7.abrupt('return', response);

                            case 11:
                                _context7.next = 13;
                                return this.data.saveObject(this.selectedHelpTicket, url, "put");

                            case 13:
                                response = _context7.sent;

                                if (!response.error) {
                                    if (email.email) {
                                        this.selectedHelpTicket = this.utils.copyObject(response);
                                    }
                                    this.helpTicketsArray[this.editIndex] = this.utils.copyObject(this.selectedHelpTicket, this.helpTicketsArray[this.editIndex]);
                                    this.data.saveObject(email, this.HELP_TICKET_EMAIL, "post");
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket.");
                                }
                                return _context7.abrupt('return', response);

                            case 16:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveHelpTicket(_x9) {
                return _ref7.apply(this, arguments);
            }

            return saveHelpTicket;
        }();

        HelpTickets.prototype.saveHelpTicketResponse = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(email) {
                var url, response;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (!this.selectedHelpTicket._id) {
                                    _context8.next = 7;
                                    break;
                                }

                                url = this.HELP_TICKET_CONTENT_SERVICES.replace("HELPTICKETID", this.selectedHelpTicket._id).replace("STATUS", this.selectedHelpTicket.helpTicketStatus);
                                _context8.next = 4;
                                return this.data.saveObject(this.selectedHelpTicketContent, url, "put");

                            case 4:
                                response = _context8.sent;

                                if (!response.error) {
                                    if (!this.selectedHelpTicketContent.confidential && email.email) this.data.saveObject(email, this.HELP_TICKET_EMAIL, "post");
                                    this.selectedHelpTicket.content.push(response);
                                    this.helpTicketsArray[this.editIndex] = this.utils.copyObject(this.selectedHelpTicket, this.helpTicketsArray[this.editIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket.");
                                }
                                return _context8.abrupt('return', response);

                            case 7:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function saveHelpTicketResponse(_x10) {
                return _ref8.apply(this, arguments);
            }

            return saveHelpTicketResponse;
        }();

        HelpTickets.prototype.isHelpTicketDirty = function isHelpTicketDirty(obj, skip) {
            if (this.selectedHelpTicket) {
                if (this.selectedHelpTicket._id) {
                    var obj = obj ? this.helpTicketsArray[this.editIndex] : obj;
                } else {
                    var obj = this.emptyHelpTicket();
                }
                return this.utils.objectsEqual(this.selectedHelpTicket, obj, skip);
            }
            return new Array();
        };

        HelpTickets.prototype.uploadFile = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(files, content) {
                var response;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                _context9.next = 2;
                                return this.data.uploadFiles(files, this.HELP_TICKET_SERVICES + "/upload/" + this.selectedHelpTicket._id + '/' + this.selectedHelpTicket.helpTicketNo + '/' + content);

                            case 2:
                                response = _context9.sent;

                                if (!response.error) {
                                    this.selectedHelpTicket = this.utils.copyObject(response);
                                    this.helpTicketsArray[this.editIndex] = this.utils.copyObject(this.selectedHelpTicket, this.helpTicketsArray[this.editIndex]);
                                }

                            case 4:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function uploadFile(_x11, _x12) {
                return _ref9.apply(this, arguments);
            }

            return uploadFile;
        }();

        HelpTickets.prototype.getHelpTicketTypes = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                if (!(!this.helpTicketTypesArray || refresh)) {
                                    _context10.next = 13;
                                    break;
                                }

                                url = this.HELP_TICKET_TYPES;

                                url += options ? options : "";
                                _context10.prev = 3;
                                _context10.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context10.sent;

                                if (!serverResponse.error) {
                                    this.helpTicketTypesArray = serverResponse;
                                }
                                _context10.next = 13;
                                break;

                            case 10:
                                _context10.prev = 10;
                                _context10.t0 = _context10['catch'](3);

                                console.log(_context10.t0);

                            case 13:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this, [[3, 10]]);
            }));

            function getHelpTicketTypes(_x13, _x14) {
                return _ref10.apply(this, arguments);
            }

            return getHelpTicketTypes;
        }();

        HelpTickets.prototype.selectHelpTicketTypeCategory = function selectHelpTicketTypeCategory(index) {
            if (!index && index != 0) {
                this.selectedHelpTicketType = this.emptyHelpTicketType();
            } else {
                try {
                    this.selectedHelpTicketType = this.utils.copyObject(this.helpTicketTypesArray[index]);
                    this.editTypeIndex = index;
                } catch (error) {
                    this.selectedHelpTicket = this.emptyHelpTicketType();
                }
            }
        };

        HelpTickets.prototype.emptyHelpTicketType = function emptyHelpTicketType() {
            var obj = new Object();
            return obj;
        };

        HelpTickets.prototype.saveHelpTicketType = function () {
            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
                var url, response;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                if (this.selectedHelpTicketType) {
                                    _context11.next = 2;
                                    break;
                                }

                                return _context11.abrupt('return');

                            case 2:
                                url = this.HELP_TICKET_TYPES;

                                if (this.selectedHelpTicketType._id) {
                                    _context11.next = 11;
                                    break;
                                }

                                _context11.next = 6;
                                return this.data.saveObject(this.selectedHelpTicket, url, "post");

                            case 6:
                                response = _context11.sent;

                                if (!response.error) {
                                    this.selectedHelpTicketType = this.utils.copyObject(response);
                                    if (this.helpTicketTypesArray) this.helpTicketTypesArray.push(this.selectedHelpTicketType);
                                } else {
                                    this.data.processError(response, "There was an error creating the help ticket type.");
                                }
                                return _context11.abrupt('return', response);

                            case 11:
                                _context11.next = 13;
                                return this.data.saveObject(this.selectedHelpTicketType, url, "put");

                            case 13:
                                response = _context11.sent;

                                if (!response.error) {
                                    this.selectedHelpTicketType = this.utils.copyObject(response);
                                    this.helpTicketTypesArray[this.editTypeIndex] = this.utils.copyObject(this.selectedHelpTicketType, this.helpTicketTypesArray[this.editTypeIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the help ticket type.");
                                }
                                return _context11.abrupt('return', response);

                            case 16:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, this);
            }));

            function saveHelpTicketType() {
                return _ref11.apply(this, arguments);
            }

            return saveHelpTicketType;
        }();

        HelpTickets.prototype.groupRequestsByType = function groupRequestsByType() {
            var _this2 = this;

            if (!this.helpTicketArrayAnalytics) {
                return;
            }
            var sortedArray = this.helpTicketArrayAnalytics.sort(function (a, b) {
                var result = a.helpTicketType < b.helpTicketType ? -1 : a.helpTicketType > b.helpTicketType ? 1 : 0;
                return result;
            });

            this.helpTicketTypeArrayAnalytics = new Array();
            var type = "";
            var templateObj = new Object({ helpTicketType: "", count: 0 });

            sortedArray.forEach(function (item) {
                if (item.helpTicketType != type) {
                    type = item.helpTicketType;
                    var obj = _this2.utils.copyObject(templateObj);
                    obj.helpTicketType = item.helpTicketType;
                    _this2.helpTicketTypeArrayAnalytics.push(obj);
                }
                _this2.helpTicketTypeArrayAnalytics[_this2.helpTicketTypeArrayAnalytics.length - 1].count += 1;
            });
        };

        HelpTickets.prototype.groupRequestsByCurriculum = function groupRequestsByCurriculum() {
            var _this3 = this;

            if (!this.helpTicketArrayAnalytics) {
                return;
            }

            var filteredArray = this.helpTicketArrayAnalytics.filter(function (item) {
                return item.content[0].content.curriculumTitle != undefined;
            });

            var sortedArray = filteredArray.sort(function (a, b) {
                var result = a.content[0].content.curriculumTitle < b.content[0].content.curriculumTitle ? -1 : a.content[0].content.curriculumTitle > b.content[0].content.curriculumTitle ? 1 : 0;
                return result;
            });

            this.helpTicketCurriculumArrayAnalytics = new Array();
            var type = "";
            var templateObj = new Object({ curriculum: "", count: 0 });

            sortedArray.forEach(function (item) {
                if (item.content[0].content.curriculumTitle != type) {
                    type = item.content[0].content.curriculumTitle;
                    var obj = _this3.utils.copyObject(templateObj);
                    obj.curriculumTitle = item.content[0].content.curriculumTitle;
                    _this3.helpTicketCurriculumArrayAnalytics.push(obj);
                }
                if (_this3.helpTicketCurriculumArrayAnalytics[_this3.helpTicketCurriculumArrayAnalytics.length - 1]) _this3.helpTicketCurriculumArrayAnalytics[_this3.helpTicketCurriculumArrayAnalytics.length - 1].count += 1;
            });
        };

        HelpTickets.prototype.groupHelpTicketsByInstitution = function groupHelpTicketsByInstitution() {
            var _this4 = this;

            if (!this.helpTicketArrayAnalytics) {
                return;
            }

            var sortedArray = this.helpTicketArrayAnalytics.sort(function (a, b) {
                var result = a.institutionId.name < b.institutionId.name ? -1 : a.institutionId.name > b.institutionId.name ? 1 : 0;
                return result;
            });

            this.helpTicketInstitutionArrayAnalytics = new Array();
            var type = "";
            var templateObj = new Object({ institution: "", count: 0 });

            sortedArray.forEach(function (item) {
                if (item.institutionId.name != type) {
                    type = item.institutionId.name;
                    var obj = _this4.utils.copyObject(templateObj);
                    obj.institution = item.institutionId.name;
                    _this4.helpTicketInstitutionArrayAnalytics.push(obj);
                }
                if (_this4.helpTicketInstitutionArrayAnalytics[_this4.helpTicketInstitutionArrayAnalytics.length - 1]) _this4.helpTicketInstitutionArrayAnalytics[_this4.helpTicketInstitutionArrayAnalytics.length - 1].count += 1;
            });
        };

        HelpTickets.prototype.groupHelpTicketsByPeople = function groupHelpTicketsByPeople() {
            var _this5 = this;

            if (!this.helpTicketArrayAnalytics) {
                return;
            }

            var sortedArray = this.helpTicketArrayAnalytics.sort(function (a, b) {
                var result = a.personId.fullName < b.personId.fullName ? -1 : a.personId.fullName > b.personId.fullName ? 1 : 0;
                return result;
            });

            this.helpTicketPeopleArrayAnalytics = new Array();
            var type = "";
            var templateObj = new Object({ name: "", count: 0 });

            sortedArray.forEach(function (item) {
                if (item.personId.fullName != type) {
                    type = item.personId.fullName;
                    var obj = _this5.utils.copyObject(templateObj);
                    obj.name = item.personId.fullName;
                    _this5.helpTicketPeopleArrayAnalytics.push(obj);
                }
                if (_this5.helpTicketPeopleArrayAnalytics[_this5.helpTicketPeopleArrayAnalytics.length - 1]) _this5.helpTicketPeopleArrayAnalytics[_this5.helpTicketPeopleArrayAnalytics.length - 1].count += 1;
            });
        };

        HelpTickets.prototype.groupHelpTicketsByStatus = function groupHelpTicketsByStatus() {
            var _this6 = this;

            if (!this.helpTicketArrayAnalytics) {
                return;
            }

            var sortedArray = this.helpTicketArrayAnalytics.sort(function (a, b) {
                var result = a.helpTicketStatus < b.helpTicketStatus ? -1 : a.helpTicketStatus > b.helpTicketStatus ? 1 : 0;
                return result;
            });

            this.helpTicketStatusArrayAnalytics = new Array();
            var type = "";
            var templateObj = new Object({ helpTicketStatus: "", count: 0 });

            sortedArray.forEach(function (item) {
                if (item.helpTicketStatus != type) {
                    type = item.helpTicketStatus;
                    var obj = _this6.utils.copyObject(templateObj);
                    obj.helpTicketStatus = item.helpTicketStatus;
                    _this6.helpTicketStatusArrayAnalytics.push(obj);
                }
                if (_this6.helpTicketStatusArrayAnalytics[_this6.helpTicketStatusArrayAnalytics.length - 1]) _this6.helpTicketStatusArrayAnalytics[_this6.helpTicketStatusArrayAnalytics.length - 1].count += 1;
            });
        };

        HelpTickets.prototype.lockHelpTicket = function lockHelpTicket(obj) {
            if (obj.helpTicketId) {
                var response = this.data.saveObject(obj, this.HELP_TICKET_LOCK_SERVICES, "post");
            }
        };

        HelpTickets.prototype.getHelpTicketLock = function () {
            var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(id) {
                var response;
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                _context12.next = 2;
                                return this.data.get(this.HELP_TICKET_LOCK_SERVICES + "/" + id);

                            case 2:
                                response = _context12.sent;

                                if (response.error) {
                                    _context12.next = 7;
                                    break;
                                }

                                return _context12.abrupt('return', response);

                            case 7:
                                this.data.processError(response, "There was an error retrieving the help ticket lock.");

                            case 8:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, this);
            }));

            function getHelpTicketLock(_x15) {
                return _ref12.apply(this, arguments);
            }

            return getHelpTicketLock;
        }();

        HelpTickets.prototype.removeHelpTicketLock = function removeHelpTicketLock(id) {
            var response = this.data.deleteObject(this.HELP_TICKET_LOCK_SERVICES + "/" + id);
        };

        return HelpTickets;
    }()) || _class);
});
define('resources/data/inventory',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Inventory = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Inventory = exports.Inventory = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function Inventory(data, utils, config) {
            _classCallCheck(this, Inventory);

            this.INVENTORY_SERVICE = 'inventory';

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        Inventory.prototype.getInventoryArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.inventoryArray || refresh)) {
                                    _context.next = 18;
                                    break;
                                }

                                url = this.INVENTORY_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (serverResponse.error) {
                                    _context.next = 11;
                                    break;
                                }

                                this.inventoryArray = serverResponse;
                                _context.next = 12;
                                break;

                            case 11:
                                return _context.abrupt('return', undefined);

                            case 12:
                                _context.next = 18;
                                break;

                            case 14:
                                _context.prev = 14;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);
                                return _context.abrupt('return', undefined);

                            case 18:
                                return _context.abrupt('return', this.inventoryArray);

                            case 19:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 14]]);
            }));

            function getInventoryArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getInventoryArray;
        }();

        Inventory.prototype.selectInventory = function selectInventory(index) {
            if (!index && index != 0) {
                this.selectedInventory = this.emptyInventory();
            } else {
                try {
                    this.selectedInventory = this.utils.copyObject(this.inventoryArray[index]);
                    this.selectedIndex = index;
                } catch (error) {
                    this.selectedInventory = this.emptyInventory();
                }
            }
        };

        Inventory.prototype.emptyInventory = function emptyInventory() {
            var newObj = new Object();
            newObj.IPAddress = new Array();
            return newObj;
        };

        Inventory.prototype.saveInventory = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedInventory) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedInventory._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedInventory, this.INVENTORY_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.selectedInventory = _serverResponse;
                                    this.inventoryArray.push(this.selectedInventory);
                                    this.selectedIndex = this.inventoryArray.length - 1;
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedInventory, this.INVENTORY_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.inventoryArray[this.selectedIndex] = this.utils.copyObject(this.selectedInventory, this.inventoryArray[this.selectedIndex]);
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveInventory() {
                return _ref2.apply(this, arguments);
            }

            return saveInventory;
        }();

        Inventory.prototype.isDirty = function isDirty(obj) {
            if (this.selectedInventory) {
                if (!obj) {
                    var obj = this.emptyInventory();
                }
                var skip = ['file'];
                return this.utils.objectsEqual(this.selectedInventory, obj, skip);
            }
            return new Array();
        };

        return Inventory;
    }()) || _class);
});
define('resources/data/is4ua',['exports', 'aurelia-framework', './dataServices'], function (exports, _aureliaFramework, _dataServices) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.is4ua = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var is4ua = exports.is4ua = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices), _dec(_class = function () {
        function is4ua(data) {
            _classCallCheck(this, is4ua);

            this.data = data;
        }

        is4ua.prototype.loadIs4ua = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.data.get(this.data.IS4UA);

                            case 2:
                                responses = _context.sent;


                                this.personStatusArray = responses[0].personStatus;
                                this.deptArray = responses[0].deptCat;
                                this.specialArray = responses[0].personSpecialization;

                                this.sapProductsArray = responses[0].sapProducts;
                                this.uaCurriculumArray = responses[0].uaCurriculum;
                                this.uaDataSetsArray = responses[0].uaDatasets;

                                this.institutonStatusArray = responses[0].institutionStatus;
                                this.institutionTypes = responses[0].institutionTypes;
                                this.memberTypes = responses[0].memberTypes;
                                this.highestDegrees = responses[0].highestDegree;

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function loadIs4ua() {
                return _ref.apply(this, arguments);
            }

            return loadIs4ua;
        }();

        is4ua.prototype.loadProductKeys = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var responses;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return Promise.all([this.data.getAllObjects(this.data.SAP_PRODUCTS), this.data.getAllObjects(this.data.UA_CURRICULUM), this.data.getAllObjects(this.data.UA_DATA_SETS)]);

                            case 2:
                                responses = _context2.sent;

                                this.sapProductsArray = responses[0];
                                this.uaCurriculumArray = responses[1];
                                this.uaDataSetsArray = responses[2];

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function loadProductKeys() {
                return _ref2.apply(this, arguments);
            }

            return loadProductKeys;
        }();

        is4ua.prototype.loadPeopleKeys = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var responses;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return Promise.all([this.data.getAllObjects(this.data.UA_PERSON_STATUS), this.data.getAllObjects(this.data.UA_PERSON_DEPT), this.data.getAllObjects(this.data.UA_PERSON_SPECIAL)]);

                            case 2:
                                responses = _context3.sent;

                                this.personStatusArray = responses[0];
                                this.deptArray = responses[1];
                                this.specialArray = responses[2];

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function loadPeopleKeys() {
                return _ref3.apply(this, arguments);
            }

            return loadPeopleKeys;
        }();

        is4ua.prototype.loadInstitutionKeys = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var responses;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return Promise.all([this.data.getAllObjects(this.data.UA_INST_STATUS), this.data.getAllObjects(this.data.UA_INST_TYPES), this.data.getAllObjects(this.data.UA_MEMBER_TYPES), this.data.getAllObjects(this.data.UA_INST_DEGREES)]);

                            case 2:
                                responses = _context4.sent;

                                this.institutonStatusArray = responses[0];
                                this.institutionTypes = responses[1];
                                this.memberTypes = responses[2];
                                this.highestDegrees = responses[3];

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function loadInstitutionKeys() {
                return _ref4.apply(this, arguments);
            }

            return loadInstitutionKeys;
        }();

        return is4ua;
    }()) || _class);
});
define('resources/data/people',['exports', 'aurelia-framework', './dataServices', '../utils/utils'], function (exports, _aureliaFramework, _dataServices, _utils) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.People = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var People = exports.People = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils), _dec(_class = function () {
        function People(data, utils) {
            _classCallCheck(this, People);

            this.newObject = false;
            this.cleanObject = true;
            this.peopleArray = undefined;
            this.UCC_STAFF_SERVICE = 'uccStaff';
            this.PEOPLE_SERVICE = "people";
            this.PERSON_REGISTER = "people/register";
            this.CHECK_EMAIL = 'people/checkEmail';
            this.CHECK_NAME = 'people/checkName';
            this.SEND_MAIL = 'people/sendMail';
            this.PASSWORD_RESET = 'passwordReset';
            this.NOTES_SERVICE = "notes";
            this.INSTITUTION_SERVICES = "institutions";
            this.COURSES_SERVICE = 'courses';
            this.PEOPLE_UPLOAD_SERVICE = '/people/upload/';

            this.data = data;
            this.utils = utils;
        }

        People.prototype.getPeopleArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.peopleArray || refresh)) {
                                    _context.next = 19;
                                    break;
                                }

                                url = this.PEOPLE_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (serverResponse.error) {
                                    _context.next = 11;
                                    break;
                                }

                                this.peopleArray = serverResponse;
                                _context.next = 13;
                                break;

                            case 11:
                                this.data.processError(serverResponse);
                                return _context.abrupt('return', undefined);

                            case 13:
                                _context.next = 19;
                                break;

                            case 15:
                                _context.prev = 15;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);
                                return _context.abrupt('return', undefined);

                            case 19:
                                return _context.abrupt('return', this.peopleArray);

                            case 20:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 15]]);
            }));

            function getPeopleArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getPeopleArray;
        }();

        People.prototype.getUCCStaff = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(uccRoles) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                url = this.UCC_STAFF_SERVICE + '/' + uccRoles;
                                _context2.prev = 1;
                                _context2.next = 4;
                                return this.data.get(url);

                            case 4:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.uccPeople = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context2.next = 11;
                                break;

                            case 8:
                                _context2.prev = 8;
                                _context2.t0 = _context2['catch'](1);

                                console.log(_context2.t0);

                            case 11:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this, [[1, 8]]);
            }));

            function getUCCStaff(_x3) {
                return _ref2.apply(this, arguments);
            }

            return getUCCStaff;
        }();

        People.prototype.getInstitutionPeople = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!(!this.peopleArray || refresh)) {
                                    _context3.next = 13;
                                    break;
                                }

                                url = this.PEOPLE_SERVICE;

                                url += options ? options : "";
                                _context3.prev = 3;
                                _context3.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.instutionPeopleArray = serverResponse;
                                }
                                _context3.next = 13;
                                break;

                            case 10:
                                _context3.prev = 10;
                                _context3.t0 = _context3['catch'](3);

                                console.log(_context3.t0);

                            case 13:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this, [[3, 10]]);
            }));

            function getInstitutionPeople(_x4, _x5) {
                return _ref3.apply(this, arguments);
            }

            return getInstitutionPeople;
        }();

        People.prototype.getPeopleBulkEmailArray = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!(!this.peopleBulkEmailArray || refresh)) {
                                    _context4.next = 13;
                                    break;
                                }

                                url = this.PEOPLE_SERVICE + '/bulkEmail';

                                url += options ? options : "";
                                _context4.prev = 3;
                                _context4.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.peopleBulkEmailArray = serverResponse;
                                } else {
                                    this.data.processError(serverResponse);
                                }
                                _context4.next = 13;
                                break;

                            case 10:
                                _context4.prev = 10;
                                _context4.t0 = _context4['catch'](3);

                                console.log(_context4.t0);

                            case 13:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this, [[3, 10]]);
            }));

            function getPeopleBulkEmailArray(_x6, _x7) {
                return _ref4.apply(this, arguments);
            }

            return getPeopleBulkEmailArray;
        }();

        People.prototype.getPerson = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(id) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                url = this.PEOPLE_SERVICE + "/" + id;
                                _context5.prev = 1;
                                _context5.next = 4;
                                return this.data.get(url);

                            case 4:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.selectedPerson = serverResponse;
                                } else {
                                    this.selectedPerson = undefined;
                                    this.data.processError(serverResponse);
                                }
                                _context5.next = 12;
                                break;

                            case 8:
                                _context5.prev = 8;
                                _context5.t0 = _context5['catch'](1);

                                this.selectedPerson = undefined;
                                console.log(_context5.t0);

                            case 12:
                                return _context5.abrupt('return', this.selectedPerson);

                            case 13:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this, [[1, 8]]);
            }));

            function getPerson(_x8) {
                return _ref5.apply(this, arguments);
            }

            return getPerson;
        }();

        People.prototype.selectPerson = function selectPerson(index, array) {
            if (index === undefined) {
                this.selectedPerson = this.emptyPerson();
            } else {
                if (array && array === 'i') {
                    this.selectedPerson = this.utils.copyObject(this.instutionPeopleArray[index]);
                    this.editIndex = index;
                } else {
                    this.selectedPerson = this.utils.copyObject(this.peopleArray[index]);
                    this.editIndex = index;
                }
            }
        };

        People.prototype.selectedPersonFromId = function selectedPersonFromId(id, array) {
            var _this = this;

            if (array && array === 'i') {
                this.instutionPeopleArray.forEach(function (item, index) {
                    if (item._id === id) {
                        _this.editIndex = index;
                        _this.selectedPerson = _this.utils.copyObject(item);
                    }
                });
                return;
            } else {
                this.peopleArray.forEach(function (item, index) {
                    if (item._id === id) {
                        _this.editIndex = index;
                        _this.selectedPerson = _this.utils.copyObject(item);
                    }
                });
                return;
            }
        };

        People.prototype.emptyPerson = function emptyPerson() {
            var obj = new Object();
            obj.lastName = "";
            obj.firstName = "";
            obj.middleName = "";
            obj.lastName = "";
            obj.nickName = "";
            obj.status = "";
            obj.phone = "";
            obj.mobile = "";
            obj.email = "";
            obj.gender = "";
            obj.roles = new Array();
            obj.roles.push("USER");
            obj.password = "";
            obj.institution = "";
            obj.active = false;
            obj.coursesArray = new Array();
            obj.file = new Object();
            var auditObj = {
                property: "Created",
                eventDate: new Date()
            };
            obj.audit = [auditObj];
            return obj;
        };

        People.prototype.checkEmail = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!this.selectedPerson.email) {
                                    _context6.next = 9;
                                    break;
                                }

                                _context6.next = 3;
                                return this.data.get(this.CHECK_EMAIL + '?email=' + this.selectedPerson.email);

                            case 3:
                                serverResponse = _context6.sent;

                                if (!(serverResponse.code === 409)) {
                                    _context6.next = 8;
                                    break;
                                }

                                return _context6.abrupt('return', true);

                            case 8:
                                return _context6.abrupt('return', false);

                            case 9:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function checkEmail() {
                return _ref6.apply(this, arguments);
            }

            return checkEmail;
        }();

        People.prototype.checkName = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!(this.selectedPerson.firstName && this.selectedPerson.lastName && this.selectedPerson.institutionId)) {
                                    _context7.next = 9;
                                    break;
                                }

                                _context7.next = 3;
                                return this.data.get(thisCHECK_NAME + '?filter=[and]firstName|eq|' + this.selectedPerson.firstName + ':lastName|eq|' + this.selectedPerson.lastName + ':institutionId|eq|' + this.selectedPerson.institutionId);

                            case 3:
                                serverResponse = _context7.sent;

                                if (!(serverResponse.code === 409)) {
                                    _context7.next = 8;
                                    break;
                                }

                                return _context7.abrupt('return', true);

                            case 8:
                                return _context7.abrupt('return', false);

                            case 9:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function checkName() {
                return _ref7.apply(this, arguments);
            }

            return checkName;
        }();

        People.prototype.savePerson = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(register) {
                var url, _response, _response2;

                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (this.selectedPerson._id) {
                                    _context8.next = 9;
                                    break;
                                }

                                if (register) {
                                    url = this.PERSON_REGISTER;
                                } else {
                                    url = this.PEOPLE_SERVICE;
                                }
                                _context8.next = 4;
                                return this.data.saveObject(this.selectedPerson, url, "post");

                            case 4:
                                _response = _context8.sent;

                                if (!_response.error) {
                                    if (this.peopleArray) {
                                        this.peopleArray.push(_response);;
                                    }
                                } else {
                                    this.data.processError(_response, "There was an error creating the account.");
                                }
                                return _context8.abrupt('return', _response);

                            case 9:
                                _context8.next = 11;
                                return this.data.saveObject(this.selectedPerson, this.PEOPLE_SERVICE, "put");

                            case 11:
                                _response2 = _context8.sent;

                                if (!_response2.error) {
                                    if (this.peopleArray) {
                                        this.peopleArray[this.editIndex] = this.utils.copyObject(this.selectedPerson, this.peopleArray[this.editIndex]);
                                    }
                                }
                                return _context8.abrupt('return', _response2);

                            case 14:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function savePerson(_x9) {
                return _ref8.apply(this, arguments);
            }

            return savePerson;
        }();

        People.prototype.deletePerson = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                if (!this.selectedPerson._id) {
                                    _context9.next = 6;
                                    break;
                                }

                                _context9.next = 3;
                                return this.data.deleteObject(this.PEOPLE_SERVICE + '/' + this.selectedPerson._id);

                            case 3:
                                serverResponse = _context9.sent;

                                if (!serverResponse.error) {
                                    this.peopleArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                }
                                return _context9.abrupt('return', serverResponse);

                            case 6:
                                return _context9.abrupt('return', null);

                            case 7:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function deletePerson() {
                return _ref9.apply(this, arguments);
            }

            return deletePerson;
        }();

        People.prototype.isPersonDirty = function isPersonDirty(originalObj) {
            if (this.selectedPerson) {
                if (originalObj) {
                    var obj = originalObj;
                } else if (this.selectedPerson._id) {
                    var obj = this.selectedPersonFromId(this.selectedPerson._id);
                } else {
                    var obj = this.emptyPerson();
                }
                return this.utils.objectsEqual(this.selectedPerson, obj);
            }
        };

        People.prototype.uploadFile = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(files) {
                var response;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                _context10.next = 2;
                                return this.data.uploadFiles(files, this.PEOPLE_UPLOAD_SERVICE + "/" + this.selectedPerson._id);

                            case 2:
                                response = _context10.sent;

                            case 3:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function uploadFile(_x10) {
                return _ref10.apply(this, arguments);
            }

            return uploadFile;
        }();

        People.prototype.sendCustomerMessage = function () {
            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(message) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                if (!message.email) {
                                    _context11.next = 7;
                                    break;
                                }

                                _context11.next = 3;
                                return this.data.saveObject(message, this.SEND_MAIL, "put");

                            case 3:
                                serverResponse = _context11.sent;
                                return _context11.abrupt('return', serverResponse);

                            case 7:
                                return _context11.abrupt('return', { error: "no email" });

                            case 8:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, this);
            }));

            function sendCustomerMessage(_x11) {
                return _ref11.apply(this, arguments);
            }

            return sendCustomerMessage;
        }();

        People.prototype.sendNewRegisterEmail = function sendNewRegisterEmail(email) {
            this.data.saveObject(email, this.PERSON_REGISTER + "/facDev", 'post');
        };

        People.prototype.sendBuikEmail = function sendBuikEmail(email) {
            if (email.email) {
                var serverResponse = this.data.saveObject(email, this.PEOPLE_SERVICE + '/sendBulkEmail', "post");
                return serverResponse;
            } else {
                return { error: "no email" };
            }
        };

        People.prototype.updatePassword = function updatePassword(obj) {
            if (this.selectedPerson._id) {
                return this.data.saveObject(obj, this.PEOPLE_SERVICE + '/password/' + this.selectedPerson._id, "put");
            }
        };

        People.prototype.activateAccountEmail = function activateAccountEmail(email) {
            this.data.saveObject(email, this.PEOPLE_SERVICE + "/facDev/activate", 'post');
        };

        People.prototype.getInstitutionsArray = function () {
            var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(options, refresh) {
                var url, _response3;

                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                if (!(!this.institutionsArray || refresh)) {
                                    _context12.next = 7;
                                    break;
                                }

                                url = this.INSTITUTION_SERVICES;

                                url += options ? options : "";
                                _context12.next = 5;
                                return this.data.get(url);

                            case 5:
                                _response3 = _context12.sent;

                                if (!_response3.error) {
                                    this.institutionsArray = _response3;
                                } else {
                                    this.institutionsArray = undefined;
                                }

                            case 7:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, this);
            }));

            function getInstitutionsArray(_x12, _x13) {
                return _ref12.apply(this, arguments);
            }

            return getInstitutionsArray;
        }();

        People.prototype.getInstitution = function () {
            var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(id) {
                var url, response;
                return regeneratorRuntime.wrap(function _callee13$(_context13) {
                    while (1) {
                        switch (_context13.prev = _context13.next) {
                            case 0:
                                url = this.INSTITUTION_SERVICES + '/' + id;
                                _context13.next = 3;
                                return this.data.get(url);

                            case 3:
                                response = _context13.sent;

                                if (response.status) {
                                    _context13.next = 8;
                                    break;
                                }

                                return _context13.abrupt('return', response);

                            case 8:
                                return _context13.abrupt('return', { institutionStatus: '99' });

                            case 9:
                            case 'end':
                                return _context13.stop();
                        }
                    }
                }, _callee13, this);
            }));

            function getInstitution(_x14) {
                return _ref13.apply(this, arguments);
            }

            return getInstitution;
        }();

        People.prototype.selectInstitution = function selectInstitution(index) {
            if (index === undefined) {
                this.selectedInstitution = this.emptyInstitution();
                this.newInstitution = true;
            } else {
                try {
                    this.selectedInstitution = this.utils.copyObject(this.institutionsArray[index]);
                    this.newInstitution = false;
                    this.editInstitutionIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedInstitution = this.emptyInstitution();
                    this.newInstitution = true;
                }
            }
        };

        People.prototype.selectInstitutionByID = function selectInstitutionByID(id) {
            var _this2 = this;

            this.institutionsArray.forEach(function (item, index) {
                if (item._id === id) {
                    _this2.selectedInstitution = _this2.utils.copyObject(item);
                    _this2.editInstitutionIndex = index;
                    return;
                }
            });
            return null;
        };

        People.prototype.emptyInstitution = function emptyInstitution() {
            var newInstitution = new Object();
            newInstitution.joinDate = new Date();
            newInstitution.name = "";
            return newInstitution;
        };

        People.prototype.saveInstitution = function () {
            var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
                var _response4, _response5;

                return regeneratorRuntime.wrap(function _callee14$(_context14) {
                    while (1) {
                        switch (_context14.prev = _context14.next) {
                            case 0:
                                if (this.selectedInstitution._id) {
                                    _context14.next = 8;
                                    break;
                                }

                                _context14.next = 3;
                                return this.data.saveObject(this.selectedInstitution, this.INSTITUTION_SERVICES, "post");

                            case 3:
                                _response4 = _context14.sent;

                                if (!_response4.error) {
                                    if (this.institutionsArray) {
                                        this.institutionsArray.push(_response4);
                                    }
                                }
                                return _context14.abrupt('return', _response4);

                            case 8:
                                _context14.next = 10;
                                return this.data.saveObject(this.selectedInstitution, this.INSTITUTION_SERVICES, "put");

                            case 10:
                                _response5 = _context14.sent;

                                if (!_response5.status) {
                                    if (this.institutionsArray) {
                                        this.institutionsArray[this.editInstitutionIndex] = this.utils.copyObject(this.selectedInstitution, this.institutionsArray[this.editInstitutionIndex]);
                                    }
                                }
                                return _context14.abrupt('return', _response5);

                            case 13:
                            case 'end':
                                return _context14.stop();
                        }
                    }
                }, _callee14, this);
            }));

            function saveInstitution() {
                return _ref14.apply(this, arguments);
            }

            return saveInstitution;
        }();

        People.prototype.deleteInstitution = function () {
            var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee15$(_context15) {
                    while (1) {
                        switch (_context15.prev = _context15.next) {
                            case 0:
                                _context15.next = 2;
                                return this.data.deleteObject(this.INSTITUTION_SERVICES + '/' + this.selectedInstitution._id);

                            case 2:
                                serverResponse = _context15.sent;

                                if (!serverResponse.error) {
                                    this.institutionsArray.splice(this.editInstitutionIndex, 1);
                                    this.editInstitutionIndex = -1;
                                }
                                return _context15.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context15.stop();
                        }
                    }
                }, _callee15, this);
            }));

            function deleteInstitution() {
                return _ref15.apply(this, arguments);
            }

            return deleteInstitution;
        }();

        People.prototype.isInstitutionDirty = function isInstitutionDirty() {
            if (this.selectedInstitution) {
                if (this.selectedInstitution._id) {
                    var obj = this.institutionsArray[this.editInstitutionIndex];
                } else {
                    var obj = this.emptyInstitution();
                }
                return this.utils.objectsEqual(this.selectedInstitution, obj);
            }
        };

        People.prototype.getNotesArray = function () {
            var _ref16 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee16$(_context16) {
                    while (1) {
                        switch (_context16.prev = _context16.next) {
                            case 0:
                                if (!(!this.notesArray || refresh)) {
                                    _context16.next = 19;
                                    break;
                                }

                                url = this.NOTES_SERVICE;

                                url += options ? options : "";
                                _context16.prev = 3;
                                _context16.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context16.sent;

                                if (serverResponse.error) {
                                    _context16.next = 11;
                                    break;
                                }

                                this.notesArray = serverResponse;
                                _context16.next = 13;
                                break;

                            case 11:
                                this.data.processError(serverResponse);
                                return _context16.abrupt('return', undefined);

                            case 13:
                                _context16.next = 19;
                                break;

                            case 15:
                                _context16.prev = 15;
                                _context16.t0 = _context16['catch'](3);

                                console.log(_context16.t0);
                                return _context16.abrupt('return', undefined);

                            case 19:
                            case 'end':
                                return _context16.stop();
                        }
                    }
                }, _callee16, this, [[3, 15]]);
            }));

            function getNotesArray(_x15, _x16) {
                return _ref16.apply(this, arguments);
            }

            return getNotesArray;
        }();

        People.prototype.getRemindersArray = function () {
            var _ref17 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee17$(_context17) {
                    while (1) {
                        switch (_context17.prev = _context17.next) {
                            case 0:
                                if (!(!this.remindersArray || refresh)) {
                                    _context17.next = 21;
                                    break;
                                }

                                url = this.NOTES_SERVICE;

                                url += options ? options : "";
                                _context17.prev = 3;
                                _context17.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context17.sent;

                                if (serverResponse.error) {
                                    _context17.next = 13;
                                    break;
                                }

                                this.remindersArray = serverResponse;
                                if (Object.prototype.toString.call(this.remindersArray) === '[object Array]') {
                                    this.remindersArray = this.remindersArray.filter(function (item) {
                                        return item.isReminder;
                                    });
                                }
                                return _context17.abrupt('return', serverResponse);

                            case 13:
                                this.data.processError(serverResponse);
                                return _context17.abrupt('return', undefined);

                            case 15:
                                _context17.next = 21;
                                break;

                            case 17:
                                _context17.prev = 17;
                                _context17.t0 = _context17['catch'](3);

                                console.log(_context17.t0);
                                return _context17.abrupt('return', undefined);

                            case 21:
                            case 'end':
                                return _context17.stop();
                        }
                    }
                }, _callee17, this, [[3, 17]]);
            }));

            function getRemindersArray(_x17, _x18) {
                return _ref17.apply(this, arguments);
            }

            return getRemindersArray;
        }();

        People.prototype.selectNote = function selectNote(index) {
            if (index === undefined) {
                this.selectedNote = this.emptyNote();
            } else {
                try {
                    this.selectedNote = this.utils.copyObject(this.notesArray[index]);
                    this.editNoteIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedNote = this.emptyNote();
                }
            }
        };

        People.prototype.selectNoteById = function selectNoteById(id) {
            if (!id) return;
            for (var i = 0; i < this.notesArray.length; i++) {
                if (this.notesArray[i]._id === id) {
                    this.selectedNote = this.utils.copyObject(this.notesArray[i]);
                    this.editNoteIndex = i;
                    return;
                }
            }
            this.selectedNote = this.emptyNote();
        };

        People.prototype.emptyNote = function emptyNote() {
            var obj = new Object();
            obj.note = "";
            obj.dateCreated = new Date();
            obj.category = "";
            return obj;
        };

        People.prototype.saveNote = function () {
            var _ref18 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(index) {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee18$(_context18) {
                    while (1) {
                        switch (_context18.prev = _context18.next) {
                            case 0:
                                if (this.selectedNote) {
                                    _context18.next = 2;
                                    break;
                                }

                                return _context18.abrupt('return');

                            case 2:
                                if (this.selectedNote._id) {
                                    _context18.next = 10;
                                    break;
                                }

                                _context18.next = 5;
                                return this.data.saveObject(this.selectedNote, this.NOTES_SERVICE, "post");

                            case 5:
                                _serverResponse = _context18.sent;

                                if (!_serverResponse.error) {
                                    if (this.notesArray) {
                                        this.notesArray.push(this.selectedNote);
                                        this.editNoteIndex = this.notesArray.length - 1;
                                    }
                                } else {
                                    this.data.processError(response, "There was an error creating the note.");
                                }
                                return _context18.abrupt('return', _serverResponse);

                            case 10:
                                _context18.next = 12;
                                return this.data.saveObject(this.selectedNote, this.NOTES_SERVICE, "put");

                            case 12:
                                serverResponse = _context18.sent;

                                if (!serverResponse.error) {
                                    this.notesArray[this.editNoteIndex] = this.utils.copyObject(this.selectedNote, this.notesArray[this.editNoteIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the course.");
                                }
                                return _context18.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context18.stop();
                        }
                    }
                }, _callee18, this);
            }));

            function saveNote(_x19) {
                return _ref18.apply(this, arguments);
            }

            return saveNote;
        }();

        People.prototype.saveReminder = function () {
            var _ref19 = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(item, index) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee19$(_context19) {
                    while (1) {
                        switch (_context19.prev = _context19.next) {
                            case 0:
                                console.log(item);

                                if (!(item === undefined)) {
                                    _context19.next = 3;
                                    break;
                                }

                                return _context19.abrupt('return');

                            case 3:
                                _context19.next = 5;
                                return this.data.saveObject(item, this.NOTES_SERVICE, "put");

                            case 5:
                                serverResponse = _context19.sent;

                                if (!serverResponse.error) {
                                    this.remindersArray[index] = this.utils.copyObject(this.noteToSave, this.remindersArray[index]);
                                } else {
                                    this.data.processError(response, "There was an error updating the course.");
                                }
                                return _context19.abrupt('return', serverResponse);

                            case 8:
                            case 'end':
                                return _context19.stop();
                        }
                    }
                }, _callee19, this);
            }));

            function saveReminder(_x20, _x21) {
                return _ref19.apply(this, arguments);
            }

            return saveReminder;
        }();

        People.prototype.deleteNote = function () {
            var _ref20 = _asyncToGenerator(regeneratorRuntime.mark(function _callee20() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee20$(_context20) {
                    while (1) {
                        switch (_context20.prev = _context20.next) {
                            case 0:
                                if (this.selectedNote) {
                                    _context20.next = 2;
                                    break;
                                }

                                return _context20.abrupt('return');

                            case 2:
                                _context20.next = 4;
                                return this.data.deleteObject(this.NOTES_SERVICE + '/' + this.selectedNote._id);

                            case 4:
                                serverResponse = _context20.sent;

                                if (!serverResponse.error) {
                                    this.notesArray.splice(this.editNoteIndex, 1);
                                    this.editNoteIndex = -1;
                                }
                                return _context20.abrupt('return', serverResponse);

                            case 7:
                            case 'end':
                                return _context20.stop();
                        }
                    }
                }, _callee20, this);
            }));

            function deleteNote() {
                return _ref20.apply(this, arguments);
            }

            return deleteNote;
        }();

        People.prototype.getCoursesArray = function () {
            var _ref21 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(refresh, options, fields) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee21$(_context21) {
                    while (1) {
                        switch (_context21.prev = _context21.next) {
                            case 0:
                                if (!(!this.coursesArray || refresh)) {
                                    _context21.next = 14;
                                    break;
                                }

                                url = this.COURSES_SERVICE;

                                url += options ? options : "";
                                _context21.prev = 3;
                                _context21.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context21.sent;

                                if (!serverResponse.error) {
                                    this.coursesArray = serverResponse;
                                }
                                _context21.next = 13;
                                break;

                            case 10:
                                _context21.prev = 10;
                                _context21.t0 = _context21['catch'](3);

                                console.log(_context21.t0);

                            case 13:
                                ;

                            case 14:
                            case 'end':
                                return _context21.stop();
                        }
                    }
                }, _callee21, this, [[3, 10]]);
            }));

            function getCoursesArray(_x22, _x23, _x24) {
                return _ref21.apply(this, arguments);
            }

            return getCoursesArray;
        }();

        People.prototype.selectCourse = function selectCourse(index) {
            if (index === undefined) {
                this.selectedCourse = this.emptyCourse();
            } else {
                try {
                    this.selectedCourse = this.utils.copyObject(this.coursesArray[index]);
                    this.editCourseIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedCourse = this.emptyCourse();
                }
            }
        };

        People.prototype.emptyCourse = function emptyCourse() {
            var newObj = new Object();;
            newObj.name = "";
            newObj.description = "";
            newObj.number = "";
            newObj.active = true;
            return newObj;
        };

        People.prototype.saveCourse = function () {
            var _ref22 = _asyncToGenerator(regeneratorRuntime.mark(function _callee22() {
                var _serverResponse2, serverResponse;

                return regeneratorRuntime.wrap(function _callee22$(_context22) {
                    while (1) {
                        switch (_context22.prev = _context22.next) {
                            case 0:
                                if (this.selectedCourse) {
                                    _context22.next = 2;
                                    break;
                                }

                                return _context22.abrupt('return');

                            case 2:
                                if (this.selectedCourse._id) {
                                    _context22.next = 10;
                                    break;
                                }

                                _context22.next = 5;
                                return this.data.saveObject(this.selectedCourse, this.COURSES_SERVICE, "post");

                            case 5:
                                _serverResponse2 = _context22.sent;

                                if (!_serverResponse2.error) {
                                    this.selectedCourse = this.utils.copyObject(_serverResponse2);
                                    if (this.coursesArray) this.coursesArray.push(this.selectedCourse);
                                    this.editIneditCourseIndex = this.coursesArray.length - 1;
                                } else {
                                    this.data.processError(response, "There was an error creating the product.");
                                }
                                return _context22.abrupt('return', _serverResponse2);

                            case 10:
                                _context22.next = 12;
                                return this.data.saveObject(this.selectedCourse, this.COURSES_SERVICE, "put");

                            case 12:
                                serverResponse = _context22.sent;

                                if (!serverResponse.error) {
                                    this.selectedCourse = this.utils.copyObject(serverResponse);
                                    this.coursesArray[this.editCourseIndex] = this.utils.copyObject(this.selectedCourse, this.coursesArray[this.editCourseIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the course.");
                                }
                                return _context22.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context22.stop();
                        }
                    }
                }, _callee22, this);
            }));

            function saveCourse() {
                return _ref22.apply(this, arguments);
            }

            return saveCourse;
        }();

        People.prototype.isCourseDirty = function isCourseDirty() {
            if (this.editCourseIndex >= 0 && this.selectedCourse) {
                return this.utils.objectsEqual(this.selectedCourse, this.coursesArray[this.editCourseIndex]);
            }
        };

        People.prototype.requestPasswordReset = function () {
            var _ref23 = _asyncToGenerator(regeneratorRuntime.mark(function _callee23(obj) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee23$(_context23) {
                    while (1) {
                        switch (_context23.prev = _context23.next) {
                            case 0:
                                _context23.next = 2;
                                return this.data.saveObject(obj, this.PASSWORD_RESET, "post");

                            case 2:
                                serverResponse = _context23.sent;
                                return _context23.abrupt('return', serverResponse);

                            case 4:
                            case 'end':
                                return _context23.stop();
                        }
                    }
                }, _callee23, this);
            }));

            function requestPasswordReset(_x25) {
                return _ref23.apply(this, arguments);
            }

            return requestPasswordReset;
        }();

        People.prototype.getPasswordReset = function () {
            var _ref24 = _asyncToGenerator(regeneratorRuntime.mark(function _callee24(validationCode) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee24$(_context24) {
                    while (1) {
                        switch (_context24.prev = _context24.next) {
                            case 0:
                                _context24.next = 2;
                                return this.data.get(this.PASSWORD_RESET + '/' + validationCode);

                            case 2:
                                serverResponse = _context24.sent;

                                if (!serverResponse.code) {
                                    this.selectedPerson = serverResponse;
                                }
                                return _context24.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context24.stop();
                        }
                    }
                }, _callee24, this);
            }));

            function getPasswordReset(_x26) {
                return _ref24.apply(this, arguments);
            }

            return getPasswordReset;
        }();

        return People;
    }()) || _class);
});
define('resources/data/products',['exports', 'aurelia-framework', './dataServices', '../utils/utils'], function (exports, _aureliaFramework, _dataServices, _utils) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Products = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Products = exports.Products = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils), _dec(_class = function () {
        function Products(data, utils) {
            _classCallCheck(this, Products);

            this.PRODUCTS_SERVICE = 'products';

            this.data = data;
            this.utils = utils;
        }

        Products.prototype.getProductsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.productsArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.PRODUCTS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.productsArray = serverResponse;
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getProductsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getProductsArray;
        }();

        Products.prototype.selectProduct = function selectProduct(index) {
            if (index === undefined) {
                this.selectedProduct = this.emptyProduct();
                this.newSystem = true;
            } else {
                try {
                    this.selectedProduct = this.utils.copyObject(this.productsArray[index]);
                    this.newSystem = false;
                    this.editIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedProduct = this.emptyProduct();
                    this.newSystem = true;
                }
            }
        };

        Products.prototype.selectedProductFromId = function selectedProductFromId(id) {
            var _this = this;

            this.productsArray.forEach(function (item) {
                if (item._id === id) {
                    _this.selectedProduct = _this.utils.copyObject(item);
                    return;
                }
            });
            return null;
        };

        Products.prototype.emptyProduct = function emptyProduct() {
            var newProduct = new Object();;
            newProduct.clientKey = "";
            newProduct.name = "";
            newProduct.sapName = "";
            newProduct.hostWhere = "";
            newProduct.uaCurriculum = "";
            newProduct.defaultStudentIdPrefix = "";
            newProduct.defaultFacultyIdPrefix = "";
            newProduct.defaultStudentPassword = "";
            newProduct.defaultFacultyPassword = "";
            newProduct.comment = "";
            newProduct.Client_Info = "";
            newProduct.fileName = "";
            newProduct.dataset = "";
            newProduct.idsAvailable = "";
            newProduct.firstAllowableId = 1;
            newProduct.active = true;
            newProduct.systems = new Array();
            return newProduct;
        };

        Products.prototype.getProductInfo = function getProductInfo(id) {
            if (!id) return null;
            for (var i = 0; i < this.productsArray.length; i++) {
                if (this.productsArray[i]._id === id) {
                    if (this.productsArray[i].productDescription) {
                        return {
                            info: this.productsArray[i].productDescription,
                            productId: id,
                            header: this.productsArray[i].name
                        };
                    } else {
                        return null;
                    }
                }
            }
            return null;
        };

        Products.prototype.saveProduct = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedProduct) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedProduct._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedProduct, this.PRODUCTS_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.productsArray.push(_serverResponse);
                                    this.editIndex = this.productsArray.length - 1;
                                } else {
                                    this.data.processError(_serverResponse, "There was an error creating the product.");
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedProduct, this.PRODUCTS_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.productsArray[this.editIndex] = this.utils.copyObject(this.selectedProduct, this.productsArray[this.editIndex]);
                                } else {
                                    this.data.processError(serverResponse, "There was an error updating the product.");
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveProduct() {
                return _ref2.apply(this, arguments);
            }

            return saveProduct;
        }();

        Products.prototype.deleteProduct = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.data.deleteObject(this.PRODUCTS_SERVICE + '/' + this.selectedProduct._id);

                            case 2:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.productsArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                }
                                return _context3.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function deleteProduct() {
                return _ref3.apply(this, arguments);
            }

            return deleteProduct;
        }();

        Products.prototype.isDirty = function isDirty() {
            if (this.selectedProduct) {
                if (this.selectedProduct._id) {
                    var obj = this.productsArray[this.editIndex];
                } else {
                    var obj = this.emptyProduct();
                }
                return this.utils.objectsEqual(this.selectedProduct, obj);
            }
        };

        return Products;
    }()) || _class);
});
define('resources/data/sessions',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Sessions = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Sessions = exports.Sessions = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function Sessions(data, utils, config) {
            _classCallCheck(this, Sessions);

            this.SESSIONS_SERVICE = "sessions";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        Sessions.prototype.getSessionsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.sessionsArray || refresh)) {
                                    _context.next = 18;
                                    break;
                                }

                                url = this.SESSIONS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (serverResponse.error) {
                                    _context.next = 11;
                                    break;
                                }

                                this.sessionsArray = serverResponse;
                                _context.next = 12;
                                break;

                            case 11:
                                return _context.abrupt('return', undefined);

                            case 12:
                                _context.next = 18;
                                break;

                            case 14:
                                _context.prev = 14;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);
                                return _context.abrupt('return', undefined);

                            case 18:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 14]]);
            }));

            function getSessionsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getSessionsArray;
        }();

        Sessions.prototype.selectSession = function selectSession(index) {
            if (!index && index != 0) {
                this.selectedSession = this.emptySession();
            } else {
                try {
                    this.selectedSession = this.utils.copyObject(this.sessionsArray[index]);
                    this.editIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedSession = this.emptySesssion();
                    this.newSession = true;
                }
            }
        };

        Sessions.prototype.selectSessionById = function selectSessionById(id) {
            this.selectedSession = null;
            for (var i = 0; i < this.sessionsArray.length; i++) {
                if (this.sessionsArray[i]._id === id) {
                    this.selectedSession = this.utils.copyObject(this.sessionsArray[i]);
                    this.editIndex = i;
                    break;
                }
            }
        };

        Sessions.prototype.emptySession = function emptySession() {
            var newSessionObj = new Object();
            newSessionObj.session = "";
            newSessionObj.year = "";
            newSessionObj.startDate = "";
            newSessionObj.endDate = "";
            newSessionObj.requestsOpenDate = "";
            newSessionObj.sessionStatus = "Next";

            var sessions = this.sessionsArray.sort(function (a, b) {
                return (0, _moment2.default)(a.startDate).isBefore(b.startDate);
            });

            var nextSession = -1;

            if (!sessions[0]) {
                var today = new Date();
                var month = today.getMonth();
                var year = today.getFullYear();
                nextSession = 1;

                for (var i = 0, x = this.config.SESSION_PARAMS.length; i < x; i++) {
                    if (month >= parseInt(this.config.SESSION_PARAMS[i].startMonth) && month <= parseInt(this.config.SESSION_PARAMS[i].endMonth)) {
                        nextSession = i + 1;
                        break;
                    }
                }
                var thisYear = nextSession != 4 ? year : year--;
            } else {
                for (var i = 0, x = this.config.SESSION_PARAMS.length; i < x; i++) {
                    if (sessions[0].session === this.config.SESSION_PARAMS[i].session) {
                        nextSession = i + 1;
                        break;
                    }
                }
                var thisYear = parseInt(sessions[0].year);
            }

            if (nextSession === 4) nextSession = 0;

            newSessionObj.session = this.config.SESSION_PARAMS[nextSession].session;

            if (nextSession === 0) thisYear++;
            newSessionObj.year = thisYear;
            if (nextSession === 3) {
                newSessionObj.year = thisYear + "/" + (parseInt(thisYear) + 1);
            }

            newSessionObj.startDate = thisYear + "-" + this.config.SESSION_PARAMS[nextSession].startMonth + "-" + this.config.SESSION_PARAMS[nextSession].startDay;
            if (nextSession === 3) {
                thisYear = parseInt(thisYear) + 1;
                newSessionObj.endDate = thisYear + "-" + this.config.SESSION_PARAMS[nextSession].endMonth + "-" + this.config.SESSION_PARAMS[nextSession].endDay;
            } else {
                newSessionObj.endDate = thisYear + "-" + this.config.SESSION_PARAMS[nextSession].endMonth + "-" + this.config.SESSION_PARAMS[nextSession].endDay;
            }
            newSessionObj.requestsOpenDate = thisYear + "-" + this.config.SESSION_PARAMS[nextSession].openMonth + "-" + this.config.SESSION_PARAMS[nextSession].openDay;

            return newSessionObj;
        };

        Sessions.prototype.saveSession = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedSession) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedSession._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedSession, this.SESSIONS_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.sessionsArray.unshift(_serverResponse);
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedSession, this.SESSIONS_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.sessionsArray[this.editIndex] = this.utils.copyObject(this.selectedSession);
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveSession() {
                return _ref2.apply(this, arguments);
            }

            return saveSession;
        }();

        Sessions.prototype.isDirty = function isDirty() {

            if (this.selectedSession) {
                if (this.selectedSession._id) {
                    var obj = this.sessionsArray[this.editIndex];
                } else {
                    var obj = this.emptySession();
                }
                return this.utils.objectsEqual(this.selectedSession, obj);
            }
        };

        return Sessions;
    }()) || _class);
});
define('resources/data/siteInfo',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.SiteInfo = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var SiteInfo = exports.SiteInfo = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function SiteInfo(data, utils, config) {
            _classCallCheck(this, SiteInfo);

            this.SITE_SERVICES = 'site';
            this.MESSAGE_SERVICES = 'messages';

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        SiteInfo.prototype.getInfoArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(refresh, options) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.siteArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.SITE_SERVICES;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.siteArray = serverResponse;
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getInfoArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getInfoArray;
        }();

        SiteInfo.prototype.selectSiteItem = function selectSiteItem(index) {
            if (!index || index === -1) {
                this.selectedItem = this.emptyItem();
            } else {
                try {
                    this.selectedItem = this.utils.copyObject(this.siteArray[index]);
                    this.editIndex = index;
                } catch (error) {
                    console.log(error);
                }
            }
        };

        SiteInfo.prototype.emptyItem = function emptyItem() {
            var newItem = new Object();;
            newItem.title = "";
            newItem.content = "";
            newItem.url = "";
            newItem.createdDate = new Date();
            newItem.expiredDate = (0, _moment2.default)(new Date()).add(1, 'years');
            newItem.image = "";
            newItem.priority = "INFO";
            newItem.itemType = "NEWS";
            newItem.sortOrder = 0;
            newItem.file = new Object();
            return newItem;
        };

        SiteInfo.prototype.saveInfoItem = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedItem) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedItem._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedItem, this.SITE_SERVICES, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.selectedItem = this.utils.copyObject(_serverResponse);
                                    this.siteArray.push(_serverResponse);
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedItem, this.SITE_SERVICES, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.selectedItem = this.utils.copyObject(serverResponse);
                                    this.siteArray[this.editIndex] = this.utils.copyObject(this.selectedItem, this.siteArray[this.editIndex]);
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveInfoItem() {
                return _ref2.apply(this, arguments);
            }

            return saveInfoItem;
        }();

        SiteInfo.prototype.uploadFile = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(files) {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.data.uploadFiles(files, this.SITE_SERVICES + '/upload/' + this.selectedItem._id);

                            case 2:
                                response = _context3.sent;

                                if (!response.error) {
                                    this.siteArray[this.editIndex] = this.utils.copyObject(response, this.siteArray[this.editIndex]);
                                }

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function uploadFile(_x3) {
                return _ref3.apply(this, arguments);
            }

            return uploadFile;
        }();

        SiteInfo.prototype.deleteItem = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return this.data.deleteObject(this.SITE_SERVICES + '/' + this.selectedItem._id);

                            case 2:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.siteArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                }
                                return _context4.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function deleteItem() {
                return _ref4.apply(this, arguments);
            }

            return deleteItem;
        }();

        SiteInfo.prototype.isDirty = function isDirty(obj) {
            if (this.selectedItem) {
                if (!obj) {
                    var obj = this.emptyItem();
                }
                var skip = ['file'];
                return this.utils.objectsEqual(this.selectedItem, obj, skip);
            }
            return new Array();
        };

        SiteInfo.prototype.getWeather = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(city) {
                var response;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                response = this.data.get('getWeather/' + city);
                                return _context5.abrupt('return', response);

                            case 2:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function getWeather(_x4) {
                return _ref5.apply(this, arguments);
            }

            return getWeather;
        }();

        SiteInfo.prototype.showCarousel = function showCarousel() {
            for (var i = 0; i < this.siteArray.length; i++) {
                if (this.siteArray[i].itemType === 'CARO') return true;
            }
            return false;
        };

        SiteInfo.prototype.getMessageArray = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!(!this.messageArray || refresh)) {
                                    _context6.next = 19;
                                    break;
                                }

                                url = this.MESSAGE_SERVICES;

                                url += options ? options : "";
                                _context6.prev = 3;
                                _context6.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context6.sent;

                                if (serverResponse.error) {
                                    _context6.next = 11;
                                    break;
                                }

                                this.messageArray = serverResponse;
                                _context6.next = 13;
                                break;

                            case 11:
                                this.data.processError(serverResponse);
                                return _context6.abrupt('return', undefined);

                            case 13:
                                _context6.next = 19;
                                break;

                            case 15:
                                _context6.prev = 15;
                                _context6.t0 = _context6['catch'](3);

                                console.log(_context6.t0);
                                return _context6.abrupt('return', undefined);

                            case 19:
                                return _context6.abrupt('return', this.messageArray);

                            case 20:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this, [[3, 15]]);
            }));

            function getMessageArray(_x5, _x6) {
                return _ref6.apply(this, arguments);
            }

            return getMessageArray;
        }();

        SiteInfo.prototype.selectMessageByKey = function selectMessageByKey(key) {
            var index = this.utils.arrayContainsValue(this.messageArray, 'key', key);
            if (index > -1) {
                return this.messageArray[index];
            }
            return null;
        };

        SiteInfo.prototype.selectMessage = function selectMessage(index) {
            if (index === -1) {
                this.selectedMessage = this.emptyMessage();
            } else {
                try {
                    this.selectedMessage = this.utils.copyObject(this.messageArray[index]);
                    this.editMessageIndex = index;
                } catch (error) {
                    console.log(error);
                }
            }
        };

        SiteInfo.prototype.emptyMessage = function emptyMessage() {
            var newMessage = new Object();;
            newMessage.description = "";
            newMessage.content = "";
            return newMessage;
        };

        SiteInfo.prototype.saveMessageItem = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var _serverResponse2, serverResponse;

                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (this.selectedMessage) {
                                    _context7.next = 2;
                                    break;
                                }

                                return _context7.abrupt('return');

                            case 2:
                                if (this.selectedMessage._id) {
                                    _context7.next = 10;
                                    break;
                                }

                                _context7.next = 5;
                                return this.data.saveObject(this.selectedMessage, this.MESSAGE_SERVICES, "post");

                            case 5:
                                _serverResponse2 = _context7.sent;

                                if (!_serverResponse2.error) {
                                    this.messageArray.push(this.selectedMessage);
                                }
                                return _context7.abrupt('return', _serverResponse2);

                            case 10:
                                _context7.next = 12;
                                return this.data.saveObject(this.selectedMessage, this.MESSAGE_SERVICES, "put");

                            case 12:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    this.messageArray[this.editMessageIndex] = this.utils.copyObject(this.selectedMessage, this.messageArray[this.editMessageIndex]);
                                }
                                return _context7.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveMessageItem() {
                return _ref7.apply(this, arguments);
            }

            return saveMessageItem;
        }();

        SiteInfo.prototype.isMessageDirty = function isMessageDirty(obj) {
            if (this.selectedMessage) {
                if (!obj) {
                    var obj = this.emptyItem();
                }
                return this.utils.objectsEqual(this.selectedMessage, obj);
            }
            return new Array();
        };

        SiteInfo.prototype.deleteMessage = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                _context8.next = 2;
                                return this.data.deleteObject(this.SITE_SERVICES + '/' + this.selectedMessage._id);

                            case 2:
                                serverResponse = _context8.sent;

                                if (!serverResponse.error) {
                                    this.messageArray.splice(this.editMessageIndex, 1);
                                    this.editMessageIndex = -1;
                                }
                                return _context8.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function deleteMessage() {
                return _ref8.apply(this, arguments);
            }

            return deleteMessage;
        }();

        return SiteInfo;
    }()) || _class);
});
define('resources/data/social',['exports', 'aurelia-framework', './dataServices', '../utils/utils'], function (exports, _aureliaFramework, _dataServices, _utils) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Social = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Social = exports.Social = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils), _dec(_class = function () {
        function Social(data, utils) {
            _classCallCheck(this, Social);

            this.BLOGS_SERVICES = 'blogs';
            this.FORUMS_SERVICES = 'forums';
            this.FORUMS_MESSAGES_SERVICES = 'forumMessages';

            this.data = data;
            this.utils = utils;
        }

        Social.prototype.getBlogArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.blogArray || refresh)) {
                                    _context.next = 13;
                                    break;
                                }

                                url = this.BLOGS_SERVICES;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.blogArray = serverResponse;
                                }
                                _context.next = 13;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);

                            case 13:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getBlogArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getBlogArray;
        }();

        Social.prototype.selectBlog = function selectBlog(index) {
            if (!index && index !== 0) {
                this.selectedBlog = this.emptyBlog();
            } else {
                this.selectedBlog = this.utils.copyObject(this.blogArray[index]);
                this.selectedBlogIndex = index;
            }
        };

        Social.prototype.emptyBlog = function emptyBlog() {
            var obj = new Object();
            obj.title = "";
            obj.text = "";
            obj.personId = "";
            return obj;
        };

        Social.prototype.saveBlog = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var url, response;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedBlog) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                url = this.BLOGS_SERVICES;

                                if (this.selectedBlog._id) {
                                    _context2.next = 11;
                                    break;
                                }

                                _context2.next = 6;
                                return this.data.saveObject(this.selectedBlog, url, "post");

                            case 6:
                                response = _context2.sent;

                                if (!response.error) {
                                    this.selectedBlog = this.utils.copyObject(response);
                                    if (this.blogArray) this.blogArray.push(this.selectedBlog);
                                } else {
                                    this.data.processError(response, "There was an error creating the blog.");
                                }
                                return _context2.abrupt('return', response);

                            case 11:
                                _context2.next = 13;
                                return this.data.saveObject(this.selectedBlog, url, "put");

                            case 13:
                                response = _context2.sent;

                                if (!response.error) {
                                    this.selectedBlog = this.utils.copyObject(response);
                                    this.blogArray[this.editIndex] = this.utils.copyObject(this.selectedBlog, this.blogArray[this.editIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the blog.");
                                }
                                return _context2.abrupt('return', response);

                            case 16:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveBlog() {
                return _ref2.apply(this, arguments);
            }

            return saveBlog;
        }();

        Social.prototype.updateViews = function updateViews() {
            if (!this.selectedBlog) {
                return;
            }
            var url = this.BLOGS_SERVICES;
            this.data.saveObject(this.selectedBlog, url, "put");
        };

        Social.prototype.deleteBlog = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.selectedBlog._id) {
                                    _context3.next = 6;
                                    break;
                                }

                                _context3.next = 3;
                                return this.data.deleteObject(this.BLOGS_SERVICES + '/' + this.selectedBlog._id);

                            case 3:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.blogArray.splice(this.selectedBlogIndex, 1);
                                    this.selectedBlogIndex = -1;
                                }
                                return _context3.abrupt('return', serverResponse);

                            case 6:
                                return _context3.abrupt('return', null);

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function deleteBlog() {
                return _ref3.apply(this, arguments);
            }

            return deleteBlog;
        }();

        Social.prototype.getForumArray = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!(!this.forumArray || refresh)) {
                                    _context4.next = 18;
                                    break;
                                }

                                url = this.FORUMS_SERVICES;

                                url += options ? options : "";
                                _context4.prev = 3;
                                _context4.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context4.sent;

                                if (serverResponse.error) {
                                    _context4.next = 11;
                                    break;
                                }

                                this.forumArray = serverResponse;
                                _context4.next = 12;
                                break;

                            case 11:
                                return _context4.abrupt('return', undefined);

                            case 12:
                                _context4.next = 18;
                                break;

                            case 14:
                                _context4.prev = 14;
                                _context4.t0 = _context4['catch'](3);

                                console.log(_context4.t0);
                                return _context4.abrupt('return', undefined);

                            case 18:
                                return _context4.abrupt('return', this.forumArray);

                            case 19:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this, [[3, 14]]);
            }));

            function getForumArray(_x3, _x4) {
                return _ref4.apply(this, arguments);
            }

            return getForumArray;
        }();

        Social.prototype.selectForum = function selectForum(index) {
            if (!index && index !== 0) {
                this.selectedForum = this.emptyForum();
            } else {
                this.selectedForum = this.utils.copyObject(this.forumArray[index]);
            }
        };

        Social.prototype.emptyForum = function emptyForum() {
            var obj = new Object();
            obj.title = "";
            obj.text = "";
            obj.personId = "";
            obj.type = "General";
            return obj;
        };

        Social.prototype.saveForum = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var url, response;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (this.selectedForum) {
                                    _context5.next = 2;
                                    break;
                                }

                                return _context5.abrupt('return');

                            case 2:
                                url = this.FORUMS_SERVICES;

                                if (this.selectedForum._id) {
                                    _context5.next = 11;
                                    break;
                                }

                                _context5.next = 6;
                                return this.data.saveObject(this.selectedForum, url, "post");

                            case 6:
                                response = _context5.sent;

                                if (!response.error) {
                                    this.selectedForum = this.utils.copyObject(response);
                                    if (this.forumArray) this.forumArray.push(this.selectedForum);
                                } else {
                                    this.data.processError(response, "There was an error creating the blog.");
                                }
                                return _context5.abrupt('return', response);

                            case 11:
                                _context5.next = 13;
                                return this.data.saveObject(this.selectedForum, url, "put");

                            case 13:
                                response = _context5.sent;

                                if (!response.error) {
                                    this.selectedForum = this.utils.copyObject(response);
                                    this.forumArray[this.editIndex] = this.utils.copyObject(this.selectedForum, this.forumArray[this.editIndex]);
                                } else {
                                    this.data.processError(response, "There was an error updating the blog.");
                                }
                                return _context5.abrupt('return', response);

                            case 16:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function saveForum() {
                return _ref5.apply(this, arguments);
            }

            return saveForum;
        }();

        Social.prototype.getForumMessages = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                if (!(!this.forumMessageArray || refresh)) {
                                    _context6.next = 18;
                                    break;
                                }

                                url = this.FORUMS_MESSAGES_SERVICES;

                                url += options ? options : "";
                                _context6.prev = 3;
                                _context6.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context6.sent;

                                if (serverResponse.error) {
                                    _context6.next = 11;
                                    break;
                                }

                                this.forumMessageArray = serverResponse;
                                _context6.next = 12;
                                break;

                            case 11:
                                return _context6.abrupt('return', undefined);

                            case 12:
                                _context6.next = 18;
                                break;

                            case 14:
                                _context6.prev = 14;
                                _context6.t0 = _context6['catch'](3);

                                console.log(_context6.t0);
                                return _context6.abrupt('return', undefined);

                            case 18:
                                return _context6.abrupt('return', this.forumMessageArray);

                            case 19:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this, [[3, 14]]);
            }));

            function getForumMessages(_x5, _x6) {
                return _ref6.apply(this, arguments);
            }

            return getForumMessages;
        }();

        Social.prototype.selectForumTopic = function selectForumTopic(index) {
            if (!index && index !== 0) {
                this.selectedForumTopic = this.emptyForumTopic();
            } else {
                this.selectedForumTopic = this.utils.copyObject(this.forumMessageArray[index]);
            }
        };

        Social.prototype.emptyForumTopic = function emptyForumTopic() {
            var obj = new Object();
            obj.discussionId = this.selectedForum._id;
            obj.title = "";
            obj.text = "";
            obj.personId = "";
            obj.parentId = "";
            obj.level = 0;
            return obj;
        };

        Social.prototype.selectTopicMessage = function selectTopicMessage(message, index) {
            if (!index && index !== 0) {
                this.selectedTopicMessage = this.emptyTopicMessage(message);
            } else {
                this.selectedTopicMessage = this.utils.copyObject(this.forumArray.messages[index]);
            }
        };

        Social.prototype.emptyTopicMessage = function emptyTopicMessage(message) {
            var obj = new Object();
            obj.text = "";
            obj.personId = "";
            obj.parentId = message._id;
            obj.level = 0;
            return obj;
        };

        Social.prototype.saveForumTopic = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var url, response;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (this.selectedForumTopic) {
                                    _context7.next = 2;
                                    break;
                                }

                                return _context7.abrupt('return');

                            case 2:
                                url = this.FORUMS_MESSAGES_SERVICES;

                                if (this.selectedForumTopic._id) {
                                    _context7.next = 11;
                                    break;
                                }

                                _context7.next = 6;
                                return this.data.saveObject(this.selectedForumTopic, url, "post");

                            case 6:
                                response = _context7.sent;

                                if (!response.error) {
                                    this.selectedForumTopic = this.utils.copyObject(response);
                                    this.selectedForum.messages.push(this.selectedForumTopic);
                                } else {
                                    this.data.processError(response, "There was an error creating the blog.");
                                }
                                return _context7.abrupt('return', response);

                            case 11:
                                _context7.next = 13;
                                return this.data.saveObject(this.selectedForumTopic, url, "put");

                            case 13:
                                response = _context7.sent;

                                if (!response.error) {
                                    this.selectedForumTopic = this.utils.copyObject(response);
                                    this.selectedForum.messages.push(this.selectedForumTopic);
                                } else {
                                    this.data.processError(response, "There was an error updating the blog.");
                                }
                                return _context7.abrupt('return', response);

                            case 16:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveForumTopic() {
                return _ref7.apply(this, arguments);
            }

            return saveForumTopic;
        }();

        return Social;
    }()) || _class);
});
define('resources/data/systems',['exports', 'aurelia-framework', './dataServices', '../utils/utils', '../../config/appConfig'], function (exports, _aureliaFramework, _dataServices, _utils, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Systems = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Systems = exports.Systems = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function Systems(data, utils, config) {
            _classCallCheck(this, Systems);

            this.SYSTEMS_SERVICE = "systems";

            this.data = data;
            this.utils = utils;
            this.config = config;
        }

        Systems.prototype.getSystemsArray = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(options, refresh) {
                var url, serverResponse;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                if (!(!this.systemsArray || refresh)) {
                                    _context.next = 14;
                                    break;
                                }

                                url = this.SYSTEMS_SERVICE;

                                url += options ? options : "";
                                _context.prev = 3;
                                _context.next = 6;
                                return this.data.get(url);

                            case 6:
                                serverResponse = _context.sent;

                                if (!serverResponse.error) {
                                    this.systemsArray = serverResponse;
                                }
                                _context.next = 14;
                                break;

                            case 10:
                                _context.prev = 10;
                                _context.t0 = _context['catch'](3);

                                console.log(_context.t0);
                                this.systemsArray = undefined;

                            case 14:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this, [[3, 10]]);
            }));

            function getSystemsArray(_x, _x2) {
                return _ref.apply(this, arguments);
            }

            return getSystemsArray;
        }();

        Systems.prototype.selectSystem = function selectSystem(index) {
            if (!index && index != 0) {
                this.selectedSystem = this.emptySystem();
                this.newSystem = true;
            } else {
                try {
                    this.selectedSystem = this.utils.copyObject(this.systemsArray[index]);
                    this.newSystem = false;
                    this.editIndex = index;
                } catch (error) {
                    console.log(error);
                    this.selectedSystem = this.emptySystem();
                    this.newSystem = true;
                }
            }
        };

        Systems.prototype.selectedSystemFromId = function selectedSystemFromId(id) {
            this.selectedSystem = null;
            for (var i = 0, x = this.systemsArray.length; i < x; i++) {
                if (this.systemsArray[i]._id === id) {
                    this.selectedSystem = this.utils.copyObject(this.systemsArray[i]);
                    this.editIndex = i;
                    break;
                }
            };
        };

        Systems.prototype.setSelectedSystem = function setSelectedSystem(system) {
            this.selectedSystem = this.utils.copyObject(system);
        };

        Systems.prototype.emptySystem = function emptySystem() {
            var newSystemObj = {};
            newSystemObj.sid = "";
            newSystemObj.active = true;
            newSystemObj.description = "";
            newSystemObj.server = "";
            newSystemObj.instance = "";
            newSystemObj.its = "";
            newSystemObj.terms = "";
            newSystemObj.idsAvailable = 0;
            newSystemObj.productId = new Array();
            newSystemObj.clients = [];
            return newSystemObj;
        };

        Systems.prototype.saveSystem = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _serverResponse, serverResponse;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (this.selectedSystem) {
                                    _context2.next = 2;
                                    break;
                                }

                                return _context2.abrupt('return');

                            case 2:
                                if (this.selectedSystem._id) {
                                    _context2.next = 10;
                                    break;
                                }

                                _context2.next = 5;
                                return this.data.saveObject(this.selectedSystem, this.SYSTEMS_SERVICE, "post");

                            case 5:
                                _serverResponse = _context2.sent;

                                if (!_serverResponse.error) {
                                    this.systemsArray.push(_serverResponse);
                                } else {
                                    this.data.processError(_serverResponse, "Error updating the system.<br>");
                                }
                                return _context2.abrupt('return', _serverResponse);

                            case 10:
                                _context2.next = 12;
                                return this.data.saveObject(this.selectedSystem, this.SYSTEMS_SERVICE, "put");

                            case 12:
                                serverResponse = _context2.sent;

                                if (!serverResponse.error) {
                                    this.systemsArray[this.editIndex] = this.utils.copyObject(this.selectedSystem);
                                } else {
                                    this.data.processError(serverResponse, "Error updating the system.<br>");
                                }
                                return _context2.abrupt('return', serverResponse);

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function saveSystem() {
                return _ref2.apply(this, arguments);
            }

            return saveSystem;
        }();

        Systems.prototype.deleteSystem = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.data.deleteObject(this.SYSTEMS_SERVICE + '/' + this.selectedSystem._id);

                            case 2:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.systemsArray.splice(this.editIndex, 1);
                                    this.editIndex = -1;
                                } else {
                                    this.data.processError(serverResponse, "Error deleting the system.<br>");
                                }
                                return _context3.abrupt('return', serverResponse);

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function deleteSystem() {
                return _ref3.apply(this, arguments);
            }

            return deleteSystem;
        }();

        Systems.prototype.saveProductChanges = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(obj) {
                var response;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return this.data.saveObject(obj, this.SYSTEMS_SERVICE + '/product/', "put");

                            case 2:
                                response = _context4.sent;
                                return _context4.abrupt('return', response);

                            case 4:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function saveProductChanges(_x3) {
                return _ref4.apply(this, arguments);
            }

            return saveProductChanges;
        }();

        Systems.prototype.isDirty = function isDirty() {
            if (this.selectedSystem) {
                if (this.selectedSystem._id) {
                    var obj = this.systemsArray[this.editIndex];
                } else {
                    var obj = this.emptySystem();
                }
                return this.utils.objectsEqual(this.selectedSystem, obj);
            }
        };

        Systems.prototype.deleteAllClients = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (this.selectedSystem._id) {
                                    this.selectedSystem.clients = new Array();
                                }

                            case 1:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function deleteAllClients() {
                return _ref5.apply(this, arguments);
            }

            return deleteAllClients;
        }();

        Systems.prototype.generateClients = function generateClients(start, end, status, product, interval) {
            if (!this.selectedSystem) {
                return { error: "No system selected." };
            }

            this.selectedSystem.clients = this.selectedSystem.clients || new Array();
            var lastClientIndex = this.selectedSystem.clients.length - 1;
            if (start > 0 && end > 0 && end >= start) {
                for (var i = start; i <= end; i += interval) {
                    if (this._findClient(i, 0, lastClientIndex) < 0) {
                        this.selectedSystem.clients.push(this.emptyClient(i, status, product));
                    }
                }
                return true;
            } else {
                return { error: "Enter valid start and end client numbers" };
            }
        };

        Systems.prototype.refreshClients = function refreshClients(status) {
            for (var i = 0, x = this.selectedSystem.clients.length; i < x; i++) {
                this.selectedSystem.clients[i] = this.emptyClient(this.selectedSystem.clients[i].client, status);
            }
        };

        Systems.prototype._findClient = function _findClient(client, start, end) {
            if (end >= 0) {
                for (var i = start; i <= end; i++) {
                    if (parseInt(this.selectedSystem.clients[i].client) === client) return i;
                }
            }
            return -1;
        };

        Systems.prototype.selectClient = function selectClient(index) {
            if (index != undefined) {
                this.selectedClient = this.utils.copyObject(this.selectedSystem.clients[index]);
                this.clientIndex = index;
            }
        };

        Systems.prototype.selectClientFromID = function selectClientFromID(systemId, clientId) {
            this.selectedClient = null;
            for (var i = 0, x = this.systemsArray.length; i < x; i++) {
                if (this.systemsArray[i]._id === systemId) {
                    this.selectedSystem = this.utils.copyObject(this.systemsArray[i]);
                    for (var j = 0; j < this.systemsArray[i].clients.length; j++) {
                        if (this.systemsArray[i].clients[j].client === clientId) {
                            this.selectedClient = this.utils.copyObject(this.systemsArray[i].clients[j]);
                            this.clientIndex = j;
                            break;
                        }
                    }
                }
            }
        };

        Systems.prototype.selectClientFromNumber = function selectClientFromNumber(systemId, client) {
            this.selectedClient = null;
            for (var i = 0, x = this.systemsArray.length; i < x; i++) {
                if (this.systemsArray[i]._id === systemId) {
                    this.selectedSystem = this.utils.copyObject(this.systemsArray[i]);
                    for (var j = 0; j < this.systemsArray[i].clients.length; j++) {
                        if (this.systemsArray[i].clients[j].client === client) {
                            this.selectedClient = this.utils.copyObject(this.systemsArray[i].clients[j]);
                            this.clientIndex = j;
                            break;
                        }
                    }
                }
            }
        };

        Systems.prototype.emptyClient = function emptyClient(clientNo, status, product) {
            var obj = new Object();
            obj.client = clientNo;
            obj.clientStatus = status;
            obj.systemId = this.selectedSystem._id;
            obj.idsAvailable = this.selectedSystem.idsAvailable;
            obj.assignments = new Array();
            obj.createdDate = new Date();
            obj.lastIdAssigned = 0;
            obj.lastFacIdAssigned = 0;
            obj.firstFacIdAssigned = 0;
            obj.productId = product ? product : null;
            return obj;
        };

        Systems.prototype.selectClient = function selectClient(index) {
            if (index != undefined) {
                this.selectedClient = this.utils.copyObject(this.selectedSystem.clients[index]);
                this.clientIndex = index;
            }
        };

        Systems.prototype.updateClient = function updateClient(client) {
            for (var i = 0, x = this.systemsArray.length; i < x; i++) {
                if (this.systemsArray[i]._id === client.systemId) {
                    for (var j = 0; j < this.systemsArray[i].clients.length; j++) {
                        if (this.systemsArray[i].clients[j]._id === client._id) {
                            this.systemsArray[i].clients[j] = this.utils.copyObject(client);
                            break;
                        }
                    }
                }
            };
        };

        return Systems;
    }()) || _class);
});
define('resources/dialogs/common-dialogs',['exports', 'aurelia-framework', 'aurelia-dialog', './confirm-dialog', './message-dialog', './note-dialog', './email-dialog', './document-dialog', './password-dialog', './event-dialog'], function (exports, _aureliaFramework, _aureliaDialog, _confirmDialog, _messageDialog, _noteDialog, _emailDialog, _documentDialog, _passwordDialog, _eventDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CommonDialogs = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var CommonDialogs = exports.CommonDialogs = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogService), _dec(_class = function () {
    function CommonDialogs(dialogService) {
      _classCallCheck(this, CommonDialogs);

      this.noteBody = "";

      this.dialogService = dialogService;
    }

    CommonDialogs.prototype.showMessage = function showMessage(message) {
      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Message';
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['Ok'];

      return this.dialogService.open({ viewModel: _messageDialog.MessageDialog, model: { message: message, title: title, options: options } });
    };

    CommonDialogs.prototype.showNote = function showNote() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Enter Note';
      var note = arguments[1];
      var options = arguments[2];

      return this.dialogService.open({ viewModel: _noteDialog.NoteDialog, model: { title: title, note: note, options: options } });
    };

    CommonDialogs.prototype.showEmail = function showEmail() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Enter Email';
      var email = arguments[1];
      var options = arguments[2];

      return this.dialogService.open({ viewModel: _emailDialog.EmailDialog, model: { title: title, email: email, options: options } });
    };

    CommonDialogs.prototype.showDocument = function showDocument() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Select Document";
      var documents = arguments[1];
      var options = arguments[2];

      return this.dialogService.open({ viewModel: _documentDialog.DocumentDialog, model: { title: title, documents: documents, options: options } });
    };

    CommonDialogs.prototype.showPassword = function showPassword() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Change Password";
      var passwords = arguments[1];
      var options = arguments[2];

      return this.dialogService.open({ viewModel: _passwordDialog.PasswordDialog, model: { title: title, passwords: passwords, options: options } });
    };

    CommonDialogs.prototype.showEvent = function showEvent() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Enter Event';
      var event = arguments[1];
      var options = arguments[2];

      return this.dialogService.open({ viewModel: _eventDialog.EventDialog, model: { title: title, event: event, options: options } });
    };

    return CommonDialogs;
  }()) || _class);
});
define('resources/dialogs/confirm-dialog',["exports", "aurelia-framework", "aurelia-dialog"], function (exports, _aureliaFramework, _aureliaDialog) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ConfirmDialog = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ConfirmDialog = exports.ConfirmDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController), _dec(_class = function () {
        function ConfirmDialog(controller) {
            _classCallCheck(this, ConfirmDialog);

            this.message = "";

            this.controller = controller;
        }

        ConfirmDialog.prototype.activate = function activate(data) {
            this.message = data.message;
            this.header = data.header == undefined ? "Confirmation" : data.header;
        };

        return ConfirmDialog;
    }()) || _class);
});
define('resources/dialogs/document-dialog',['exports', 'aurelia-dialog', 'aurelia-framework', '../data/documents', '../../config/appConfig'], function (exports, _aureliaDialog, _aureliaFramework, _documents, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DocumentDialog = undefined;

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var DocumentDialog = exports.DocumentDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _documents.DocumentsServices, _appConfig.AppConfig), _dec(_class = function () {
    function DocumentDialog(dialogController, documents, config) {
      _classCallCheck(this, DocumentDialog);

      this.dialogController = dialogController;
      this.documents = documents;
      this.config = config;
    }

    DocumentDialog.prototype.activate = function activate(model) {
      this.model = model;
      this.filteredDocumentArray = model.documents.documentCats;
    };

    DocumentDialog.prototype.selectOption = function selectOption(option) {
      if (isCancel(option)) {
        this.dialogController.cancel(option);
      } else {
        this.dialogController.ok(this.model);
      }
    };

    DocumentDialog.prototype.filterList = function filterList() {
      if (this.filter) {
        var thisFilter = this.filter;
        this.filteredDocumentArray = this.model.documents.documentCats.filter(function (item) {
          return item.description.substring(0, thisFilter.length).toUpperCase() === thisFilter.toUpperCase();
        });
      } else {
        this.filteredDocumentArray = this.model.documents.documentCats;
      }
    };

    DocumentDialog.prototype.typeChanged = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(index) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(index >= 0)) {
                  _context.next = 6;
                  break;
                }

                this.categoryIndex = index;
                this.documents.selectCategory(index);
                _context.next = 5;
                return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

              case 5:
                this.showDocuments = true;

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function typeChanged(_x) {
        return _ref.apply(this, arguments);
      }

      return typeChanged;
    }();

    DocumentDialog.prototype.chooseDocument = function chooseDocument(index, event) {
      this.documents.selectDocument(index);

      if (this.selectedRow) this.selectedRow.children().removeClass('info');
      this.selectedRow = $(event.target).closest('tr');
      this.selectedRow.children().addClass('info');
      this.showDocumentForm = true;
    };

    DocumentDialog.prototype.addDocument = function addDocument(index) {
      for (var i = 0; i < this.model.documents.documents.length; i++) {
        if (this.model.documents.documents[i].fileName == this.documents.selectedDocument.files[index].fileName) {
          return;
        }
      }
      var newDoc = {
        categoryCode: this.documents.selectedDocument.categoryCode,
        categoryName: this.documents.selectedDocument.name,
        fileName: this.documents.selectedDocument.files[index].fileName,
        default: true
      };
      this.model.documents.documents.push(newDoc);
    };

    DocumentDialog.prototype.removeDocument = function removeDocument(index) {
      this.selectedDocuments.splice(index, 1);
    };

    return DocumentDialog;
  }()) || _class);


  function isCancel(option) {
    return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
  }
});
define('resources/dialogs/email-dialog',['exports', 'aurelia-dialog', 'aurelia-framework', '../../config/appConfig'], function (exports, _aureliaDialog, _aureliaFramework, _appConfig) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.EmailDialog = undefined;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var EmailDialog = exports.EmailDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _appConfig.AppConfig), _dec(_class = function () {
		function EmailDialog(dialogController, config) {
			_classCallCheck(this, EmailDialog);

			this.dialogController = dialogController;
			this.config = config;
		}

		EmailDialog.prototype.activate = function activate(model) {
			this.model = model;
		};

		EmailDialog.prototype.selectOption = function selectOption(option) {
			if (isCancel(option)) {
				this.dialogController.cancel(option);
			} else {
				this.dialogController.ok(this.model);
			}
		};

		return EmailDialog;
	}()) || _class);


	function isCancel(option) {
		return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
	}
});
define('resources/dialogs/event-dialog',['exports', 'aurelia-dialog', 'aurelia-framework', '../../config/appConfig'], function (exports, _aureliaDialog, _aureliaFramework, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventDialog = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var EventDialog = exports.EventDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _appConfig.AppConfig), _dec(_class = function () {
    function EventDialog(dialogController, config) {
      _classCallCheck(this, EventDialog);

      this.flatpickrConfig = {
        enableTime: true
      };

      this.dialogController = dialogController;
      this.config = config;
    }

    EventDialog.prototype.activate = function activate(model) {
      this.model = model;
    };

    EventDialog.prototype.attached = function attached() {
      $(this.titleInput).focus();
    };

    EventDialog.prototype.selectOption = function selectOption(option) {
      if (isCancel(option)) {
        this.dialogController.cancel(option);
      } else {
        this.dialogController.ok(this.model);
      }
    };

    return EventDialog;
  }()) || _class);


  function isCancel(option) {
    return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
  }
});
define('resources/dialogs/message-dialog',['exports', 'aurelia-dialog', 'aurelia-framework', '../../config/appConfig'], function (exports, _aureliaDialog, _aureliaFramework, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MessageDialog = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var MessageDialog = exports.MessageDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _appConfig.AppConfig), _dec(_class = function () {
    function MessageDialog(dialogController, config) {
      _classCallCheck(this, MessageDialog);

      this.dialogController = dialogController;
      this.config = config;
    }

    MessageDialog.prototype.activate = function activate(model) {
      this.model = model;
    };

    MessageDialog.prototype.selectOption = function selectOption(option) {
      if (isCancel(option)) {
        this.dialogController.cancel(option);
      } else {
        this.dialogController.ok(option);
      }
    };

    return MessageDialog;
  }()) || _class);


  function isCancel(option) {
    return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
  }
});
define('resources/dialogs/note-dialog',['exports', 'aurelia-dialog', 'aurelia-framework', '../../config/appConfig'], function (exports, _aureliaDialog, _aureliaFramework, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NoteDialog = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var NoteDialog = exports.NoteDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _appConfig.AppConfig), _dec(_class = function () {
    function NoteDialog(dialogController, config) {
      _classCallCheck(this, NoteDialog);

      this.dialogController = dialogController;
      this.config = config;
    }

    NoteDialog.prototype.activate = function activate(model) {
      this.model = model;
    };

    NoteDialog.prototype.selectOption = function selectOption(option) {
      if (isCancel(option)) {
        this.dialogController.cancel(option);
      } else {
        this.dialogController.ok(this.model);
      }
    };

    return NoteDialog;
  }()) || _class);


  function isCancel(option) {
    return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
  }
});
define('resources/dialogs/password-dialog',['exports', 'aurelia-framework', 'aurelia-dialog', '../../resources/utils/validation', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaDialog, _validation, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PasswordDialog = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var PasswordDialog = exports.PasswordDialog = (_dec = (0, _aureliaFramework.inject)(_aureliaDialog.DialogController, _validation2.default, _appConfig.AppConfig), _dec(_class = function () {
    function PasswordDialog(dialogController, validation, config) {
      _classCallCheck(this, PasswordDialog);

      this.dialogController = dialogController;
      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this._setupValidation();

      this.thresholdLength = 6;
      this.threshold = 3;
    }

    PasswordDialog.prototype.activate = function activate(model) {
      this.model = model;
    };

    PasswordDialog.prototype.passwordComplexity = function passwordComplexity() {

      var newValue = this.password;

      this.longPassword = newValue.length >= this.thresholdLength;

      var strength = 0;
      strength += /[A-Z]+/.test(newValue) ? 1 : 0;
      strength += /[a-z]+/.test(newValue) ? 1 : 0;
      strength += /[0-9]+/.test(newValue) ? 1 : 0;
      strength += /[\W]+/.test(newValue) ? 1 : 0;

      this.complexPassword = strength >= this.threshold && this.longPassword;
      this.validation.validate(4);
    };

    PasswordDialog.prototype._setupValidation = function _setupValidation() {
      this.validation.addRule(1, "register_password", [{ "rule": "required", "message": "Password is required", "value": "password" }]);
      this.validation.addRule(1, "register_password_repeat", [{ "rule": "custom", "message": "Passwords must match",
        "valFunction": function valFunction(context) {
          return context.password === context.password_repeat;
        } }], true);
      this.validation.addRule(4, "register_password", [{ "rule": "custom", "message": "Insufficient Complexity",
        "valFunction": function valFunction(context) {
          return context.complexPassword;
        } }]);
    };

    PasswordDialog.prototype.selectOption = function selectOption(option) {
      if (isCancel(option)) {
        this.dialogController.cancel(option);
      } else {
        if (this.validation.validate(1)) {
          this.model.password = this.password;
          this.model.password_repeat = this.password_repeat;
          this.dialogController.ok(this.model);
        }
      }
    };

    return PasswordDialog;
  }()) || _class);


  function isCancel(option) {
    return ['cancel', 'no'].indexOf(option.toLowerCase()) !== -1;
  }
});
define('resources/editor/editor',["exports", "aurelia-framework", "aurelia-binding", "jquery", "summernote"], function (exports, _aureliaFramework, _aureliaBinding, _jquery) {
		"use strict";

		Object.defineProperty(exports, "__esModule", {
				value: true
		});
		exports.Editor = undefined;

		var _jquery2 = _interopRequireDefault(_jquery);

		function _interopRequireDefault(obj) {
				return obj && obj.__esModule ? obj : {
						default: obj
				};
		}

		function _initDefineProp(target, property, descriptor, context) {
				if (!descriptor) return;
				Object.defineProperty(target, property, {
						enumerable: descriptor.enumerable,
						configurable: descriptor.configurable,
						writable: descriptor.writable,
						value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
				});
		}

		function _classCallCheck(instance, Constructor) {
				if (!(instance instanceof Constructor)) {
						throw new TypeError("Cannot call a class as a function");
				}
		}

		function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
				var desc = {};
				Object['ke' + 'ys'](descriptor).forEach(function (key) {
						desc[key] = descriptor[key];
				});
				desc.enumerable = !!desc.enumerable;
				desc.configurable = !!desc.configurable;

				if ('value' in desc || desc.initializer) {
						desc.writable = true;
				}

				desc = decorators.slice().reverse().reduce(function (desc, decorator) {
						return decorator(target, property, desc) || desc;
				}, desc);

				if (context && desc.initializer !== void 0) {
						desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
						desc.initializer = undefined;
				}

				if (desc.initializer === void 0) {
						Object['define' + 'Property'](target, property, desc);
						desc = null;
				}

				return desc;
		}

		function _initializerWarningHelper(descriptor, context) {
				throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
		}

		var _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3;

		var Editor = exports.Editor = (_dec = (0, _aureliaFramework.inject)(Element, _aureliaBinding.ObserverLocator), _dec2 = (0, _aureliaFramework.bindable)({ defaultBindingMode: _aureliaFramework.bindingMode.twoWay }), _dec(_class = (_class2 = function () {
				function Editor(element, observerLocator) {
						var _this = this;

						_classCallCheck(this, Editor);

						_initDefineProp(this, "value", _descriptor, this);

						_initDefineProp(this, "height", _descriptor2, this);

						_initDefineProp(this, "toolbar", _descriptor3, this);

						this.editorId = null;
						this.editor = null;

						this.element = element;
						this.editorId = "summernote-" + this.guid();
						this.subscriptions = [observerLocator.getObserver(this, 'value').subscribe(function (newValue) {
								if (_this.editor && newValue !== _this.editor.summernote('code')) {
										_this.editor.summernote('code', newValue);
								}
						})];
				}

				Editor.prototype.attached = function attached() {
						var that = this;
						this.editor = (0, _jquery2.default)("#" + this.editorId);
						this.editor.data('view-model', this);
						this.editor.summernote({
								height: this.height,
								toolbar: this.toolbar,
								callbacks: {
										onChange: function onChange(contents) {
												that.value = contents;
										}
								}
						});
						this.editor.summernote('code', this.value);
				};

				Editor.prototype.detached = function detached() {
						this.editor.summernote('destroy');
				};

				Editor.prototype.guid = function guid() {
						function s4() {
								return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
						}
						return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
				};

				return Editor;
		}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "value", [_dec2], {
				enumerable: true,
				initializer: null
		}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "height", [_aureliaFramework.bindable], {
				enumerable: true,
				initializer: function initializer() {
						return 250;
				}
		}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "toolbar", [_aureliaFramework.bindable], {
				enumerable: true,
				initializer: function initializer() {
						return [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen']]];
				}
		})), _class2)) || _class);
});
define('resources/editor/styles',[], function () {
	'use strict';

	CKEDITOR.stylesSet.add('default', [{ name: 'Italic Title', element: 'h2', styles: { 'font-style': 'italic' } }, { name: 'Subtitle', element: 'h3', styles: { 'color': '#aaa', 'font-style': 'italic' } }, {
		name: 'Special Container',
		element: 'div',
		styles: {
			padding: '5px 10px',
			background: '#eee',
			border: '1px solid #ccc'
		}
	}, { name: 'Marker', element: 'span', attributes: { 'class': 'marker' } }, { name: 'Big', element: 'big' }, { name: 'Small', element: 'small' }, { name: 'Typewriter', element: 'tt' }, { name: 'Computer Code', element: 'code' }, { name: 'Keyboard Phrase', element: 'kbd' }, { name: 'Sample Text', element: 'samp' }, { name: 'Variable', element: 'var' }, { name: 'Deleted Text', element: 'del' }, { name: 'Inserted Text', element: 'ins' }, { name: 'Cited Work', element: 'cite' }, { name: 'Inline Quotation', element: 'q' }, { name: 'Language: RTL', element: 'span', attributes: { 'dir': 'rtl' } }, { name: 'Language: LTR', element: 'span', attributes: { 'dir': 'ltr' } }, {
		name: 'Styled Image (left)',
		element: 'img',
		attributes: { 'class': 'left' }
	}, {
		name: 'Styled Image (right)',
		element: 'img',
		attributes: { 'class': 'right' }
	}, {
		name: 'Compact Table',
		element: 'table',
		attributes: {
			cellpadding: '5',
			cellspacing: '0',
			border: '1',
			bordercolor: '#ccc'
		},
		styles: {
			'border-collapse': 'collapse'
		}
	}, { name: 'Borderless Table', element: 'table', styles: { 'border-style': 'hidden', 'background-color': '#E6E6FA' } }, { name: 'Square Bulleted List', element: 'ul', styles: { 'list-style-type': 'square' } }, { name: 'Clean Image', type: 'widget', widget: 'image', attributes: { 'class': 'image-clean' } }, { name: 'Grayscale Image', type: 'widget', widget: 'image', attributes: { 'class': 'image-grayscale' } }, { name: 'Featured Snippet', type: 'widget', widget: 'codeSnippet', attributes: { 'class': 'code-featured' } }, { name: 'Featured Formula', type: 'widget', widget: 'mathjax', attributes: { 'class': 'math-featured' } }, { name: '240p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-240p' }, group: 'size' }, { name: '360p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-360p' }, group: 'size' }, { name: '480p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-480p' }, group: 'size' }, { name: '720p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-720p' }, group: 'size' }, { name: '1080p', type: 'widget', widget: 'embedSemantic', attributes: { 'class': 'embed-1080p' }, group: 'size' }, { name: '240p ', type: 'widget', widget: 'embed', attributes: { 'class': 'embed-240p' }, group: 'size' }, { name: '360p ', type: 'widget', widget: 'embed', attributes: { 'class': 'embed-360p' }, group: 'size' }, { name: '480p ', type: 'widget', widget: 'embed', attributes: { 'class': 'embed-480p' }, group: 'size' }, { name: '720p ', type: 'widget', widget: 'embed', attributes: { 'class': 'embed-720p' }, group: 'size' }, { name: '1080p ', type: 'widget', widget: 'embed', attributes: { 'class': 'embed-1080p' }, group: 'size' }]);
});
define('resources/elements/add-systems',['exports', '../data/dataServices', 'aurelia-framework'], function (exports, _dataServices, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AddSystems = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

  var AddSystems = exports.AddSystems = (_dec = (0, _aureliaFramework.inject)(_dataServices.DataServices), _dec(_class = (_class2 = function () {
    function AddSystems(data) {
      _classCallCheck(this, AddSystems);

      this.filter = "";

      _initDefineProp(this, 'selectedproduct', _descriptor, this);

      _initDefineProp(this, 'systemsarray', _descriptor2, this);

      _initDefineProp(this, 'filteredsystemsarray', _descriptor3, this);

      _initDefineProp(this, 'systemstring', _descriptor4, this);

      _initDefineProp(this, 'systemchanges', _descriptor5, this);

      this.data = data;
    }

    AddSystems.prototype.filterList = function filterList() {
      if (this.filter) {
        var thisFilter = this.filter;
        this.filteredsystemsarray = this.systemsarray.filter(function (item) {
          return item.sid.substring(0, thisFilter.length).toUpperCase() === thisFilter.toUpperCase();
        });
      } else {
        this.filteredsystemsarray = this.systemsarray;
      }
    };

    AddSystems.prototype.selectSystem = function selectSystem(el, system) {
      if (!this._systemAlreadySelected(system.sid)) {
        this.systemchanges.push({ productId: this.selectedproduct._id, systemId: system._id, operation: "add" });
        this.selectedproduct.systems.push({ sid: system.sid, systemId: system._id });
      }
    };

    AddSystems.prototype._systemAlreadySelected = function _systemAlreadySelected(sid) {
      for (var i = 0; i < this.selectedproduct.systems.length; i++) {
        if (this.selectedproduct.systems[i].sid === sid) return true;
      }
      return false;
    };

    AddSystems.prototype.removeSystem = function removeSystem(el, system) {
      for (var i = 0; i < this.selectedproduct.systems.length; i++) {
        if (system.systemId === this.selectedproduct.systems[i].systemId) {
          for (var j = 0; j < this.systemchanges.length; j++) {
            if (this.systemchanges[j].systemId === system.systemId) break;
          }
          if (this.systemChanges && j === this.systemChanges.length) {
            this.systemchanges.splice(j, 1);
          } else {
            this.systemchanges.push({ productId: this.selectedproduct._id, systemId: system.systemId, operation: "delete" });
          }
          this.selectedproduct.systems.splice(i, 1);
          break;
        }
      }
    };

    return AddSystems;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'selectedproduct', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'systemsarray', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'filteredsystemsarray', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'systemstring', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, 'systemchanges', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class);
});
define('resources/elements/calendar',['exports', 'aurelia-framework', 'moment', 'fullcalendar', 'jquery'], function (exports, _aureliaFramework, _moment, _fullcalendar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.calendar = undefined;

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _dec3, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

  var calendar = exports.calendar = (_dec = (0, _aureliaFramework.customElement)('calendar'), _dec2 = (0, _aureliaFramework.inlineView)('<template><require from="../css/fullcalendar.css"></require></template>'), _dec3 = (0, _aureliaFramework.inject)(Element, _aureliaFramework.BindingEngine), _dec(_class = _dec2(_class = _dec3(_class = (_class2 = function () {
    function calendar(element, bindingEngine) {
      var _this = this;

      _classCallCheck(this, calendar);

      _initDefineProp(this, 'weekends', _descriptor, this);

      _initDefineProp(this, 'dayClick', _descriptor2, this);

      _initDefineProp(this, 'eventClick', _descriptor3, this);

      _initDefineProp(this, 'events', _descriptor4, this);

      _initDefineProp(this, 'options', _descriptor5, this);

      _initDefineProp(this, 'view', _descriptor6, this);

      _initDefineProp(this, 'that', _descriptor7, this);

      this.subscription = null;

      this.element = element;
      this.bindingEngine = bindingEngine;

      this.subscription = this.bindingEngine.collectionObserver(this.events).subscribe(function (splices) {
        _this.eventListChanged(splices);
      });
    }

    calendar.prototype.fireEvent = function fireEvent(element, type, data) {
      var changeEvent = void 0;

      if (window.CustomEvent) {
        if (type === 'dayClicked') {
          changeEvent = new CustomEvent('change', {
            detail: {
              value: data
            },
            bubbles: true
          });
        } else {
          changeEvent = new CustomEvent('click', {
            detail: {
              value: data
            },
            bubbles: true
          });
        }
      } else if (type === 'dayClicked') {
        changeEvent = document.createEvent('CustomEvent');
        changeEvent.initCustomEvent('change', true, true, {
          detail: {
            value: data
          }
        });
      } else {
        changeEvent = document.createEvent('CustomEvent');
        changeEvent.initCustomEvent('click', true, true, {
          detail: {
            value: data
          }
        });
      }
      this.element.dispatchEvent(changeEvent);
    };

    calendar.prototype.eventListChanged = function eventListChanged(splices) {
      if (this.calendar) this.calendar.fullCalendar('refetchEvents');
    };

    calendar.prototype.eventsChanged = function eventsChanged(newValue) {
      var _this2 = this;

      if (this.subscription !== null) {
        this.subscription.dispose();
      }
      this.subscription = this.bindingEngine.collectionObserver(this.events).subscribe(function (splices) {
        _this2.eventListChanged(splices);
      });

      if (this.calendar) this.calendar.fullCalendar('refetchEvents');
    };

    calendar.prototype.attached = function attached() {
      var _this3 = this;

      this.calendar = $(this.element);
      var eventSource = function eventSource(start, end, timezone, callback) {
        callback(_this3.events);
      };

      var defaultValues = {
        defaultView: this.view || 'month',
        weekends: this.weekends,
        firstDay: 1,

        dayClick: function dayClick(date, jsEvent, view) {
          return _this3.dayClick(date, jsEvent, view);
        },
        eventClick: function eventClick(event) {
          return _this3.eventClick(event);
        },
        events: eventSource
      };

      this.calendar.fullCalendar(Object.assign(defaultValues, this.options));
    };

    return calendar;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'weekends', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return true;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'dayClick', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'eventClick', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'events', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return [];
    }
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, 'options', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, 'view', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, 'that', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class) || _class) || _class);
});
define('resources/elements/flat-picker',['exports', 'aurelia-framework', 'flatpickr'], function (exports, _aureliaFramework, _flatpickr) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.FlatPickerCustomElement = undefined;

    var _flatpickr2 = _interopRequireDefault(_flatpickr);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    function _initDefineProp(target, property, descriptor, context) {
        if (!descriptor) return;
        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
        });
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
        var desc = {};
        Object['ke' + 'ys'](descriptor).forEach(function (key) {
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;

        if ('value' in desc || desc.initializer) {
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function (desc, decorator) {
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== void 0) {
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0) {
            Object['define' + 'Property'](target, property, desc);
            desc = null;
        }

        return desc;
    }

    function _initializerWarningHelper(descriptor, context) {
        throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
    }

    var _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

    var FlatPickerCustomElement = exports.FlatPickerCustomElement = (_dec = (0, _aureliaFramework.inject)(Element), _dec2 = (0, _aureliaFramework.bindable)({ defaultBindingMode: _aureliaFramework.bindingMode.twoWay }), _dec(_class = (_class2 = function () {
        function FlatPickerCustomElement(element) {
            _classCallCheck(this, FlatPickerCustomElement);

            _initDefineProp(this, 'config', _descriptor, this);

            _initDefineProp(this, 'startdate', _descriptor2, this);

            _initDefineProp(this, 'enddate', _descriptor3, this);

            _initDefineProp(this, 'controlid', _descriptor4, this);

            _initDefineProp(this, 'value', _descriptor5, this);

            this.element = element;
        }

        FlatPickerCustomElement.prototype.bind = function bind() {
            var defaultConfig = {
                altInput: true,
                altFormat: "F j, Y",
                minDate: this.startdate,
                maxDate: this.enddate
            };

            this._config = Object.assign({}, defaultConfig, this.config);
            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);
        };

        FlatPickerCustomElement.prototype.attached = function attached() {
            this.flatpickr = new _flatpickr2.default(this.element.querySelector('.aurelia-flatpickr'), this._config);
            this.valueChanged();
        };

        FlatPickerCustomElement.prototype.fireEvent = function fireEvent(element, type, data) {
            var changeEvent = void 0;

            if (window.CustomEvent) {
                changeEvent = new CustomEvent('change', {
                    detail: {
                        value: data
                    },
                    bubbles: true
                });
            } else {
                changeEvent = document.createEvent('CustomEvent');
                changeEvent.initCustomEvent('change', true, true, {
                    detail: {
                        value: data
                    }
                });
            }
            this.element.dispatchEvent(changeEvent);
        };

        FlatPickerCustomElement.prototype.startdateChanged = function startdateChanged(newValue, oldValue) {
            if (this.flatpickr) {
                this.flatpickr.set("minDate", newValue);
            }
        };

        FlatPickerCustomElement.prototype.enddateChanged = function enddateChanged(newValue, oldValue) {
            if (this.flatpickr) {
                this.flatpickr.set("maxDate", newValue);
            }
        };

        FlatPickerCustomElement.prototype.onChange = function onChange(selectedDates, dateStr, instance) {
            var _this = this;

            if (!this._datesAreSynced(this.value, selectedDates)) {

                switch (selectedDates.length) {
                    case 0:
                        this.value = undefined;
                        break;
                    case 1:
                        this.value = this._cloneDate(selectedDates[0]);
                        break;
                    default:
                        this.value = selectedDates.map(function (d) {
                            return _this._cloneDate(d);
                        });
                        break;
                }
            }
            this.fireEvent(this.element, 'changeBeginDate', { date: this.value });
        };

        FlatPickerCustomElement.prototype.valueChanged = function valueChanged() {
            var _this2 = this;

            if (!this.flatpickr) {
                return;
            }

            if (this._datesAreSynced(this.value, this.flatpickr.selectedDates)) {
                return;
            }

            var newDate = void 0;

            if (!this.value) {
                newDate = undefined;
            } else if (!Array.isArray(this.value)) {
                newDate = this._cloneDate(this.value);
            } else {
                newDate = this.value.map(function (d) {
                    return _this2._cloneDate(d);
                });
            }

            this.flatpickr.setDate(newDate);
        };

        FlatPickerCustomElement.prototype._datesAreSynced = function _datesAreSynced(model, view) {
            model = model || [];

            var modelDates = Array.isArray(model) ? model : [model];

            var _loop = function _loop(d) {
                var modelDate = modelDates[d];

                if (view.findIndex(function (v) {
                    return v.valueOf() === modelDate.valueOf();
                }) > -1) {
                    return 'continue';
                }

                return {
                    v: false
                };
            };

            for (var d = 0; d < modelDates.length; d++) {
                var _ret = _loop(d);

                switch (_ret) {
                    case 'continue':
                        continue;

                    default:
                        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
                }
            }

            var _loop2 = function _loop2(d) {
                var viewDate = view[d];

                if (modelDates.findIndex(function (m) {
                    return m.valueOf() === viewDate.valueOf();
                }) > -1) {
                    return 'continue';
                }

                return {
                    v: false
                };
            };

            for (var d = 0; d < view.length; d++) {
                var _ret2 = _loop2(d);

                switch (_ret2) {
                    case 'continue':
                        continue;

                    default:
                        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
                }
            }

            return true;
        };

        FlatPickerCustomElement.prototype._cloneDate = function _cloneDate(d) {
            return new Date(d.getTime ? d.valueOf() : d);
        };

        return FlatPickerCustomElement;
    }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'config', [_aureliaFramework.bindable], {
        enumerable: true,
        initializer: function initializer() {
            return {};
        }
    }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'startdate', [_aureliaFramework.bindable], {
        enumerable: true,
        initializer: null
    }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'enddate', [_aureliaFramework.bindable], {
        enumerable: true,
        initializer: null
    }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'controlid', [_aureliaFramework.bindable], {
        enumerable: true,
        initializer: null
    }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, 'value', [_dec2], {
        enumerable: true,
        initializer: null
    })), _class2)) || _class);
});
define('resources/elements/loading-indicator',['exports', 'nprogress', 'aurelia-framework'], function (exports, _nprogress, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LoadingIndicator = undefined;

  var nprogress = _interopRequireWildcard(_nprogress);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2;

  var LoadingIndicator = exports.LoadingIndicator = (_dec = (0, _aureliaFramework.noView)(['nprogress/nprogress.css']), _dec(_class = (_class2 = function () {
    function LoadingIndicator() {
      _classCallCheck(this, LoadingIndicator);

      _initDefineProp(this, 'loading', _descriptor, this);

      _initDefineProp(this, 'progress', _descriptor2, this);
    }

    LoadingIndicator.prototype.loadingChanged = function loadingChanged(newValue) {
      newValue ? nprogress.start() : nprogress.done();
    };

    LoadingIndicator.prototype.progressChanged = function progressChanged(newValue) {
      nprogress.set(newValue);
    };

    return LoadingIndicator;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'loading', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return false;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'progress', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return 0;
    }
  })), _class2)) || _class);
});
define('resources/elements/nav-bar',['exports', 'aurelia-framework', 'aurelia-router', 'aurelia-event-aggregator', '../data/auth', '../../resources/utils/utils', '../../resources/data/people', '../../config/appConfig', '../dialogs/common-dialogs', 'moment', 'toastr', 'jquery'], function (exports, _aureliaFramework, _aureliaRouter, _aureliaEventAggregator, _auth, _utils, _people, _appConfig, _commonDialogs, _moment, _toastr, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.NavBar = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    var toastr = _interopRequireWildcard(_toastr);

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
            return obj;
        } else {
            var newObj = {};

            if (obj != null) {
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                }
            }

            newObj.default = obj;
            return newObj;
        }
    }

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var NavBar = exports.NavBar = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _aureliaEventAggregator.EventAggregator, _aureliaFramework.BindingEngine, _auth.Auth, _utils.Utils, _people.People, _appConfig.AppConfig, _commonDialogs.CommonDialogs), _dec(_class = function () {
        function NavBar(router, eventAggregator, bindingEngine, auth, utils, people, config, dialog) {
            _classCallCheck(this, NavBar);

            this.isAuthenticated = false;
            this.subscription = {};

            this.eventAggregator = eventAggregator;
            this.router = router;
            this.bindingEngine = bindingEngine;
            this.auth = auth;
            this.utils = utils;
            this.people = people;
            this.config = config;
            this.dialog = dialog;

            this.isAuthenticated = this.auth.isAuthenticated();
            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        NavBar.prototype.attached = function attached() {
            (0, _jquery2.default)(".dropdown-toggle").dropdown();
        };

        NavBar.prototype.login = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var response;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.auth.login(this.email, this.password);

                            case 2:
                                response = _context.sent;

                                if (!response.error) {
                                    sessionStorage.setItem('uccweather', JSON.stringify({ temp: response.temp, icon: response.icon }));
                                    this.loginError = "";
                                    this.loginSuccess();
                                    this.isAuthenticated = this.auth.isAuthenticated();
                                } else {
                                    this.loginError = "Invalid credentials.";
                                }

                            case 4:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function login() {
                return _ref.apply(this, arguments);
            }

            return login;
        }();

        NavBar.prototype.logout = function logout() {
            this.auth.logout(this.userObj.email);
            this.userObj = new Object();
            this.isAuthenticated = this.auth.isAuthenticated();
            this.router.navigate("home");
        };

        NavBar.prototype.loginSuccess = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.userObj = JSON.parse(sessionStorage.getItem('user'));

                                if (!this.userObj) {
                                    _context2.next = 17;
                                    break;
                                }

                                if (!(this.userObj.institutionId.institutionStatus !== this.config.INSTITUTIONS_ACTIVE)) {
                                    _context2.next = 7;
                                    break;
                                }

                                this.utils.showNotification("You must belong to an active institution to access the web site");
                                this.logout();
                                _context2.next = 15;
                                break;

                            case 7:
                                if (!(this.userObj.personStatus !== this.config.ACTIVE_PERSON)) {
                                    _context2.next = 11;
                                    break;
                                }

                                return _context2.abrupt('return', this.dialog.showMessage("You must have an active account to access the web site.  Contact your faculty coordinator to activate your account.", "Account Not Active", ['OK']).whenClosed(function (response) {
                                    _this.logout();
                                }));

                            case 11:
                                if (!this.userObj.userRole) this.logout();
                                sessionStorage.setItem('role', this.userObj.userRole);
                                this.reminders();
                                this.router.navigate("user");

                            case 15:
                                _context2.next = 19;
                                break;

                            case 17:
                                this.utils.showNotification("There was a problem validating your account");
                                this.router.navigate("home");

                            case 19:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function loginSuccess() {
                return _ref2.apply(this, arguments);
            }

            return loginSuccess;
        }();

        NavBar.prototype.requestPasswordReset = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.email) {
                                    _context3.next = 7;
                                    break;
                                }

                                _context3.next = 3;
                                return this.people.requestPasswordReset({ email: this.email });

                            case 3:
                                response = _context3.sent;

                                if (response && !response.error) {
                                    this.utils.showNotification("An email has been sent to the provided email address with a link you can use to reset your password");
                                } else if (response.status = 404) {
                                    this.utils.showNotification("There is no registered user with that email address");
                                } else if (response.status = 401) {
                                    this.utils.showNotification("The account with the provided address has been deactivated.  Please contact your faculty coordinator.");
                                }
                                _context3.next = 8;
                                break;

                            case 7:
                                this.utils.showNotification("Please enter an email address");

                            case 8:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function requestPasswordReset() {
                return _ref3.apply(this, arguments);
            }

            return requestPasswordReset;
        }();

        NavBar.prototype.enterNote = function enterNote() {
            var _this2 = this;

            var note = { noteBody: "", noteCategories: this.userObj.noteCategories, selectedCategory: 0 };
            return this.dialog.showNote("Enter Note", note, ['Submit', 'Cancel']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.saveNote(response.output);
                } else {
                    console.log("Cancelled");
                }
            });
        };

        NavBar.prototype.saveNote = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(note) {
                var response;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.people.selectNote();
                                this.people.selectedNote.personId = this.userObj._id;
                                this.people.selectedNote.category = this.userObj.noteCategories[note.selectedCategory];
                                this.people.selectedNote.note = note.note.noteBody;
                                _context4.next = 6;
                                return this.people.saveNote();

                            case 6:
                                response = _context4.sent;

                                if (!response.error) {
                                    this.utils.showNotification('The note was saved');
                                }

                            case 8:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function saveNote(_x) {
                return _ref4.apply(this, arguments);
            }

            return saveNote;
        }();

        NavBar.prototype.openAlert = function openAlert(alert) {
            this.alert = alert;
            (0, _jquery2.default)(".hoverProfile").css("top", 100);
            (0, _jquery2.default)(".hoverProfile").css("left", 100);
            (0, _jquery2.default)(".hoverProfile").css("display", "block");
            sessionStorage.setItem('alert', true);
        };

        NavBar.prototype.hideAlert = function hideAlert() {
            (0, _jquery2.default)(".hoverProfile").css("display", "none");
        };

        NavBar.prototype.reminders = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var _this3 = this;

                var response, now, weekDay, monthDay;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                _context5.next = 2;
                                return this.people.getRemindersArray('?filter=personId|eq|' + this.userObj._id, true);

                            case 2:
                                response = _context5.sent;

                                if (response && !response.error && this.people && Object.prototype.toString.call(this.people.remindersArray) === '[object Array]') {
                                    toastr.options.closeButton = true;
                                    toastr.options.closeMethod = 'fadeOut';
                                    toastr.options.closeDuration = 300;
                                    toastr.options.closeEasing = 'swing';
                                    this.timeReminders = new Array();
                                    now = new Date();
                                    weekDay = now.getDay();
                                    monthDay = now.getDate();

                                    this.reccurentReminders = new Array();
                                    this.people.remindersArray.forEach(function (item, index) {
                                        switch (item.reminderType) {
                                            case "D":
                                                if (!item.lastSeen || !(0, _moment2.default)(now).isSame(item.lastSeen, 'day')) {
                                                    if (item.priority == 1) {
                                                        toastr.error(item.note, "Reminder");
                                                    } else {
                                                        toastr.info(item.note, "Reminder");
                                                    }
                                                    item.lastSeen = now;
                                                    _this3.people.saveReminder(item, index);
                                                }
                                                break;
                                            case "W":
                                                if (item.reminderDay == weekDay && (!item.lastSeen || !(0, _moment2.default)(now).isSame(item.lastSeen, 'day'))) {
                                                    if (item.priority == 1) {
                                                        toastr.error(item.note, "Reminder");
                                                    } else {
                                                        toastr.info(item.note, "Reminder");
                                                    }
                                                    item.lastSeen = now;
                                                    _this3.people.saveReminder(item, index);
                                                }
                                                break;
                                            case "M":
                                                if (item.reminderDay == monthDay && (!item.lastSeen || !(0, _moment2.default)(now).isSame(item.lastSeen, 'month'))) {
                                                    if (item.priority == 1) {
                                                        toastr.error(item.note, "Reminder");
                                                    } else {
                                                        toastr.info(item.note, "Reminder");
                                                    }
                                                    item.lastSeen = now;
                                                    _this3.people.saveReminder(item, index);
                                                }
                                                break;
                                            case "A":
                                                if ((0, _moment2.default)(now).isSame(item.dateStartRemind, 'day') && (!item.lastSeen || !(0, _moment2.default)(now).isSame(item.lastSeen, 'month'))) {
                                                    if (item.priority == 1) {
                                                        toastr.error(item.note, "Reminder");
                                                    } else {
                                                        toastr.info(item.note, "Reminder");
                                                    }
                                                    item.lastSeen = now;
                                                    _this3.people.saveReminder(item, index);
                                                }
                                                break;
                                            case "T":
                                                if ((0, _moment2.default)(now).isSame(item.dateStartRemind, 'day') && (!item.lastSeen || !(0, _moment2.default)(now).isSame(item.lastSeen, 'month'))) {
                                                    var diff = (0, _moment2.default)(now).diff(item.dateStartRemind, 'minutes');
                                                    if (diff >= -15) {
                                                        if (item.priority == 1) {
                                                            toastr.error(item.note, "Reminder");
                                                        } else {
                                                            toastr.info(item.note, "Reminder");
                                                        }
                                                        item.lastSeen = now;
                                                        _this3.people.saveReminder(item, index);
                                                    } else {
                                                        _this3.timeReminders.push({ item: item, index: index });
                                                    }
                                                }
                                        }
                                    });

                                    if (this.timeReminders.length > 0) {
                                        setInterval(function () {
                                            console.log('Checked reminders');
                                            var now = new Date();
                                            _this3.timeReminders.forEach(function (item) {
                                                var diff = (0, _moment2.default)().diff(item.item.dateStartRemind, 'minutes');
                                                if (diff >= -15) {
                                                    if (item.priority == 1) {
                                                        toastr.error(item.item.note, "Reminder");
                                                    } else {
                                                        toastr.info(item.note, "Reminder");
                                                    }
                                                    item.lastSeen = now;
                                                    _this3.people.saveReminder(item.item, item.index);
                                                }
                                            });
                                        }, 10000);
                                    }
                                }

                            case 4:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function reminders() {
                return _ref5.apply(this, arguments);
            }

            return reminders;
        }();

        return NavBar;
    }()) || _class);
});
define('resources/elements/rate-it',['exports', 'aurelia-framework', 'jquery'], function (exports, _aureliaFramework, _jquery) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.RateIt = undefined;

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _initDefineProp(target, property, descriptor, context) {
		if (!descriptor) return;
		Object.defineProperty(target, property, {
			enumerable: descriptor.enumerable,
			configurable: descriptor.configurable,
			writable: descriptor.writable,
			value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
		});
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
		var desc = {};
		Object['ke' + 'ys'](descriptor).forEach(function (key) {
			desc[key] = descriptor[key];
		});
		desc.enumerable = !!desc.enumerable;
		desc.configurable = !!desc.configurable;

		if ('value' in desc || desc.initializer) {
			desc.writable = true;
		}

		desc = decorators.slice().reverse().reduce(function (desc, decorator) {
			return decorator(target, property, desc) || desc;
		}, desc);

		if (context && desc.initializer !== void 0) {
			desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
			desc.initializer = undefined;
		}

		if (desc.initializer === void 0) {
			Object['define' + 'Property'](target, property, desc);
			desc = null;
		}

		return desc;
	}

	function _initializerWarningHelper(descriptor, context) {
		throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
	}

	var _dec, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3;

	var RateIt = exports.RateIt = (_dec = (0, _aureliaFramework.inject)(Element), _dec(_class = (_class2 = function () {
		function RateIt(element) {
			_classCallCheck(this, RateIt);

			_initDefineProp(this, 'rating', _descriptor, this);

			_initDefineProp(this, 'raters', _descriptor2, this);

			_initDefineProp(this, 'thiselement', _descriptor3, this);

			this.ratedIt = false;

			this.element = element;
		}

		RateIt.prototype.attached = function attached() {
			this.id = this.element.getAttribute("id");

			this.rates = [{ value: "5", title: 'Awesome - 5 stars', class: 'full', checked: false, id: "5" + this.id, name: this.id }, { value: "4.5", title: 'Pretty good - 4.5 stars', class: 'half', checked: false, id: "4.5" + this.id, name: this.id }, { value: "4", title: 'Pretty good - 4 stars', class: 'full', checked: false, id: "4" + this.id, name: this.id }, { value: "3.5", title: 'Meh - 3.5 stars', class: 'half', checked: false, id: "3.5" + this.id, name: this.id }, { value: "3", title: 'Meh - 3 stars', class: 'full', checked: false, id: "3" + this.id, name: this.id }, { value: "2.5", title: 'Kinda bad - 2.5 stars', class: 'half', checked: false, id: "2.5" + this.id, name: this.id }, { value: "2", title: 'Kinda bad - 2 stars', class: 'full', checked: false, id: "2" + this.id, name: this.id }, { value: "1.5", title: 'Meh - 1.5 stars', class: 'half', checked: false, id: "1.5" + this.id, name: this.id }, { value: "1", title: 'Sucks big time - 1 star', class: 'full', checked: false, id: "1" + this.id, name: this.id }, { value: ".5", title: 'Sucks big time - 0.5 stars', class: 'half', checked: false, id: ".5" + this.id, name: this.id }];
		};

		RateIt.prototype.rateIt = function rateIt(value, index) {
			if (!this.ratedIt) {
				this.ratedIt = true;
				this.raters += 1;
				this.rating = (this.rating + Number(value)) / this.raters;
				document.getElementById(this.rates[index].id).checked = "true";

				var changeEvent = void 0;

				if (window.CustomEvent) {
					changeEvent = new CustomEvent('change', {
						detail: {
							rating: this.rating,
							id: this.id
						},
						bubbles: true
					});
				} else {
					changeEvent = document.createEvent('CustomEvent');
					changeEvent.initCustomEvent('change', true, true, {
						detail: {
							rating: this.rating,
							id: this.id
						}
					});
				}
				this.element.dispatchEvent(changeEvent);
			}
		};

		return RateIt;
	}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'rating', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'raters', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'thiselement', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	})), _class2)) || _class);
});
define('resources/elements/submenu',['exports', 'aurelia-framework'], function (exports, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SubMenu = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3;

  var SubMenu = exports.SubMenu = (_class = function () {
    function SubMenu() {
      _classCallCheck(this, SubMenu);

      _initDefineProp(this, 'title', _descriptor, this);

      _initDefineProp(this, 'menuitems', _descriptor2, this);

      _initDefineProp(this, 'config', _descriptor3, this);
    }

    SubMenu.prototype.bind = function bind() {
      console.log(this.title);
    };

    return SubMenu;
  }(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'title', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'menuitems', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'config', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  })), _class);
});
define('resources/elements/table-navigation-bar',['exports', 'aurelia-framework'], function (exports, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TableNavigationBar = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3;

  var TableNavigationBar = exports.TableNavigationBar = (_class = function TableNavigationBar() {
    _classCallCheck(this, TableNavigationBar);

    _initDefineProp(this, 'columnspan', _descriptor, this);

    _initDefineProp(this, 'dataTable', _descriptor2, this);

    _initDefineProp(this, 'pagebuttons', _descriptor3, this);
  }, (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'columnspan', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'dataTable', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'pagebuttons', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  })), _class);
});
define('resources/elements/tree-node',['exports', 'aurelia-framework', 'aurelia-event-aggregator', '../../config/appConfig'], function (exports, _aureliaFramework, _aureliaEventAggregator, _appConfig) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.treeNode = undefined;

	function _initDefineProp(target, property, descriptor, context) {
		if (!descriptor) return;
		Object.defineProperty(target, property, {
			enumerable: descriptor.enumerable,
			configurable: descriptor.configurable,
			writable: descriptor.writable,
			value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
		});
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}

		return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);
			if (staticProps) defineProperties(Constructor, staticProps);
			return Constructor;
		};
	}();

	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
		var desc = {};
		Object['ke' + 'ys'](descriptor).forEach(function (key) {
			desc[key] = descriptor[key];
		});
		desc.enumerable = !!desc.enumerable;
		desc.configurable = !!desc.configurable;

		if ('value' in desc || desc.initializer) {
			desc.writable = true;
		}

		desc = decorators.slice().reverse().reduce(function (desc, decorator) {
			return decorator(target, property, desc) || desc;
		}, desc);

		if (context && desc.initializer !== void 0) {
			desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
			desc.initializer = undefined;
		}

		if (desc.initializer === void 0) {
			Object['define' + 'Property'](target, property, desc);
			desc = null;
		}

		return desc;
	}

	function _initializerWarningHelper(descriptor, context) {
		throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
	}

	var _dec, _dec2, _dec3, _dec4, _dec5, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

	var treeNode = exports.treeNode = (_dec = (0, _aureliaFramework.inject)(Element, _aureliaEventAggregator.EventAggregator, _appConfig.AppConfig), _dec2 = (0, _aureliaFramework.bindable)({ attribute: 'selected-node', defaultBindingMode: _aureliaFramework.bindingMode.twoWay }), _dec3 = (0, _aureliaFramework.bindable)({ attribute: 'visible', defaultBindingMode: _aureliaFramework.bindingMode.twoWay }), _dec4 = (0, _aureliaFramework.bindable)({ defaultBindingMode: _aureliaFramework.bindingMode.twoWay }), _dec5 = (0, _aureliaFramework.computedFrom)('data'), (0, _aureliaFramework.containerless)(_class = _dec(_class = (_class2 = function () {
		function treeNode(element, EventAggregator, config) {
			_classCallCheck(this, treeNode);

			_initDefineProp(this, 'data', _descriptor, this);

			_initDefineProp(this, 'level', _descriptor2, this);

			_initDefineProp(this, 'selectedNode', _descriptor3, this);

			_initDefineProp(this, 'visible', _descriptor4, this);

			_initDefineProp(this, 'maxLevel', _descriptor5, this);

			_initDefineProp(this, 'callback', _descriptor6, this);

			_initDefineProp(this, 'selectedFile', _descriptor7, this);

			this.childrenVisible = false;

			this.element = element;
			this.ea = EventAggregator;
			this.config = config;
		}

		treeNode.prototype.bind = function bind() {
			console.log(this.data);
		};

		treeNode.prototype.attached = function attached() {
			this.childrenVisible = this.level < this.maxLevel;
		};

		treeNode.prototype.countNodes = function countNodes(node_item) {
			var _this = this;

			var count = 0;
			if (node_item) {
				if (node_item.children !== undefined) node_item.children.forEach(function (node_child) {
					return count += _this.countNodes(node_child) + 1;
				});
			}
			return count;
		};

		treeNode.prototype.visibleChanged = function visibleChanged(newValue) {
			if (newValue = false) {
				this.childrenVisible = false;
			}
		};

		treeNode.prototype.toggleExpand = function toggleExpand() {
			this.childrenVisible = !this.childrenVisible;
		};

		treeNode.prototype.clickMe = function clickMe(data) {
			if (data.path) window.open(this.config.HOST + data.path.substring(6), '_blank');
			this.selectedNode = data;
		};

		treeNode.prototype.deleteFile = function deleteFile(data) {
			if (data.file) this.selectedFile = data;
			this.callback(data);
		};

		treeNode.prototype.deleteFile2 = function deleteFile2(data) {
			if (data.file) {
				this.ea.publish('delete-file', { file: data });
			}
		};

		treeNode.prototype.fireEvent = function fireEvent(element, type, data) {
			var changeEvent = void 0;

			if (window.CustomEvent) {
				changeEvent = new CustomEvent('click', {
					detail: {
						value: data
					},
					bubbles: true
				});
			} else {
				changeEvent = document.createEvent('CustomEvent');
				changeEvent.initCustomEvent('click', true, true, {
					detail: {
						value: data
					}
				});
			}
			this.element.dispatchEvent(changeEvent);
		};

		_createClass(treeNode, [{
			key: 'itemCount',
			get: function get() {
				return this.countNodes(this.data);
			}
		}]);

		return treeNode;
	}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'data', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'level', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'selectedNode', [_dec2], {
		enumerable: true,
		initializer: null
	}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'visible', [_dec3], {
		enumerable: true,
		initializer: function initializer() {
			return true;
		}
	}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, 'maxLevel', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: function initializer() {
			return 2;
		}
	}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, 'callback', [_aureliaFramework.bindable], {
		enumerable: true,
		initializer: null
	}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, 'selectedFile', [_dec4], {
		enumerable: true,
		initializer: null
	}), _applyDecoratedDescriptor(_class2.prototype, 'itemCount', [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, 'itemCount'), _class2.prototype)), _class2)) || _class) || _class);
});
define('resources/utils/dataTable',['exports', 'aurelia-framework', 'moment', './utils'], function (exports, _aureliaFramework, _moment, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DataTable = undefined;

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _dec2, _class;

  var DataTable = exports.DataTable = (_dec = (0, _aureliaFramework.transient)(), _dec2 = (0, _aureliaFramework.inject)(_utils.Utils), _dec(_class = _dec2(_class = function () {
    function DataTable(utils) {
      _classCallCheck(this, DataTable);

      this.currentPage = 0;
      this.pages = [];
      this.rowOptions = [5, 10, 15, 20, 50];
      this.filterValues = [];
      this.DEFAULT_TAKE = 20;
      this.DEFAULT_START = 0;
      this.sortProperty = '';
      this.sortDirection = 1;
      this.currentPageElement = 0;
      this.startRecord = this.DEFAULT_START;
      this.take = this.DEFAULT_TAKE;
      this.firstVisible = this.startRecord + 1;
      this.lastVisible = this.startRecord + this.take - 1;
      this.numRowsShown = this.take.toString();
      this.active = false;

      this.utils = utils;
    }

    DataTable.prototype.initialize = function initialize(context) {
      this.context = context;
    };

    DataTable.prototype.pageOne = function pageOne() {
      setTimeout(function () {
        $(".pagination").children().removeClass('active');
        $($(".pagination").children()[1]).addClass('active');
      }, 100);
    };

    DataTable.prototype.createPageButtons = function createPageButtons(start) {
      this.displayLength = this.baseArray.length;
      this.lastVisible = parseInt(this.take) < this.displayLength ? parseInt(this.take) : this.displayLength;
      var maxButtons = 7;
      this.currentPage = 1;
      this.pageButtons = [];
      this.numPageButtons = Math.ceil((this.displayLength - (start - 1) * this.take) / this.take);
      for (var j = 1; j < this.numPageButtons; j++) {
        this.pages[j] = j;
      }

      if (this.numPageButtons <= maxButtons + 1) {
        for (var i = start; i < this.numPageButtons + start; i++) {
          this.pageButtons.push(i);
        }
      } else {
        for (var i = start; i < maxButtons + start; i++) {
          this.pageButtons.push(i);
        }
        this.pageButtons.push('...');
        this.pageButtons.push(this.pages.length);
      }
    };

    DataTable.prototype.buildDisplayArray = function buildDisplayArray() {
      this.displayArray = new Array();
      for (var i = 0; i <= this.take; i++) {
        if (i + this.startRecord >= this.baseArray.length) break;
        this.displayArray.push(this.baseArray[i + this.startRecord]);
      }
      this.createPageButtons(1);
    };

    DataTable.prototype.forward = function forward() {
      $(".pagination").children().removeClass('active');

      this.currentPageElement = this.currentPageElement < this.pageButtons.length - 1 ? this.currentPageElement += 1 : this.currentPageElement;
      if (this.pageButtons[this.currentPageElement] == "...") {
        this.createPageButtons(this.pageButtons[0] + 1);
        this.currentPageElement -= 1;
      }
      $($(".pagination").children()[this.currentPageElement + 1]).addClass('active');

      var start = parseInt(this.startRecord);
      var tk = parseInt(this.take);
      this.startRecord = start + tk > this.baseArray.length ? start : start + tk;
      this.firstVisible = this.startRecord + 1;
      this.lastVisible = parseInt(this.firstVisible) + tk - 1 > this.displayArray.length ? this.displayArray.length : parseInt(this.firstVisible) + tk - 1;
      this.buildDisplayArray();
    };

    DataTable.prototype.createPage = function createPage() {
      $($(".pagination")[this.currentPage - 1]).addClass('active');
    };

    DataTable.prototype.backward = function backward() {
      $(".pagination").children().removeClass('active');
      this.currentPageElement = this.currentPageElement > 0 ? this.currentPageElement -= 1 : this.currentPageElement;
      if (this.currentPageElement == 0 && this.pageButtons[this.currentPageElement] != 1) {
        this.createPageButtons(this.pageButtons[0] - 1);
      }
      if (this.pageButtons[this.currentPageElement] == "...") {
        var start = this.numPageButtons >= 8 ? this.numPageButtons - 8 : 1;
        this.createPageButtons(start);
      }
      $($(".pagination").children()[this.currentPageElement + 1]).addClass('active');

      var start = parseInt(this.startRecord);
      var tk = parseInt(this.take);
      this.startRecord = start - tk < 0 ? 0 : this.startRecord = start - tk;
      this.firstVisible = this.startRecord + 1;
      this.lastVisible = parseInt(this.firstVisible) + tk - 1;
      this.buildDisplayArray();
    };

    DataTable.prototype.pageButton = function pageButton(index, el) {
      $(".pagination").children().removeClass('active');

      $(el.target).closest('li').addClass('active');
      this.currentPageElement = index;
      var start = parseInt(this.startRecord);
      var tk = parseInt(this.take);
      if (this.pageButtons[index] !== '...') {
        this.startRecord = (this.pageButtons[index] - 1) * tk;
        this.firstVisible = this.startRecord + 1;
        this.lastVisible = parseInt(this.firstVisible) + tk - 1 > this.displayArray.length ? this.displayArray.length : parseInt(this.firstVisible) + tk - 1;
      }

      this.buildDisplayArray();
    };

    DataTable.prototype.updateTake = function updateTake() {
      this.take = this.numRowsShown;
      this.startRecord = 0;
      this.lastVisible = parseInt(this.firstVisible) + parseInt(this.take) - 1;
      this.createPageButtons(1);
      this.pageOne();
      this.buildDisplayArray();
    };

    DataTable.prototype.filterList = function filterList(el, array) {
      el.preventDefault();
      array = array || new Array();

      this.filterValues = this.filterValues.filter(function (obj) {
        return obj.property !== el.target.id;
      });

      if (el.target.value !== "") {
        switch (el.target.type) {
          case 'select-one':
            this.filterValues.push({ property: el.target.id, value: el.target.options[el.target.selectedIndex].value, type: el.target.type, compare: $(el.target).attr("compare") });
            break;
          default:
            this.filterValues.push({ property: el.target.id, value: el.target.value, type: el.target.type, compare: $(el.target).attr("compare") });
        }
      }

      if (this.filterValues.length > 0) {
        this.baseArray = this.filter(this.filterValues, array);
      } else {
        this.baseArray = this.sourceArray;
      }
      this.startRecord = this.DEFAULT_START;
      this.firstVisible = 1;
      this.buildDisplayArray();
      this.lastVisible = parseInt(this.take) < this.displayLength ? parseInt(this.take) : this.displayLength;

      this.pageOne();
    };

    DataTable.prototype.filterList = function filterList(value, options) {
      options.lookupArray = options.lookupArray || new Array();

      this.filterValues = this.filterValues.filter(function (obj) {
        return obj.options.filter !== options.filter;
      });

      if (options.type.indexOf('obj') == -1 && options.type != 'custom') {
        var properties = options.collectionProperty.split('.');
        var condition = "item";
        for (var j = 0; j < properties.length; j++) {
          if (properties[j].indexOf('[') > -1) {
            condition += properties[j];
          } else {
            condition += "['" + properties[j] + "']";
          }
        }
        options.collectionProperty = condition;
      }

      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && !(value instanceof Date)) value = value.target.value;
      if (value !== "") {
        this.filterValues.push({ options: options, value: value });
      }

      if (this.filterValues.length > 0) {
        this.baseArray = this.filter(this.filterValues);
      } else {
        this.baseArray = this.sourceArray;
      }
      this.startRecord = this.DEFAULT_START;
      this.firstVisible = 1;
      this.buildDisplayArray();
      this.lastVisible = parseInt(this.take) < this.displayLength ? parseInt(this.take) : this.displayLength;

      this.pageOne();
    };

    DataTable.prototype.filter = function filter(filters) {
      var keep;
      var index = 0;
      var that = this;
      return this.sourceArray.filter(function (item) {
        keep = false;
        for (var i = 0; i < filters.length; i++) {
          var filterItem = filters[i];
          var matchValue = undefined;
          if (filterItem.options.compare.indexOf('custom') > -1) {
            matchValue = true;
          } else {
            matchValue = eval(filterItem.options.collectionProperty);
          }

          if (matchValue != undefined) {
            switch (filterItem.options.type) {
              case 'custom':
                keep = filterItem.options.filter(filterItem.value, item, that.context);
                break;
              case 'text':
                if (filterItem.options.compare.indexOf('not') > -1) {
                  keep = matchValue.toUpperCase().indexOf(filterItem.value.toUpperCase()) == -1;
                } else {
                  keep = matchValue.toUpperCase().indexOf(filterItem.value.toUpperCase()) > -1;
                }
                break;
              case 'value':
                if (filterItem.options.compare.indexOf('not') > -1) {
                  keep = matchValue != filterItem.value;
                } else {
                  keep = matchValue == filterItem.value;
                }
                break;
              case "boolean":
                keep = matchValue === eval(filterItem.value);
                break;
              case "date":
                switch (filterItem.options.compare) {
                  case 'after':
                    if (matchValue) {
                      var dt = (0, _moment2.default)(matchValue).format('YYYY-MM-DD');
                      keep = (0, _moment2.default)(dt).isAfter(filters[i].value);
                    }
                    break;
                  default:
                    if (matchValue) {
                      var dt = (0, _moment2.default)(matchValue).format('YYYY-MM-DD');
                      keep = (0, _moment2.default)(dt).isSame(filters[i].value);
                    }
                }
            }
          }

          if (!keep) break;
        }
        return keep;
      });
    };

    DataTable.prototype.sortArray = function sortArray(el, options) {
      var _this = this;

      if (options.sortDirectionParam) this.sortDirection = sortDirectionParam;
      this.sortProperty = options.propertyName;
      if (options.propertyName === this.sortProperty) {
        this.sortDirection *= -1;
      } else {
        this.sortDirection = 1;
      }

      $(".sortable").next().replaceWith('<i class="fa fa-sort"></i>');
      if (this.sortDirection < 0) {
        var icon = '<i class="fa fa-sort-amount-desc" aria-hidden="true"></i>';
      } else {
        var icon = '<i class="fa fa-sort-amount-asc" aria-hidden="true"></i>';
      }

      $(el.target).next().replaceWith(icon);

      if (!options.type) {
        if (options.propertyName.indexOf('.') > -1) {
          var array = options.propertyName.split('.');
        }

        if (array) {
          this.baseArray = this.baseArray.sort(function (a, b) {
            var result = a[array[0]][array[1]] < b[array[0]][array[1]] ? -1 : a[array[0]][array[1]] > b[array[0]][array[1]] ? 1 : 0;
            return result * _this.sortDirection;
          });
        } else {
          this.baseArray = this.baseArray.sort(function (a, b) {
            var result = a[options.propertyName] < b[options.propertyName] ? -1 : a[options.propertyName] > b[options.propertyName] ? 1 : 0;
            return result * _this.sortDirection;
          });
        }
      } else if (options.type == 'custom') {
        if (typeof options.sorter == 'function') {
          var sortArray = this.utils.copyArray(this.baseArray);
          this.baseArray = options.sorter(this.sortProperty, this.sortDirection, sortArray, this.context);
        }
      } else {
        var properties = options.searchProperty.split('.');
        var condition = "item";
        for (var j = 0; j < properties.length; j++) {
          if (properties[j].indexOf('[') > -1) {
            condition += properties[j];
          } else {
            condition += "['" + properties[j] + "']";
          }
        }
        var sortArray = this.utils.copyArray(this.baseArray);
        sortArray.forEach(function (item) {
          var obj = _this.findObj(options.surrogateArray, options.surrogateProperty, eval(condition));
          item[options.propertyName] = obj ? obj[options.propertyName] : null;
        });

        this.baseArray = sortArray.sort(function (a, b) {
          var result = a[options.propertyName] < b[options.propertyName] ? -1 : a[options.propertyName] > b[options.propertyName] ? 1 : 0;
          return result * _this.sortDirection;
        });
      }

      this.startRecord = this.DEFAULT_START;
      this.firstVisible = 1;
      this.buildDisplayArray();
      this.lastVisible = parseInt(this.take) < this.displayLength ? parseInt(this.take) : this.displayLength;

      this.pageOne();
    };

    DataTable.prototype.findObj = function findObj(surrogateArray, surrogateProperty, propertyValue) {
      for (var i = 0, x = surrogateArray.length; i < x; i++) {
        if (surrogateArray[i][surrogateProperty] == propertyValue) return surrogateArray[i];
      }
      return null;
    };

    DataTable.prototype.updateArray = function updateArray(sourceArray, sortProperty, sortDirection) {
      var _this2 = this;

      if (sourceArray) {
        this.sourceArray = new Array();
        this.baseArray = new Array();
        this.active = true;
        this.filterValues = new Array();
        sourceArray.forEach(function (item) {
          _this2.sourceArray.push(item);
          _this2.baseArray.push(item);
        });

        this.baseArray.forEach(function (item, index) {
          item.baseIndex = index;
          item.originalIndex = index;
        });

        if (sortProperty) {
          this.baseArray.sort(function (a, b) {
            var result = a[sortProperty] - b[sortProperty];
            return result * sortDirection;
          });
        }

        this.buildDisplayArray();
      }
    };

    DataTable.prototype.getOriginalIndex = function getOriginalIndex(index) {
      return this.displayArray[index].originalIndex;
    };

    return DataTable;
  }()) || _class) || _class);
});
define('resources/utils/utils',['exports', 'aurelia-framework', 'jquery', 'aurelia-notification', 'moment', '../../config/appConfig'], function (exports, _aureliaFramework, _jquery, _aureliaNotification, _moment, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Utils = undefined;

  var _jquery2 = _interopRequireDefault(_jquery);

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var Utils = exports.Utils = (_dec = (0, _aureliaFramework.inject)(_aureliaNotification.Notification, _appConfig.AppConfig), _dec(_class = function () {
    function Utils(notification, config) {
      _classCallCheck(this, Utils);

      this.config = config;
      this.notification = notification;
      this.notification.waitForMove = true;
    }

    Utils.prototype.showNotification = function showNotification(msg) {
      this.notification.note(msg);
    };

    Utils.prototype.setRole = function setRole(roles) {
      var _this = this;

      var userRole = 1;

      var _loop = function _loop(i) {
        _this.config.ROLES.forEach(function (item) {
          if (roles[i] == item.role) {
            userRole = item.authLevel > userRole ? item.authLevel : userRole;
          }
        });
      };

      for (var i = 0; i < roles.length; i++) {
        _loop(i);
      }
      return userRole;
    };

    Utils.prototype.countItems = function countItems(value, property, itemArray) {
      var countArray = itemArray.filter(function (item) {
        return item[property] == value;
      });
      return countArray.length;
    };

    Utils.prototype.arrayContainsValue = function arrayContainsValue(array, property, value) {
      for (var i = 0, x = array.length; i < x; i++) {
        if (array[i][property] == value) {
          return i;
        }
      }
      return -1;
    };

    Utils.prototype.objectsEqual = function objectsEqual(obj1, obj2, skip) {
      var changes = new Array();
      var skipArray = skip || new Array();
      for (var property in obj1) {
        if (obj1.hasOwnProperty(property)) {
          if (!obj1[property] && !obj2[property] || skipArray.indexOf(property) !== -1) {
            continue;
          } else if (Array.isArray(obj1[property])) {
            if (!this.arraysEqual(obj1[property], obj2[property])) {
              changes.push({
                property: property,
                oldValue: obj2[property].length,
                newValue: obj1[property].length
              });
            }
          } else if (property.indexOf('Date') > -1 || property.indexOf('date') > -1 || obj1[property] instanceof Date) {
            var date1 = new Date(obj1[property]);
            var date2 = new Date(obj2[property]);
            if (!(0, _moment2.default)(date1).isSame(date2, 'year') || !(0, _moment2.default)(date1).isSame(date2, 'month') || !(0, _moment2.default)(date1).isSame(date2, 'day')) {
              changes.push({
                property: property,
                oldValue: obj2[property],
                newValue: obj1[property]
              });
            }
          } else {
            if (obj1[property] != obj2[property]) {
              if (!(obj1[property] === "" && obj2[property] === undefined)) {
                changes.push({
                  property: property,
                  oldValue: obj2[property],
                  newValue: obj1[property]
                });
              }
            }
          }
        }
      }
      return changes;
    };

    Utils.prototype.arraysEqual = function arraysEqual(array1, array2) {
      var arraysEqual = true;
      if (array1.length != array2.length) {
        return false;
      } else {
        var newArray = new Array();
        for (var i = 0; i < array1.length; i++) {
          newArray[i] = JSON.stringify(array1[i]);
        }
        for (var i = 0; i < array1.length; i++) {
          if (newArray.indexOf(JSON.stringify(array2[i])) == -1) {
            return false;
          }
        }
      }
      return true;
    };

    Utils.prototype.copyObject = function copyObject(objFrom, objTo, properties) {
      objTo = objTo || new Object();;
      if (!properties) {
        for (var property in objFrom) {
          if (objFrom.hasOwnProperty(property)) {
            if (Array.isArray(objFrom[property])) {
              objTo[property] = this.copyArray(objFrom[property]);
            } else if (objFrom[property] instanceof Date) {
              objTo[property] = objFrom[property];
            } else if (this.isObject(objFrom[property])) {
              objTo[property] = this.copyObject(objFrom[property]);
            } else {
              objTo[property] = objFrom[property];
            }
          }
        }
      } else {
        for (var i = 0, x = properties.length; i < x; i++) {
          if (objFrom.hasOwnProperty(properties[i])) {
            if (Array.isArray(objFrom[property])) {
              objTo[property] = this.copyArray(objFrom[property]);
            } else if (objFrom[property] instanceof Date) {
              objTo[property] = objFrom[property];
            } else if (this.isObject(objFrom[property])) {
              objTo[property] = this.copyObject(objFrom[property]);
            } else {
              objTo[property] = objFrom[property];
            }
          }
        }
      }
      return objTo;
    };

    Utils.prototype.copyArray = function copyArray(array) {
      var _this2 = this;

      if (array) {
        var newArray = new Array();
        array.forEach(function (item) {
          if (Array.isArray(item)) {
            newArray.push(_this2.copyArray(item));
          } else if (_this2.isObject(item)) {
            newArray.push(_this2.copyObject(item));
          } else {
            newArray.push(item);
          }
        });
        return newArray;
      }
      return null;
    };

    Utils.prototype.isObject = function isObject(obj) {
      return obj === Object(obj);
    };

    Utils.prototype.toCamelCase = function toCamelCase(str) {
      return str.toLowerCase().replace(/['"]/g, '').replace(/\W+/g, ' ').replace(/ (.)/g, function ($1) {
        return $1.toUpperCase();
      }).replace(/ /g, '');
    };

    Utils.prototype.lookupValue = function lookupValue(value, array, lookUpProperty, returnProperty) {
      if (!value || !array) {
        return;
      }
      for (var i = 0, x = array.length; i < x; i++) {
        if (array[i][lookUpProperty] == value) {
          return array[i][returnProperty];
        }
      }
      return null;
    };

    return Utils;
  }()) || _class);
});
define('resources/utils/validation',["exports", "aurelia-framework"], function (exports, _aureliaFramework) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var _default = (_dec = (0, _aureliaFramework.transient)(), _dec(_class = function () {
    function _default() {
      _classCallCheck(this, _default);

      this.ruleGroups = [];
      this.rules = [];

      this.addRule = function (ruleGroup, field, rule, blur) {

        if (blur) {
          var that = this;
          $("#" + field).blur(function () {
            that.validateRule(rule, field);
          });
        }

        var index = -1;

        for (var k = 0; k < this.rules.length; k++) {
          if (this.rules[k].ruleGroup === ruleGroup) {
            index = k;
            break;
          }
        }

        var fieldArray = [];
        var ruleArray = [];
        if (index === -1) {
          this.rules.push({ ruleGroup: ruleGroup, fields: fieldArray });
          this.rules[this.rules.length - 1].fields[0] = { field: field, rules: ruleArray };
          this.rules[this.rules.length - 1].fields[0].rules = rule;
        } else {
          var found = false;

          if (!found) {
            this.rules[index].fields.push({ field: field, rules: ruleArray });
            this.rules[index].fields[this.rules[index].fields.length - 1].rules = rule;
          }
        }
      };

      this.validate = function (ruleGroup) {
        var index = -1;
        for (var k = 0; k < this.rules.length; k++) {
          if (this.rules[k].ruleGroup == ruleGroup) {
            index = k;
            break;
          }
        }

        if (index === -1) {
          return true;
        } else {
          var valid = true;
          for (var i = 0; i < this.rules[index].fields.length; i++) {
            var fields = this.rules[index].fields[i];
            var thisValid = true;
            for (var k = 0; k < fields.rules.length; k++) {
              thisValid = true;
              var rules = fields.rules[k];
              thisValid = this.validateRule(rules, fields.field);
              if (!thisValid) {
                valid = false;
                break;
              }
            }
          }
        }
        return valid;
      };

      this._inValidate = function (field, rule) {
        var el = $("#" + field);
        if (el.next().is("span.help-block")) {
          el.next().html(rule.message);
        } else {
          var msg = "<span class='help-block'>{message}</span>".replace("{message}", rule.message);
        }

        if (el.is(':visible')) {
          if (!el.parent().hasClass("has-error")) {
            el.parent().addClass("has-error");
            if (!el.next().is("span.help-block")) {
              el.after(msg);
            }
          }
        }
      };

      this.makeValid = function (field) {
        field.parent().removeClass("has-error");
        if (field.next().is("span.help-block")) {
          field.next().html("");
        }
      };

      this.makeAllValid = function (ruleGroup) {
        var index = -1;
        for (var k = 0; k < this.rules.length; k++) {
          if (this.rules[k].ruleGroup == ruleGroup) {
            index = k;
            break;
          }
        }

        if (index === -1) {
          return true;
        } else {
          for (var i = 0; i < this.rules[index].fields.length; i++) {
            this.makeValid($('#' + this.rules[index].fields[i].field));
          }
        }
      };
    }

    _default.prototype.initialize = function initialize(context) {
      this.context = context;
    };

    _default.prototype.validateRule = function validateRule(rules, field) {
      var thisValid = true;
      switch (rules.rule) {
        case "custom":
          thisValid = rules.valFunction(this.context);
          break;
        case "required":
          if (!eval('this.context.' + rules.value) || eval('this.context.' + rules.value).length === 0) {
            thisValid = false;
          }
          break;
        case "min":
          if (eval('this.context.' + rules.value) < rules.ruleValue) {
            thisValid = false;
          }
          break;
        case "max":
          if (eval('this.context.' + rules.value) > rules.ruleValue) {
            thisValid = false;
          }
          break;
        case "length":
          if (eval('this.context.' + rules.value).length > 0 && eval('this.context.' + rules.value).length < rules.ruleValue) {
            thisValid = false;
          }
          break;
      }
      if (thisValid) {
        if (thisValid) this.makeValid($("#" + field));
      } else {
        this._inValidate(field, rules);
      }
      return thisValid;
    };

    _default.prototype.clearRules = function clearRules() {
      this.ruleGroups = [];
      this.rules = [];
    };

    return _default;
  }()) || _class);

  exports.default = _default;
});
define('resources/value-converters/activate-button',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var ActivateButtonValueConverter = exports.ActivateButtonValueConverter = function () {
    function ActivateButtonValueConverter() {
      _classCallCheck(this, ActivateButtonValueConverter);
    }

    ActivateButtonValueConverter.prototype.toView = function toView(value) {
      if (value == '02') {
        return '<i class="fa fa-toggle-on fa-lg" aria-hidden="true"></i>';
      } else {
        return '<i class="fa fa-toggle-off fa-lg" aria-hidden="true"></i>';
      }
    };

    return ActivateButtonValueConverter;
  }();
});
define('resources/value-converters/check-box',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var CheckBoxValueConverter = exports.CheckBoxValueConverter = function () {
    function CheckBoxValueConverter() {
      _classCallCheck(this, CheckBoxValueConverter);
    }

    CheckBoxValueConverter.prototype.toView = function toView(value) {
      if (value) {
        return '<i class="fa fa-check-square-o"></i>';
      } else {
        return '<i class="fa fa-square-o"></i>';
      }
    };

    return CheckBoxValueConverter;
  }();
});
define('resources/value-converters/course-name',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var CourseNameValueConverter = exports.CourseNameValueConverter = function () {
    function CourseNameValueConverter() {
      _classCallCheck(this, CourseNameValueConverter);
    }

    CourseNameValueConverter.prototype.toView = function toView(value, array, sandboxID, sandboxName) {
      if (value && array) {
        if (value === sandboxID) return sandboxName;
        for (var i = 0; i < array.length; i++) {
          if (value === array[i]._id) {
            return array[i].name;
          }
        }
      }
      return "";
    };

    return CourseNameValueConverter;
  }();
});
define('resources/value-converters/date-format',['exports', 'moment'], function (exports, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DateFormatValueConverter = undefined;

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var DateFormatValueConverter = exports.DateFormatValueConverter = function () {
    function DateFormatValueConverter() {
      _classCallCheck(this, DateFormatValueConverter);
    }

    DateFormatValueConverter.prototype.toView = function toView(value) {
      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MMM Do YYYY';
      var fromNow = arguments[2];

      if (value === undefined || value === null) {
        return;
      }

      if (fromNow) {
        var formattedDate = (0, _moment2.default)(value).calendar();
      } else {
        var formattedDate = (0, _moment2.default)(value).format(format);
      }
      return formattedDate === "Invalid date" ? "" : formattedDate;
    };

    return DateFormatValueConverter;
  }();
});
define('resources/value-converters/file-type',["exports", "aurelia-framework", "../../config/appConfig"], function (exports, _aureliaFramework, _appConfig) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FileTypeValueConverter = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var FileTypeValueConverter = exports.FileTypeValueConverter = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig), _dec(_class = function () {
    function FileTypeValueConverter(appconfig) {
      _classCallCheck(this, FileTypeValueConverter);

      this.config = appconfig;
    }

    FileTypeValueConverter.prototype.toView = function toView(file, number) {
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'helpTickets';
      var orignalFilename = arguments[3];

      var ext = file.substr(file.indexOf('.') + 1);
      var html = "";
      switch (ext.toUpperCase()) {
        case "GIF":
        case "PNG":
        case "JPG":
          html = orignalFilename + "<span><img src='" + this.config.HELPTICKET_FILE_DOWNLOAD_URL + "/" + number + "/" + file + "' /></span>";

          break;
        default:
          html = file;
      }
      return html;
    };

    return FileTypeValueConverter;
  }()) || _class);
});
define('resources/value-converters/filter-array',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var filterArrayValueConverter = exports.filterArrayValueConverter = function () {
		function filterArrayValueConverter() {
			_classCallCheck(this, filterArrayValueConverter);
		}

		filterArrayValueConverter.prototype.toView = function toView(array, property, value) {
			if (array && property && value) {
				return array.filter(function (item) {
					return item[property] === value;
				});
			}
		};

		return filterArrayValueConverter;
	}();
});
define('resources/value-converters/filter-clients',["exports"], function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var FilterClientsValueConverter = exports.FilterClientsValueConverter = function () {
        function FilterClientsValueConverter() {
            _classCallCheck(this, FilterClientsValueConverter);
        }

        FilterClientsValueConverter.prototype.toView = function toView(array, unassigned, unassignedCode, sandbox, sandboxCode, product) {
            if (array) {
                if (product) {
                    array = array.filter(function (item) {
                        return item.productId === product;
                    });
                }
                if (sandbox) {
                    array = array.filter(function (item) {
                        return item.clientStatus == sandboxCode;
                    });
                } else if (unassigned) {
                    array = array.filter(function (item) {
                        return item.clientStatus == unassignedCode;
                    });
                }
            }
            return array;
        };

        return FilterClientsValueConverter;
    }();
});
define('resources/value-converters/format-digits',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var FormatDigitsValueConverter = exports.FormatDigitsValueConverter = function () {
		function FormatDigitsValueConverter() {
			_classCallCheck(this, FormatDigitsValueConverter);
		}

		FormatDigitsValueConverter.prototype.toView = function toView(value, digits) {
			if (value) {
				digits = digits || 2;
				if (typeof value === "string") value = Number(value);
				return +value.toFixed(digits);
			}
		};

		return FormatDigitsValueConverter;
	}();
});
define('resources/value-converters/format-phone',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var FormatPhoneValueConverter = exports.FormatPhoneValueConverter = function () {
    function FormatPhoneValueConverter() {
      _classCallCheck(this, FormatPhoneValueConverter);
    }

    FormatPhoneValueConverter.prototype.toView = function toView(value) {
      if (!value) return;

      return value.substring(0, 3) + "-" + value.substring(3, 6) + "-" + value.substring(6, 10);
    };

    return FormatPhoneValueConverter;
  }();
});
define('resources/value-converters/get-array-value',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var GetArrayValueValueConverter = exports.GetArrayValueValueConverter = function () {
		function GetArrayValueValueConverter() {
			_classCallCheck(this, GetArrayValueValueConverter);
		}

		GetArrayValueValueConverter.prototype.toView = function toView(value, array, property, indexAdjust) {
			if (value && array && property) {
				var index = indexAdjust ? parseInt(value) + indexAdjust : parseInt(value);
				return array[index][property];
			}
			return "";
		};

		return GetArrayValueValueConverter;
	}();
});
define('resources/value-converters/gravatar-url-id',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var GravatarUrlIdValueConverter = exports.GravatarUrlIdValueConverter = function () {
    function GravatarUrlIdValueConverter() {
      _classCallCheck(this, GravatarUrlIdValueConverter);
    }

    GravatarUrlIdValueConverter.prototype.toView = function toView(id, array, size, alt) {
      var email = "";
      if (id !== undefined && array !== undefined) {
        for (var i = 0; i < array.length; i++) {
          if (id === array[i]._id) {
            email = array[i].email;
            break;
          }
        }
        var size = size || 80;
        return '<img src="https://secure.gravatar.com/avatar/' + CryptoJS.MD5(email.toLowerCase()) + '.jpg?s=' + size + '"/>';
      } else {
        switch (alt) {
          case 1:
          case 6:
            return "<i class='fa fa-file-text'></i>";
        }
      }
    };

    return GravatarUrlIdValueConverter;
  }();
});
define('resources/value-converters/gravatar-url',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var GravatarUrlValueConverter = exports.GravatarUrlValueConverter = function () {
    function GravatarUrlValueConverter() {
      _classCallCheck(this, GravatarUrlValueConverter);
    }

    GravatarUrlValueConverter.prototype.toView = function toView(email, size) {
      if (email !== undefined) {
        var size = size || 80;
        var html = '<img class="img-circle" src="https://secure.gravatar.com/avatar/' + CryptoJS.MD5(email.toLowerCase()) + '.jpg?s=' + size + '"/>';
        return html;
      } else {
        return "<i class='fa fa-file-text'></i>";
      }
    };

    return GravatarUrlValueConverter;
  }();
});
define('resources/value-converters/help-ticket-statuses',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var HelpTicketStatusesValueConverter = exports.HelpTicketStatusesValueConverter = function () {
		function HelpTicketStatusesValueConverter() {
			_classCallCheck(this, HelpTicketStatusesValueConverter);
		}

		HelpTicketStatusesValueConverter.prototype.toView = function toView(array, remove) {
			if (array === undefined) return;
			var newArray = new Array();
			array.forEach(function (item) {
				if (remove.indexOf(item.code) === -1) {
					newArray.push(item);
				}
			});
			return newArray;
		};

		return HelpTicketStatusesValueConverter;
	}();
});
define('resources/value-converters/help-ticket-subtypes',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var HelpTicketSubtypesValueConverter = exports.HelpTicketSubtypesValueConverter = function () {
		function HelpTicketSubtypesValueConverter() {
			_classCallCheck(this, HelpTicketSubtypesValueConverter);
		}

		HelpTicketSubtypesValueConverter.prototype.toView = function toView(array) {
			if (array === undefined) return;

			var newArray = new Array();
			array.forEach(function (item) {
				item.subtypes.forEach(function (itemSub) {
					newArray.push(itemSub);
				});
			});
			return newArray;
		};

		return HelpTicketSubtypesValueConverter;
	}();
});
define('resources/value-converters/help-ticket-type',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var HelpTicketTypeValueConverter = exports.HelpTicketTypeValueConverter = function () {
		function HelpTicketTypeValueConverter() {
			_classCallCheck(this, HelpTicketTypeValueConverter);
		}

		HelpTicketTypeValueConverter.prototype.toView = function toView(value, array) {
			if (value === undefined || array === undefined) return;

			for (var j = 0; j < array.length; j++) {
				for (var i = 0; i < array[j].subtypes.length; i++) {
					if (array[j].subtypes[i].type === value) return array[j].subtypes[i].description;
				}
			}
			return "";
		};

		return HelpTicketTypeValueConverter;
	}();
});
define('resources/value-converters/idsRequested',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var IdsRequestedValueConverter = exports.IdsRequestedValueConverter = function () {
    function IdsRequestedValueConverter() {
      _classCallCheck(this, IdsRequestedValueConverter);
    }

    IdsRequestedValueConverter.prototype.toView = function toView(value) {
      if (value) {
        return parseInt(value.graduateIds) + parseInt(value.undergradIds);
      }
      return 0;
    };

    return IdsRequestedValueConverter;
  }();
});
define('resources/value-converters/info-filter',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var InfoFilterValueConverter = exports.InfoFilterValueConverter = function () {
    function InfoFilterValueConverter() {
      _classCallCheck(this, InfoFilterValueConverter);
    }

    InfoFilterValueConverter.prototype.toView = function toView(array, value, length) {
      if (value && array) {
        return array.filter(function (item) {
          return item.itemType == value;
        });
      }
      return length ? array.length > 0 : array;
    };

    return InfoFilterValueConverter;
  }();
});
define('resources/value-converters/lookup-value',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var LookupValueValueConverter = exports.LookupValueValueConverter = function () {
    function LookupValueValueConverter() {
      _classCallCheck(this, LookupValueValueConverter);
    }

    LookupValueValueConverter.prototype.toView = function toView(value, array, key, property) {
      if (value && array && property && key) {
        for (var i = 0; i < array.length; i++) {
          if (value == array[i][key]) {
            return array[i][property];
          }
        }
      }
      return "";
    };

    return LookupValueValueConverter;
  }();
});
define('resources/value-converters/onoff-switch',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var OnoffSwitchValueConverter = exports.OnoffSwitchValueConverter = function () {
    function OnoffSwitchValueConverter() {
      _classCallCheck(this, OnoffSwitchValueConverter);
    }

    OnoffSwitchValueConverter.prototype.toView = function toView(value) {
      if (value == 'false') {
        return '<i class="fa fa-toggle-on fa-lg" aria-hidden="true"></i> Turn On';
      } else {
        return '<i class="fa fa-toggle-off fa-lg" aria-hidden="true"></i> Turn Off';
      }
    };

    return OnoffSwitchValueConverter;
  }();
});
define('resources/value-converters/overlap',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var OverlapValueConverter = exports.OverlapValueConverter = function () {
    function OverlapValueConverter() {
      _classCallCheck(this, OverlapValueConverter);
    }

    OverlapValueConverter.prototype.toView = function toView(value) {
      if (value) {
        return value == 'danger' ? 'Overlapping Range' : 'Valid Range';
      }
      return "";
    };

    return OverlapValueConverter;
  }();
});
define('resources/value-converters/person-status-button',['exports'], function (exports) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var PersonStatusButtonValueConverter = exports.PersonStatusButtonValueConverter = function () {
		function PersonStatusButtonValueConverter() {
			_classCallCheck(this, PersonStatusButtonValueConverter);
		}

		PersonStatusButtonValueConverter.prototype.toView = function toView(value) {
			if (!value) return;

			switch (value) {
				case '01':
					return '<span bootstrap-tooltip data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Deactivate"><i class="fa fa-toggle-off" aria-hidden="true"></i></span>';
					break;
				case '02':
					return '<span bootstrap-tooltip data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Activate"><i class="fa fa-toggle-on" aria-hidden="true"></i></span>';
					break;
				default:
					return "";
			}
		};

		return PersonStatusButtonValueConverter;
	}();
});
define('resources/value-converters/phone-number',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var PhoneNumberValueConverter = exports.PhoneNumberValueConverter = function () {
		function PhoneNumberValueConverter() {
			_classCallCheck(this, PhoneNumberValueConverter);
		}

		PhoneNumberValueConverter.prototype.toView = function toView(value) {
			var mask = "___-___-____";
			if (value) {

				value = value.replace(/-/g, '');
				if (value.length > 10) value = value.substr(0, 10);
				if (value.length === 0) {
					return mask;
				} else if (value.length <= 3) {
					return value;
				} else if (value.length > 3 && value.length <= 6) {
					return value.substr(0, 3) + "-" + value.substr(3, value.length - 3);
				} else {
					return value.substr(0, 3) + "-" + value.substr(3, 3) + "-" + value.substr(6, value.length);
				}
			}
		};

		return PhoneNumberValueConverter;
	}();
});
define('resources/value-converters/request-status-class',["exports"], function (exports) {
		"use strict";

		Object.defineProperty(exports, "__esModule", {
				value: true
		});

		function _classCallCheck(instance, Constructor) {
				if (!(instance instanceof Constructor)) {
						throw new TypeError("Cannot call a class as a function");
				}
		}

		var RequestStatusClassValueConverter = exports.RequestStatusClassValueConverter = function () {
				function RequestStatusClassValueConverter() {
						_classCallCheck(this, RequestStatusClassValueConverter);
				}

				RequestStatusClassValueConverter.prototype.toView = function toView(value, array, request, customerActionStatus) {
						if (!value || !array || !request) return;

						customerActionStatus = customerActionStatus ? customerActionStatus : '4';

						if (request.requestStatus == customerActionStatus) return "";

						return array[value];
				};

				return RequestStatusClassValueConverter;
		}();
});
define('resources/value-converters/sandbox',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SandboxValueConverter = exports.SandboxValueConverter = function () {
    function SandboxValueConverter() {
      _classCallCheck(this, SandboxValueConverter);
    }

    SandboxValueConverter.prototype.toView = function toView(value, sandbox) {
      if (value === null) {
        return sandbox;
      } else {
        return 'Regular';
      }
    };

    return SandboxValueConverter;
  }();
});
define('resources/value-converters/session-name',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SessionNameValueConverter = exports.SessionNameValueConverter = function () {
    function SessionNameValueConverter() {
      _classCallCheck(this, SessionNameValueConverter);
    }

    SessionNameValueConverter.prototype.toView = function toView(value, array) {
      if (value === undefined || array === undefined) return;
      for (var i = 0; i < array.length; i++) {
        if (value === array[i]._id) {
          return array[i].session + " " + array[i].year;
        }
      }
      return "Unknown";
    };

    return SessionNameValueConverter;
  }();
});
define('resources/value-converters/session-status-button',['exports'], function (exports) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var SessionStatusButtonValueConverter = exports.SessionStatusButtonValueConverter = function () {
		function SessionStatusButtonValueConverter() {
			_classCallCheck(this, SessionStatusButtonValueConverter);
		}

		SessionStatusButtonValueConverter.prototype.toView = function toView(value) {
			if (!value) return;

			switch (value) {
				case 'Active':
					return '<span bootstrap-tooltip data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Close"><i class="fa fa-hourglass-end" aria-hidden="true"></i></span>';
					break;
				case 'Requests':
					return '<span bootstrap-tooltip data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Activate"><i class="fa fa-check-square-o" aria-hidden="true"></i></span>';
					break;
				case 'Next':
					return '<span bootstrap-tooltip data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Open"><i class="fa fa-cart-plus" aria-hidden="true"></i></span>';
					break;
				default:
					return "";
			}
		};

		return SessionStatusButtonValueConverter;
	}();
});
define('resources/value-converters/session-type',['exports'], function (exports) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var SessionTypeValueConverter = exports.SessionTypeValueConverter = function () {
		function SessionTypeValueConverter() {
			_classCallCheck(this, SessionTypeValueConverter);
		}

		SessionTypeValueConverter.prototype.toView = function toView(array, value) {
			var sessions = [];
			var statuses = value.split(':');
			if (value === undefined || array === undefined) return sessions;
			array.forEach(function (session) {
				if (statuses.indexOf(session.sessionStatus) > -1) {
					sessions.push(session);
				}
			});
			return sessions;
		};

		return SessionTypeValueConverter;
	}();
});
define('resources/value-converters/session',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SessionValueConverter = exports.SessionValueConverter = function () {
    function SessionValueConverter() {
      _classCallCheck(this, SessionValueConverter);
    }

    SessionValueConverter.prototype.toView = function toView(value, array) {
      var openSessions = [];
      if (value === undefined || array === undefined) return;
      for (var i = 0; i < array.length; i++) {
        if (value === array[i]._id && array[i].status !== 'Next') {
          return array[i].session + " " + array[i].year;
        }
      }
      return "Unknown";
    };

    return SessionValueConverter;
  }();
});
define('resources/value-converters/sort-array',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SortArrayValueConverter = exports.SortArrayValueConverter = function () {
    function SortArrayValueConverter() {
      _classCallCheck(this, SortArrayValueConverter);
    }

    SortArrayValueConverter.prototype.toView = function toView(array, propertyName, direction) {
      var _this = this;

      if (array && propertyName) {
        this.sortDirection = direction === "ASC" ? 1 : -1;
        return array.sort(function (a, b) {
          var result = a[propertyName] < b[propertyName] ? -1 : a[propertyName] > b[propertyName] ? 1 : 0;
          return result * _this.sortDirection;
        });
      }
    };

    return SortArrayValueConverter;
  }();
});
define('resources/value-converters/sort-date-time',["exports", "moment"], function (exports, _moment) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SortDateTimeValueConverter = undefined;

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SortDateTimeValueConverter = exports.SortDateTimeValueConverter = function () {
    function SortDateTimeValueConverter() {
      _classCallCheck(this, SortDateTimeValueConverter);
    }

    SortDateTimeValueConverter.prototype.toView = function toView(array, propertyName, sortProp, tech, trim) {
      if (array === undefined) return;

      var sortOrder = sortProp === "ASC" ? true : false;

      var sortArray = [];
      var firstItem;

      array.forEach(function (item, index) {
        if (index === 0) {
          firstItem = item;
        } else {
          if (tech || !tech && !item.confidential) sortArray.push(item);;
        }
      });

      sortArray.sort(function (a, b) {
        return sortOrder ? (0, _moment2.default)(a[propertyName]).isAfter(b[propertyName]) : !(0, _moment2.default)(a[propertyName]).isAfter(b[propertyName]);
      });

      if (!trim) sortArray.unshift(firstItem);
      return sortArray;
    };

    return SortDateTimeValueConverter;
  }();
});
define('resources/value-converters/stat-value',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var StatValueValueConverter = exports.StatValueValueConverter = function () {
    function StatValueValueConverter() {
      _classCallCheck(this, StatValueValueConverter);
    }

    StatValueValueConverter.prototype.toView = function toView(value, array, index) {
      if (value && array && index >= 0) {
        return value[array[index].code];
      }
    };

    return StatValueValueConverter;
  }();
});
define('resources/value-converters/system-list',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var SystemListValueConverter = exports.SystemListValueConverter = function () {
    function SystemListValueConverter() {
      _classCallCheck(this, SystemListValueConverter);
    }

    SystemListValueConverter.prototype.toView = function toView(array) {
      if (array !== undefined && array.length > 0) {
        var list = "";
        for (var i = 0; i < array.length; i++) {
          list += array[i].sid + " ";
        }
        return list;
      }
      return "";
    };

    return SystemListValueConverter;
  }();
});
define('resources/value-converters/to-uppercase',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var ToUppercaseValueConverter = exports.ToUppercaseValueConverter = function () {
		function ToUppercaseValueConverter() {
			_classCallCheck(this, ToUppercaseValueConverter);
		}

		ToUppercaseValueConverter.prototype.toView = function toView(value) {
			if (value) {
				return value.toUpperCase();
			}
		};

		return ToUppercaseValueConverter;
	}();
});
define('resources/value-converters/translate-status',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var TranslateStatusValueConverter = exports.TranslateStatusValueConverter = function () {
    function TranslateStatusValueConverter() {
      _classCallCheck(this, TranslateStatusValueConverter);
    }

    TranslateStatusValueConverter.prototype.toView = function toView(value) {
      return value ? "Active" : "Inactive";
    };

    return TranslateStatusValueConverter;
  }();
});
define('resources/value-converters/ucc-title',["exports"], function (exports) {
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var uccTitleValueConverter = exports.uccTitleValueConverter = function () {
		function uccTitleValueConverter() {
			_classCallCheck(this, uccTitleValueConverter);
		}

		uccTitleValueConverter.prototype.toView = function toView(value, array) {
			for (var i = 0; i < array.length; i++) {
				if (value == array[i].role) return array[i].label;
			}
			return "";
		};

		return uccTitleValueConverter;
	}();
});
define('modules/admin/Customers/bulkEmails',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/data/is4ua', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'jquery'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _people, _is4ua, _commonDialogs, _validation, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.BulkEmails = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var BulkEmails = exports.BulkEmails = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _people.People, _utils.Utils, _is4ua.is4ua, _commonDialogs.CommonDialogs, _validation2.default), _dec(_class = function () {
        function BulkEmails(datatable, config, people, utils, is4ua, dialog, validation) {
            _classCallCheck(this, BulkEmails);

            this.composeEmailPanel = false;
            this.emailSubject = "";
            this.emailMessage = "";
            this.spinnerHTML = "";
            this.email = new Object();
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.utils = utils;
            this.people = people;
            this.is4ua = is4ua;
            this.dialog = dialog;
            this.validation = validation;
            this.validation.initialize(this);

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        BulkEmails.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getPeopleBulkEmailArray('?order=lastName&filter=personStatus|eq|01'), this.people.getInstitutionsArray('?order=name', true), this.is4ua.loadIs4ua(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.activeFilterValue = "01";
                                this.filteredArray = this.config.ROLES;
                                this.dataTable.updateArray(this.people.peopleBulkEmailArray);

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        BulkEmails.prototype.filterActive = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this._clearFilters();
                                _context2.next = 3;
                                return this.people.getPeopleBulkEmailArray('?order=lastName&filter=personStatus|eq|' + this.activeFilterValue, true);

                            case 3:
                                this.dataTable.updateArray(this.people.peopleBulkEmailArray);

                            case 4:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function filterActive() {
                return _ref2.apply(this, arguments);
            }

            return filterActive;
        }();

        BulkEmails.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
        };

        BulkEmails.prototype.refresh = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this._cleanUpFilters();
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context3.next = 4;
                                return this.people.getPeopleBulkEmailArray('?order=lastName&filter=personStatus|eq|01', true);

                            case 4:
                                this.dataTable.updateArray(this.people.peopleBulkEmailArray);

                                this.spinnerHTML = "";

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function refresh() {
                return _ref3.apply(this, arguments);
            }

            return refresh;
        }();

        BulkEmails.prototype._clearFilters = function _clearFilters() {
            this.institutionFilter = "";
            this.institutionTypeFilter = "";
            this.memberTypeFilter = "";
            this.cityFilter = "";
            this.regionFilter = "";
            this.countryFilter = "";
            this.roleFilterValue = "";

            this.dataTable.updateArray(this.people.peopleBulkEmailArray);
        };

        BulkEmails.prototype.composeEmail = function composeEmail() {
            this.composeEmailPanel = true;
        };

        BulkEmails.prototype.cancel = function cancel() {
            this.composeEmailPanel = false;
            this.email.emailMessage = "";
            this.email.subject = "";
        };

        BulkEmails.prototype.send = function send() {
            var recipients = new Array();
            this.dataTable.baseArray.forEach(function (item) {
                recipients.push({ name: item.fullName, email: item.email });
            });

            var email = { email: this.email, recipients: recipients };
            this.people.sendBuikEmail(email);
        };

        BulkEmails.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
            for (var i = 0; i < context.people.institutionsArray.length; i++) {
                if (item.institutionId._id == context.people.institutionsArray[i]._id) {
                    return context.people.institutionsArray[i].name.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        BulkEmails.prototype.regionCustomFilter = function regionCustomFilter(value, item, context) {
            for (var i = 0; i < context.people.institutionsArray.length; i++) {
                if (item.institutionId._id == context.people.institutionsArray[i]._id) {
                    return context.people.institutionsArray[i].region.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        BulkEmails.prototype.cityCustomFilter = function cityCustomFilter(value, item, context) {
            for (var i = 0; i < context.people.institutionsArray.length; i++) {
                if (item.institutionId._id == context.people.institutionsArray[i]._id) {
                    return context.people.institutionsArray[i].city.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        BulkEmails.prototype.countryCustomFilter = function countryCustomFilter(value, item, context) {
            for (var i = 0; i < context.people.institutionsArray.length; i++) {
                if (item.institutionId._id == context.people.institutionsArray[i]._id) {
                    return context.people.institutionsArray[i].country.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        BulkEmails.prototype.roleCustomFilter = function roleCustomFilter(value, item, context) {
            var keep = false;
            if (item.roles && item.roles.length > 0) {
                for (var i = 0; i < item.roles.length; i++) {
                    if (item.roles[i].toUpperCase().indexOf(value.toUpperCase()) > -1) keep = true;
                }
            }
            return keep;
        };

        return BulkEmails;
    }()) || _class);
});
define('modules/admin/Customers/customers',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Customers = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Customers = exports.Customers = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Customers(router, config) {
            _classCallCheck(this, Customers);

            this.title = "Customers";
            this.tabs = [{ id: 'editPeople', label: 'People' }, { id: 'editInstitutions', label: 'Institutions' }];
            this.tabPath = "modules/admin/customers/";

            this.router = router;
            this.config = config;
        }

        Customers.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Customers.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Customers.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'editPeople'],
                moduleId: './editPeople',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editPeople',
                title: "People"
            }, {
                route: 'editInstitutions',
                moduleId: './editInstitutions',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editInstitutions',
                title: 'Institutions'
            }, {
                route: 'bulkEmails',
                moduleId: './bulkEmails',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'bulkEmails',
                title: 'Bulk Emails'
            }]);

            this.router = router;
        };

        return Customers;
    }()) || _class);
});
define('modules/admin/Customers/editInstitutions',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/data/is4ua', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'jquery'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _people, _is4ua, _commonDialogs, _validation, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditInstitutions = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditInstitutions = exports.EditInstitutions = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _people.People, _utils.Utils, _is4ua.is4ua, _commonDialogs.CommonDialogs, _validation2.default), _dec(_class = function () {
        function EditInstitutions(datatable, config, people, utils, is4ua, dialog, validation) {
            _classCallCheck(this, EditInstitutions);

            this.institutionSelected = false;
            this.spinnerHTML = "";
            this.tabs = [{ id: 'instAddress', title: 'Address' }, { id: 'instPeople', title: 'People' }, { id: 'instIs4ua', title: "IS4UA" }];
            this.tabPath = './';

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.utils = utils;
            this.people = people;
            this.is4ua = is4ua;
            this.dialog = dialog;
            this.validation = validation;
            this._setupValidation();
            this.validation.initialize(this);

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        EditInstitutions.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
        };

        EditInstitutions.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getPeopleArray('?order=lastName'), this.people.getInstitutionsArray('?order=name'), this.is4ua.loadIs4ua()]);

                            case 2:
                                responses = _context.sent;


                                this.dataTable.updateArray(this.people.institutionsArray);

                            case 4:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditInstitutions.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.people.getInstitutionsArray('?order=name', true);

                            case 3:
                                this.dataTable.updateArray(this.people.institutionArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditInstitutions.prototype.edit = function edit(index, el) {
            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.people.selectInstitution(this.editIndex);
            this.newInstitution = false;

            this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.people.selectedInstitution._id, true);

            (0, _jquery2.default)("#editName").focus();

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = (0, _jquery2.default)(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.institutionSelected = true;
        };

        EditInstitutions.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.people.getInstitutionPeople(-1);
                                this.people.selectInstitution();
                                this.newInstitution = true;
                                (0, _jquery2.default)("#editName").focus();
                                this.institutionSelected = true;

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditInstitutions.prototype.save = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context4.next = 8;
                                    break;
                                }

                                _context4.next = 3;
                                return this.people.saveInstitution();

                            case 3:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.people.institutionsArray);
                                    this.utils.showNotification(serverResponse.name + " was updated");
                                } else {
                                    this.utils.showNotification("There was a problem updating saving the institution");
                                }
                                this._cleanUp();
                                _context4.next = 10;
                                break;

                            case 8:
                                if (!(!this.people.selectedInstitution.institutionType || !this.people.selectedInstitution.memberType || !this.people.selectedInstitution.institutionStatus || !this.people.selectedInstitution.highestDegree)) {
                                    _context4.next = 10;
                                    break;
                                }

                                return _context4.abrupt('return', this.dialog.showMessage("The IS4UA fields on the IS4UA tab are required", "Missing Data", ['OK']).then(function (response) {}));

                            case 10:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function save() {
                return _ref4.apply(this, arguments);
            }

            return save;
        }();

        EditInstitutions.prototype.delete = function _delete() {
            var _this = this;

            return this.dialog.showMessage("Are you sure you want to delete the institution?", "Delete Institution", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this.deleteInstitution();
                }
            });
        };

        EditInstitutions.prototype.deleteInstitution = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                name = this.people.selectedInstitution.name;
                                _context5.next = 3;
                                return this.people.deleteInstitution();

                            case 3:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.people.institutionsArray);
                                    this.utils.showNotification(name + " was deleted");
                                } else {
                                    this.utils.showNotification("There was a problem deleting the user");
                                }
                                this._cleanUp();

                            case 6:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function deleteInstitution() {
                return _ref5.apply(this, arguments);
            }

            return deleteInstitution;
        }();

        EditInstitutions.prototype.cancel = function cancel() {
            this.people.selectInstitution(this.editIndex);
        };

        EditInstitutions.prototype.back = function back() {
            var _this2 = this;

            if (this.people.isInstitutionDirty().length) {
                return this.dialog.showMessage("The institution has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.institutionSelected = false;
                    }
                });
            } else {
                this.institutionSelected = false;
            }
        };

        EditInstitutions.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editName", [{ "rule": "required", "message": "Name is required", "value": "people.selectedInstitution.name" }]);
            this.validation.addRule(1, "editInstitutionType", [{ "rule": "required", "message": "Institution type is required", "value": "people.selectedInstitution.institutionType" }]);
            this.validation.addRule(1, "editMemberType", [{ "rule": "required", "message": "Institution type is required", "value": "people.selectedInstitution.memberType" }]);
            this.validation.addRule(1, "editInstitutonStatusArray", [{ "rule": "required", "message": "Institution status is required", "value": "people.selectedInstitution.institutionStatus" }]);
            this.validation.addRule(1, "editHighestDegree", [{ "rule": "required", "message": "Institution type is required", "value": "people.selectedInstitution.highestDegree" }]);
        };

        EditInstitutions.prototype._cleanUp = function _cleanUp() {
            this.newInstitution = false;
            this.institutionSelected = false;
            this._cleanUpFilters();
        };

        EditInstitutions.prototype._clearFilters = function _clearFilters() {
            this._cleanUpFilters();
            this.dataTable.updateArray(this.people.institutionsArray);
        };

        EditInstitutions.prototype._cleanUpFilters = function _cleanUpFilters() {
            this.nameFilterValue = "";
            this.institutionTypeFilter = "";
            this.memberTypeFilter = "";
            this.highestDegreeFilter = "";

            (0, _jquery2.default)("#institutionStatus").val("");
        };

        EditInstitutions.prototype.changeTab = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(el, index) {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                (0, _jquery2.default)("#instFormListGroup.list-group").children().removeClass('menuButtons');
                                (0, _jquery2.default)("#instFormListGroup.list-group").children().css("background-color", "");
                                (0, _jquery2.default)("#instFormListGroup.list-group").children().css("color", "");
                                (0, _jquery2.default)(el.target).parent().css("background-color", this.config.BUTTONS_BACKGROUND);
                                (0, _jquery2.default)(el.target).parent().css("color", this.config.ACTIVE_SUBMENU_COLOR);
                                (0, _jquery2.default)(".in").removeClass('active').removeClass('in');
                                (0, _jquery2.default)("#" + el.target.id + "Tab").addClass('in').addClass('active');

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function changeTab(_x, _x2) {
                return _ref6.apply(this, arguments);
            }

            return changeTab;
        }();

        return EditInstitutions;
    }()) || _class);
});
define('modules/admin/Customers/editPeople',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/data/is4ua', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _people, _is4ua, _commonDialogs, _validation) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditPeople = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditPeople = exports.EditPeople = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _people.People, _utils.Utils, _is4ua.is4ua, _commonDialogs.CommonDialogs, _validation2.default), _dec(_class = function () {
        function EditPeople(datatable, config, people, utils, is4ua, dialog, validation) {
            _classCallCheck(this, EditPeople);

            this.personSelected = false;
            this.showCourses = false;
            this.courseSelected = false;
            this.showPassword = false;
            this.customerEmail = false;
            this.bulkEmailSelected = false;
            this.emailSubject = "";
            this.emailMessage = "";
            this.spinnerHTML = "";
            this.tabs = [{ id: 'Address' }, { id: 'Roles' }, { id: 'Courses' }, { id: 'Password' }, { id: 'Audit' }, { id: "Email" }];
            this.tabPath = './';
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.utils = utils;
            this.people = people;
            this.is4ua = is4ua;
            this.dialog = dialog;
            this.validation = validation;
            this.validation.initialize(this);

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        EditPeople.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.people.getPeopleArray('?order=lastName&filter=personStatus|eq|01'), this.people.getInstitutionsArray('?order=name', true), this.is4ua.loadIs4ua(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.activeFilterValue = "01";
                                this.filteredArray = this.config.ROLES;
                                this.dataTable.updateArray(this.people.peopleArray);
                                this._setupValidation();

                            case 7:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditPeople.prototype.filterActive = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this._clearFilters();

                                if (!(this.activeFilterValue == "")) {
                                    _context2.next = 6;
                                    break;
                                }

                                _context2.next = 4;
                                return this.people.getPeopleArray('?order=lastName', true);

                            case 4:
                                _context2.next = 8;
                                break;

                            case 6:
                                _context2.next = 8;
                                return this.people.getPeopleArray('?order=lastName&filter=personStatus|eq|' + this.activeFilterValue, true);

                            case 8:
                                this.dataTable.updateArray(this.people.peopleArray);

                            case 9:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function filterActive() {
                return _ref2.apply(this, arguments);
            }

            return filterActive;
        }();

        EditPeople.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        EditPeople.prototype.refresh = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this._cleanUpFilters();
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context3.next = 4;
                                return this.people.getPeopleArray('?order=lastName&filter=personStatus|eq|01', true);

                            case 4:
                                this.dataTable.updateArray(this.people.peopleArray);

                                this.spinnerHTML = "";

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function refresh() {
                return _ref3.apply(this, arguments);
            }

            return refresh;
        }();

        EditPeople.prototype.edit = function edit(index, el) {
            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.people.selectPerson(this.editIndex);
            this.oldEmail = this.people.selectedPerson.email;
            this.institutionId = this.people.selectedPerson.institutionId._id;
            this.orginalObject = this.people.selectedPerson;
            this.filterRoles();
            this.newPerson = false;
            $("#editFirstName").focus();

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.personSelected = true;

            this.setFirstTab();
        };

        EditPeople.prototype.new = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = -1;
                                this.people.selectPerson();
                                this.newPerson = true;
                                this.oldEmail = this.people.selectedPerson.email;
                                $("#editFirstName").focus();
                                this.personSelected = true;

                                this.setFirstTab();

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function _new() {
                return _ref4.apply(this, arguments);
            }

            return _new;
        }();

        EditPeople.prototype.filterRoles = function filterRoles() {
            var _this = this;

            this.filteredArray = this.config.ROLES.filter(function (item) {
                return _this.people.selectedPerson.roles.indexOf(item.role) === -1;
            });
            if (this.filteredArray.length === 0) this.filteredArray.push({ role: "NOROLE", label: "No Roles Remaining" });
        };

        EditPeople.prototype.selectRole = function selectRole(event, role) {
            if (role.role === 'NOROLE') return;
            this.people.selectedPerson.roles.push(role.role);
            this.filterRoles();
        };

        EditPeople.prototype.removeRole = function removeRole(index, role) {
            this.people.selectedPerson.roles.splice(index, 1);
            this.filterRoles();
        };

        EditPeople.prototype.buildAudit = function buildAudit() {
            var _this2 = this;

            var changes = this.people.isPersonDirty(this.orginalObject);
            changes.forEach(function (item) {
                _this2.people.selectedPerson.audit.push({
                    property: item.property,
                    eventDate: new Date(),
                    oldValue: item.oldValue,
                    newValue: item.newValue,
                    personId: _this2.userObj._id
                });
            });
        };

        EditPeople.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context5.next = 7;
                                    break;
                                }

                                if (this.people.selectedPerson._id) {
                                    this.buildAudit();
                                } else {
                                    this.people.selectedPerson.institutionId._id = this.institutionId;
                                }
                                _context5.next = 4;
                                return this.people.savePerson();

                            case 4:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.people.peopleArray);
                                    this.utils.showNotification(serverResponse.firstName + " " + serverResponse.lastName + " was updated");
                                } else {
                                    this.utils.showNotification("There was a problem saving the person");
                                }
                                this._cleanUp();

                            case 7:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditPeople.prototype.delete = function _delete() {
            var _this3 = this;

            return this.dialog.showMessage("Are you sure you want to delete the person?", "Delete Person", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this3.deletePerson();
                }
            });
        };

        EditPeople.prototype.deletePerson = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                name = this.people.selectedPerson.fullName;
                                _context6.next = 3;
                                return this.people.deletePerson();

                            case 3:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.people.peopleArray);
                                    this.utils.showNotification(name + " was deleted");
                                }
                                this.personSelected = false;

                            case 6:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deletePerson() {
                return _ref6.apply(this, arguments);
            }

            return deletePerson;
        }();

        EditPeople.prototype.cancel = function cancel() {
            this.people.selectPerson(this.editIndex);
        };

        EditPeople.prototype.back = function back() {
            var _this4 = this;

            if (this.people.isPersonDirty(this.orginalObject).length) {
                return this.dialog.showMessage("The account has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this4.save();
                    } else {
                        _this4.personSelected = false;
                    }
                });
            } else {
                this.personSelected = false;
            }
        };

        EditPeople.prototype.checkEmail = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!(this.oldEmail != this.people.selectedPerson.email)) {
                                    _context7.next = 10;
                                    break;
                                }

                                _context7.next = 3;
                                return this.people.checkEmail();

                            case 3:
                                if (!_context7.sent) {
                                    _context7.next = 8;
                                    break;
                                }

                                this.duplicateAccount = true;
                                this.validation.validate(4);
                                _context7.next = 10;
                                break;

                            case 8:
                                this.duplicateAccount = false;
                                this.validation.makeValid($("#register_email"));

                            case 10:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function checkEmail() {
                return _ref7.apply(this, arguments);
            }

            return checkEmail;
        }();

        EditPeople.prototype.changeInstitution = function changeInstitution() {
            var _this5 = this;

            if (this.people.selectedPerson._id) {
                return this.dialog.showMessage("Are you sure you want to change the institution? This should normally only be done if the account was created in the wrong institution.  If the user has changed institutions, create a new account.", "Change Institution", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this5.people.selectedPerson.institutionId._id = _this5.institutionId;
                    } else {
                        _this5.institutionId = _this5.people.selectedPerson.institutionId._id;
                    }
                });
            }
        };

        EditPeople.prototype.openEditCourseForm = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (this.showCourses) {
                                    _context8.next = 3;
                                    break;
                                }

                                _context8.next = 3;
                                return this.refreshCourses();

                            case 3:
                                this.showCourses = !this.showCourses;

                            case 4:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function openEditCourseForm() {
                return _ref8.apply(this, arguments);
            }

            return openEditCourseForm;
        }();

        EditPeople.prototype.refreshCourses = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                if (!this.people.selectedPerson._id) {
                                    _context9.next = 3;
                                    break;
                                }

                                _context9.next = 3;
                                return this.people.getCoursesArray(true, '?filter=personId|eq|' + this.people.selectedPerson._id + '&order=number');

                            case 3:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function refreshCourses() {
                return _ref9.apply(this, arguments);
            }

            return refreshCourses;
        }();

        EditPeople.prototype.editACourse = function editACourse(index, el) {
            this.editCourseIndex = index;
            this.people.selectCourse(this.editCourseIndex);

            $("#number").focus();

            if (this.selectedCourseRow) this.selectedCourseRow.children().removeClass('info');
            this.selectedCourseRow = $(el.target).closest('tr');
            this.selectedCourseRow.children().addClass('info');
            this.courseSelected = true;
        };

        EditPeople.prototype.newCourse = function newCourse() {
            this.editCourseIndex = -1;
            this.people.selectCourse();
            $("#number").focus();
            this.editCourse = true;
            this.courseSelected = true;
        };

        EditPeople.prototype.saveCourse = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                if (!this.validation.validate(2)) {
                                    _context10.next = 7;
                                    break;
                                }

                                if (!this.people.selectedPerson._id) {
                                    _context10.next = 7;
                                    break;
                                }

                                this.people.selectedCourse.personId = this.people.selectedPerson._id;
                                _context10.next = 5;
                                return this.people.saveCourse();

                            case 5:
                                serverResponse = _context10.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The course was updated");
                                }

                            case 7:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function saveCourse() {
                return _ref10.apply(this, arguments);
            }

            return saveCourse;
        }();

        EditPeople.prototype.cancelEditCourse = function cancelEditCourse() {
            this.courseSelected = false;
        };

        EditPeople.prototype.openEditPasswordForm = function openEditPasswordForm() {
            this.showPassword = true;
        };

        EditPeople.prototype.cancelEditPassword = function cancelEditPassword() {
            this.newPassword = "";
            this.newPassword_repeat = "";
            this.showPassword = false;
        };

        EditPeople.prototype.savePassword = function () {
            var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
                var obj, response;
                return regeneratorRuntime.wrap(function _callee11$(_context11) {
                    while (1) {
                        switch (_context11.prev = _context11.next) {
                            case 0:
                                this.newPassword = $("#newPassword").val();

                                if (!this.validation.validate(3, this)) {
                                    _context11.next = 8;
                                    break;
                                }

                                obj = {
                                    password: this.newPassword
                                };
                                _context11.next = 5;
                                return this.people.updatePassword(obj);

                            case 5:
                                response = _context11.sent;

                                if (!response.error) {
                                    this.utils.showNotification("The password was updated");
                                    $("#newPassword").val("");
                                    this.newPassword = "";
                                }
                                this.showPassword = false;

                            case 8:
                            case 'end':
                                return _context11.stop();
                        }
                    }
                }, _callee11, this);
            }));

            function savePassword() {
                return _ref11.apply(this, arguments);
            }

            return savePassword;
        }();

        EditPeople.prototype.copyInstAddress = function copyInstAddress() {
            if (this.institutionId) {
                this.people.selectInstitutionByID(this.institutionId);
                if (this.people.selectedInstitution._id) {
                    this.people.selectedPerson.address1 = this.people.selectedInstitution.address1;
                    this.people.selectedPerson.address2 = this.people.selectedInstitution.address2;
                    this.people.selectedPerson.city = this.people.selectedInstitution.city;
                    this.people.selectedPerson.region = this.people.selectedInstitution.region;
                    this.people.selectedPerson.postalCode = this.people.selectedInstitution.postalCode;
                    this.people.selectedPerson.country = this.people.selectedInstitution.country;
                    this.people.selectedPerson.POBox = this.people.selectedInstitution.POBox;
                }
            }
        };

        EditPeople.prototype.cancelCustomerEmail = function cancelCustomerEmail() {
            this.emailMessage = "";
            this.emailSubject = "";
        };

        EditPeople.prototype.sendAnEmail = function sendAnEmail(id) {
            var _this6 = this;

            if (id) {
                var email = { emailBody: "", emailSubject: "", emailId: id };
                return this.dialog.showEmail("Enter Email", email, ['Submit', 'Cancel']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this6.sendTheEmail(response.output);
                    } else {
                        console.log("Cancelled");
                    }
                });
            }
        };

        EditPeople.prototype.sendTheEmail = function () {
            var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(email) {
                var message, serverResponse;
                return regeneratorRuntime.wrap(function _callee12$(_context12) {
                    while (1) {
                        switch (_context12.prev = _context12.next) {
                            case 0:
                                if (!this.people.selectedPerson || this.people.selectedPerson._id !== email.email.emailId) this.people.selectedPersonFromId(email.email.emailId);

                                if (!email) {
                                    _context12.next = 7;
                                    break;
                                }

                                message = {
                                    id: email.email.emailId,
                                    message: email.email.emailBody,
                                    email: this.people.selectedPerson.email,
                                    subject: email.email.emailSubject,
                                    audit: {
                                        property: 'Send Message',
                                        eventDate: new Date(),
                                        newValue: email.email.emailBody,
                                        personId: this.userObj._id
                                    }
                                };
                                _context12.next = 5;
                                return this.people.sendCustomerMessage(message);

                            case 5:
                                serverResponse = _context12.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The message was sent");
                                }

                            case 7:
                            case 'end':
                                return _context12.stop();
                        }
                    }
                }, _callee12, this);
            }));

            function sendTheEmail(_x) {
                return _ref12.apply(this, arguments);
            }

            return sendTheEmail;
        }();

        EditPeople.prototype.sendCustomerEmail = function () {
            var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {
                var message, serverResponse;
                return regeneratorRuntime.wrap(function _callee13$(_context13) {
                    while (1) {
                        switch (_context13.prev = _context13.next) {
                            case 0:
                                if (!this.emailMessage) {
                                    _context13.next = 6;
                                    break;
                                }

                                message = {
                                    id: this.people.selectedPerson._id,
                                    message: this.emailMessage,
                                    email: this.people.selectedPerson.email,
                                    subject: this.emailSubject,
                                    audit: {
                                        property: 'Send Message',
                                        eventDate: new Date(),
                                        newValue: this.emailMessage,
                                        personId: this.userObj._id
                                    }
                                };
                                _context13.next = 4;
                                return this.people.sendCustomerMessage(message);

                            case 4:
                                serverResponse = _context13.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The message was sent");
                                }

                            case 6:
                            case 'end':
                                return _context13.stop();
                        }
                    }
                }, _callee13, this);
            }));

            function sendCustomerEmail() {
                return _ref13.apply(this, arguments);
            }

            return sendCustomerEmail;
        }();

        EditPeople.prototype.toggleStatus = function () {
            var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(id, personStatus) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee14$(_context14) {
                    while (1) {
                        switch (_context14.prev = _context14.next) {
                            case 0:
                                if (!(id && personStatus)) {
                                    _context14.next = 8;
                                    break;
                                }

                                this.people.selectedPersonFromId(id);
                                this.people.selectedPerson.personStatus = personStatus === this.config.ACTIVE_PERSON ? this.config.INACTIVE_PERSON : this.config.ACTIVE_PERSON;
                                this.people.selectedPerson.audit.push({
                                    property: 'personStatus',
                                    eventDate: new Date(),
                                    newValue: this.people.selectedPerson.personStatus,
                                    personId: this.userObj._id
                                });
                                _context14.next = 6;
                                return this.people.savePerson();

                            case 6:
                                serverResponse = _context14.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification(serverResponse.firstName + " " + serverResponse.lastName + " was updated");
                                } else {
                                    this.utils.showNotification("There was a problem saving the person");
                                }

                            case 8:
                            case 'end':
                                return _context14.stop();
                        }
                    }
                }, _callee14, this);
            }));

            function toggleStatus(_x2, _x3) {
                return _ref14.apply(this, arguments);
            }

            return toggleStatus;
        }();

        EditPeople.prototype.setFirstTab = function setFirstTab() {
            $("#peopleFormListGroup.list-group").children().removeClass('active');
            var target = $("#peopleFormListGroup.list-group").children()[0];
            $(el.target).parent().css("background-color", this.config.BUTTONS_BACKGROUND);
            $(el.target).parent().css("color", this.config.ACTIVE_SUBMENU_COLOR);

            $(".in").removeClass('active').removeClass('in');
            $("#AddressTab").addClass('in').addClass('active');
        };

        EditPeople.prototype.changeTab = function () {
            var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(el, index) {
                return regeneratorRuntime.wrap(function _callee15$(_context15) {
                    while (1) {
                        switch (_context15.prev = _context15.next) {
                            case 0:
                                $("#peopleFormListGroup.list-group").children().removeClass('menuButtons');
                                $("#peopleFormListGroup.list-group").children().css("background-color", "");
                                $("#peopleFormListGroup.list-group").children().css("color", "");
                                $(el.target).parent().css("background-color", this.config.BUTTONS_BACKGROUND);
                                $(el.target).parent().css("color", this.config.ACTIVE_SUBMENU_COLOR);
                                $(".in").removeClass('active').removeClass('in');
                                $("#" + el.target.id + "Tab").addClass('in').addClass('active');
                                _context15.t0 = target.attr('id');
                                _context15.next = _context15.t0 === 'Courses' ? 10 : 13;
                                break;

                            case 10:
                                _context15.next = 12;
                                return this.refreshCourses();

                            case 12:
                                return _context15.abrupt('break', 13);

                            case 13:
                            case 'end':
                                return _context15.stop();
                        }
                    }
                }, _callee15, this);
            }));

            function changeTab(_x4, _x5) {
                return _ref15.apply(this, arguments);
            }

            return changeTab;
        }();

        EditPeople.prototype._cleanUp = function _cleanUp() {
            this.institutionId = "";
            this.personSelected = false;
            this.newPerson = false;
            this._cleanUpFilters();
            this.validation.makeAllValid(1);
        };

        EditPeople.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editFirstName", [{ "rule": "required", "message": "First name is required", "value": "people.selectedPerson.firstName" }, { "rule": "custom", "message": "A person with that name at that institution already exists",
                "valFunction": function valFunction(context) {
                    var found = false;
                    for (var i = 0; i < context.people.peopleArray.length; i++) {
                        if (context.people.peopleArray[i].firstName.toUpperCase() === context.people.selectedPerson.firstName.toUpperCase() && context.people.peopleArray[i].lastName.toUpperCase() === context.people.selectedPerson.lastName.toUpperCase() && context.people.peopleArray[i].institutionId === context.people.selectedPerson.institutionId) {
                            if (context.people.selectedPerson._id && context.people.selectedPerson._id != context.people.peopleArray[i]._id) {
                                found = true;
                            } else if (!context.people.selectedPerson._id) {
                                found = true;
                            }
                        }
                    }
                    return !found;
                } }]);
            this.validation.addRule(1, "editLastName", [{ "rule": "required", "message": "Last name is required", "value": "people.selectedPerson.lastName" }]);
            this.validation.addRule(1, "editStatus", [{ "rule": "required", "message": "Status is required", "value": "people.selectedPerson.personStatus" }]);
            this.validation.addRule(1, "editPhone", [{ "rule": "required", "message": "Phone number is required", "value": "people.selectedPerson.phone" }, { "rule": "length", "message": "Phone number isn't valid", "value": "people.selectedPerson.phone", "ruleValue": 10 }]);
            this.validation.addRule(1, "editMobile", [{ "rule": "length", "message": "Phone number isn't valid", "value": "people.selectedPerson.mobile", "ruleValue": 10 }]);
            this.validation.addRule(1, "editEmail", [{ "rule": "required", "message": "Email is required", "value": "people.selectedPerson.email" }, { "rule": "custom", "message": "An account with that email exists",
                "valFunction": function valFunction(context) {
                    return !context.duplicateAccount;
                }
            }, { "rule": "custom", "message": "Enter a valid email address",
                "valFunction": function valFunction(context) {
                    return context.people.selectedPerson.email.indexOf('@') > -1;
                }
            }]);
            this.validation.addRule(1, "editInstitution", [{ "rule": "required", "message": "Institution is required", "value": "institutionId" }]);
            this.validation.addRule(1, "editRoles", [{
                "rule": "custom", "message": "The person must be assigned a role.",
                "valFunction": function valFunction(context) {
                    return context.people.selectedPerson.roles.length > 0;
                }
            }]);
            this.validation.addRule(2, "number", [{ "rule": "required", "message": "Course number is required", "value": "people.selectedCourse.number" }]);
            this.validation.addRule(2, "name", [{ "rule": "required", "message": "Course name is required", "value": "people.selectedCourse.name" }]);
            this.validation.addRule(3, "password", [{ "rule": "required", "message": "Password is required", "value": "newPassword" }]);
            this.validation.addRule(4, "editEmail", [{
                "rule": "custom", "message": "An account with that email exists",
                "valFunction": function valFunction(context) {
                    return !context.duplicateAccount;
                }
            }, { "rule": "custom", "message": "Enter a valid email address",
                "valFunction": function valFunction(context) {
                    return (/^\w+([\.-]?\ w+)*@\w+([\.-]?\ w+)*(\.\w{2,3})+$/.test(context.people.selectedPerson.email)
                    );
                }
            }]);
        };

        EditPeople.prototype._clearFilters = function _clearFilters() {
            this._cleanUpFilters();
            this.dataTable.updateArray(this.people.peopleArray);
        };

        EditPeople.prototype._cleanUpFilters = function _cleanUpFilters() {
            this.roleFilter = "";
            this.nameFilterValue = "";
            this.nickNameFilterValue = "";
            this.institutionFilterValue = "";
        };

        EditPeople.prototype.customInstitutionSorter = function customInstitutionSorter(sortProperty, sortDirection, sortArray, context) {

            return sortArray.sort(function (a, b) {
                var result = a['institutionId']['name'] < b['institutionId']['name'] ? -1 : a['institutionId']['name'] > b['institutionId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        EditPeople.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
            return item.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        EditPeople.prototype.customRoleFilter = function customRoleFilter(value, item, context) {
            var keep = false;
            if (item.roles && item.roles.length > 0) {
                for (var i = 0; i < item.roles.length; i++) {
                    if (item.roles[i].toUpperCase().indexOf(value.toUpperCase()) > -1) keep = true;
                }
            }
            return keep;
        };

        return EditPeople;
    }()) || _class);
});
define('modules/admin/documents/documents',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/documents', '../../../resources/data/people', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'aurelia-event-aggregator', 'jquery'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _appConfig, _utils, _documents, _people, _commonDialogs, _validation, _aureliaEventAggregator, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Documents = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Documents = exports.Documents = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _dataTable.DataTable, _documents.DocumentsServices, _people.People, _utils.Utils, _appConfig.AppConfig, _commonDialogs.CommonDialogs, _validation2.default, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
        function Documents(router, datatable, documents, people, utils, config, dialog, validation, eventAggregator) {
            _classCallCheck(this, Documents);

            this.navControl = "documentssNavButtons";
            this.spinnerHTML = "";
            this.filterValues = new Array();
            this.typeSelected = "";
            this.categoryForm = false;
            this.showDocumentForm = false;
            this.showDocuments = false;
            this.displayTitle = "";
            this.title = "Documents";

            this.router = router;
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.documents = documents;
            this.config = config;
            this.people = people;
            this.dialog = dialog;
            this.eventAggregator = eventAggregator;
            this.validation = validation;
            this.validation.initialize(this);

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        Documents.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.documents.getDocumentsCategoriesArray(), this.people.getPeopleArray(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.filteredDocumentArray = this.documents.docCatsArray;
                                _context.next = 6;
                                return this.selectFirstCategory();

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Documents.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
            this._setupValidation();
            this.mySubscription = this.eventAggregator.subscribe('upload-progress', function (obj) {
                var elem = document.getElementById("progressBar");
                elem.style.width = obj.progress / obj.total * 100 + '%';
            });
        };

        Documents.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.documents.getDocumentsArray(true);

                            case 3:
                                this.dataTable.updateArray(this.documents.docCatsArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        Documents.prototype.editDocument = function editDocument(index, el) {
            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.documents.selectDocument(this.editIndex);
            this.displayTitle = "Files";

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = (0, _jquery2.default)(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.showDocumentForm = true;
        };

        Documents.prototype.filterList = function filterList() {
            if (this.filter) {
                var thisFilter = this.filter;
                this.filteredDocumentArray = this.documents.docCatsArray.filter(function (item) {
                    return item.description.toUpperCase().indexOf(thisFilter.toUpperCase()) > -1;
                });
            } else {
                this.filteredDocumentArray = this.documents.docCatsArray;
            }
        };

        Documents.prototype.selectFirstCategory = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.categoryIndex = 0;
                                this.documents.selectCategory(0);
                                _context3.next = 4;
                                return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

                            case 4:
                                this.dataTable.updateArray(this.documents.documentsArray);
                                this.showDocuments = true;
                                this.showDocumentForm = false;
                                this.displayTitle = "Documents";

                            case 8:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function selectFirstCategory() {
                return _ref3.apply(this, arguments);
            }

            return selectFirstCategory;
        }();

        Documents.prototype.typeChanged = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!(index >= 0)) {
                                    _context4.next = 14;
                                    break;
                                }

                                this.categoryIndex = index;
                                this.documents.selectCategory(index);
                                _context4.next = 5;
                                return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

                            case 5:
                                this.dataTable.updateArray(this.documents.documentsArray);
                                this.showDocuments = true;
                                this.showDocumentForm = false;
                                this.displayTitle = "Documents";

                                (0, _jquery2.default)("#categoryList.list-group").children().removeClass('menuButtons');
                                (0, _jquery2.default)("#categoryList.list-group").children().css("background-color", "");
                                (0, _jquery2.default)("#categoryList.list-group").children().css("color", "");
                                (0, _jquery2.default)(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
                                (0, _jquery2.default)(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);

                            case 14:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function typeChanged(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return typeChanged;
        }();

        Documents.prototype.new = function _new() {
            this.editIndex = "";
            this.showDocumentForm = true;
            this.documents.selectDocument();
        };

        Documents.prototype.back = function back() {
            this.displayTitle = "Documents";
            this.showDocumentForm = false;
        };

        Documents.prototype.cancel = function cancel() {
            this.documents.selectDocument(this.editIndex);
        };

        Documents.prototype.delete = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                return _context5.abrupt('return', this.dialog.showMessage("This will delete the document from the database and remove all the files.  <br>Are you sure you want to delete the document?", "Delete Document", ['Yes', 'No']).whenClosed(function (response) {
                                    if (!response.wasCancelled) {
                                        _this.deleteDocument();
                                    }
                                }));

                            case 1:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function _delete() {
                return _ref5.apply(this, arguments);
            }

            return _delete;
        }();

        Documents.prototype.deleteDocument = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return this.documents.deleteDocument();

                            case 2:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The document was deleted");
                                    this.showDocumentForm = false;
                                }
                                this._cleanUp();

                            case 5:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteDocument() {
                return _ref6.apply(this, arguments);
            }

            return deleteDocument;
        }();

        Documents.prototype.toggleFileActive = function toggleFileActive(index) {
            this.documents.selectedDocument.files[index].active = !this.documents.selectedDocument.files[index].active;
        };

        Documents.prototype.deleteFile = function deleteFile(index) {
            var _this2 = this;

            return this.dialog.showMessage("Are you sure you want to delete the file?", "Delete File", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.documents.deleteFile(index);
                }
            });
        };

        Documents.prototype.buildDocument = function buildDocument() {
            if (!this.documents.selectedDocument._id) {
                this.documents.selectedDocument.categoryCode = this.documents.selectedCat.code;
                this.documents.selectedDocument.dateCreated = new Date();
            }
            if (this.files && this.files.length > 0) {
                var version = 1;
                for (var i = 0; i < this.documents.selectedDocument.files.length; i++) {
                    if (this.documents.selectedDocument.files[i].originalFilename == this.files[0].name) {
                        version++;
                    }
                }
                var fileNameArray = this.files[0].name.split('.');
                var fileName = fileNameArray[0] + " (" + version + ")." + fileNameArray[1];
                var newFile = {
                    personId: this.userObj._id,
                    originalFilename: this.files[0].name,
                    fileName: fileName,
                    dateUploaded: new Date(),
                    active: true,
                    version: version
                };
                this.documents.selectedDocument.files.unshift(newFile);
            }
        };

        Documents.prototype.save = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                this.buildDocument();

                                if (!this.validation.validate(1)) {
                                    _context7.next = 21;
                                    break;
                                }

                                _context7.next = 4;
                                return this.documents.saveDocument();

                            case 4:
                                serverResponse = _context7.sent;

                                if (serverResponse.error) {
                                    _context7.next = 21;
                                    break;
                                }

                                this.dataTable.updateArray(this.documents.documentsArray);

                                if (!(this.filesToUpload && this.filesToUpload.length > 0)) {
                                    _context7.next = 19;
                                    break;
                                }

                                this.uploading = true;
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context7.next = 12;
                                return this.documents.uploadFile(this.filesToUpload, this.documents.selectedDocument.files[0].version);

                            case 12:
                                this.spinnerHTML = "";
                                (0, _jquery2.default)("#spinner").toggle().toggle();
                                this._cleanUp();
                                this.selectedFile = "";
                                this.utils.showNotification("The document was saved");
                                _context7.next = 21;
                                break;

                            case 19:
                                this._cleanUp();
                                this.utils.showNotification("The document was saved");

                            case 21:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function save() {
                return _ref7.apply(this, arguments);
            }

            return save;
        }();

        Documents.prototype.changeFiles = function changeFiles() {
            this.filesToUpload = new Array();
            this.filesToUpload.push(this.files[0]);
        };

        Documents.prototype.removeFile = function removeFile(index) {
            this.filesToUpload.splice(index, 1);
        };

        Documents.prototype.newCategory = function newCategory() {
            this.categoryForm = true;
            this.documents.selectCategory();
        };

        Documents.prototype.editCategory = function editCategory() {
            if (this.documents.selectedCat) this.categoryForm = true;
        };

        Documents.prototype.saveCategory = function saveCategory() {
            var serverResponse = this.documents.saveCategory();
            if (!serverResponse.status) {
                this.utils.showNotification("Category Saved");
                this.categoryForm = false;
            }
        };

        Documents.prototype._cleanUp = function _cleanUp() {
            this.selectedFiles = undefined;
            this.files = undefined;
            this.uploading = false;
            this.filesToUpload = new Array();
        };

        Documents.prototype.backCategory = function backCategory() {
            this.categoryForm = false;
        };

        Documents.prototype.cancelEditCategory = function cancelEditCategory() {
            this.documents.selectCategory();
        };

        Documents.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editName", [{ "rule": "required", "message": "Document name is required", "value": "documents.selectedDocument.name" }]);
            this.validation.addRule(1, "editDescription", [{ "rule": "required", "message": "Document description is required", "value": "documents.selectedDocument.description" }]);
        };

        return Documents;
    }()) || _class);
});
define('modules/admin/inventory/editInventory',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/utils', '../../../resources/data/inventory', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/data/documents', 'jquery'], function (exports, _aureliaFramework, _aureliaRouter, _commonDialogs, _utils, _inventory, _validation, _dataTable, _appConfig, _documents, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditInventory = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditInventory = exports.EditInventory = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _inventory.Inventory, _validation2.default, _utils.Utils, _dataTable.DataTable, _appConfig.AppConfig, _commonDialogs.CommonDialogs, _documents.DocumentsServices), _dec(_class = function () {
        function EditInventory(router, inventory, validation, utils, datatable, config, dialog, documents) {
            _classCallCheck(this, EditInventory);

            this.systemSelected = false;
            this.spinnerHTML = "";
            this.addressSelected = false;
            this.showDocumentForm = false;
            this.showDocuments = false;
            this.address = "";
            this.description = "";
            this.title = "Inventory";
            this.tabs = [{ id: 'Maintenance', title: 'Maintenance' }, { id: 'History', title: 'History' }, { id: 'Purchase', title: 'Purchase' }, { id: 'Technical', title: "Technical" }, { id: 'Documents', title: "Documents" }];
            this.tabPath = './';

            this.router = router;
            this.inventory = inventory;
            this.utils = utils;
            this.validation = validation;
            this.validation.initialize(this);
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.dialog = dialog;
            this.documents = documents;
        }

        EditInventory.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
        };

        EditInventory.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.inventory.getInventoryArray('?order=systemName', true), this.config.getConfig(), this.documents.getDocumentsCategoriesArray(), this.config.getSessions()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.inventory.inventoryArray);
                                this.filteredDocumentArray = this.documents.docCatsArray;

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditInventory.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.inventory.getInventoryArray('?order=systemName', true);

                            case 3:
                                this.dataTable.updateArray(this.inventory.inventoryArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditInventory.prototype.new = function _new() {
            this.editIndex = -1;
            this.inventory.selectInventory();
            (0, _jquery2.default)("#editSystemName").focus();
            this.systemSelected = true;
        };

        EditInventory.prototype.edit = function edit(index, el) {
            this.editIndex = this.dataTable.displayArray[index + parseInt(this.dataTable.startRecord)].baseIndex;
            this.inventory.selectInventory(this.editIndex);
            this.systemSelected = true;
            (0, _jquery2.default)("#editSystemName").focus();
            this.isDuplicate = false;

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = (0, _jquery2.default)(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        EditInventory.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                response = this.inventory.saveInventory();

                                if (!response.error) {
                                    this.utils.showNotification('The system was saved');
                                }
                                this._cleanUp();

                            case 3:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        EditInventory.prototype._cleanUp = function _cleanUp() {
            this.systemSelected = false;
        };

        EditInventory.prototype.duplicate = function duplicate() {
            delete this.inventory.selectedInventory._id;
            this.isDuplicate = true;
            this.utils.showNotification('The inventory item was duplicated. You must save it to create the database record.');
        };

        EditInventory.prototype.cancel = function cancel() {};

        EditInventory.prototype.back = function back() {
            this.systemSelected = false;
        };

        EditInventory.prototype.newIP = function newIP() {
            this.address = "";
            this.description = "";
            this.selectedAddress = -1;
            this.addressSelected = true;
        };

        EditInventory.prototype.editIP = function editIP(index, event) {
            this.selectedAddress = index;
            this.address = this.inventory.selectedInventory.IPAddress[index].address;
            this.description = this.inventory.selectedInventory.IPAddress[index].description;
        };

        EditInventory.prototype.saveAddress = function saveAddress() {
            if (this.selectedAddress > -1) {
                this.inventory.selectedInventory.IPAddress[this.selectedAddress].address = this.address;
                this.inventory.selectedInventory.IPAddress[this.selectedAddress].description = this.description;
            } else {
                this.inventory.selectedInventory.IPAddress.push({
                    "address": this.address,
                    "description": this.description
                });
            }
            this.addressSelected = false;
        };

        EditInventory.prototype.cancelEditAddress = function cancelEditAddress() {
            if (this.selectedAddress > -1) {
                this.address = this.inventory.selectedInventory.IPAddress[this.selectedAddress].address;
                this.description = this.inventory.selectedInventory.IPAddress[this.selectedAddress].description;
            } else {
                this.address = "";
                this.description = "";
            }
        };

        EditInventory.prototype.addDocument = function addDocument(index) {
            if (!this.inventory.selectedInventory.documents) this.inventory.selectedInventory.documents = new Array();
            for (var i = 0; i < this.inventory.selectedInventory.documents.length; i++) {
                if (this.inventory.selectedInventory.documents[i].fileName == this.documents.selectedDocument.files[index].fileName) {
                    return;
                }
            }
            var newDoc = {
                categoryCode: this.documents.selectedDocument.categoryCode,
                categoryName: this.documents.selectedDocument.name,
                fileName: this.documents.selectedDocument.files[index].fileName,
                default: true
            };
            this.inventory.selectedInventory.documents.push(newDoc);
        };

        EditInventory.prototype.chooseDocument = function chooseDocument(index, event) {
            this.documents.selectDocument(index);

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = (0, _jquery2.default)(event.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.showDocumentForm = true;
        };

        EditInventory.prototype.toggleDefault = function toggleDefault(index) {
            this.inventory.selectedInventory.documents[index].default = !this.inventory.selectedInventory.documents[index].default;
        };

        EditInventory.prototype.removeDocument = function removeDocument(index) {
            this.inventory.selectedInventory.documents.splice(index, 1);
        };

        EditInventory.prototype.typeChanged = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!(index >= 0)) {
                                    _context4.next = 6;
                                    break;
                                }

                                this.categoryIndex = index;
                                this.documents.selectCategory(index);
                                _context4.next = 5;
                                return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

                            case 5:
                                this.showDocuments = true;

                            case 6:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function typeChanged(_x) {
                return _ref4.apply(this, arguments);
            }

            return typeChanged;
        }();

        EditInventory.prototype.filterList = function filterList() {
            if (this.filter) {
                var thisFilter = this.filter;
                this.filteredDocumentArray = this.documents.docCatsArray.filter(function (item) {
                    return item.description.substring(0, thisFilter.length).toUpperCase() === thisFilter.toUpperCase();
                });
            } else {
                this.filteredDocumentArray = this.documents.docCatsArray;
            }
        };

        EditInventory.prototype.changeTab = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(el, index) {
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                (0, _jquery2.default)("#invFormListGroup.list-group").children().removeClass('active');
                                (0, _jquery2.default)(el.target).parent().addClass('active');
                                (0, _jquery2.default)(".in").removeClass('active').removeClass('in');
                                (0, _jquery2.default)("#" + el.target.id + "Tab").addClass('in').addClass('active');

                            case 4:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function changeTab(_x2, _x3) {
                return _ref5.apply(this, arguments);
            }

            return changeTab;
        }();

        return EditInventory;
    }()) || _class);
});
define('modules/admin/notes/editCalendar',['exports', 'aurelia-framework', '../../../resources/dialogs/common-dialogs', '../../../resources/data/events', '../../../resources/utils/utils', 'moment'], function (exports, _aureliaFramework, _commonDialogs, _events, _utils, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EditCalendar = undefined;

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var EditCalendar = exports.EditCalendar = (_dec = (0, _aureliaFramework.inject)(_commonDialogs.CommonDialogs, _events.Events, _utils.Utils), _dec(_class = function () {
    function EditCalendar(dialog, events, utils) {
      _classCallCheck(this, EditCalendar);

      this.events = [];

      this.dialog = dialog;
      this.eventLayer = events;
      this.utils = utils;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));
    }

    EditCalendar.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var _this = this;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.eventLayer.getEventsArray('', true);

              case 2:
                this.eventLayer.eventArray.forEach(function (item) {
                  if (item.personId === _this.userObj._id || item.scope === 'u') _this.events.push(item);
                });

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    EditCalendar.prototype.eventClicked = function eventClicked(start) {
      this.fireEvent(this.element, 'eventClicked', { date: start });
    };

    EditCalendar.prototype.selectEvent = function selectEvent(event) {
      if (event.detail.value) {
        this.eventLayer.selectEventById(event.detail.value.date._id);
      }
    };

    EditCalendar.prototype.dayClicked = function dayClicked(start) {
      var startIndex = start._d.toString().indexOf('GMT-0') + 5;
      var hours = parseInt(start._d.toString().substring(startIndex, startIndex + 1));
      start = (0, _moment2.default)(start).add(5, 'hours');
      this.fireEvent(this.element, 'dayClicked', { date: start });
    };

    EditCalendar.prototype.eventDialog = function eventDialog(evt) {
      var _this2 = this;

      var event = { eventTitle: "", eventStart: evt.detail.value.date, allDay: false, scope: false, eventEnd: evt.detail.value.date, notes: "" };
      return this.dialog.showEvent("Enter Event", event, ['Submit', 'Cancel']).whenClosed(function (response) {
        if (!response.wasCancelled) {
          _this2.saveEvent(response.output);
        } else {
          console.log("Cancelled");
        }
      });
    };

    EditCalendar.prototype.saveEvent = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(event) {
        var response;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.eventLayer.selectEvent();
                this.eventLayer.selectedEvent.start = event.event.eventStart;
                this.eventLayer.selectedEvent.end = event.event.eventEnd;
                this.eventLayer.selectedEvent.title = event.event.eventTitle;
                this.eventLayer.selectedEvent.personId = this.userObj._id;
                this.eventLayer.selectedEvent.notes = event.event.notes;
                this.eventLayer.selectedEvent.scope = event.event.scope ? "u" : "p";
                _context2.next = 9;
                return this.eventLayer.saveEvent();

              case 9:
                response = _context2.sent;

                if (!response.error) {
                  this.events.push(this.eventLayer.selectedEvent);
                } else {
                  this.utils.showNotification("There was a problem saving the event");
                }

              case 11:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function saveEvent(_x) {
        return _ref2.apply(this, arguments);
      }

      return saveEvent;
    }();

    EditCalendar.prototype.delete = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
        var response;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.eventLayer.deleteEvent();

              case 2:
                response = _context3.sent;

                if (!response.error) {
                  this.events.splice(this.eventLayer.editIndex, 1);
                  this.eventLayer.selectEvent();
                }

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function _delete() {
        return _ref3.apply(this, arguments);
      }

      return _delete;
    }();

    return EditCalendar;
  }()) || _class);
});
define('modules/admin/notes/editNotes',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/data/people', '../../../resources/utils/utils', '../../../resources/data/helpTickets', 'flatpickr', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _appConfig, _people, _utils, _helpTickets, _flatpickr, _moment) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.editNotes = undefined;

	var _flatpickr2 = _interopRequireDefault(_flatpickr);

	var _moment2 = _interopRequireDefault(_moment);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var editNotes = exports.editNotes = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _dataTable.DataTable, _appConfig.AppConfig, _people.People, _utils.Utils, _helpTickets.HelpTickets), _dec(_class = function () {
		function editNotes(router, dataTable, config, people, utils, helpTickets) {
			_classCallCheck(this, editNotes);

			this.noteSelected = "No";
			this.showCategoryForm = false;
			this.showDates = true;
			this.spinnerHTML = "";
			this.title = "Notes";
			this.days = [{ number: 0, day: "Sunday" }, { number: 1, day: "Monday" }, { number: 2, day: "uesday" }, { number: 3, day: "Wednesday" }, { number: 4, day: "Thursday" }, { number: 5, day: "Friday" }, { number: 6, day: "Saturday" }];
			this.configT = {
				altFormat: 'F j, Y h:i K',
				enableTime: true
			};
			this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

			this.router = router;
			this.dataTable = dataTable;
			this.dataTable.initialize(this);
			this.config = config;
			this.people = people;
			this.utils = utils;
			this.helpTickets = helpTickets;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		}

		editNotes.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		editNotes.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.people.getNotesArray('?filter=personId|eq|' + this.userObj._id + '&order=dateCreated', true), this.config.getConfig()]);

							case 2:
								responses = _context.sent;

								this.dataTable.updateArray(this.people.notesArray);

							case 4:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		editNotes.prototype.refresh = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
								_context2.next = 3;
								return this.people.getNotesArray('?filter=personId|eq|' + this.userObj._id + '&order=dateCreated', true);

							case 3:
								this.dataTable.updateArray(this.people.notesArray);
								this.spinnerHTML = "";

							case 5:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function refresh() {
				return _ref2.apply(this, arguments);
			}

			return refresh;
		}();

		editNotes.prototype.new = function _new() {
			this.noteSelected = 'Yes';
			this.people.selectNote();
			this.editIndex = undefined;
			this.people.selectedNote.personId = this.userObj._id;
			this.people.selectedNote.category = this.userObj.noteCategories[0];
		};

		editNotes.prototype.edit = function edit(index, el) {
			this.editIndex = this.dataTable.getOriginalIndex(index);
			this.people.selectNote(this.editIndex);

			if (!this.userObj.noteCategories) this.userObj.noteCategories = new Array();

			if (this.selectedRow) this.selectedRow.children().removeClass('info');
			this.selectedRow = $(el.target).closest('tr');
			this.selectedRow.children().addClass('info');
			this.noteSelected = 'Yes';
		};

		editNotes.prototype.save = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
				var response;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								_context3.next = 2;
								return this.people.saveNote();

							case 2:
								response = _context3.sent;

								if (!response.error) {
									this.utils.showNotification('The note was saved');
									this.dataTable.updateArray(this.people.notesArray);
									this.noteSelected = 'No';
								}

							case 4:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function save() {
				return _ref3.apply(this, arguments);
			}

			return save;
		}();

		editNotes.prototype.delete = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(note) {
				var response;
				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								if (note) this.people.selectNoteById(note._id);

								if (!this.people.selectedNote._id) {
									_context4.next = 6;
									break;
								}

								_context4.next = 4;
								return this.people.deleteNote();

							case 4:
								response = _context4.sent;

								if (!response.error) {
									this.utils.showNotification('The note was deleted');
									this.dataTable.updateArray(this.people.notesArray);
									this.noteSelected = 'No';
								}

							case 6:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function _delete(_x) {
				return _ref4.apply(this, arguments);
			}

			return _delete;
		}();

		editNotes.prototype.back = function back() {
			this.noteSelected = 'No';
		};

		editNotes.prototype.cancel = function cancel() {
			this.people.selectNote(this.editIndex);
		};

		editNotes.prototype.openEditCatForm = function openEditCatForm(newOrEdit) {
			if (newOrEdit === 'new') {
				;
				this.categoryDescription = "";
				this.showCategoryForm = true;
				this.editCategoryFlag = false;
			} else {
				this.categoryDescription = this.people.selectedNote.category;
				this.editCategoryIndex = this.userObj.noteCategories.indexOf(this.categoryDescription);
				this.showCategoryForm = true;
				this.editCategoryFlag = true;
			}
		};

		editNotes.prototype.cancelEditCategory = function cancelEditCategory() {
			this.showCategoryForm = false;
		};

		editNotes.prototype.saveCategory = function () {
			var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
				return regeneratorRuntime.wrap(function _callee5$(_context5) {
					while (1) {
						switch (_context5.prev = _context5.next) {
							case 0:
								this.people.selectedPersonFromId(this.userObj._id);
								if (this.editCategoryFlag) {
									this.userObj.noteCategories[this.editCategoryIndex] = this.categoryDescription;
									this.people.selectedPerson.noteCategories[this.editCategoryIndex] = this.categoryDescription;
								} else {
									if (!this.people.selectedPerson.noteCategories) this.people.selectedPerson.noteCategories = this.userObj.noteCategories;
									this.userObj.noteCategories.push(this.categoryDescription);
									this.people.selectedPerson.noteCategories.push(this.categoryDescription);
								}

								_context5.next = 4;
								return this.people.savePerson();

							case 4:
								sessionStorage.setItem('user', JSON.stringify(this.userObj));
								this.showCategoryForm = false;

							case 6:
							case 'end':
								return _context5.stop();
						}
					}
				}, _callee5, this);
			}));

			function saveCategory() {
				return _ref5.apply(this, arguments);
			}

			return saveCategory;
		}();

		editNotes.prototype.deleteCat = function () {
			var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
				return regeneratorRuntime.wrap(function _callee6$(_context6) {
					while (1) {
						switch (_context6.prev = _context6.next) {
							case 0:
								this.people.selectedPersonFromId(this.userObj._id);
								this.userObj.noteCategories.splice(this.userObj.noteCategories.indexOf(this.people.selectedNote.category), 1);
								this.people.selectedPerson.noteCategories.splice(this.people.selectedPerson.noteCategories.indexOf(this.people.selectedNote.category), 1);
								_context6.next = 5;
								return this.people.savePerson();

							case 5:
								sessionStorage.setItem('user', JSON.stringify(this.userObj));
								this.showCategoryForm = false;

							case 7:
							case 'end':
								return _context6.stop();
						}
					}
				}, _callee6, this);
			}));

			function deleteCat() {
				return _ref6.apply(this, arguments);
			}

			return deleteCat;
		}();

		editNotes.prototype.backHelpTicket = function backHelpTicket() {
			this.noteSelected = "No";
		};

		editNotes.prototype.navigateToHelpTicket = function () {
			var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(note) {
				var response;
				return regeneratorRuntime.wrap(function _callee7$(_context7) {
					while (1) {
						switch (_context7.prev = _context7.next) {
							case 0:
								_context7.next = 2;
								return this.helpTickets.getHelpTicket(note.reference);

							case 2:
								response = _context7.sent;

								if (!response.error) {
									this.noteSelected = "helpTicket";
								} else {
									this.utils.showNotification("Help Ticket not found");
								}

							case 4:
							case 'end':
								return _context7.stop();
						}
					}
				}, _callee7, this);
			}));

			function navigateToHelpTicket(_x2) {
				return _ref7.apply(this, arguments);
			}

			return navigateToHelpTicket;
		}();

		editNotes.prototype.openReminderForm = function openReminderForm() {
			this.people.selectedNote.reminderType = "T";
			this.people.selectedNote.dateRemind = new Date();
			this.people.selectedNote.dateEndRemind = new Date();
		};

		editNotes.prototype.typeSelected = function typeSelected() {
			this.showDates = true;
			switch ($(this.reminderType).val()) {
				case "W":
					this.days = [{ number: 0, day: "Sunday" }, { number: 1, day: "Monday" }, { number: 2, day: "Tuesday" }, { number: 3, day: "Wednesday" }, { number: 4, day: "Thursday" }, { number: 5, day: "Friday" }, { number: 6, day: "Saturday" }];
					break;
				case "M":
					this.days = new Array();
					for (var i = 1; i < 31; i++) {
						this.days.push({ number: i, day: i });
					}
					break;
				case "D":
					break;
				case "T":
					this.people.selectedNote.reminderType = "T";
					this.people.selectedNote.dateRemind = new Date();
			}
		};

		return editNotes;
	}()) || _class);
});
define('modules/admin/notes/notes',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Notes = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Notes = exports.Notes = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Notes(router, config) {
            _classCallCheck(this, Notes);

            this.title = "Notes";

            this.router = router;
            this.config = config;
        }

        Notes.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Notes.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Notes.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'editNotes'],
                moduleId: './editNotes',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editNotes',
                title: "Notes"
            }, {
                route: 'editCalendar',
                moduleId: './editCalendar',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editCalendar',
                title: 'Calendar'
            }]);

            this.router = router;
        };

        return Notes;
    }()) || _class);
});
define('modules/admin/site/admin',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/admin', '../../../resources/dialogs/common-dialogs', 'aurelia-event-aggregator', 'moment'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _admin, _commonDialogs, _aureliaEventAggregator, _moment) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.Admin = undefined;

	var _moment2 = _interopRequireDefault(_moment);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var Admin = exports.Admin = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _appConfig.AppConfig, _utils.Utils, _admin.AdminData, _commonDialogs.CommonDialogs, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
		function Admin(dataTable, config, utils, admin, dialog, EventAggregator) {
			_classCallCheck(this, Admin);

			this.screenToShow = "";
			this.spinnerHTML = "";
			this.foreverLog = "";
			this.showFileList = false;
			this.tabs = [{ id: 'Authorization Log', screenToShow: 'auth' }, { id: 'Transaction Log', screenToShow: 'log' }, { id: 'Files', screenToShow: 'files' }, { id: 'Forever Log', screenToShow: 'forl' }, { id: 'Forever Error Log', screenToShow: 'fore' }, { id: "Forever Out Log", screenToShow: 'foro' }];
			this.tabPath = './';

			this.dataTable = dataTable;
			this.dataTable.initialize(this);
			this.config = config;
			this.utils = utils;
			this.admin = admin;
			this.dialog = dialog;
			this.ea = EventAggregator;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		}

		Admin.prototype.activate = function activate() {
			this.firstLoad();
		};

		Admin.prototype.attached = function attached() {
			var _this = this;

			$('[data-toggle="tooltip"]').tooltip();

			this.ea.subscribe('delete-file', function (obj) {
				if (obj.file.file) _this.deleteFile(obj);
			});
		};

		Admin.prototype.refresh = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return this.typeSelected();

							case 2:
								this.fileSelected(this.fileIndex);

							case 3:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function refresh() {
				return _ref.apply(this, arguments);
			}

			return refresh;
		}();

		Admin.prototype.firstLoad = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var response, i;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								this.screenToShow = 'auth';
								_context2.next = 3;
								return this.admin.getLogs(this.screenToShow);

							case 3:
								response = _context2.sent;

								if (!response.error) {
									this.fileList = this.utils.copyArray(response);
									for (i = 0; i < this.fileList.length; i++) {
										this.fileList[i] = this.fileList[i].substring(0, this.fileList[i].indexOf('.log'));
									};
									this.fileList.reverse();
								}

							case 5:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function firstLoad() {
				return _ref2.apply(this, arguments);
			}

			return firstLoad;
		}();

		Admin.prototype.updateButtons = function updateButtons(el) {
			if (el.target.id != "") {
				$("#buttonGroup").children().removeClass('menuButtons');
				$("#buttonGroup").children().css("background-color", "");
				$("#buttonGroup").children().css("color", "");
				$(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
				$(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);
			}
		};

		Admin.prototype.typeSelected = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(el, index, type) {
				var logResponse, i, fileResponse;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								this.updateButtons(el, index);
								this.clearFilters();
								this.screenToShow = type.screenToShow;
								_context3.t0 = this.screenToShow;
								_context3.next = _context3.t0 === 'auth' ? 6 : _context3.t0 === 'log' ? 6 : _context3.t0 === 'forl' ? 6 : _context3.t0 === 'fore' ? 6 : _context3.t0 === 'foro' ? 6 : _context3.t0 === 'files' ? 12 : 18;
								break;

							case 6:
								this.foreverLog = "";
								_context3.next = 9;
								return this.admin.getLogs(this.screenToShow);

							case 9:
								logResponse = _context3.sent;

								if (!logResponse.error) {
									this.fileList = this.utils.copyArray(logResponse);
									for (i = 0; i < this.fileList.length; i++) {
										this.fileList[i] = this.fileList[i].substring(0, this.fileList[i].indexOf('.log'));
									};
									this.fileList.reverse();
								}
								return _context3.abrupt('break', 19);

							case 12:
								_context3.next = 14;
								return this.admin.getFiles();

							case 14:
								fileResponse = _context3.sent;

								if (!fileResponse.error) {
									this.showFileList = true;
									this.uploadedFileList = this.admin.filesList;
								}
								this.fileList = new Array();
								return _context3.abrupt('break', 19);

							case 18:
								this.fileList = new Array();

							case 19:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function typeSelected(_x, _x2, _x3) {
				return _ref3.apply(this, arguments);
			}

			return typeSelected;
		}();

		Admin.prototype.fileSelected = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index) {
				var response, i, array, dateTime, logResponse, _i, j, code, _dateTime, _array, data, foreveLogResponse;

				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								this.clearFilters();
								this.fileIndex = index;
								_context4.t0 = this.screenToShow;
								_context4.next = _context4.t0 === 'auth' ? 5 : _context4.t0 === 'log' ? 10 : _context4.t0 === 'forl' ? 15 : _context4.t0 === 'fore' ? 15 : _context4.t0 === 'foro' ? 15 : 20;
								break;

							case 5:
								_context4.next = 7;
								return this.admin.getAuthLogFile(this.fileList[index] + '.log');

							case 7:
								response = _context4.sent;

								if (!response.error) {
									this.fileContents = new Array();
									for (i = 0; i < this.admin.authLogContents.length; i++) {
										if (this.admin.authLogContents[i].message) {
											array = this.admin.authLogContents[i].message.split('-');
											dateTime = new Date(this.admin.authLogContents[i].timestamp);

											this.fileContents.push({
												event: array[0],
												data: array[1],
												date: (0, _moment2.default)(dateTime).format("YYYY-MM-DD HH:mm:ss")
											});
										}
									};
									this.dataTable.updateArray(this.fileContents);
								}
								return _context4.abrupt('break', 21);

							case 10:
								_context4.next = 12;
								return this.admin.getLogFile(this.fileList[index] + '.log', this.screenToShow);

							case 12:
								logResponse = _context4.sent;

								if (!logResponse.error) {
									this.fileContents = new Array();
									for (_i = 0; _i < this.admin.logContents.length; _i++) {
										if (this.admin.logContents[_i].message) {
											_dateTime = new Date(this.admin.logContents[_i].timestamp);
											_array = this.admin.logContents[_i].message.split('@@');
											data = "";

											if (this.admin.logContents[_i].level !== 'error') {
												j = 0;
												code = "";
											} else {
												j = 1;
												code = _array[0];
											}
											for (; j < _array.length; j++) {
												data = data + _array[j] + '</br>';
											}
											this.fileContents.push({
												event: this.admin.logContents[_i].level,
												code: code,
												data: data.replace(/%/g, ":"),
												date: (0, _moment2.default)(_dateTime).format("YYYY-MM-DD HH:mm:ss")
											});
										}
									};
									this.dataTable.updateArray(this.fileContents);
								}
								return _context4.abrupt('break', 21);

							case 15:
								_context4.next = 17;
								return this.admin.getLogFile(this.fileList[index] + '.log', this.screenToShow);

							case 17:
								foreveLogResponse = _context4.sent;

								if (!foreveLogResponse.error) {
									this.foreverLog = foreveLogResponse;
								}
								return _context4.abrupt('break', 21);

							case 20:
								this.fileList = new Array();

							case 21:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function fileSelected(_x4) {
				return _ref4.apply(this, arguments);
			}

			return fileSelected;
		}();

		Admin.prototype.uploadedFileSelected = function uploadedFileSelected(file) {
			this.selectedCategoryFiles = file;
			this.uploadedFilesArray = file.files;
			this.dataTable.updateArray(this.uploadedFilesArray);
		};

		Admin.prototype.deleteFile = function deleteFile(obj) {
			var _this2 = this;

			var type = obj.file.value.split('-');
			this.deletedFile = obj.file.value;
			var msg = "Are you sure you want to delete the file?  It may affect links in other parts of the system.";

			return this.dialog.showMessage(msg, "Confirm", ['Yes', 'No']).then(function (response) {
				if (!response.wasCancelled) {
					_this2.deleteAFile(obj.file.path);
				}
			});
		};

		Admin.prototype.deleteAFile = function () {
			var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(path) {
				var response;
				return regeneratorRuntime.wrap(function _callee5$(_context5) {
					while (1) {
						switch (_context5.prev = _context5.next) {
							case 0:
								_context5.next = 2;
								return this.admin.deleteFile(path);

							case 2:
								response = _context5.sent;

								if (!response.error) {
									this.sliceDeletedFile();
									this.utils.showNotification('The file was deleted');
								}

							case 4:
							case 'end':
								return _context5.stop();
						}
					}
				}, _callee5, this);
			}));

			function deleteAFile(_x5) {
				return _ref5.apply(this, arguments);
			}

			return deleteAFile;
		}();

		Admin.prototype.sliceDeletedFile = function sliceDeletedFile() {
			console.log(this.uploadedFileList);
			for (var i = 0; i < this.uploadedFileList.children.length; i++) {
				for (var j = 0; j < this.uploadedFileList.children[i].children.length; j++) {
					if (this.uploadedFileList.children[i].children[j].file) {
						if (this.uploadedFileList.children[i].children[j].value === this.deletedFile) {
							this.uploadedFileList.children[i].children.splice(j, 1);
						}
					} else {
						for (var k = 0; k < this.uploadedFileList.children[i].children[j].children.length; k++) {
							if (this.uploadedFileList.children[i].children[j].children[k].value === this.deletedFile) {
								this.uploadedFileList.children[i].children[j].children.splice(k, 1);
							}
						}
					}
				}
			}
			console.log(this.uploadedFileList);
			console.log(this.deletedFile);
		};

		Admin.prototype.deleteFiles = function deleteFiles() {
			var _this3 = this;

			if (!this.filesToDelete || this.filesToDelete <= 0) return;
			var msg = "Are you sure you want to delete " + this.filesToDelete + " log files?  This action cannot be undone.";

			return this.dialog.showMessage(msg, "Confirm", ['Yes', 'No']).then(function (response) {
				if (!response.wasCancelled) {
					_this3.deleteTheFiles();
				}
			});
		};

		Admin.prototype.deleteTheFiles = function () {
			var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
				var deleteFileArray, i, response, _i2, _response;

				return regeneratorRuntime.wrap(function _callee6$(_context6) {
					while (1) {
						switch (_context6.prev = _context6.next) {
							case 0:
								_context6.t0 = this.screenToShow;
								_context6.next = _context6.t0 === 'auth' ? 3 : _context6.t0 === 'log' ? 12 : 21;
								break;

							case 3:
								this.filesToDelete = parseInt(this.filesToDelete) <= this.fileList.length - 1 ? parseInt(this.filesToDelete) : this.fileList.length - 1;

								if (!(this.filesToDelete > 0)) {
									_context6.next = 11;
									break;
								}

								deleteFileArray = new Array();

								for (i = 1; i <= this.filesToDelete; i++) {
									deleteFileArray.push(this.fileList[this.fileList.length - i]);
								}
								_context6.next = 9;
								return this.admin.deleteAuthFiles(deleteFileArray);

							case 9:
								response = _context6.sent;

								if (!response.error) {

									this.utils.showNotification(this.filesToDelete + ' files were deleted');
								} else {
									this.utils.showNotification('There was problem deleting the files');
								}

							case 11:
								return _context6.abrupt('break', 21);

							case 12:
								this.filesToDelete = parseInt(this.filesToDelete) <= this.fileList.length - 1 ? parseInt(this.filesToDelete) : this.fileList.length - 1;

								if (!(this.filesToDelete > 0)) {
									_context6.next = 20;
									break;
								}

								deleteFileArray = new Array();

								for (_i2 = 1; _i2 <= this.filesToDelete; _i2++) {
									deleteFileArray.push(this.fileList[this.fileList.length - _i2]);
								}
								_context6.next = 18;
								return this.admin.deleteLogFiles(deleteFileArray);

							case 18:
								_response = _context6.sent;

								if (!_response.error) {

									this.utils.showNotification(this.filesToDelete + ' files were deleted');
								} else {
									this.utils.showNotification('There was problem deleting the files');
								}

							case 20:
								return _context6.abrupt('break', 21);

							case 21:
							case 'end':
								return _context6.stop();
						}
					}
				}, _callee6, this);
			}));

			function deleteTheFiles() {
				return _ref6.apply(this, arguments);
			}

			return deleteTheFiles;
		}();

		Admin.prototype.clearFilters = function clearFilters() {
			$(this.eventFilter).val('');
			$(this.codeFilter).val('');
			$(this.eventFilter).val('');
		};

		return Admin;
	}()) || _class);
});
define('modules/admin/site/editConfig',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/config', 'jquery'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _config, _jquery) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditConfig = undefined;

    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditConfig = exports.EditConfig = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _config.Config, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function EditConfig(datatable, siteConfig, utils, config) {
            _classCallCheck(this, EditConfig);

            this.parameterSelected = false;
            this.navControl = "configNavButtons";
            this.spinnerHTML = "";
            this.tabCode = "a";
            this.tabs = [{ id: 'Assignments' }, { id: 'Interface' }, { id: 'UCC Information' }];
            this.tabPath = './';

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.siteConfig = siteConfig;
            this.config = config;
        }

        EditConfig.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
        };

        EditConfig.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.siteConfig.getConfigArray(true);

                            case 2:
                                this.dataTable.updateArray(this.siteConfig.configArray);
                                this.visibleCategory = "a";
                                this.filterList();

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditConfig.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.siteConfig.getConfigArray(true);

                            case 3:
                                _context2.next = 5;
                                return this.config.getConfig(true);

                            case 5:
                                this.dataTable.updateArray(this.siteConfig.configArray);
                                this.filterList();
                                this.spinnerHTML = "";

                            case 8:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditConfig.prototype.edit = function edit(parameter) {
            var index = void 0;
            for (var i = 0; i < this.siteConfig.configArray.length; i++) {
                if (this.siteConfig.configArray[i].parameter === parameter.parameter) {
                    index = i;
                }
            }
            this.selectedIndex = index;
            this.originalParameter = this.utils.copyObject(this.siteConfig.configArray[index]);
            this.parameterSelected = true;
        };

        EditConfig.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var response;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                _context3.next = 2;
                                return this.siteConfig.saveAll(this.dataTable.displayArray);

                            case 2:
                                response = _context3.sent;

                                if (!response.error) {
                                    this.refresh();
                                    this.parameterSelected = false;
                                    this.utils.showNotification('The confiugration was saved.');
                                }

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        EditConfig.prototype.back = function back() {
            this.parameterSelected = false;
        };

        EditConfig.prototype.cancel = function cancel() {
            this.siteConfig.configArray[this.selectedIndex] = this.utils.copyObject(this.originalParameter);
        };

        EditConfig.prototype.switchValue = function switchValue(parameter, value) {
            var index = void 0;
            for (var i = 0; i < this.siteConfig.configArray.length; i++) {
                if (this.siteConfig.configArray[i].parameter === parameter.parameter) {
                    index = i;
                }
            }
            this.siteConfig.configArray[index].value = this.siteConfig.configArray[index].value == 'false' || this.siteConfig.configArray[index].value == false;
        };

        EditConfig.prototype.cancel = function cancel() {
            this.siteConfig.configArray;
        };

        EditConfig.prototype.filterList = function filterList() {
            this.dataTable.filterList(this.visibleCategory, { type: 'text', filter: 'category', collectionProperty: 'category', compare: 'match' });
        };

        EditConfig.prototype.changeTab = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(el, index) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                (0, _jquery2.default)("#configListGroup.list-group").children().removeClass('menuButtons');
                                (0, _jquery2.default)("#configListGroup.list-group").children().css("background-color", "");
                                (0, _jquery2.default)("#configListGroup.list-group").children().css("color", "");
                                (0, _jquery2.default)(el.target).parent().css("background-color", this.config.BUTTONS_BACKGROUND);
                                (0, _jquery2.default)(el.target).parent().css("color", this.config.ACTIVE_SUBMENU_COLOR);
                                this.visibleCategory = el.target.id.substring(0, 1).toLowerCase();
                                this.filterList();

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function changeTab(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return changeTab;
        }();

        return EditConfig;
    }()) || _class);
});
define('modules/admin/site/editCurriculum',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/curriculum', '../../../resources/data/products', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'jquery', 'moment'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _curriculum, _products, _commonDialogs, _validation, _jquery, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditCurriculum = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditCurriculum = exports.EditCurriculum = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _curriculum.Curriculum, _products.Products, _appConfig.AppConfig, _utils.Utils, _commonDialogs.CommonDialogs, _validation2.default), _dec(_class = function () {
        function EditCurriculum(datatable, curriculum, products, config, utils, dialog, validation) {
            _classCallCheck(this, EditCurriculum);

            this.curriculumItemSelected = false;
            this.spinnerHTML = "";
            this.newItem = false;
            this.selectedFile = "";
            this.removedFiles = new Array();
            this.filesSelected = false;
            this.newDownload = false;
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.curriculum = curriculum;
            this.products = products;
            this.dialog = dialog;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
        }

        EditCurriculum.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
            this._setupValidation();
        };

        EditCurriculum.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.curriculum.getCurriculumCategoryArray(true, '?order=name'), this.curriculum.getCurriculumArray(true, '?order=sortOrder'), this.products.getProductsArray('?order=name'), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.curriculum.curriculumArray);
                                this.filterList();

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditCurriculum.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.curriculum.getCurriculumArray(true);

                            case 3:
                                this.dataTable.updateArray(this.curriculum.curriculumArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditCurriculum.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.curriculum.selectCurriculum();
                                this.curriculumItemSelected = "";
                                (0, _jquery2.default)("#editTitle").focus();
                                this.curriculumItemSelected = true;
                                this.newItem = true;

                            case 6:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditCurriculum.prototype.edit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = this.dataTable.getOriginalIndex(index);
                                this.curriculum.selectCurriculum(this.editIndex);
                                this.originalCurriculumObject = this.utils.copyObject(this.curriculum.selectedCurriculum);
                                this.newItem = false;

                                (0, _jquery2.default)("#editTitle").focus();

                                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                                this.selectedRow = (0, _jquery2.default)(el.target).closest('tr');
                                this.selectedRow.children().addClass('info');
                                this.curriculumItemSelected = true;

                            case 9:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function edit(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return edit;
        }();

        EditCurriculum.prototype.cancel = function cancel() {
            if (this.editIndex == -1) {
                this.new();
            } else {
                this.curriculum.selectCurriculum(this.editIndex);
            }
        };

        EditCurriculum.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context5.next = 17;
                                    break;
                                }

                                _context5.next = 3;
                                return this.curriculum.save();

                            case 3:
                                serverResponse = _context5.sent;

                                if (serverResponse.error) {
                                    _context5.next = 16;
                                    break;
                                }

                                if (!(this.filesToUpload && this.filesToUpload.length > 0)) {
                                    _context5.next = 13;
                                    break;
                                }

                                this.uploading = true;
                                _context5.next = 9;
                                return this.curriculum.uploadFile(this.filesToUpload);

                            case 9:
                                this.utils.showNotification("The item was saved");
                                this._cleanUp();
                                _context5.next = 15;
                                break;

                            case 13:
                                this.utils.showNotification("The item was saved");
                                this._cleanUp();

                            case 15:
                                this.dataTable.updateArray(this.curriculum.curriculumArray);

                            case 16:
                                this.curriculumItemSelected = false;

                            case 17:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditCurriculum.prototype.changeFiles = function changeFiles() {
            var _this = this;

            this.filesToUpload = new Array();
            for (var i = 0; i < this.files.length; i++) {
                var addFile = true;
                this.filesToUpload.forEach(function (item) {
                    if (item.name === _this.files[i].name) addFile = false;
                });
                if (addFile) this.filesToUpload.push(this.files[i]);
            }
        };

        EditCurriculum.prototype.removeFile = function removeFile(index) {
            this.filesToUpload.splice(index, 1);
        };

        EditCurriculum.prototype.filterList = function filterList() {
            if (this.filter) {
                var thisFilter = this.filter;
                this.filteredProductsArray = this.products.productsArray.filter(function (item) {
                    return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
                });
            } else {
                this.filteredProductsArray = this.products.productsArray;
            }
        };

        EditCurriculum.prototype.selectProduct = function selectProduct(el) {
            (0, _jquery2.default)("#requestProductsLabel").html("Requested Products");
            if (this.curriculum.selectedCurriculum.products.indexOf(el.target.id) === -1) this.curriculum.selectedCurriculum.products.push(el.target.id);
        };

        EditCurriculum.prototype.removeProduct = function removeProduct(el) {
            for (var i = 0; i < this.curriculum.selectedCurriculum.products.length; i++) {
                if (el.target.id === this.curriculum.selectedCurriculum.products[i]) {
                    this.curriculum.selectedCurriculum.products.splice(i, 1);
                }
            }
        };

        EditCurriculum.prototype.delete = function _delete() {
            var _this2 = this;

            return this.dialog.showMessage("Are you sure you want to delete the item?", "Delete Item", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.deleteItem();
                }
            });
        };

        EditCurriculum.prototype.deleteItem = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return this.curriculum.delete();

                            case 2:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.curriculum.curriculumArray);
                                    this.utils.showNotification("The Item was deleted");
                                }
                                this.curriculumItemSelected = false;

                            case 5:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteItem() {
                return _ref6.apply(this, arguments);
            }

            return deleteItem;
        }();

        EditCurriculum.prototype.back = function back() {
            var _this3 = this;

            var changes = this.curriculum.isDirty(this.originalCurriculumObject);
            if (changes.length) {
                return this.dialog.showMessage("The item has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this3.save();
                    } else {
                        _this3._cleanUp();
                    }
                });
            } else {
                this._cleanUp();
            }
        };

        EditCurriculum.prototype.openEditCatForm = function openEditCatForm(newOrEdit) {
            if (newOrEdit === 'new') {
                this.curriculum.selectCurriculumCategory();
                this.categoryDescription = "";
                this.showCategoryForm = true;
                this.editCategoryFlag = false;
            } else {
                this.curriculum.selectCurriculumCategoryByName(this.curriculum.selectedCurriculum.category);
                this.categoryDescription = this.curriculum.selectedCurriculumCategory.description;
                this.showCategoryForm = true;
                this.editCategoryFlag = true;
            }
        };

        EditCurriculum.prototype.saveCategory = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.validation.validate(2)) {
                                    _context7.next = 7;
                                    break;
                                }

                                this.curriculum.selectedCurriculumCategory.description = this.categoryDescription;
                                _context7.next = 4;
                                return this.curriculum.saveCategory();

                            case 4:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The category was saved");
                                }
                                this.showCategoryForm = false;

                            case 7:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveCategory() {
                return _ref7.apply(this, arguments);
            }

            return saveCategory;
        }();

        EditCurriculum.prototype.cancelEditCategory = function cancelEditCategory() {
            this.showCategoryForm = false;
        };

        EditCurriculum.prototype.deleteCat = function deleteCat() {
            var _this4 = this;

            if (this.curriculum.curriculumExist(this.curriculum.selectedCurriculum.category)) {
                return this.dialog.showMessage("You can't delete that category because there are exisitng curricula that use it?", "Can't Delete Category", ['OK']).then(function (response) {});
            } else {
                return this.dialog.showMessage("Are you sure you want to delete the category?", "Delete Category", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this4.deleteCategory();
                    }
                });
            }
        };

        EditCurriculum.prototype.deleteCategory = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                name = this.curriculum.selectedCurriculumCategory.name;
                                _context8.next = 3;
                                return this.curriculum.deleteCategory();

                            case 3:
                                serverResponse = _context8.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("Category " + name + " was deleted");
                                }

                            case 5:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function deleteCategory() {
                return _ref8.apply(this, arguments);
            }

            return deleteCategory;
        }();

        EditCurriculum.prototype._cleanUp = function _cleanUp() {
            this.showCategoryForm = false;
            this.curriculumItemSelected = false;
            this.selectedFiles = undefined;
            this.files = null;
            this.selectedFile = "";
            this.filesToUpload = new Array();
        };

        EditCurriculum.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editTitle", [{ "rule": "required", "message": "Title is required", "value": "curriculum.selectedCurriculum.title" }]);
            this.validation.addRule(1, "itemType", [{ "rule": "required", "message": "Title is required", "value": "curriculum.selectedCurriculum.category" }]);
            this.validation.addRule(2, "editCategoryName", [{ "rule": "required", "message": "Name is required", "value": "curriculum.selectedCurriculumCategory.name" }]);
        };

        return EditCurriculum;
    }()) || _class);
});
define('modules/admin/site/editDownloads',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/downloads', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'aurelia-event-aggregator'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _downloads, _commonDialogs, _validation, _aureliaEventAggregator) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditProducts = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditProducts = exports.EditProducts = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _downloads.Downloads, _utils.Utils, _commonDialogs.CommonDialogs, _validation2.default, _appConfig.AppConfig, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
        function EditProducts(datatable, downloads, utils, dialog, validation, config, eventAggregator) {
            _classCallCheck(this, EditProducts);

            this.downloadItemSelected = false;
            this.editCat = false;
            this.spinnerHTML = "";
            this.selectedFile = "";
            this.removedFiles = new Array();
            this.filesSelected = false;
            this.newDownload = false;

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.downloads = downloads;
            this.dialog = dialog;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setupValidation();
            this.eventAggregator = eventAggregator;
        }

        EditProducts.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
            this.mySubscription = this.eventAggregator.subscribe('upload-progress', function (obj) {
                var elem = document.getElementById("progressBar");
                elem.style.width = obj.progress / obj.total * 100 + '%';
            });
        };

        EditProducts.prototype.detached = function detached() {
            this.mySubscription.dispose();
        };

        EditProducts.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.downloads.getDownloadsArray(true), this.downloads.getDownloadCategoriesArray()]);

                            case 2:
                                responses = _context.sent;


                                this.dataTable.updateArray(this.downloads.appDownloadsArray);
                                this.dataTable.createPageButtons(1);

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditProducts.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.downloads.getDownloadsArray(true);

                            case 3:
                                this.dataTable.updateArray(this.downloads.appDownloadsArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditProducts.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.downloads.selectDownload();
                                this.newDownload = true;

                                $("#editName").focus();
                                this.downloadSelected = true;

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditProducts.prototype.edit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = this.dataTable.getOriginalIndex(index);
                                this.downloads.selectDownload(this.editIndex);
                                this.newDownload = false;
                                this.originalDownload = this.utils.copyObject(this.downloads.selectedDownload);
                                this.downloads.selectedDownload.downCatcode = this.downloads.selectedDownload.downCatcode.toString();

                                this.selectedURL = this.config.DOWNLOAD_FILE_DOWNLOAD_URL + '/' + this.downloads.selectedDownload.downCatcode + '/' + this.downloads.selectedDownload.file.fileName;

                                $("#editName").focus();

                                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                                this.selectedRow = $(el.target).closest('tr');
                                this.selectedRow.children().addClass('info');
                                this.downloadSelected = true;

                            case 11:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function edit(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return edit;
        }();

        EditProducts.prototype.cancel = function cancel() {
            this.filesToUpload = new Array();
            if (this.editIndex == -1) {
                this.new();
            } else {
                this.downloads.selectDownload(this.editIndex);
                this.originalDownload = this.utils.copyObject(this.downloads.selectedDownload);
                this.downloads.selectedDownload.downCatcode = this.downloads.selectedDownload.downCatcode.toString();
            }
        };

        EditProducts.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1, this)) {
                                    _context5.next = 15;
                                    break;
                                }

                                _context5.next = 3;
                                return this.downloads.saveDownload();

                            case 3:
                                serverResponse = _context5.sent;

                                if (serverResponse.error) {
                                    _context5.next = 15;
                                    break;
                                }

                                if (!(this.filesToUpload && this.filesToUpload.length > 0)) {
                                    _context5.next = 13;
                                    break;
                                }

                                this.uploading = true;
                                _context5.next = 9;
                                return this.downloads.uploadFile(this.filesToUpload);

                            case 9:
                                this.utils.showNotification("Download " + this.downloads.selectedDownload.name + " was updated");
                                this._cleanUp();
                                _context5.next = 15;
                                break;

                            case 13:
                                this.utils.showNotification("Download " + this.downloads.selectedDownload.name + " was updated");
                                this._cleanUp();

                            case 15:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditProducts.prototype.deleteFile = function deleteFile() {
            this.downloads.selectedDownload = "";
        };

        EditProducts.prototype.changeFiles = function changeFiles() {
            this.selectedFile = this.files[0].name;
            this.filesSelected = this.downloads.selectedDownload ? true : false;
        };

        EditProducts.prototype.delete = function _delete() {
            var _this = this;

            return this.dialog.showMessage("Are you sure you want to delete the download?", "Delete Download", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this.deleteDownload();
                }
            });
        };

        EditProducts.prototype.deleteDownload = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                name = this.downloads.selectedDownload.name;
                                _context6.next = 3;
                                return this.downloads.deleteDownload();

                            case 3:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.downloads.appDownloadsArray);
                                    this.utils.showNotification("Download ${name} was deleted");
                                }
                                this._cleanUp();

                            case 6:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteDownload() {
                return _ref6.apply(this, arguments);
            }

            return deleteDownload;
        }();

        EditProducts.prototype.back = function back() {
            var _this2 = this;

            var change = this.downloads.isDirty(this.originalDownload);
            if (change.length) {
                return this.dialog.showMessage("The item has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.downloadSelected = false;
                    }
                });
            } else {
                this.downloadSelected = false;
            }
        };

        EditProducts.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editName", [{ "rule": "required", "message": "Name is required", "value": "downloads.selectedDownload.name" }]);
            this.validation.addRule(1, "editType", [{ "rule": "required", "message": "Type is required", "value": "downloads.selectedDownload.downCatcode" }]);
            this.validation.addRule(2, "editCatDescription", [{ "rule": "required", "message": "Description is required", "value": "downloads.selectedCat.description" }, { "rule": "custom", "message": "An category with that description already exists",
                "valFunction": function valFunction(context) {
                    var valid = true;
                    context.downloads.appCatsArray.forEach(function (item) {
                        if (context.downloads.selectedCat.description === item.description) valid = false;
                    });
                    return valid;
                } }]);
        };

        EditProducts.prototype.openEditCatForm = function openEditCatForm(action) {
            this.editCourseFlag = action === 'edit';
            if (this.editCourseFlag) {
                if ($("#editType").val() != "") {
                    this.editCat = true;
                    this.downloads.selectCategoryByCode(this.downloads.selectedDownload.downCatcode);
                }
            } else {
                this.editCat = true;
                this.downloads.selectCategory();
            }
        };

        EditProducts.prototype.cancelEditCat = function cancelEditCat() {
            this.editCat = false;
            this.validation.makeValid($("#editCatDescription"));
        };

        EditProducts.prototype.saveCat = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.validation.validate(2)) {
                                    _context7.next = 6;
                                    break;
                                }

                                _context7.next = 3;
                                return this.downloads.saveCategory();

                            case 3:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("Download category " + this.downloads.selectedCat.description + " was updated");
                                }

                                this.editCat = false;

                            case 6:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function saveCat() {
                return _ref7.apply(this, arguments);
            }

            return saveCat;
        }();

        EditProducts.prototype.deleteCat = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                var _this3 = this;

                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (!this.downloads.documentsExist(this.downloads.selectedDownload.downCatcode)) {
                                    _context8.next = 4;
                                    break;
                                }

                                return _context8.abrupt('return', this.dialog.showMessage("You can't delete that category because there are exisitng downloads that use it?", "Can't Delete Category", ['OK']).whenClosed(function (response) {}));

                            case 4:
                                return _context8.abrupt('return', this.dialog.showMessage("Are you sure you want to delete the category?", "Delete Category", ['Yes', 'No']).whenClosed(function (response) {
                                    if (!response.wasCancelled) {
                                        _this3.deleteCategory();
                                    }
                                }));

                            case 5:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function deleteCat() {
                return _ref8.apply(this, arguments);
            }

            return deleteCat;
        }();

        EditProducts.prototype.deleteCategory = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                name = this.downloads.selectedCat.description;
                                _context9.next = 3;
                                return this.downloads.deleteCat();

                            case 3:
                                serverResponse = _context9.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("Category " + name + " was deleted");
                                }
                                this.editCat = false;

                            case 6:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function deleteCategory() {
                return _ref9.apply(this, arguments);
            }

            return deleteCategory;
        }();

        EditProducts.prototype._cleanUp = function _cleanUp() {
            this.uploading = false;
            this.downloadSelected = false;
            this.selectedFiles = undefined;
            this.files = null;
            this.selectedFile = "";
            this.newDownload = false;
            this.filesToUpload = new Array();
        };

        EditProducts.prototype.changeFiles = function changeFiles() {
            var _this4 = this;

            this.filesToUpload = new Array();
            for (var i = 0; i < this.files.length; i++) {
                var addFile = true;
                this.filesToUpload.forEach(function (item) {
                    if (item.name === _this4.files[i].name) addFile = false;
                });
                if (addFile) this.filesToUpload.push(this.files[i]);
            }
        };

        EditProducts.prototype.removeFile = function removeFile(index) {
            this.filesToUpload.splice(index, 1);
        };

        EditProducts.prototype._cleanUpFilters = function _cleanUpFilters() {
            $("#name").val("");
            $("#file.originalFilename").val("");
            $("#type").val("");
            $("#active").val("");
            $("#helpTicketRelevant").val("");
            this.dataTable.updateArray(this.downloads.appDownloadsArray);
        };

        EditProducts.prototype.customFileNameSorter = function customFileNameSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a["file"]["originalFilename"] < b["file"]["originalFilename"] ? -1 : a["file"]["originalFilename"] > b["file"]["originalFilename"] ? 1 : 0;
                return result * sortDirection;
            });
        };

        EditProducts.prototype.customCatSorter = function customCatSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var aDescription = context.lookupCategory(a["downCatcode"]);
                var bDesription = context.lookupCategory(b["downCatcode"]);
                var result = aDescription < bDesription ? -1 : aDescription > bDesription ? 1 : 0;
                return result * sortDirection;
            });
        };

        EditProducts.prototype.lookupCategory = function lookupCategory(value) {
            for (var i = 0; i < this.downloads.appCatsArray.length; i++) {
                if (this.downloads.appCatsArray[i].downCatcode === value) return this.downloads.appCatsArray[i].description;
            }
            return "";
        };

        return EditProducts;
    }()) || _class);
});
define('modules/admin/site/editHelpTickets',['exports', 'aurelia-framework', '../../../resources/data/helpTickets', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../resources/data/documents'], function (exports, _aureliaFramework, _helpTickets, _validation, _dataTable, _documents) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.EditHelpTickets = undefined;

	var _validation2 = _interopRequireDefault(_validation);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var EditHelpTickets = exports.EditHelpTickets = (_dec = (0, _aureliaFramework.inject)(_helpTickets.HelpTickets, _validation2.default, _dataTable.DataTable, _documents.DocumentsServices), _dec(_class = function () {
		function EditHelpTickets(helpTickets, validation, dataTable, documents) {
			_classCallCheck(this, EditHelpTickets);

			this.htTypeSelected = false;
			this.spinnerHTML = "";
			this.html = "<h2>htmlText</h2>";

			this.helpTickets = helpTickets;
			this.validation = validation;
			this.dataTable = dataTable;
			this.dataTable.initialize(this);
			this.documents = documents;
		}

		EditHelpTickets.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		EditHelpTickets.prototype.canActivate = function canActivate() {
			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		};

		EditHelpTickets.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.helpTickets.getHelpTicketTypes('?order=category', true), this.documents.getDocumentsCategoriesArray()]);

							case 2:
								responses = _context.sent;

								this.dataTable.updateArray(this.helpTickets.helpTicketTypesArray);
								this.filteredDocumentArray = this.documents.docCatsArray;

							case 5:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		EditHelpTickets.prototype.refresh = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
								_context2.next = 3;
								return this.helpTickets.getHelpTicketTypes('?order=category', true);

							case 3:
								_context2.next = 5;
								return _context2.sent;

							case 5:
								this.updateArray();
								this.spinnerHTML = "";

							case 7:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function refresh() {
				return _ref2.apply(this, arguments);
			}

			return refresh;
		}();

		EditHelpTickets.prototype.selectCategory = function selectCategory() {
			if (this.selectedCategory > -1) {
				this.helpTickets.selectHelpTicketTypeCategory(this.selectedCategory);
			}
		};

		EditHelpTickets.prototype.typeSelected = function typeSelected() {
			if (this.selectedSubtype > -1) {
				this.htSubTypeSelected = true;
			} else {
				this.htTypeSelected = false;
			}
		};

		EditHelpTickets.prototype.back = function back() {
			this.htTypeSelected = false;
		};

		EditHelpTickets.prototype.save = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
				var resposne;
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								_context3.next = 2;
								return this.helpTickets.saveHelpTicketType();

							case 2:
								resposne = _context3.sent;

								if (!response.error) {
									this.dataTable.updateArray(this.helpTickets.helpTicketTypesArray);
									this.filteredDocumentArray = this.documents.docCatsArray;
									this.utils.showNotification('The help ticket type was updated');
								}
								this.htTypeSelected = false;

							case 5:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function save() {
				return _ref3.apply(this, arguments);
			}

			return save;
		}();

		EditHelpTickets.prototype.cancel = function cancel() {
			if (this.selectedCategory > -1) {
				this.helpTickets.selectHelpTicketTypeCategory(this.selectedCategory);
			}
		};

		EditHelpTickets.prototype.newCategory = function newCategory() {};

		EditHelpTickets.prototype.newSubtype = function newSubtype() {};

		EditHelpTickets.prototype.addDocument = function addDocument(index) {
			if (!this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents) this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents = new Array();
			for (var i = 0; i < this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents.length; i++) {
				if (this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents[i].fileName == this.documents.selectedDocument.files[index].fileName) {
					return;
				}
			}
			var newDoc = {
				categoryCode: this.documents.selectedDocument.categoryCode,
				categoryName: this.documents.selectedDocument.name,
				fileName: this.documents.selectedDocument.files[index].fileName,
				default: true
			};
			this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents.push(newDoc);
		};

		EditHelpTickets.prototype.chooseDocument = function chooseDocument(index, event) {
			this.documents.selectDocument(index);

			if (this.selectedRow) this.selectedRow.children().removeClass('info');
			this.selectedRow = $(event.target).closest('tr');
			this.selectedRow.children().addClass('info');
			this.showDocumentForm = true;
		};

		EditHelpTickets.prototype.toggleDefault = function toggleDefault(index) {
			this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents[index].default = !this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents[index].default;
		};

		EditHelpTickets.prototype.removeDocument = function removeDocument(index) {
			this.helpTickets.selectedHelpTicketType.subtypes[this.selectedSubtype].documents.splice(index, 1);
		};

		EditHelpTickets.prototype.typeChanged = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index) {
				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								if (!(index >= 0)) {
									_context4.next = 6;
									break;
								}

								this.categoryIndex = index;
								this.documents.selectCategory(index);
								_context4.next = 5;
								return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

							case 5:
								this.showDocuments = true;

							case 6:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function typeChanged(_x) {
				return _ref4.apply(this, arguments);
			}

			return typeChanged;
		}();

		return EditHelpTickets;
	}()) || _class);
});
define('modules/admin/site/editMessages',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/siteInfo', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', 'jquery', 'moment'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _siteInfo, _commonDialogs, _validation, _jquery, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditMessages = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _jquery2 = _interopRequireDefault(_jquery);

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditMessages = exports.EditMessages = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _siteInfo.SiteInfo, _utils.Utils, _commonDialogs.CommonDialogs, _validation2.default, _appConfig.AppConfig), _dec(_class = function () {
        function EditMessages(datatable, siteinfo, utils, dialog, validation, config) {
            _classCallCheck(this, EditMessages);

            this.newsItemSelected = false;
            this.navControl = "newsNavButtons";
            this.spinnerHTML = "";
            this.isInformationItem = false;
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.siteinfo = siteinfo;
            this.dialog = dialog;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setupValidation();
        }

        EditMessages.prototype.attached = function attached() {
            (0, _jquery2.default)('[data-toggle="tooltip"]').tooltip();
        };

        EditMessages.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.siteinfo.getMessageArray('', true), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.siteinfo.messageArray);
                                this.dataTable.createPageButtons(1);

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditMessages.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.siteinfo.getMessageArray('', true);

                            case 3:
                                this.dataTable.updateArray(this.siteinfo.messageArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditMessages.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.siteinfo.selectMessage(this.editIndex);
                                this.siteinfo.selectedMessage.category = this.config.MESSAGE_TYPES[0];
                                (0, _jquery2.default)("#editKey").focus();
                                this.messageItemSelected = true;

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditMessages.prototype.edit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = this.dataTable.getOriginalIndex(index);
                                this.siteinfo.selectMessage(this.editIndex);

                                this.originalMessage = this.utils.copyObject(this.siteinfo.selectedMessage);

                                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                                this.selectedRow = (0, _jquery2.default)(el.target).closest('tr');
                                this.selectedRow.children().addClass('info');
                                this.messageItemSelected = true;

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function edit(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return edit;
        }();

        EditMessages.prototype.cancel = function cancel() {
            if (this.editIndex == -1) {
                this.new();
            } else {
                this.siteinfo.selectMessage(this.editIndex);
            }
        };

        EditMessages.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context5.next = 6;
                                    break;
                                }

                                _context5.next = 3;
                                return this.siteinfo.saveMessageItem();

                            case 3:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.siteinfo.messageArray);
                                    this.utils.showNotification("The message was updated");
                                }
                                this.messageItemSelected = false;

                            case 6:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditMessages.prototype.delete = function _delete() {
            var _this = this;

            return this.dialog.showMessage("Are you sure you want to delete the message?", "Delete Message", ['Yes', 'No']).then(function (response) {
                if (!response.wasCancelled) {
                    _this.deleteMessage();
                }
            });
        };

        EditMessages.prototype.deleteMessage = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return this.siteinfo.deleteMessage();

                            case 2:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.siteinfo.messageArray);
                                    this.utils.showNotification("The message was deleted");
                                }
                                this.messageItemSelected = false;

                            case 5:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteMessage() {
                return _ref6.apply(this, arguments);
            }

            return deleteMessage;
        }();

        EditMessages.prototype.back = function back() {
            var _this2 = this;

            var change = this.siteinfo.isMessageDirty(this.originalMessage);
            if (change.length) {
                return this.dialog.showMessage("The message has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).then(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.messageItemSelected = false;
                    }
                });
            } else {
                this.messageItemSelected = false;
            }
        };

        EditMessages.prototype._cleanUpFilters = function _cleanUpFilters() {
            (0, _jquery2.default)("#key").val("");
        };

        EditMessages.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editKey", [{ "rule": "required", "message": "Title is required", "value": "siteinfo.selectedMessage.key" }]);
        };

        return EditMessages;
    }()) || _class);
});
define('modules/admin/site/editNews',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/siteInfo', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _siteInfo, _commonDialogs, _validation) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditNews = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditNews = exports.EditNews = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _siteInfo.SiteInfo, _utils.Utils, _commonDialogs.CommonDialogs, _validation2.default, _appConfig.AppConfig), _dec(_class = function () {
        function EditNews(datatable, siteinfo, utils, dialog, validation, config) {
            _classCallCheck(this, EditNews);

            this.newsItemSelected = false;
            this.spinnerHTML = "";
            this.isInformationItem = false;
            this.isChecked = true;
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.siteinfo = siteinfo;
            this.dialog = dialog;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setupValidation();

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        EditNews.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        EditNews.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.siteinfo.getInfoArray(true, '?order=createdDate');

                            case 2:
                                _context.next = 4;
                                return this.config.getConfig();

                            case 4:
                                this.dataTable.updateArray(this.siteinfo.siteArray);
                                this.filterOutExpired();

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditNews.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.siteinfo.getInfoArray(true);

                            case 3:
                                this.dataTable.updateArray(this.siteinfo.siteArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditNews.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.siteinfo.selectSiteItem(this.editIndex);
                                $("#editTitle").focus();
                                this.newsItemSelected = true;

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditNews.prototype.edit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = this.dataTable.displayArray[index + parseInt(this.dataTable.startRecord)].baseIndex;
                                this.siteinfo.selectSiteItem(this.editIndex);
                                this.originalSiteInfo = this.utils.copyObject(this.siteinfo.selectedItem);

                                $("#editTitle").focus();

                                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                                this.selectedRow = $(el.target).closest('tr');
                                this.selectedRow.children().addClass('info');
                                this.newsItemSelected = true;

                            case 8:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function edit(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return edit;
        }();

        EditNews.prototype.cancel = function cancel() {
            if (this.editIndex == -1) {
                this.new();
            } else {
                this.siteinfo.selectSiteItem(this.editIndex);
            }
        };

        EditNews.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context5.next = 6;
                                    break;
                                }

                                _context5.next = 3;
                                return this.siteinfo.saveInfoItem();

                            case 3:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.siteinfo.siteArray);
                                    this.utils.showNotification("The item was saved");
                                    if (this.filesToUpload && this.filesToUpload.length > 0) {
                                        this.siteinfo.uploadFile(this.filesToUpload);
                                    }
                                } else {
                                    this.utils.showNotification("There was a problem saving the item");
                                }
                                this._cleanUp();

                            case 6:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditNews.prototype.changeFiles = function changeFiles() {
            this.filesToUpload = new Array();
            this.filesToUpload.push(this.files[0]);
            this.siteinfo.selectedItem.url = this.config.DOWNLOAD_URL + '/site/' + this.filesToUpload[0].name;
            this.siteinfo.selectedItem.file.fileName = this.filesToUpload[0].name;
        };

        EditNews.prototype.removeFile = function removeFile(index) {
            this.filesToUpload.splice(index, 1);
        };

        EditNews.prototype.delete = function _delete() {
            var _this = this;

            return this.dialog.showMessage("Are you sure you want to delete the item?", "Delete Item", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this.deleteItem();
                }
            });
        };

        EditNews.prototype.deleteItem = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                _context6.next = 2;
                                return this.siteinfo.deleteItem();

                            case 2:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.siteinfo.siteArray);
                                    this.utils.showNotification("The Item was deleted");
                                }
                                this.newsItemSelected = false;
                                this.selectedFiles = undefined;
                                this.files = undefined;

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteItem() {
                return _ref6.apply(this, arguments);
            }

            return deleteItem;
        }();

        EditNews.prototype.back = function back() {
            var _this2 = this;

            var changes = this.siteinfo.isDirty(this.originalSiteInfo);
            if (changes.length) {
                return this.dialog.showMessage("The item has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.newsItemSelected = false;
                    }
                });
            } else {
                this.newsItemSelected = false;
            }
        };

        EditNews.prototype._cleanUp = function _cleanUp() {
            this._cleanUpFilters();
            this.filesToUpload = new Array();
            this.selectedFiles = undefined;
            this.files = undefined;
            this.newsItemSelected = false;
        };

        EditNews.prototype._cleanUpFilters = function _cleanUpFilters() {
            this.urlFilterValue = "";
            this.itemTypeFilter = "";
            this.expiredDateFilterValue = "";
            this.createdDateFilterValue = "";
            this.titleFilterValue = "";
            this.urlFilterValue = "";
            this.dataTable.updateArray(this.siteinfo.siteArray);
        };

        EditNews.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editTitle", [{ "rule": "required", "message": "Title is required", "value": "siteinfo.selectedItem.title" }]);
        };

        EditNews.prototype.filterOutExpired = function filterOutExpired() {
            if (this.isChecked) {
                this.dataTable.filterList(new Date(), { type: 'date', filter: "expiredFilter", collectionProperty: 'expiredDate', compare: 'after' });
            } else {
                this.dataTable.updateArray(this.siteinfo.siteArray);
            }
        };

        return EditNews;
    }()) || _class);
});
define('modules/admin/site/site',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Site = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Site = exports.Site = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Site(router, config) {
            _classCallCheck(this, Site);

            this.title = "Site Information";

            this.router = router;
            this.config = config;
        }

        Site.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Site.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Site.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'editNews'],
                moduleId: './editNews',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'editNews',
                title: 'Site Information'
            }, {
                route: 'downloads',
                moduleId: './editDownloads',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'downloads',
                title: 'Downloads'
            }, {
                route: 'messages',
                moduleId: './editMessages',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'messages',
                title: 'Messages'
            }, {
                route: 'config',
                moduleId: './editConfig',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'config',
                title: 'Config'
            }, {
                route: 'curriculum',
                moduleId: './editCurriculum',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'curriculum',
                title: 'Curriculum'
            }, {
                route: 'helptickets',
                moduleId: './editHelpTickets',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'helptickets',
                title: 'Help Tickets'
            }, {
                route: 'admin',
                moduleId: './admin',
                settings: { auth: false, roles: [] },
                nav: true,
                name: 'admin',
                title: 'Server Admin'
            }]);

            this.router = router;
        };

        return Site;
    }()) || _class);
});
define('modules/admin/system/editProduct',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/is4ua', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/validation', '../../../resources/data/documents'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _systems, _products, _is4ua, _commonDialogs, _validation, _documents) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditProducts = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditProducts = exports.EditProducts = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _products.Products, _utils.Utils, _systems.Systems, _is4ua.is4ua, _commonDialogs.CommonDialogs, _validation2.default, _appConfig.AppConfig, _documents.DocumentsServices), _dec(_class = function () {
        function EditProducts(datatable, products, utils, systems, is4ua, dialog, validation, config, documents) {
            _classCallCheck(this, EditProducts);

            this.productSelected = false;
            this.filesSelected = "";
            this.interfaceUpdate = false;
            this.showDocumentForm = false;
            this.showDocuments = false;
            this.removedFiles = new Array();
            this.spinnerHTML = "";
            this.tabs = [{ id: 'Systems' }, { id: 'Assignments' }, { id: 'is4ua' }, { id: 'Documents' }, { id: 'Notes' }, { id: 'Description' }];
            this.tabPath = './';
            this.toolbar = [['style', ['style', 'bold', 'italic', 'underline', 'clear']], ['color', ['color']], ['font', ['strikethrough', 'superscript', 'subscript']], ['layout', ['ul', 'ol', 'paragraph']], ['insert', ['link', 'table', 'hello']], ['misc', ['undo', 'redo', 'fullscreen', 'codeview']]];

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.products = products;
            this.systems = systems;
            this.is4ua = is4ua;
            this.dialog = dialog;
            this.config = config;
            this.documents = documents;
            this.validation = validation;
            this.validation.initialize(this);
            this._setupValidation();

            this.systemChanges = new Array();
        }

        EditProducts.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        EditProducts.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.products.getProductsArray('?order=name', true), this.systems.getSystemsArray('?order=sid', true), this.is4ua.loadIs4ua(), this.documents.getDocumentsCategoriesArray(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.products.productsArray);
                                this.filteredDocumentArray = this.documents.docCatsArray;
                                this.dataTable.createPageButtons(1);

                            case 6:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditProducts.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.products.getProductsArray('?order=name', true);

                            case 3:
                                this.dataTable.updateArray(this.products.productsArray);
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditProducts.prototype.new = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.editIndex = -1;
                                this.products.selectProduct();
                                this.editSystemsString = "";
                                this.newProduct = true;
                                this.selectedProductSystems = new Array();
                                if (this.files && this.files.length !== 0) {
                                    $("#uploadFiles").wrap('<form>').closest('form').get(0).reset();
                                    $("#uploadFiles").unwrap();
                                    this.files = [];
                                }
                                $("#editClientKey").focus();
                                this.productSelected = true;

                            case 8:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function _new() {
                return _ref3.apply(this, arguments);
            }

            return _new;
        }();

        EditProducts.prototype.edit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index, el) {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.editIndex = this.dataTable.getOriginalIndex(index);
                                this.products.selectProduct(this.editIndex);
                                this.newProduct = false;

                                if (!this.products.selectedProduct.systems) this.products.selectedProduct.systems = new Array();
                                if (!this.products.selectedProduct.clientInfo) this.products.selectedProduct.clientInfo = "";
                                if (!this.products.selectedProduct.productInfo) this.products.selectedProduct.productInfo = "";

                                this.camelizedProductName = this.utils.toCamelCase(this.products.selectedProduct.name);

                                $("#editClientKey").focus();

                                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                                this.selectedRow = $(el.target).closest('tr');
                                this.selectedRow.children().addClass('info');
                                this.productSelected = true;

                            case 12:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function edit(_x, _x2) {
                return _ref4.apply(this, arguments);
            }

            return edit;
        }();

        EditProducts.prototype.cancel = function cancel() {
            this.products.selectProduct(this.editIndex);
        };

        EditProducts.prototype.save = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var serverResponse, response;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context5.next = 16;
                                    break;
                                }

                                _context5.next = 3;
                                return this.products.saveProduct();

                            case 3:
                                serverResponse = _context5.sent;

                                if (serverResponse.error) {
                                    _context5.next = 14;
                                    break;
                                }

                                if (!(this.systemChanges.length > 0)) {
                                    _context5.next = 10;
                                    break;
                                }

                                if (this.newProduct) {
                                    this.systemChanges.forEach(function (item) {
                                        item.productId = serverResponse._id;
                                    });
                                }
                                _context5.next = 9;
                                return this.systems.saveProductChanges(this.systemChanges);

                            case 9:
                                response = _context5.sent;

                            case 10:
                                this.dataTable.updateArray(this.products.productsArray);
                                this.utils.showNotification("Product " + serverResponse.name + " was updated");
                                _context5.next = 15;
                                break;

                            case 14:
                                this.utils.showNotification("There was a problem updating the product");

                            case 15:
                                this._cleanUp();

                            case 16:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function save() {
                return _ref5.apply(this, arguments);
            }

            return save;
        }();

        EditProducts.prototype.delete = function _delete() {
            var _this = this;

            return this.dialog.showMessage("Are you sure you want to delete the product?", "Delete Product", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this.deleteProduct();
                }
            });
        };

        EditProducts.prototype.deleteProduct = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                name = this.products.selectedProduct.name;
                                _context6.next = 3;
                                return this.products.deleteProduct();

                            case 3:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.products.productsArray);
                                    this.utils.showNotification("Product " + name + " was deleted");
                                }
                                this._cleanUp();
                                this.productSelected = false;

                            case 7:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteProduct() {
                return _ref6.apply(this, arguments);
            }

            return deleteProduct;
        }();

        EditProducts.prototype._cleanUp = function _cleanUp() {
            this.newProduct = false;
            this.productSelected = false;
            this.systemChanges = new Array();
            this._cleanUpFilters();
            this.validation.makeAllValid(1);
        };

        EditProducts.prototype._cleanUpFilters = function _cleanUpFilters() {
            this.nameFilterValue = "";
            this.systemFilterValue = "";
            this.activeFilter = "";
            this.sapNameFilterValue = "";

            this.dataTable.updateArray(this.products.productsArray);
        };

        EditProducts.prototype.back = function back() {
            var _this2 = this;

            if (this.products.isDirty().length) {
                return this.dialog.showMessage("The product has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this2.save();
                    } else {
                        _this2.productSelected = false;
                        _this2._cleanUp();
                    }
                });
            } else {
                this.productSelected = false;
                this._cleanUp();
            }
        };

        EditProducts.prototype.addDocument = function addDocument(index) {
            if (!this.products.selectedProduct.documents) this.products.selectedProduct.documents = new Array();
            for (var i = 0; i < this.products.selectedProduct.documents.length; i++) {
                if (this.products.selectedProduct.documents[i].fileName == this.documents.selectedDocument.files[index].fileName) {
                    return;
                }
            }
            var newDoc = {
                categoryCode: this.documents.selectedDocument.categoryCode,
                categoryName: this.documents.selectedDocument.name,
                fileName: this.documents.selectedDocument.files[index].fileName,
                default: true
            };
            this.products.selectedProduct.documents.push(newDoc);
        };

        EditProducts.prototype.chooseDocument = function chooseDocument(index, event) {
            this.documents.selectDocument(index);

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(event.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.showDocumentForm = true;
        };

        EditProducts.prototype.toggleDefault = function toggleDefault(index) {
            this.products.selectedProduct.documents[index].default = !this.products.selectedProduct.documents[index].default;
        };

        EditProducts.prototype.removeDocument = function removeDocument(index) {
            this.products.selectedProduct.documents.splice(index, 1);
        };

        EditProducts.prototype.typeChanged = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(index) {
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!(index >= 0)) {
                                    _context7.next = 7;
                                    break;
                                }

                                this.categoryIndex = index;
                                this.documents.selectCategory(index);
                                _context7.next = 5;
                                return this.documents.getDocumentsArray(true, '?filter=categoryCode|eq|' + this.documents.selectedCat.code);

                            case 5:
                                this.showDocuments = true;
                                this.showDocumentForm = false;

                            case 7:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function typeChanged(_x3) {
                return _ref7.apply(this, arguments);
            }

            return typeChanged;
        }();

        EditProducts.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editName", [{ "rule": "required", "message": "Product name is required", "value": "products.selectedProduct.name" }, { "rule": "custom", "message": "A product with that name already exists",
                "valFunction": function valFunction(context) {
                    var found = false;
                    for (var i = 0; i < context.products.productsArray.length; i++) {
                        if (context.products.productsArray[i].name.toUpperCase() === context.products.selectedProduct.name.toUpperCase()) {
                            if (context.products.selectedProduct._id && context.products.selectedProduct._id != context.products.productsArray[i]._id) {
                                found = true;
                            } else if (!context.products.selectedProduct._id) {
                                found = true;
                            }
                        }
                    }
                    return !found;
                } }]);
        };

        EditProducts.prototype.changeTab = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(el, index) {
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                $("#productListGroup.list-group").children().removeClass('menuButtons');
                                $("#productListGroup.list-group").children().css("background-color", "");
                                $("#productListGroup.list-group").children().css("color", "");
                                $(el.target).parent().css("background-color", this.config.BUTTONS_BACKGROUND);
                                $(el.target).parent().css("color", this.config.ACTIVE_SUBMENU_COLOR);
                                $(".in").removeClass('active').removeClass('in');
                                $("#" + el.target.id + "Tab").addClass('in').addClass('active');

                            case 7:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function changeTab(_x4, _x5) {
                return _ref8.apply(this, arguments);
            }

            return changeTab;
        }();

        EditProducts.prototype.systemCustomFilter = function systemCustomFilter(value, item, context) {
            for (var i = 0; i < item.systems.length; i++) {
                if (item.systems[i].sid.toUpperCase().indexOf(value.toUpperCase()) > -1) return true;
            }
            return false;
        };

        return EditProducts;
    }()) || _class);
});
define('modules/admin/system/editSession',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/utils', '../../../resources/data/sessions', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/data/config', '../../../resources/dialogs/common-dialogs'], function (exports, _aureliaFramework, _aureliaRouter, _utils, _sessions, _validation, _dataTable, _appConfig, _config, _commonDialogs) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditSessions = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditSessions = exports.EditSessions = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _sessions.Sessions, _validation2.default, _utils.Utils, _dataTable.DataTable, _appConfig.AppConfig, _config.Config, _commonDialogs.CommonDialogs), _dec(_class = function () {
        function EditSessions(router, sessions, validation, utils, datatable, config, siteConfig, dialog) {
            _classCallCheck(this, EditSessions);

            this.navControl = "sessionNavButtons";
            this.showScreen = 'sessionTable';
            this.spinnerHTML = "";
            this.isChecked = true;

            this.router = router;
            this.sessions = sessions;
            this.utils = utils;
            this.validation = validation;
            this.validation.initialize(this);
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.dialog = dialog;
            this.siteConfig = siteConfig;

            this._setupValidation();
        }

        EditSessions.prototype.attached = function attached() {
            this.toolTips();
        };

        EditSessions.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.sessions.getSessionsArray('?order=startDate:DSC', true), this.config.getConfig(), this.config.getSessions()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.sessions.sessionsArray, 'startDate', -1);
                                this.filterOutClosed();

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditSessions.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.sessions.getSessionsArray('?order=startDate', true);

                            case 3:
                                this.dataTable.updateArray(this.sessions.sessionsArray, 'startDate', -1);
                                this.filterOutClosed();
                                this.spinnerHTML = "";

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditSessions.prototype.new = function _new() {
            this.sessions.selectSession();
            this.showScreen = 'editSession';
            this.sessionSelected = true;
            this.editSystem = true;
            this.newSession = true;
            $("#editSession").focus();
            if (this.selectedRow) this.selectedRow.children().removeClass('rowSelected');
        };

        EditSessions.prototype.edit = function edit(index, el) {
            this.showScreen = 'editSession';

            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.sessions.selectSession(this.editIndex);

            this.editSession = true;
            $("#editSession").focus();

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        EditSessions.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context3.next = 5;
                                    break;
                                }

                                _context3.next = 3;
                                return this.sessions.saveSession();

                            case 3:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.sessions.sessionsArray, 'startDate', -1);
                                    this.utils.showNotification("Session " + this.sessions.selectedSession.session + " " + this.sessions.selectedSession.year + " was updated");
                                    this.showScreen = 'sessionTable';
                                    this.toolTips();
                                }

                            case 5:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        EditSessions.prototype.refreshConfig = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                _context4.next = 2;
                                return this.config.getSessions(true);

                            case 2:
                                this.editSessionConfig();

                            case 3:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function refreshConfig() {
                return _ref4.apply(this, arguments);
            }

            return refreshConfig;
        }();

        EditSessions.prototype.editSessionConfig = function editSessionConfig() {
            var _this = this;

            this.editSessionConfigArray = new Array();
            this.config.SESSION_PARAMS.forEach(function (item) {
                _this.editSessionConfigArray.push(_this.utils.copyObject(item));
            });
            this.showScreen = 'editConfig';
        };

        EditSessions.prototype.saveConfig = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var _this2 = this;

                var serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.editSessionConfigArray) {
                                    _context5.next = 5;
                                    break;
                                }

                                _context5.next = 3;
                                return this.siteConfig.saveSessions(this.editSessionConfigArray);

                            case 3:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.editSessionConfigArray.forEach(function (item, index) {
                                        _this2.config.SESSION_PARAMS[index] = item;
                                    });
                                    this.utils.showNotification("Session configuration updated");
                                    this.showScreen = 'sessionTable';
                                }

                            case 5:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function saveConfig() {
                return _ref5.apply(this, arguments);
            }

            return saveConfig;
        }();

        EditSessions.prototype.updateStatus = function updateStatus(index, session, el) {
            if (session.sessionStatus === "Closed") return;

            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.sessions.selectSession(this.editIndex);

            switch (session.sessionStatus) {
                case "Next":
                    this.editStatus = "Requests";
                    break;
                case "Requests":
                    this.editStatus = "Active";
                    break;
                case "Active":
                    this.editStatus = "Closed";
                    break;
            }
            this.sessions.selectedSession.sessionStatus = this.editStatus;
            this.save();
        };

        EditSessions.prototype.filterOutClosed = function filterOutClosed() {
            if (this.isChecked) {
                this.dataTable.filterList("Closed", { type: 'text', filter: 'sessionStatus', collectionProperty: 'sessionStatus', compare: 'not-match' });
            } else {
                this.dataTable.updateArray(this.sessions.sessionsArray, 'startDate', -1);
            }
            this.toolTips();
        };

        EditSessions.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editName", { "rule": "required", "message": "Session name is required", "value": "sessions.selectedSession.session" });
            this.validation.addRule(1, "editYear", { "rule": "required", "message": "Session year is required", "value": "sessions.selectedSession.year" });
            this.validation.addRule(1, "editStartDate", { "rule": "required", "message": "Session start date is required", "value": "sessions.selectedSession.startDate" });
            this.validation.addRule(1, "editEndDate", { "rule": "required", "message": "Session end date is required", "value": "sessions.selectedSession.endDate" });
            this.validation.addRule(1, "editRequestsOpenDate", { "rule": "required", "message": "Session requests open date is required", "value": "sessions.selectedSession.requestsOpenDate" });
        };

        EditSessions.prototype.cancel = function cancel() {
            this.sessions.selectSession(this.editIndex);
        };

        EditSessions.prototype.cancelConfig = function cancelConfig() {
            var _this3 = this;

            this.editSessionConfigArray = new Array();
            this.config.SESSION_PARAMS.forEach(function (item) {
                _this3.editSessionConfigArray.push(_this3.utils.copyObject(item));
            });
        };

        EditSessions.prototype.backConfig = function backConfig() {
            this.showScreen = 'sessionTable';
        };

        EditSessions.prototype.back = function back() {
            var _this4 = this;

            if (this.sessions.isDirty().length) {
                return this.dialog.showMessage("The session has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this4.save();
                    } else {
                        _this4.showScreen = 'sessionTable';
                    }
                });
            } else {
                this.showScreen = 'sessionTable';
            }
        };

        EditSessions.prototype.toolTips = function toolTips() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        return EditSessions;
    }()) || _class);
});
define('modules/admin/system/editSystem',['exports', 'aurelia-framework', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/utils', '../../../resources/data/systems', '../../../resources/data/sessions', '../../../resources/data/products', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../config/appConfig', 'moment'], function (exports, _aureliaFramework, _commonDialogs, _utils, _systems, _sessions, _products, _validation, _dataTable, _appConfig, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditSystem = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditSystem = exports.EditSystem = (_dec = (0, _aureliaFramework.inject)(_systems.Systems, _products.Products, _validation2.default, _utils.Utils, _dataTable.DataTable, _appConfig.AppConfig, _commonDialogs.CommonDialogs, _sessions.Sessions), _dec(_class = function () {
        function EditSystem(systems, products, validation, utils, datatable, config, dialog, sessions) {
            _classCallCheck(this, EditSystem);

            this.systemSelected = false;
            this.editClients = false;
            this.spinnerHTML = "";
            this.selectedProduct = "";

            this.systems = systems;
            this.products = products;
            this.utils = utils;
            this.validation = validation;
            this.validation.initialize(this);
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.dialog = dialog;
            this.sessions = sessions;
            this._setupValidation();
        }

        EditSystem.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        EditSystem.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.systems.getSystemsArray('?order=sid'), this.products.getProductsArray('?filter=active|eq|true&order=name'), this.sessions.getSessionsArray(), this.config.getConfig(), this.config.getSessions()]);

                            case 2:
                                responses = _context.sent;

                                this.dataTable.updateArray(this.systems.systemsArray);
                                this.clientInterval = this.config.CLIENT_INTERVAL;

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        EditSystem.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.systems.getSystemsArray('?order=sid', true);

                            case 3:
                                this.dataTable.updateArray(this.systems.systemsArray);
                                this.spinnerHTML = "";
                                this._cleanUpFilters();

                            case 6:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        EditSystem.prototype.new = function _new() {
            this.editIndex = -1;
            this.displayIndex = -1;
            this.systems.selectSystem();
            this.editStatus = true;

            $("#editSid").focus();
            this.systemSelected = true;
            this.newSystem = true;
        };

        EditSystem.prototype.edit = function edit(index, el) {
            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.systems.selectSystem(this.editIndex);
            this.editSystem = true;
            this.systemSelected = true;
            this.newSystem = false;
            $("#editSid").focus();

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.showTable = false;
            setTimeout(function () {
                $('[data-toggle="tooltip"]').tooltip();
            }, 500);
        };

        EditSystem.prototype.save = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context3.next = 7;
                                    break;
                                }

                                this.systems.selectedSystem.sid = this.systems.selectedSystem.sid.toUpperCase();
                                this.systems.selectedSystem.server = this.systems.selectedSystem.server.toUpperCase();
                                _context3.next = 5;
                                return this.systems.saveSystem();

                            case 5:
                                serverResponse = _context3.sent;

                                if (!serverResponse.error) {
                                    if (this.saveProduct) this.products.saveProduct();
                                    this.utils.showNotification("System " + this.systems.selectedSystem.sid + " was updated");
                                    this._cleanUp();
                                }

                            case 7:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function save() {
                return _ref3.apply(this, arguments);
            }

            return save;
        }();

        EditSystem.prototype.saveBackups = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(system) {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                this.systems.setSelectedSystem(system);
                                _context4.next = 3;
                                return this.systems.saveSystem();

                            case 3:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("System " + this.systems.selectedSystem.sid + " was updated");
                                }

                            case 5:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function saveBackups(_x) {
                return _ref4.apply(this, arguments);
            }

            return saveBackups;
        }();

        EditSystem.prototype.toggleSandBox = function toggleSandBox(index) {
            if (this.systems.selectedSystem.clients[index].assignments.length > 0) {
                this.utils.showNotification("The client has assignments. You must refresh it before changing it's status");
            } else {
                this.systems.selectedSystem.clients[index].clientStatus = this.systems.selectedSystem.clients[index].clientStatus == this.config.SANDBOX_CLIENT_CODE ? this.config.UNASSIGNED_CLIENT_CODE : this.config.SANDBOX_CLIENT_CODE;
            }
        };

        EditSystem.prototype.refreshClient = function refreshClient(index) {
            var _this = this;

            return this.dialog.showMessage("This will return the client to the initial state.  You must save the system for this to take effect. Do you want to continue?", "Refresh Clients", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this.systems.selectedSystem.clients[index].clientStatus = _this.config.UNASSIGNED_REQUEST_CODE;
                    _this.systems.selectedSystem.clients[index].assignments = new Array();
                    _this.systems.selectedSystem.clients[index].idsAvailable = _this.systems.selectedSystem.idsAvailable;
                }
            });
        };

        EditSystem.prototype.delete = function _delete() {
            var _this2 = this;

            return this.dialog.showMessage("Are you sure you want to delete the system?", "Delete System", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this2.deleteSystem();
                }
            });
        };

        EditSystem.prototype.deleteSystem = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
                var name, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                name = this.systems.selectedSystem.sid;
                                _context5.next = 3;
                                return this.systems.deleteSystem();

                            case 3:
                                serverResponse = _context5.sent;

                                if (!serverResponse.error) {
                                    this.dataTable.updateArray(this.systems.systemsArray);
                                    this.utils.showNotification("System " + name + " was deleted");
                                }
                                this._cleanUp();
                                this.systemSelected = false;

                            case 7:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function deleteSystem() {
                return _ref5.apply(this, arguments);
            }

            return deleteSystem;
        }();

        EditSystem.prototype.editClientsButton = function editClientsButton() {
            this.editClients = !this.editClients;
        };

        EditSystem.prototype.generateClients = function generateClients() {
            var _this3 = this;

            if (this.selectedProduct === "") {
                return this.dialog.showMessage("You must select a product.", "Select a Product", ['OK']).whenClosed(function (response) {
                    return;
                });
            }
            if (!this.editFirstClient || !this.editLastClient || this.editFirstClient.length != 3 || this.editLastClient.length != 3) {
                return this.dialog.showMessage("Clients must have three digits", "Invalid Client Number", ['OK']).whenClosed(function (response) {
                    return;
                });
            }
            var start = parseInt(this.editFirstClient);
            var end = parseInt(this.editLastClient);
            if (end < start) {
                return this.dialog.showMessage("The first client number must be less than the last client number.", "Invalid Client Number", ['OK']).whenClosed(function (response) {
                    return;
                });
            }
            this.saveProduct = true;
            var result = this.systems.generateClients(start, end, this.editClientStatus, this.selectedProduct, parseInt(this.clientInterval));
            if (result.error) {
                this.utils.showNotification(result.error);
            } else {
                this.products.selectedProductFromId(this.selectedProduct);
                if (this.products.selectedProduct.systems) {
                    this.products.selectedProduct.systems.forEach(function (item) {
                        if (item.sid === _this3.systems.selectedSystem.sid) _this3.saveProduct = false;
                    });
                } else {
                    this.saveProduct = true;
                }
                if (this.saveProduct) {
                    this.products.selectedProduct.systems.push({ systemId: this.systems.selectedSystem._id, sid: this.systems.selectedSystem.sid });
                }
            }
        };

        EditSystem.prototype.refreshClients = function refreshClients() {
            var _this4 = this;

            if (!this.systems.selectedSystem.clients || this.systems.selectedSystem.clients.length === 0) {
                return this.dialog.showMessage("The system doesn't have clients to refresh", "No Clients", ['OK']).whenClosed(function (response) {
                    return;
                });
            }
            return this.dialog.showMessage("This will return clients to an initial state.  You must save the system for this to take effect. Do you want to continue?", "Refresh Clients", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this4.systems.refreshClients(_this4.config.UNASSIGNED_REQUEST_CODE);
                }
            });
        };

        EditSystem.prototype.deleteClients = function deleteClients() {
            var _this5 = this;

            return this.dialog.showMessage("Are you sure about this, this action cannot be undone?", "Delete Clients", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this5.deleteAllClients();
                }
            });
        };

        EditSystem.prototype.deleteAllClients = function deleteAllClients() {
            this.systems.deleteAllClients();
            this.utils.showNotification("You must save the system to complete the deletion");
        };

        EditSystem.prototype.editAClient = function editAClient(client, index, el) {
            this.selectedClientIndex = index;
            this.selectedClient = client;
            this.systems.selectClient(index);

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
            this.interfaceUpdate = true;
        };

        EditSystem.prototype.deleteClient = function deleteClient(index) {
            var _this6 = this;

            if (!this._okToDeleteClient(this.systems.selectedSystem.clients[index])) {
                this.utils.showNotification("The client either has assignments or the status doesn't allow deletion. You must refresh it before deleting it.");
            } else {
                return this.dialog.showMessage("Are you sure about this, this action cannot be undone?", "Delete Clients", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this6.systems.selectedSystem.clients.splice(index, 1);
                    }
                });
            }
        };

        EditSystem.prototype._okToDeleteClient = function _okToDeleteClient(client) {
            if (client.assignments.length > 0) return false;
            var status = client.clientStatus;
            for (var i = 0; i < this.config.CLIENT_STATUSES.length; i++) {
                if (this.config.CLIENT_STATUSES[i].code == status && this.config.CLIENT_STATUSES[i].OKToDelete) {
                    return true;
                }
            }
            return false;
        };

        EditSystem.prototype.deleteC = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                this.systems.deleteClient();
                                this.utils.showNotification("The client was deleted but you must save the system to complete the deltion");

                            case 2:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteC() {
                return _ref6.apply(this, arguments);
            }

            return deleteC;
        }();

        EditSystem.prototype.selectClient = function selectClient(client, index) {
            this.selectedClient = this.utils.copyObject(client);
            this.clientSelected = true;
            this.selectedClientIndex = index;
        };

        EditSystem.prototype.backClient = function backClient() {
            this.clientSelected = false;
        };

        EditSystem.prototype.saveClient = function saveClient() {
            this.systems.selectedSystem.clients[this.selectedClientIndex] = this.selectedClient;
            this.clientSelected = false;
            this.utils.showNotification("You must save the system for any changes to take effect.");
        };

        EditSystem.prototype._cleanUp = function _cleanUp() {
            this.systemSelected = false;
            this.newSystem = false;
            this.clientSelected = false;
            this.editClients = false;
            this.validation.makeAllValid(1);
        };

        EditSystem.prototype._cleanUpFilters = function _cleanUpFilters() {
            this.sidFilterValue = "";
            this.descriptionFilterValue = "";
            this.serverFilterValue = "";
            this.activeFilter = "";
            this.dataTable.updateArray(this.systems.systemsArray);
        };

        EditSystem.prototype.back = function back() {
            var _this7 = this;

            if (this.systems.isDirty().length) {
                return this.dialog.showMessage("The system has been changed. Do you want to save your changes?", "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
                    if (!response.wasCancelled) {
                        _this7.save();
                    } else {
                        _this7._cleanUp();
                    }
                });
            } else {
                this._cleanUp();
            }
        };

        EditSystem.prototype._setupValidation = function _setupValidation() {
            this.validation.addRule(1, "editSid", [{ "rule": "required", "message": "SID is required", "value": "systems.selectedSystem.sid" }, { "rule": "custom", "message": "A system with that SID already exists",
                "valFunction": function valFunction(context) {
                    if (!context.systems.selectedSystem._id) {
                        var found = false;
                        for (var i = 0; i < context.systems.systemsArray.length; i++) {
                            if (context.systems.systemsArray[i].sid.toUpperCase() === context.systems.selectedSystem.sid.toUpperCase()) {
                                if (context.systems.selectedSystem._id && context.systems.selectedSystem._id != context.systems.systemsArray[i]._id) {
                                    found = true;
                                } else if (!context.systems.selectedSystem._id) {
                                    found = true;
                                }
                            }
                        }
                        return !found;
                    }
                    return true;
                } }], true);
            this.validation.addRule(1, "editDesc", [{ "rule": "required", "message": "Description is required", "value": "systems.selectedSystem.description" }]);
            this.validation.addRule(1, "editServer", [{ "rule": "required", "message": "Server is required", "value": "systems.selectedSystem.server" }, { "rule": "custom", "message": "A system with that server already exists",
                "valFunction": function valFunction(context) {
                    if (!context.systems.selectedSystem._id) {
                        var found = false;
                        for (var i = 0; i < context.systems.systemsArray.length; i++) {
                            if (context.systems.systemsArray[i].server.toUpperCase() === context.systems.selectedSystem.server.toUpperCase()) {
                                if (context.systems.selectedSystem._id && context.systems.selectedSystem._id != context.systems.systemsArray[i]._id) {
                                    found = true;
                                } else if (!context.systems.selectedSystem._id) {
                                    found = true;
                                }
                            }
                        }
                        return !found;
                    }
                    return true;
                } }]);
            this.validation.addRule(1, "editInst", [{ "rule": "required", "message": "Instance is required", "value": "systems.selectedSystem.instance" }]);
        };

        return EditSystem;
    }()) || _class);
});
define('modules/admin/system/system',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.EditSystem = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var EditSystem = exports.EditSystem = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function EditSystem(router, config) {
            _classCallCheck(this, EditSystem);

            this.title = "System";

            this.router = router;
            this.config = config;
        }

        EditSystem.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        EditSystem.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        EditSystem.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'editSessions'],
                moduleId: './editSession',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editSessions',
                title: 'Sessions'
            }, {
                route: 'editSystems',
                moduleId: './editSystem',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editSystems',
                title: 'Systems'
            }, {
                route: 'editProduct',
                moduleId: './editProduct',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'editProduct',
                title: 'Products'
            }]);

            this.router = router;
        };

        return EditSystem;
    }()) || _class);
});
define('modules/tech/requests/assignments',['exports', 'aurelia-framework', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/dataTable', '../../../resources/data/sessions', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/clientRequests', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', 'moment'], function (exports, _aureliaFramework, _commonDialogs, _dataTable, _sessions, _systems, _products, _clientRequests, _appConfig, _utils, _people, _validation, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Assignments = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Assignments = exports.Assignments = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig, _validation2.default, _commonDialogs.CommonDialogs, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _systems.Systems, _people.People, _clientRequests.ClientRequests), _dec(_class = function () {
        function Assignments(config, validation, dialog, datatable, utils, sessions, products, systems, people, requests) {
            _classCallCheck(this, Assignments);

            this.requestSelected = 'table';
            this.title = "Tech Staff Client Assignments";
            this.spinnerHTML = "";
            this.isCheckedAssigned = true;

            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setUpValidation();
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.sessions = sessions;
            this.products = products;
            this.clientRequests = requests;
            this.systems = systems;
            this.people = people;
            this.dialog = dialog;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        Assignments.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        Assignments.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses, uccRoles;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.sessions.getSessionsArray('?filter=[in]sessionStatus[list]Active:Requests&order=startDate', true), this.products.getProductsArray('?filter=active|eq|true&order=name'), this.systems.getSystemsArray(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;
                                uccRoles = "";

                                this.config.ROLES.forEach(function (item) {
                                    if (item.UCConly) uccRoles += item.role + ":";
                                });
                                this.people.getUCCStaff(uccRoles);
                                this.sendEmail = this.config.SEND_EMAILS;
                                this.manualMode = localStorage.getItem('manualMode') ? localStorage.getItem('manualMode') == "true" : false;
                                this.unassignedOnly = localStorage.getItem('unassignedOnly') ? localStorage.getItem('unassignedOnly') == "true" : false;
                                this.numberOfFacIDs = this.config.DEFAULT_FACULTY_IDS;
                                this.selectedSession = this.sessions.sessionsArray[0]._id;
                                this.getRequests();

                            case 12:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Assignments.prototype.getRequests = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!this.selectedSession) {
                                    _context2.next = 7;
                                    break;
                                }

                                this.sessions.selectSessionById(this.selectedSession);
                                _context2.next = 4;
                                return this.clientRequests.getClientRequestsDetailsArray('?filter=sessionId|eq|' + this.selectedSession, true);

                            case 4:
                                if (this.clientRequests.requestsDetailsArray && this.clientRequests.requestsDetailsArray.length) {
                                    this.clientRequests.requestsDetailsArray.forEach(function (item) {
                                        if (item.requestId && item.requestId.courseId === null) item.requestId.courseId = { _id: _this.config.SANDBOX_ID, name: _this.config.SANDBOX_NAME };
                                    });
                                    this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);
                                    this.filterInAssigned();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context2.next = 8;
                                break;

                            case 7:
                                this.displayArray = new Array();

                            case 8:
                                this.clearFilters();

                            case 9:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getRequests() {
                return _ref2.apply(this, arguments);
            }

            return getRequests;
        }();

        Assignments.prototype.refresh = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context3.next = 3;
                                return this.getRequests();

                            case 3:
                                this.spinnerHTML = "";

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function refresh() {
                return _ref3.apply(this, arguments);
            }

            return refresh;
        }();

        Assignments.prototype.editRequest = function editRequest(index, request) {
            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.selectedRequestDetail = this.utils.copyObject(request);
            this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);
            this.editStartDate = this.selectedRequestDetail.requestId.startDate;
            this.originalRequestDetail = this.utils.copyObject(this.selectedRequestDetail);

            this.requestSelected = 'edit';
        };

        Assignments.prototype.backEdit = function backEdit() {
            this.requestSelected = 'table';
        };

        Assignments.prototype.saveEdit = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                email = {};

                                this.buildAuditDetail();
                                this.clientRequests.setTheSelectedRequestDetail(this.selectedRequestDetail);
                                _context4.next = 5;
                                return this.clientRequests.saveRequestDetail();

                            case 5:
                                serverResponse = _context4.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The request was updated");
                                    this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);
                                    this.filterInAssigned();
                                    this._cleanUp();
                                }

                            case 7:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function saveEdit() {
                return _ref4.apply(this, arguments);
            }

            return saveEdit;
        }();

        Assignments.prototype.buildAuditDetail = function buildAuditDetail() {
            var obj = this.selectedRequestDetail;
            if (obj.productId != this.originalRequestDetail.productId._id) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "productId",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.productId._id,
                    newValue: obj.productId._id,
                    personId: this.userObj._id
                });
            }
            if (obj.requestStatus != this.originalRequestDetail.requestStatus) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'requestStatus',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestStatus,
                    newValue: obj.requestStatus,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.undergradIds != this.originalRequestDetail.requestId.undergradIds) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "undergradIds",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.undergradIds,
                    newValue: obj.requestId.undergradIds,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.graduateIds != this.originalRequestDetail.requestId.graduateIds) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "graduateIds",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.graduateIds,
                    newValue: obj.requestId.graduateIds,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.startDate != this.originalRequestDetail.requestId.startDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'startDate',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetailrequestId.startDate,
                    newValue: obj.requestId.startDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.endDate != this.originalRequestDetail.requestId.endDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'endDate',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.endDate,
                    newValue: obj.requestId.endDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requiredDate != this.originalRequestDetail.requiredDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "requiredDate",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requiredDate,
                    newValue: obj.requiredDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.courseId != this.originalRequestDetail.requestId.courseId) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'courseId',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.courseId,
                    newValue: obj.requestId.courseId,
                    personId: this.userObj._id
                });
            }
        };

        Assignments.prototype.selectARequest = function selectARequest(index, el, request) {
            this.proposedClient = new Array();
            this.assignmentDetails = new Array();
            this.profileRequest = undefined;

            this.requestSelected = 'form';

            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.selectedRequestDetail = this.utils.copyObject(request);
            this.productId = this.selectedRequestDetail.productId._id;
            this.products.selectedProductFromId(this.productId);

            this.provisionalAssignment = this.selectedRequestDetail.requestStatus == this.config.PROVISIONAL_REQUEST_CODE;
            this.oldRequest = this.utils.copyObject(this.selectedRequestDetail);

            if (!this.products.selectedProduct.systems[0]) {
                this.utils.showNotification("You need to assign a system to this product before you can assign this request");
            }

            this.clientRequired();


            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        Assignments.prototype.clientRequired = function clientRequired() {
            this.lastIDAvailable = this.products.selectedProduct.lastAllowableId ? parseInt(this.products.selectedProduct.lastAllowableId) : parseInt(this.products.selectedProduct.idsAvailable);
            this.firstID = this.products.selectedProduct.firstAllowableId ? parseInt(this.products.selectedProduct.firstAllowableId) : this.config.FIRST_DEFAULT_ID;
            this.lastFirstID = this.firstID;
            this.firstAllowableID = this.firstID;
            this.firstNumericFacID = this.firstID;
            this.lastNumericFacID = this.firstNumericFacID + this.numberOfFacIDs - 1;

            this.studentIDTemplates = this.products.selectedProduct.defaultStudentIdPrefix ? this.products.selectedProduct.defaultStudentIdPrefix.split(":") : new Array();
            this.facultyIDTemplates = this.products.selectedProduct.defaultFacultyIdPrefix ? this.products.selectedProduct.defaultFacultyIdPrefix.split(":") : new Array();

            this.studentIDTemplateAvailable = this.studentIDTemplates.length > 0 && this.products.selectedProduct.defaultStudentIdPrefix.indexOf(this.config.ID_WILDCARD) != -1;
            this.facultyIDTemplateAvailable = this.facultyIDTemplates.length > 0 && this.products.selectedProduct.defaultFacultyIdPrefix.indexOf(this.config.ID_WILDCARD) != -1 && this.selectedRequestDetail.requestId.courseId._id !== this.config.SANDBOX_ID;

            if (this.products.selectedProduct.systems[0]) {
                this.systems.selectedSystemFromId(this.products.selectedProduct.systems[0].systemId);

                this.selectedSystemId = this.systems.selectedSystem._id;
            }

            if (this.selectedRequestDetail.requestId.courseId._id === this.config.SANDBOX_ID) {
                this.idBuffer = localStorage.getItem('idSandboxBuffer') ? localStorage.getItem('idSandboxBuffer') : this.config.SANDBOX_ID_BUFFER;
                this.numberOfIds = localStorage.getItem('sandBoxIDs') ? localStorage.getItem('sandBoxIDs') : this.config.SANDBOX_ID_COUNT;
                this.sandBoxOnly = false;
            } else {
                this.idBuffer = localStorage.getItem('idBuffer') ? localStorage.getItem('idBuffer') : this.config.REGULAR_ID_BUFFER;
                this.numberOfIds = parseInt(this.selectedRequestDetail.requestId.graduateIds) + parseInt(this.selectedRequestDetail.requestId.undergradIds);
                this.sandBoxOnly = false;
            }

            if (!this.selectedRequestDetail.assignments || this.selectedRequestDetail.assignments.length == 0) {
                this.selectedRequestDetail.techComments = this.products.selectedProduct.productInfo ? this.products.selectedProduct.productInfo : "";
                this.idsRequired = parseInt(this.numberOfIds) + parseInt(this.idBuffer);
                this.idsRemaining = this.idsRequired;
                this.existingRequest = false;
                this.totalIdsAssigned = 0;
                this.idsAssigned = 0;
                this.assignmentDetails = new Array();
            } else {
                this.existingRequest = true;
                this.unassignedOnly = false;
                this.idsAssigned = this.selectedRequestDetail.idsAssigned;
                this.idsRequired = parseInt(this.numberOfIds);
                this.numberOfIds = this.numberOfIds - this.idsAssigned > 0 ? this.numberOfIds - this.idsAssigned : 0;
                this.totalIdsAssigned = this.idsAssigned;
                this.idsRemaining = this.idsRequired - this.idsAssigned > 0 ? this.idsRequired - this.idsAssigned : 0;
                this.assignmentDetails = this.selectedRequestDetail.assignments;
                this.findAssignedClients();
            }

            this.assignmentDetailIndex = -1;

            this.calcLastID();
        };

        Assignments.prototype.findAssignedClients = function findAssignedClients() {
            var _this2 = this;

            this.assignmentDetails.forEach(function (item) {
                _this2.systems.selectClientFromID(item.systemId, item.client);
                _this2.proposedClient.push(_this2.systems.selectedClient);
            });
        };

        Assignments.prototype.calcLastID = function calcLastID() {
            if (this.idsRemaining > this.lastIDAvailable) {
                this.lastID = this.lastIDAvailable;
            } else {
                this.lastID = parseInt(this.firstID) + parseInt(this.idsRemaining);
            }

            this.oldLastID = this.lastID;
        };

        Assignments.prototype.selectClient = function selectClient(index, client, el) {
            var _this3 = this;

            var message = void 0,
                okToProcess = true;

            if (this.idsRemaining > 0) {
                if (this.selectedRequestDetail.requestId.courseId._id === this.config.SANDBOX_ID && client.clientStatus != this.config.SANDBOX_CLIENT_CODE) {
                    message = "The request is for a sandbox and the client isn't a sandbox client.  Are you sure you want to assign it?";
                }
                if (this.selectedRequestDetail.requestId.courseId._id != this.config.SANDBOX_ID && client.clientStatus == this.config.SANDBOX_CLIENT_CODE) {
                    message = "The request is for a regular course and the client is a sandbox client.  Are you sure you want to assign it?";
                }

                if (message) {
                    return this.dialog.showMessage(message, "Confirm Assignment", ['Yes', 'No']).whenClosed(function (response) {
                        if (response.wasCancelled) {
                            okToProcess = false;
                        } else {
                            _this3.processClient(index, client, el);
                        }
                    });
                } else {
                    this.processClient(index, client, el);
                }
            } else {
                this.utils.showNotification("There are no more ids required for this request");
            }
        };

        Assignments.prototype.processClient = function processClient(index, client, el) {
            var alreadySelected = false;
            this.assignmentDetails.forEach(function (item) {
                if (item.systemId === client.systemId && item.client === client.client) alreadySelected = true;
            });
            if (alreadySelected) return;

            this.proposedClient.push(client);

            if (client.assignments.length > 0) {
                var maxId = 0;
                client.assignments.forEach(function (item) {
                    if (item.lastID > maxId) maxId = item.lastID;
                });
                this.firstID = maxId + parseInt(this.idBuffer);
            }

            this.lastFirstID = this.firstID;
            this.firstNumericFacID = client.lastFacIdAssigned == 0 ? parseInt(client.lastFacIdAssigned) : parseInt(client.lastFacIdAssigned) + parseInt(this.config.FACULTY_ID_BUFFER);
            this.lastNumericFacID = this.firstNumericFacID + this.config.DEFAULT_FACULTY_IDS;

            this.calcLastID();

            this.assignmentDetails.push({
                staffId: this.userObj._id,
                client: client.client,
                systemId: client.systemId,
                firstID: this.firstID,
                lastID: this.lastID,
                firstFacID: this.firstNumericFacID,
                lastFacID: this.lastNumericFacID,
                firstFacIdAssigned: this.firstNumericFacID,
                lastFacIdAssigned: this.lastNumericFacID,
                idsAssigned: parseInt(this.lastID) - parseInt(this.firstID)
            });

            this.totalIdsAssigned = parseInt(this.totalIdsAssigned) + parseInt(this.lastID) - parseInt(this.firstID);
            this.assignmentDetailIndex = this.assignmentDetails.length - 1;

            if (this.studentIDTemplates.length) {
                this.calcAssignment();
                this.idsRemaining = parseInt(this.idsRemaining) - this.assignmentDetails[this.assignmentDetailIndex].idsAssigned;
            }

            this.clientSelected = true;
            this.enableButton = true;

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        Assignments.prototype.calcAssignment = function calcAssignment() {
            this.calcIDRangeFromTemplate();
            this.calculatePasswords();
        };

        Assignments.prototype.calcIDRangeFromTemplate = function calcIDRangeFromTemplate() {
            if (this.manualMode || this.assignmentDetailIndex == -1) {
                return;
            }

            if (!this.studentIDTemplateAvailable) {
                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = this.products.selectedProduct.defaultStudentIdPrefix ? this.products.selectedProduct.defaultStudentIdPrefix : "";
            } else {
                var selectedStudentIDTemplates = new Array();
                if (this.selectedStudentIDTemplate.length == 0) {
                    selectedStudentIDTemplates.push(this.studentIDTemplates[0]);
                } else {
                    for (var k = 0; k < this.selectedStudentIDTemplate.length; k++) {
                        selectedStudentIDTemplates.push(this.studentIDTemplates[parseInt(this.selectedStudentIDTemplate[k])]);
                    }
                }

                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = "";
                for (var i = 0; i < selectedStudentIDTemplates.length; i++) {
                    var firstStudentId = this.getID(selectedStudentIDTemplates[i], this.firstID);
                    var lastStudentId = this.getID(selectedStudentIDTemplates[i], this.lastID);
                    this.assignmentDetails[this.assignmentDetailIndex].studentUserIds += firstStudentId + " to " + lastStudentId + ":";
                }

                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = this.assignmentDetails[this.assignmentDetailIndex].studentUserIds.substring(0, this.assignmentDetails[this.assignmentDetailIndex].studentUserIds.length - 1);
                this.assignmentDetails[this.assignmentDetailIndex].notValid = this.validateIDRange(this.proposedClient[this.assignmentDetailIndex], this.assignmentDetails[this.assignmentDetailIndex], this.selectedRequestDetail._id) ? '' : 'danger';
                if (this.assignmentDetails[this.assignmentDetailIndex].notValid != 'danger') this.validation.makeValid($("#errorRange"));
            }

            this.calcFacIDRangeFromTemplate();
        };

        Assignments.prototype.calcFacIDRangeFromTemplate = function calcFacIDRangeFromTemplate() {
            if (this.products.selectedProduct.defaultFacultyIdPrefix && this.products.selectedProduct.defaultFacultyIdPrefix.indexOf(this.config.ID_WILDCARD) == -1 || this.selectedRequestDetail.requestId.courseId._id === this.config.SANDBOX_ID || this.facultyIDTemplates.length == 0) {

                if (this.selectedRequestDetail.requestId.courseId._id !== this.config.SANDBOX_ID) this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = this.products.selectedProduct.defaultFacultyIdPrefix;
            } else {
                var selectedFacultyIDTemplates = new Array();
                if (this.selectedStudentIDTemplate.length == 0) {
                    selectedFacultyIDTemplates.push(this.facultyIDTemplates[0]);
                } else {
                    for (var k = 0; k < this.selectedStudentIDTemplate.length; k++) {
                        selectedFacultyIDTemplate.push(this.facultyIDTemplates[parseInt(this.selectedFacultyIDTemplate[k])]);
                    }
                }

                this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = "";
                for (var i = 0; i < selectedFacultyIDTemplates.length; i++) {
                    var firstFacID = this.getID(selectedFacultyIDTemplates[i], this.assignmentDetails[this.assignmentDetailIndex].firstFacID);
                    var lastFacID = this.getID(selectedFacultyIDTemplates[i], this.assignmentDetails[this.assignmentDetailIndex].lastFacID);
                    this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds += firstFacID + " to " + lastFacID + ":";
                }

                this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds.substring(0, this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds.length - 1);
            }
        };

        Assignments.prototype.getID = function getID(idPrefix, id) {
            if (idPrefix) {
                var len = idPrefix.lastIndexOf(this.config.ID_WILDCARD) - idPrefix.indexOf(this.config.ID_WILDCARD) + 1;
                var prefix = "000".substr(0, len - id.toString().length);
                return idPrefix.substr(0, idPrefix.indexOf(this.config.ID_WILDCARD)) + prefix + id;
            }
            return "";
        };

        Assignments.prototype.calculatePasswords = function calculatePasswords() {
            if (this.manualMode || this.assignmentDetailIndex == -1) {
                return;
            }

            if (this.assignmentDetails.length > 0) {
                this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.assignmentDetails[0].facultyPassword;
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.assignmentDetails[0].studentPassword;
            }
            var random;
            var prefix;
            var len;

            if (this.products.selectedProduct.defaultStudentPassword && this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD) != -1) {
                len = this.products.selectedProduct.defaultStudentPassword.lastIndexOf(this.config.ID_WILDCARD) - this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD) + 1;
                prefix = "9" + "000".substr(0, len - 1);
                random = Math.floor(Math.random() * parseInt(prefix));
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.products.selectedProduct.defaultStudentPassword.substr(0, this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD)) + random;
            } else {
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.products.selectedProduct.defaultStudentPassword;
            }

            if (this.selectedRequestDetail.requestId.courseId._id === this.config.SANDBOX_ID) {
                this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = "";
            } else {
                if (this.products.selectedProduct.defaultFacultyPassword && this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD) != -1) {
                    len = this.products.selectedProduct.defaultFacultyPassword.lastIndexOf(this.config.ID_WILDCARD) - this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD) + 1;
                    prefix = "9" + "000".substr(0, len - 1);
                    random = Math.floor(Math.random() * parseInt(prefix));
                    this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.products.selectedProduct.defaultFacultyPassword.substr(0, this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD)) + random;
                } else {
                    this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.products.selectedProduct.defaultFacultyPassword;
                }
            }
        };

        Assignments.prototype.firstIDChanged = function firstIDChanged() {
            if (this.firstID < this.firstAllowableID) this.firstID = this.firstAllowableID;
            if (parseInt(this.lastID) + parseInt(this.firstID) - parseInt(this.lastFirstID) > this.lastIDAvailable) {
                this.firstID = this.lastFirstID;
                return;
            }

            this.lastID = parseInt(this.lastID) + parseInt(this.firstID) - parseInt(this.lastFirstID);

            if (this.assignmentDetailIndex > -1) {
                this.assignmentDetails[this.assignmentDetailIndex].firstID = this.firstID;
                this.assignmentDetails[this.assignmentDetailIndex].lastID = this.lastID;
                this.calcIDRangeFromTemplate();
            }

            this.lastFirstID = this.firstID;
        };

        Assignments.prototype.lastIDChanged = function lastIDChanged() {
            if (this.lastID > this.lastIDAvailable) {
                this.lastID = this.lastIDAvailable;
            }

            this.idsRequired = parseInt(this.idsRequired) + parseInt(this.lastID) - parseInt(this.oldLastID);

            if (this.assignmentDetailIndex > -1) {
                this.assignmentDetails[this.assignmentDetailIndex].idsAssigned = parseInt(this.assignmentDetails[this.assignmentDetailIndex].idsAssigned) + parseInt(this.lastID) - parseInt(this.oldLastID);
                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) + parseInt(this.lastID) - parseInt(this.oldLastID);

                this.assignmentDetails[this.assignmentDetailIndex].lastID = this.lastID;
                this.proposedClient[this.assignmentDetailIndex].lastIdAssigned = this.lastID;

                this.calcIDRangeFromTemplate();
            } else {
                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.lastID) - parseInt(this.oldLastID);
            }
            this.oldLastID = this.lastID;
        };

        Assignments.prototype.lastFacIDChanged = function lastFacIDChanged() {
            this.numberOfFacIDs = parseInt(this.lastNumericFacID) - parseInt(this.firstNumericFacID) + 1;
            if (this.assignmentDetailIndex > -1) {
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = parseInt(this.lastNumericFacID);
                this.assignmentDetails[this.assignmentDetailIndex].lastFacID = parseInt(this.lastNumericFacID);
                this.calcFacIDRangeFromTemplate();
            }
        };

        Assignments.prototype.firstFacIDChanged = function firstFacIDChanged() {
            this.lastNumericFacID = parseInt(this.firstNumericFacID) + parseInt(this.numberOfFacIDs) - 1;
            if (this.assignmentDetailIndex > -1) {
                this.proposedClient[this.assignmentDetailIndex].firstFacIdAssigned = this.firstNumericFacID;
                this.assignmentDetails[this.assignmentDetailIndex].firstFacID = this.firstNumericFacID;
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = this.lastNumericFacID;
                this.assignmentDetails[this.assignmentDetailIndex].lastFacID = this.lastNumericFacID;
                this.calcFacIDRangeFromTemplate();
            }
        };

        Assignments.prototype.validateIDRange = function validateIDRange(client, assignment, id) {
            if (!client.assignments || client.assignments.length == 0) return true;
            var valid = true;
            var x1 = parseInt(assignment.firstID);
            var x2 = parseInt(assignment.lastID);
            for (var i = 0; i < client.assignments.length; i++) {
                if (this.existingRequest && client.assignments[i].assignment == id) {
                    continue;
                } else {
                    var y1 = parseInt(client.assignments[i].firstID);
                    var y2 = parseInt(client.assignments[i].lastID);
                    if (!(x2 < y1 || x1 > y2)) valid = false;
                }
            }
            return valid;
        };

        Assignments.prototype.selectProposedClient = function selectProposedClient(index, el) {
            this.assignmentDetailIndex = index;
            if (this.assignmentDetailIndex == -1) {
                this.selectedAssignedClient = "";
                if (this.selectedRow) this.selectedRow.children().removeClass('info');
            } else {
                this.selectedAssignedClient = this.assignmentDetails[this.assignmentDetailIndex].client;

                this.firstID = this.assignmentDetails[this.assignmentDetailIndex].firstID;
                this.lastID = this.assignmentDetails[this.assignmentDetailIndex].lastID;
                this.proposedClient[this.assignmentDetailIndex].lastIdAssigned = this.lastID;
                this.firstNumericFacID = this.assignmentDetails[this.assignmentDetailIndex].firstFacID;
                this.lastNumericFacID = this.assignmentDetails[this.assignmentDetailIndex].lastFacID;
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = this.assignmentDetails[this.assignmentDetailIndex].lastFacID;
                this.oldIdsAssigned = parseInt(this.lastID) - parseInt(this.lastID);
                this.oldLastID = this.lastID;
                this.lastFirstID = this.firstID;

                if (this.selectedAssignmentRow) this.selectedAssignmentRow.children().removeClass('info');
                this.selectedAssignmentRow = $(el.target).closest('tr');
                this.selectedAssignmentRow.children().addClass('info');
            }
        };

        Assignments.prototype.deleteProposedClient = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(index) {
                var _this4 = this;

                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                if (!this.assignmentDetails[index].assignedDate) {
                                    _context5.next = 4;
                                    break;
                                }

                                return _context5.abrupt('return', this.dialog.showMessage("This will delete the assignment.  Are you sure you want to do that?", "Delete Assignment", ['Yes', 'No']).whenClosed(function (response) {
                                    if (!response.wasCancelled) {
                                        _this4.deleteSaved(index);
                                    }
                                }));

                            case 4:
                                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.assignmentDetails[index].idsAssigned);
                                this.assignmentDetailIndex = -1;

                                this.assignmentDetails.splice(index, 1);
                                this.proposedClient.splice(index, 1);
                                if (this.selectedRow) this.selectedRow.children().removeClass('info');

                            case 10:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function deleteProposedClient(_x) {
                return _ref5.apply(this, arguments);
            }

            return deleteProposedClient;
        }();

        Assignments.prototype.deleteSaved = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(index) {
                var i, request, serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                this.proposedClient[index].idsAvailable = parseInt(this.proposedClient[index].idsAvailable) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.assignmentDetails[index].idsAssigned);

                                i = 0;

                            case 4:
                                if (!(i < this.proposedClient[index].assignments.length)) {
                                    _context6.next = 12;
                                    break;
                                }

                                if (!(this.proposedClient[index].assignments[i].assignment == this.selectedRequestDetail._id)) {
                                    _context6.next = 9;
                                    break;
                                }

                                this.proposedClient[index].assignments.splice(i, 1);
                                if (this.proposedClient[index].assignments.length == 0 && this.proposedClient[index].clientStatus != this.config.SANDBOX_ID) this.proposedClient[index].clientStatus = this.config.UNASSIGNED_CLIENT_CODE;
                                return _context6.abrupt('break', 12);

                            case 9:
                                i++;
                                _context6.next = 4;
                                break;

                            case 12:
                                this.systems.updateClient(this.proposedClient[index]);
                                this.assignmentDetails.splice(index, 1);
                                if (this.assignmentDetails.length == 0) this.selectedRequestDetail.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;

                                this.selectedRequestDetail.idsAssigned = parseInt(this.totalIdsAssigned);
                                this.selectedRequestDetail.assignments = this.assignmentDetails;
                                this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);
                                this.requestToSave.requestDetailsToSave = new Array();
                                request = this.utils.copyObject(this.selectedRequestDetail);

                                delete request['requestId'];
                                this.requestToSave.requestDetailsToSave.push(request);

                                this.clientRequests.setSelectedRequest(this.requestToSave);
                                _context6.next = 25;
                                return this.clientRequests.saveRequest();

                            case 25:
                                serverResponse = _context6.sent;

                                if (serverResponse.status) {
                                    _context6.next = 30;
                                    break;
                                }

                                this.utils.showNotification("The assignment was deleted");
                                _context6.next = 30;
                                return this.systems.saveClients(this.proposedClient);

                            case 30:
                                this.selectedAssignedClient = "";

                            case 31:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteSaved(_x2) {
                return _ref6.apply(this, arguments);
            }

            return deleteSaved;
        }();

        Assignments.prototype.delete = function _delete() {
            var _this5 = this;

            return this.dialog.showMessage("Are you sure you want to delete the request?", "Delete Request", ['Yes', 'No']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this5.deleteRequest();
                }
            });
        };

        Assignments.prototype.deleteRequest = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                this.clientRequests.setTheSelectedRequestDetail(this.selectedRequestDetail);
                                _context7.next = 3;
                                return this.clientRequests.deleteRequest();

                            case 3:
                                serverResponse = _context7.sent;

                                if (!serverResponse.error) {
                                    this.filterInAssigned();
                                    this.utils.showNotification("The request was deleted");
                                    this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);
                                    this.filterInAssigned();
                                }
                                this.requestSelected = 'table';

                            case 6:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function deleteRequest() {
                return _ref7.apply(this, arguments);
            }

            return deleteRequest;
        }();

        Assignments.prototype.save = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context8.next = 12;
                                    break;
                                }

                                if (!this._buildRequest()) {
                                    _context8.next = 12;
                                    break;
                                }

                                this.clientRequests.setSelectedRequest(this.requestToSave);
                                email = this._buildEmailObject();
                                _context8.next = 6;
                                return this.clientRequests.assignRequest(email);

                            case 6:
                                serverResponse = _context8.sent;

                                if (serverResponse.status) {
                                    _context8.next = 12;
                                    break;
                                }

                                this.utils.showNotification("The request was updated");
                                _context8.next = 11;
                                return this.systems.saveSystem();

                            case 11:
                                this._cleanUp();

                            case 12:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function save() {
                return _ref8.apply(this, arguments);
            }

            return save;
        }();

        Assignments.prototype._buildEmailObject = function _buildEmailObject() {
            var mailObject = {};
            var date = new Date(this.selectedRequestDetail.requiredDate);
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
            if (this.selectedRequestDetail.requestStatus !== this.config.PROVISIONAL_REQUEST_CODE && this.sendEmail) {
                mailObject.reason = 2;
                mailObject.numStudents = parseInt(this.selectedRequestDetail.requestId.undergradIds) + parseInt(this.selectedRequestDetail.requestId.graduateIds);
                mailObject.fullName = this.selectedRequestDetail.requestId.personId.fullName;
                mailObject.requestNo = this.selectedRequestDetail.requestId.clientRequestNo;
                mailObject.email = this.selectedRequestDetail.requestId.personId.email;
                mailObject.product = [{ name: this.selectedRequestDetail.productId.name, requiredDate: month + "/" + day + "/" + year }], mailObject.course = this.selectedRequestDetail.requestId.courseId.name;
                mailObject.cc = this.config.PRODUCT_REQUESTS_EMAIL_LIST ? this.config.PRODUCT_REQUESTS_EMAIL_LIST : "";
                mailObject.message = "Your product request has been updated.";
            }

            return mailObject;
        };

        Assignments.prototype._buildRequest = function _buildRequest() {
            if (this.selectedRequestDetail.requestStatus == this.config.ASSIGNED_REQUEST_CODE) {
                for (var i = 0; i < this.assignmentDetails.length; i++) {
                    for (var j = 0; j < this.proposedClient.length; j++) {
                        var oldIdsAssigned = parseInt(this.proposedClient[j].idsAssigned);
                        var oldIdsAvailable = parseInt(this.proposedClient[j].idsAvailable);
                        if (this.assignmentDetails[i].client == this.proposedClient[j].client) {
                            if (this.assignmentDetails[i].assignedDate) {
                                if (this.proposedClient[j].assignments) {
                                    for (var k = 0; k < this.proposedClient[j].assignments.length; k++) {
                                        if (this.proposedClient[j].assignments[k].assignment == this.selectedRequestDetail._id) {
                                            var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                                            this.proposedClient[j].idsAvailable = parseInt(this.proposedClient[j].idsAvailable) + parseInt(this.oldRequest.assignments[i].idsAssigned) - totalIdsAssigned;
                                            this.proposedClient[j].assignments[k].studentIDRange = this.assignmentDetails[i].studentUserIds;
                                            this.proposedClient[j].assignments[k].facultyIDRange = this.assignmentDetails[i].facultyUserIds;
                                            this.proposedClient[j].assignments[k].firstID = this.assignmentDetails[i].firstID;
                                            this.proposedClient[j].assignments[k].lastID = this.assignmentDetails[i].lastID;
                                            this.systems.updateClient(this.proposedClient[j]);
                                        }
                                    }
                                }
                            } else {
                                this.assignmentDetails[i].assignedDate = new Date();
                                this.selectedRequestDetail.assignedDate = new Date();
                                if (this.selectedRequestDetail.requestId.courseId._id != this.config.SANDBOX_ID) this.proposedClient[i].clientStatus = this.config.ASSIGNED_CLIENT_CODE;
                                var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                                this.proposedClient[i].idsAvailable = parseInt(this.proposedClient[i].idsAvailable) - (parseInt(totalIdsAssigned) - this.oldIdsAssigned);
                                this.proposedClient[i].assignments.push({
                                    assignment: this.selectedRequestDetail._id,
                                    studentIDRange: this.assignmentDetails[i].studentUserIds,
                                    facultyIDRange: this.assignmentDetails[i].facultyUserIds,
                                    institutionId: this.selectedRequestDetail.requestId.institutionId,
                                    firstID: this.assignmentDetails[i].firstID,
                                    lastID: this.assignmentDetails[i].lastID
                                });
                                this.systems.updateClient(this.proposedClient[i]);
                            }
                        }
                    }
                }
            } else {
                if (this.provisionalAssignment) {
                    this.selectedRequestDetail.requestStatus = this.config.PROVISIONAL_REQUEST_CODE;
                } else {
                    this.selectedRequestDetail.requestStatus = this.config.ASSIGNED_REQUEST_CODE;
                }

                for (var i = 0; i < this.proposedClient.length; i++) {
                    this.assignmentDetails[i].assignedDate = new Date();
                    this.assignmentDetails[i].modifiedDate = new Date();
                    if (this.selectedRequestDetail.requestId.courseId._id != this.config.SANDBOX_ID) this.proposedClient[i].clientStatus = this.config.ASSIGNED_CLIENT_CODE;
                    if (this.proposedClient[i].assignments.length > 1 && this.proposedClient[i].clientStatus != this.config.SANDBOX_CLIENT_CODE) this.proposedClient[i].clientStatus = this.config.SHARED_CLIENT_CODE;
                    var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                    this.proposedClient[i].idsAvailable = parseInt(this.proposedClient[i].idsAvailable) - totalIdsAssigned;
                    this.proposedClient[i].assignments.push({
                        assignment: this.selectedRequestDetail._id,
                        studentIDRange: this.assignmentDetails[i].studentUserIds,
                        facultyIDRange: this.assignmentDetails[i].facultyUserIds,
                        institutionId: this.selectedRequestDetail.requestId.institutionId,
                        firstID: this.assignmentDetails[i].firstID,
                        lastID: this.assignmentDetails[i].lastID,
                        assignedDate: new Date()
                    });
                    this.systems.updateClient(this.proposedClient[i]);
                };
            }

            this.selectedRequestDetail.idsAssigned = parseInt(this.totalIdsAssigned);
            this.selectedRequestDetail.assignments = this.assignmentDetails;
            this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);
            this.requestToSave.audit.push({
                property: 'Assigned',
                newValue: this.selectedRequestDetail.requestNo,
                oldValue: this.selectedRequestDetail.productId._id,
                eventDate: new Date(),
                personId: this.userObj._id
            });
            this.requestToSave.requestDetailsToSave = new Array();
            var request = this.utils.copyObject(this.selectedRequestDetail);
            delete request['requestId'];
            this.requestToSave.requestDetailsToSave.push(request);

            return true;
        };

        Assignments.prototype.back = function back() {
            this._cleanUp();
        };

        Assignments.prototype.systemSelected = function systemSelected() {
            this.systems.selectedSystemFromId(this.selectedSystemId);
            if (!this.products.selectedProduct.clientRelevant) {
                this.calcAssignment();
            }
        };

        Assignments.prototype.customerActionDialog = function customerActionDialog() {
            var _this6 = this;

            if (this.profileRequest) {
                this.model = 'header';
                this.selectedRequestNo = this.profileRequest.requestId.clientRequestNo;
                this.requestId = this.profileRequest.requestId._id;
                this.course = this.profileRequest.requestId.courseId.name;
                this.productName = this.profileRequest.productId.name;
                this.requiredDate = this.profileRequest.requiredDate;
                this.email = this.profileRequest.requestId.personId.email;
                this.hideProfile();
            } else {
                this.model = 'detail';
                this.requestId = this.selectedRequestDetail._id;
                this.productName = this.selectedRequestDetail.productId.name;
                this.selectedRequestNo = this.selectedRequestDetail.requestId.clientRequestNo;
                this.course = this.selectedRequestDetail.requestId.courseId.name;
                this.requiredDate = this.selectedRequestDetail.requiredDate;
                this.email = this.selectedRequestDetail.requestId.personId.email;
            }

            var subject = "Question about product request " + this.selectedRequestNo;
            var email = { emailBody: "", emailSubject: subject, emailId: this.email };
            return this.dialog.showEmail("Enter Email", email, ['Submit', 'Cancel']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this6.sendTheEmail(response.output);
                } else {
                    console.log("Cancelled");
                }
            });
        };

        Assignments.prototype.sendTheEmail = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(email) {
                var date, day, month, year, serverResponse;
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                if (!email) {
                                    _context9.next = 12;
                                    break;
                                }

                                if (this.model === 'header') {
                                    this.clientRequests.updateDetailStatuses(this.selectedRequestNo, this.config.CUSTOMER_ACTION_REQUEST_CODE);
                                } else {
                                    this.clientRequests.updateDetailStatus(this.requestId, this.config.CUSTOMER_ACTION_REQUEST_CODE);
                                }

                                this.filterInAssigned();
                                date = new Date(this.requiredDate);
                                day = date.getDate();
                                month = date.getMonth() + 1;
                                year = date.getFullYear();

                                this.message = {
                                    reason: 3,
                                    id: this.requestId,
                                    customerMessage: email.email.emailBody,
                                    email: email.email.emailId,
                                    subject: email.email.emailSubject,
                                    clientRequestNo: this.selectedRequestNo,
                                    product: [{ name: this.productName, requiredDate: month + "/" + day + "/" + year }],
                                    session: this.sessions.selectedSession.session + ' ' + this.sessions.selectedSession.year,
                                    course: this.course,
                                    requestStatus: this.config.CUSTOMER_ACTION_REQUEST_CODE,
                                    model: this.model,
                                    audit: {
                                        property: 'Send Message',
                                        eventDate: new Date(),
                                        newValue: email.email.emailBody,
                                        personId: this.userObj._id
                                    }
                                };
                                _context9.next = 10;
                                return this.clientRequests.sendCustomerMessage(this.message);

                            case 10:
                                serverResponse = _context9.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The message was sent");
                                }

                            case 12:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function sendTheEmail(_x3) {
                return _ref9.apply(this, arguments);
            }

            return sendTheEmail;
        }();

        Assignments.prototype.showProfile = function showProfile(request, el) {
            this.profileRequest = request;
            $(".hoverProfile").css("top", el.clientY - 175);
            $(".hoverProfile").css("left", el.clientX - 300);
            $(".hoverProfile").css("display", "block");
        };

        Assignments.prototype.hideProfile = function hideProfile() {
            $(".hoverProfile").css("display", "none");
        };

        Assignments.prototype.showComment = function showComment(request, el) {
            if (request.requestStatus == this.config.REPLIED_REQUEST_CODE) {
                this.commentShown = request.requestId.comments;
                $(".hover").css("top", el.clientY - 200);
                $(".hover").css("left", el.clientX - 10);
                $(".hover").css("display", "block");
            }
        };

        Assignments.prototype.hideComment = function hideComment() {
            $(".hover").css("display", "none");
        };

        Assignments.prototype.openAudit = function openAudit() {
            this.showAudit = !this.showAudit;
        };

        Assignments.prototype.openEditStudentTemplate = function openEditStudentTemplate() {
            this.showAddStudentTemplate = true;
        };

        Assignments.prototype.cancelEditStudentTemplate = function cancelEditStudentTemplate() {
            this.showAddStudentTemplate = false;
        };

        Assignments.prototype.saveStudentTemplate = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                _context10.next = 2;
                                return this.products.saveProduct();

                            case 2:
                                this.studentIDTemplates = this.products.selectedProduct.defaultStudentIdPrefix.split(":");
                                this.showAddStudentTemplate = false;

                            case 4:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function saveStudentTemplate() {
                return _ref10.apply(this, arguments);
            }

            return saveStudentTemplate;
        }();

        Assignments.prototype.openSettings = function openSettings() {
            this.showSettings = !this.showSettings;
            if (this.showSettings) {
                this.idSandboxBuffer = localStorage.getItem('idSandboxBuffer') ? localStorage.getItem('idBuffer') : this.config.SANDBOX_ID_BUFFER;
                this.idBuffer = localStorage.getItem('idBuffer') ? localStorage.getItem('idBuffer') : this.config.REGULAR_ID_BUFFER;
                this.sandBoxIDs = localStorage.getItem('sandBoxIDs') ? localStorage.getItem('sandBoxIDs') : this.config.SANDBOX_ID_COUNT;
            }
        };

        Assignments.prototype.saveSettings = function saveSettings() {
            localStorage.setItem('idSandboxBuffer', this.idSandboxBuffer);
            localStorage.setItem('idBuffer', this.idBuffer);
            localStorage.setItem('sandBoxIDs', this.sandBoxIDs);
            this.showSettings = false;
        };

        Assignments.prototype.restoreDefaults = function restoreDefaults() {
            this.idBuffer = this.config.REGULAR_ID_BUFFER;
            this.sandBoxIDs = this.config.SANDBOX_ID_COUNT;
            localStorage.setItem('idBuffer', this.config.REGULAR_ID_BUFFER);
            localStorage.setItem('sandBoxIDs', this.config.SANDBOX_ID_BUFFER);
        };

        Assignments.prototype.openFacultyDetails = function openFacultyDetails() {
            this.facultyDetails = !this.facultyDetails;
        };

        Assignments.prototype.changeUnassignedOnlychangeUnassignedOnly = function changeUnassignedOnlychangeUnassignedOnly() {
            localStorage.setItem('unassignedOnly', this.unassignedOnly);
        };

        Assignments.prototype._setUpValidation = function _setUpValidation() {
            this.validation.addRule(1, "errorRange", [{ "rule": "custom", "message": "Invalid ID range",
                "valFunction": function valFunction(context) {
                    var valid = true;
                    if (context.assignmentDetails) {
                        for (var i = 0; i < context.assignmentDetails.length; i++) {
                            if (context.assignmentDetails[i].notValid == 'danger') valid = false;
                        }
                    }
                    return valid;
                } }]);
        };

        Assignments.prototype._cleanUp = function _cleanUp() {
            this.proposedClient = new Array();
            this.assignmentDetails = new Array();
            this.proposedAssignment = new Object();
            this.parameterIndex = new Object();
            this.systems.selectSystem();
            this.selectedAssignedClient = "";
            this.firstID = 0;
            this.lastID = 0;
            this.requestSelected = 'table';
            this.customerMessage = false;
        };

        Assignments.prototype.clearFilters = function clearFilters() {
            this.requiredDateFilterValue = "";
            this.createdDateFilterValue = "";
            this.requestStatusFilter = "";
            this.productFilterValue = "";
            this.courseFilterValue = "";
            this.helpTicketTypeFilterValue = "";
            this.institutionFilterValue = "";
            this.dataTable.updateArray(this.clientRequests.requestsDetailsArray);
            this.filterInAssigned();
        };

        Assignments.prototype.filterInAssigned = function filterInAssigned() {
            if (this.isCheckedAssigned) {
                this.dataTable.filterList(this.config.ASSIGNED_REQUEST_CODE, { type: 'custom', filter: this.statusCustomFilter, compare: 'custom' });
            } else {
                this.dataTable.updateArray(this.clientRequests.requestsDetailsArray, 'requiredDate', -1);
            }
        };

        Assignments.prototype.customNameFilter = function customNameFilter(value, item, context) {
            return item.requestId && item.requestId.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.statusCustomFilter = function statusCustomFilter(value, item, context) {
            if (item.requestStatus == value) return false;
            return true;
        };

        Assignments.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
            return item.requestId.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.courseCustomFilter = function courseCustomFilter(value, item, context) {
            return item.requestId.courseId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.customProductNameFilter = function customProductNameFilter(value, item, context) {
            for (var i = 0; i < context.products.productsArray.length; i++) {
                if (item.productId._id == context.products.productsArray[i]._id) {
                    return context.products.productsArray[i].name.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        Assignments.prototype.customCourseSorter = function customCourseSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['courseId']['name'] < b['requestId']['courseId']['name'] ? -1 : a['requestId']['courseId']['name'] > b['requestId']['courseId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        Assignments.prototype.customInstitutionsSorter = function customInstitutionsSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['institutionId']['name'] < b['requestId']['institutionId']['name'] ? -1 : a['requestId']['institutionId']['name'] > b['requestId']['institutionId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        Assignments.prototype.customPersonSorter = function customPersonSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName'] ? -1 : a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        Assignments.prototype.customRequestStatusSorter = function customRequestStatusSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a[sortProperty] < b[sortProperty] ? -1 : a[sortProperty] > b[sortProperty] ? 1 : 0;
                return result * sortDirection;
            });
        };

        return Assignments;
    }()) || _class);
});
define('modules/tech/requests/assignments2',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/dialogs/common-dialogs', '../../../resources/utils/dataTable', '../../../resources/data/sessions', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/clientRequests', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _commonDialogs, _dataTable, _sessions, _systems, _products, _clientRequests, _appConfig, _utils, _people, _validation, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Assignments = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Assignments = exports.Assignments = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _commonDialogs.CommonDialogs, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _systems.Systems, _clientRequests.ClientRequests), _dec(_class = function () {
        function Assignments(router, config, validation, people, dialog, datatable, utils, sessions, products, systems, requests) {
            _classCallCheck(this, Assignments);

            this.requestSelected = 'table';
            this.showAddStudentTemplate = false;
            this.manualMode = false;
            this.roundTo10 = false;
            this.showAudit = false;
            this.lastIDidsRemaining = -1;
            this.isCheckedAssigned = true;
            this.title = "Tech Staff Client Assignments";
            this.spinnerHTML = "";
            this.minStartDate = "1/1/1900";
            this.maxStartDate = "1/1/9999";
            this.editStartDate = "";
            this.startDate = "";
            this.dateConfig = {};

            this.router = router;
            this.config = config;
            this.validation = validation;
            this.validation.initialize(this);
            this._setUpValidation();
            this.people = people;
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.sessions = sessions;
            this.products = products;
            this.requests = requests;
            this.systems = systems;
            this.dialog = dialog;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        Assignments.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        Assignments.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.sessions.getSessionsArray('?filter=[in]sessionStatus[list]Active:Requests&order=startDate', true), this.people.getInstitutionsArray('?order=name'), this.products.getProductsArray('?filter=active|eq|true&order=Category'), this.systems.getSystemsArray(), this.config.getConfig()]);

                            case 2:
                                responses = _context.sent;

                                this.sendEmail = this.config.SEND_EMAILS;
                                this.people.getCoursesArray();
                                this.manualMode = localStorage.getItem('manualMode') ? localStorage.getItem('manualMode') == "true" : false;
                                this.unassignedOnly = localStorage.getItem('unassignedOnly') ? localStorage.getItem('unassignedOnly') == "true" : false;
                                this.numberOfFacIDs = this.config.DEFAULT_FACULTY_IDS;

                            case 8:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Assignments.prototype.getRequests = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                var _this = this;

                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!this.selectedSession) {
                                    _context2.next = 8;
                                    break;
                                }

                                this.sessions.selectSessionById(this.selectedSession);
                                this.setDates(false);
                                _context2.next = 5;
                                return this.requests.getClientRequestsDetailsArray('?filter=sessionId|eq|' + this.selectedSession, true);

                            case 5:
                                if (this.requests.requestsDetailsArray && this.requests.requestsDetailsArray.length) {
                                    this.requests.requestsDetailsArray.forEach(function (item) {
                                        if (item.requestId.courseId === null) item.requestId.courseId = { _id: _this.config.SANDBOX_ID, name: _this.config.SANDBOX_NAME };
                                    });
                                    this.dataTable.updateArray(this.requests.requestsDetailsArray);
                                    this.filterInAssigned();
                                } else {
                                    this.displayArray = new Array();
                                }
                                _context2.next = 9;
                                break;

                            case 8:
                                this.displayArray = new Array();

                            case 9:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function getRequests() {
                return _ref2.apply(this, arguments);
            }

            return getRequests;
        }();

        Assignments.prototype.refresh = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context3.next = 3;
                                return this.getRequests();

                            case 3:
                                this.spinnerHTML = "";

                            case 4:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function refresh() {
                return _ref3.apply(this, arguments);
            }

            return refresh;
        }();

        Assignments.prototype.clearFilters = function clearFilters() {
            $(this.courseFilter).val("");
            $(this.requestStatus).val("");
            $(this.productFilter).val("");
            $(this.nameFilter).val("");
            $(this.nickNameFilter).val("");
            this.filterInAssigned();
        };

        Assignments.prototype.selectARequest = function selectARequest(index, el, request) {
            this.proposedClient = new Array();
            this.assignmentDetails = new Array();
            this.profileRequest = undefined;

            this.enableButton = false;
            this.requestSelected = 'form';

            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.selectedRequestDetail = this.utils.copyObject(request);

            this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);


            this.provisionalAssignment = this.selectedRequestDetail.requestStatus == this.config.PROVISIONAL_REQUEST_CODE;

            this.oldRequest = this.utils.copyObject(this.selectedRequestDetail);

            if (!this.products.selectedProduct.systems[0]) {
                this.utils.showNotification("You need to assign a system to this product before you can assign this request");
            }

            this.clientRequired();
            this.selectedSystem = this.products.selectedProduct.systems[0].systemId && this.products.selectedProduct.systems.length > 0 ? this.products.selectedProduct.systems[0].systemId : undefined;

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        Assignments.prototype.clientRequired = function clientRequired() {
            this.lastIDAvailable = this.products.selectedProduct.lastAllowableId ? parseInt(this.products.selectedProduct.lastAllowableId) : parseInt(this.products.selectedProduct.idsAvailable);
            this.firstID = this.products.selectedProduct.firstAllowableId ? parseInt(this.products.selectedProduct.firstAllowableId) : this.config.FIRST_DEFAULT_ID;
            this.lastFirstID = this.firstID;
            this.firstAllowableID = this.firstID;
            this.firstNumericFacID = this.firstID;
            this.lastNumericFacID = this.firstNumericFacID + this.numberOfFacIDs - 1;

            this.studentIDTemplates = this.products.selectedProduct.defaultStudentIdPrefix ? this.products.selectedProduct.defaultStudentIdPrefix.split(":") : new Array();
            this.facultyIDTemplates = this.products.selectedProduct.defaultFacultyIdPrefix ? this.products.selectedProduct.defaultFacultyIdPrefix.split(":") : new Array();

            this.studentIDTemplateAvailable = this.studentIDTemplates.length > 0 && this.products.selectedProduct.defaultStudentIdPrefix.indexOf(this.config.ID_WILDCARD) != -1;
            this.facultyIDTemplateAvailable = this.facultyIDTemplates.length > 0 && this.products.selectedProduct.defaultFacultyIdPrefix.indexOf(this.config.ID_WILDCARD) != -1 && this.selectedRequestDetail.requestId.courseId !== this.config.SANDBOX_ID;

            if (this.products.selectedProduct.systems[0]) {
                this.systems.selectedSystemFromId(this.products.selectedProduct.systems[0].systemId);
                setTimeout(function () {
                    $('#systemSelect option:eq(1)').attr('selected', 'true');
                }, 250);;
            }
            this.customerMessageText = this.selectedRequestDetail.customerMessage ? this.selectedRequestDetail.customerMessage : "";
            this.clientsRequired = this.products.selectedProduct.clientRelevant ? this.products.selectedProduct.clientRelevant : false;

            if (this.selectedRequestDetail.requestId.courseId === this.config.SANDBOX_ID) {
                this.idBuffer = localStorage.getItem('idSandboxBuffer') ? localStorage.getItem('idSandboxBuffer') : this.config.SANDBOX_ID_BUFFER;
                this.numberOfIds = localStorage.getItem('sandBoxIDs') ? localStorage.getItem('sandBoxIDs') : this.config.SANDBOX_ID_COUNT;
                this.sandBoxOnly = true;
            } else {
                this.idBuffer = localStorage.getItem('idBuffer') ? localStorage.getItem('idBuffer') : this.config.REGULAR_ID_BUFFER;
                this.numberOfIds = parseInt(this.selectedRequestDetail.requestId.graduateIds) + parseInt(this.selectedRequestDetail.requestId.undergradIds) + parseInt(this.selectedRequestDetail.requestId.addUndergraduates) + parseInt(this.selectedRequestDetail.requestId.addGraduates);
                this.sandBoxOnly = false;
            }

            if (!this.selectedRequestDetail.assignments || this.selectedRequestDetail.assignments.length == 0) {
                this.selectedRequestDetail.techComments = this.products.selectedProduct.productInfo ? this.products.selectedProduct.productInfo : "";
                this.idsRequired = parseInt(this.numberOfIds) + parseInt(this.idBuffer);
                this.idsRemaining = this.idsRequired;
                this.existingRequest = false;
                this.totalIdsAssigned = 0;
                this.idsAssigned = 0;
                this.assignmentDetails = new Array();
            } else {
                this.existingRequest = true;
                this.unassignedOnly = false;
                this.idsAssigned = this.selectedRequestDetail.idsAssigned;
                this.idsRequired = parseInt(this.numberOfIds);
                this.numberOfIds = this.numberOfIds - this.idsAssigned > 0 ? this.numberOfIds - this.idsAssigned : 0;
                this.totalIdsAssigned = this.idsAssigned;
                this.idsRemaining = this.idsRequired - this.idsAssigned > 0 ? this.idsRequired - this.idsAssigned : 0;
                this.assignmentDetails = this.selectedRequestDetail.assignments;
                this.findAssignedClients();
            }

            this.assignmentDetailIndex = -1;

            this.calcLastID();
        };

        Assignments.prototype.selectClient = function selectClient(index, client, el) {
            var _this2 = this;

            var message = void 0,
                okToProcess = true;

            if (this.idsRemaining > 0) {
                if (this.products.selectedProduct.clientRelevant && this.selectedRequestDetail.requestId.courseId === this.config.SANDBOX_ID && client.clientStatus != this.config.SANDBOX_CLIENT_CODE) {
                    message = "The request is for a sandbox and the client isn't a sandbox client.  Are you sure you want to assign it?";
                }
                if (this.selectedRequestDetail.requestId.courseId != this.config.SANDBOX_ID && client.clientStatus == this.config.SANDBOX_CLIENT_CODE) {
                    message = "The request is for a regular course and the client is a sandbox client";
                }

                if (message) {
                    return this.dialog.showMessage(message, "Confirm Assignment", ['Yes', 'No']).then(function (response) {
                        if (response.wasCancelled) {
                            okToProcess = false;
                        } else {
                            _this2.processClient(index, client, el);
                        }
                    });
                } else {
                    this.processClient(index, client, el);
                }
            }
        };

        Assignments.prototype.processClient = function processClient(index, client, el) {
            var alreadySelected = false;
            this.assignmentDetails.forEach(function (item) {
                if (item.systemId === client.systemId && item.client === client.client) alreadySelected = true;
            });

            if (alreadySelected) return;

            this.proposedClient.push(client);

            if (client.assignments.length > 0) {
                var maxId = 0;
                client.assignments.forEach(function (item) {
                    if (item.lastID > maxId) maxId = item.lastID;
                });
                this.firstID = maxId + parseInt(this.idBuffer);
            }

            this.lastFirstID = this.firstID;
            this.firstNumericFacID = client.lastFacIdAssigned == 0 ? parseInt(client.lastFacIdAssigned) : parseInt(client.lastFacIdAssigned) + parseInt(this.config.FACULTY_ID_BUFFER);
            this.lastNumericFacID = this.firstNumericFacID + this.config.DEFAULT_FACULTY_IDS;

            this.calcLastID();

            this.assignmentDetails.push({
                staffId: this.userObj._id,

                client: client.client,

                systemId: client.systemId,
                firstID: this.firstID,
                lastID: this.lastID,
                firstFacID: this.firstNumericFacID,
                lastFacID: this.lastNumericFacID,
                idsAssigned: parseInt(this.lastID) - parseInt(this.firstID)
            });
            this.totalIdsAssigned = parseInt(this.totalIdsAssigned) + parseInt(this.lastID) - parseInt(this.firstID);
            this.assignmentDetailIndex = this.assignmentDetails.length - 1;

            this.assignmentDetails[this.assignmentDetailIndex].firstID = this.firstID;
            this.assignmentDetails[this.assignmentDetailIndex].lastID = this.lastID;
            this.proposedClient[this.assignmentDetailIndex].firstFacIdAssigned = this.firstNumericFacID;
            this.assignmentDetails[this.assignmentDetailIndex].firstFacID = this.firstNumericFacID;
            this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = this.lastNumericFacID;
            this.assignmentDetails[this.assignmentDetailIndex].lastFacID = this.lastNumericFacID;

            if (this.studentIDTemplates.length) {
                this.calcAssignment();
                this.idsRemaining = parseInt(this.idsRemaining) - this.assignmentDetails[this.assignmentDetailIndex].idsAssigned;
            }

            this.clientSelected = true;
            this.enableButton = true;

            if (this.selectedRow) this.selectedRow.children().removeClass('info');
            this.selectedRow = $(el.target).closest('tr');
            this.selectedRow.children().addClass('info');
        };

        Assignments.prototype.calcLastID = function calcLastID() {
            if (this.idsRemaining > this.lastIDAvailable) {
                this.lastID = this.lastIDAvailable;
            } else {
                this.lastID = parseInt(this.firstID) + parseInt(this.idsRemaining);
            }

            this.oldLastID = this.lastID;
        };

        Assignments.prototype.calcAssignment = function calcAssignment() {
            this.calcIDRangeFromTemplate();
            this.calculatePasswords();
        };

        Assignments.prototype.calcIDRangeFromTemplate = function calcIDRangeFromTemplate() {
            if (this.manualMode || this.assignmentDetailIndex == -1) {
                return;
            }

            if (this.products.selectedProduct.defaultStudentIdPrefix && this.products.selectedProduct.defaultStudentIdPrefix.indexOf(this.config.ID_WILDCARD) == -1 || this.studentIDTemplates.length == 0) {
                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = this.products.selectedProduct.defaultStudentIdPrefix;
            } else {
                var selectedStudentIDTemplates = new Array();
                if (this.selectedStudentIDTemplate.length == 0) {
                    selectedStudentIDTemplates.push(this.studentIDTemplates[0]);
                } else {
                    for (var k = 0; k < this.selectedStudentIDTemplate.length; k++) {
                        selectedStudentIDTemplates.push(this.studentIDTemplates[parseInt(this.selectedStudentIDTemplate[k])]);
                    }
                }

                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = "";
                for (var i = 0; i < selectedStudentIDTemplates.length; i++) {
                    var firstStudentId = this.getID(selectedStudentIDTemplates[i], this.firstID);
                    var lastStudentId = this.getID(selectedStudentIDTemplates[i], this.lastID);
                    this.assignmentDetails[this.assignmentDetailIndex].studentUserIds += firstStudentId + " to " + lastStudentId + ":";
                }

                this.assignmentDetails[this.assignmentDetailIndex].studentUserIds = this.assignmentDetails[this.assignmentDetailIndex].studentUserIds.substring(0, this.assignmentDetails[this.assignmentDetailIndex].studentUserIds.length - 1);
                this.assignmentDetails[this.assignmentDetailIndex].notValid = this.validateIDRange(this.proposedClient[this.assignmentDetailIndex], this.assignmentDetails[this.assignmentDetailIndex], this.selectedRequestDetail._id) ? '' : 'danger';
                if (this.assignmentDetails[this.assignmentDetailIndex].notValid != 'danger') this.validation.makeValid($("#errorRange"));
            }

            this.calcFacIDRangeFromTemplate();
        };

        Assignments.prototype.calcFacIDRangeFromTemplate = function calcFacIDRangeFromTemplate() {
            if (this.products.selectedProduct.defaultFacultyIdPrefix && this.products.selectedProduct.defaultFacultyIdPrefix.indexOf(this.config.ID_WILDCARD) == -1 || this.selectedRequestDetail.requestId.courseId === this.config.SANDBOX_ID || this.facultyIDTemplates.length == 0) {

                if (this.selectedRequestDetail.requestId.courseId !== this.config.SANDBOX_ID) this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = this.products.selectedProduct.defaultFacultyIdPrefix;
            } else {
                var selectedFacultyIDTemplates = new Array();
                if (this.selectedStudentIDTemplate.length == 0) {
                    selectedFacultyIDTemplates.push(this.facultyIDTemplates[0]);
                } else {
                    for (var k = 0; k < this.selectedStudentIDTemplate.length; k++) {
                        selectedFacultyIDTemplate.push(this.facultyIDTemplates[parseInt(this.selectedFacultyIDTemplate[k])]);
                    }
                }

                this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = "";
                for (var i = 0; i < selectedFacultyIDTemplates.length; i++) {
                    var firstFacID = this.getID(selectedFacultyIDTemplates[i], this.assignmentDetails[this.assignmentDetailIndex].firstFacID);
                    var lastFacID = this.getID(selectedFacultyIDTemplates[i], this.assignmentDetails[this.assignmentDetailIndex].lastFacID);
                    this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds += firstFacID + " to " + lastFacID + ":";
                }

                this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds = this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds.substring(0, this.assignmentDetails[this.assignmentDetailIndex].facultyUserIds.length - 1);
            }
        };

        Assignments.prototype.getID = function getID(idPrefix, id) {
            if (idPrefix) {
                var len = idPrefix.lastIndexOf(this.config.ID_WILDCARD) - idPrefix.indexOf(this.config.ID_WILDCARD) + 1;
                var prefix = "000".substr(0, len - id.toString().length);
                return idPrefix.substr(0, idPrefix.indexOf(this.config.ID_WILDCARD)) + prefix + id;
            }
            return "";
        };

        Assignments.prototype.calculatePasswords = function calculatePasswords() {
            if (this.manualMode || this.assignmentDetailIndex == -1) {
                return;
            }

            if (this.assignmentDetails.length > 0) {
                this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.assignmentDetails[0].facultyPassword;
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.assignmentDetails[0].studentPassword;
            }
            var random;
            var prefix;
            var len;

            if (this.products.selectedProduct.defaultStudentPassword && this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD) != -1) {
                len = this.products.selectedProduct.defaultStudentPassword.lastIndexOf(this.config.ID_WILDCARD) - this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD) + 1;
                prefix = "9" + "000".substr(0, len - 1);
                random = Math.floor(Math.random() * parseInt(prefix));
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.products.selectedProduct.defaultStudentPassword.substr(0, this.products.selectedProduct.defaultStudentPassword.indexOf(this.config.ID_WILDCARD)) + random;
            } else {
                this.assignmentDetails[this.assignmentDetailIndex].studentPassword = this.products.selectedProduct.defaultStudentPassword;
            }

            if (this.selectedRequestDetail.requestId.courseId === this.config.SANDBOX_ID) {
                this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = "";
            } else {
                if (this.products.selectedProduct.defaultFacultyPassword && this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD) != -1) {
                    len = this.products.selectedProduct.defaultFacultyPassword.lastIndexOf(this.config.ID_WILDCARD) - this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD) + 1;
                    prefix = "9" + "000".substr(0, len - 1);
                    random = Math.floor(Math.random() * parseInt(prefix));
                    this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.products.selectedProduct.defaultFacultyPassword.substr(0, this.products.selectedProduct.defaultFacultyPassword.indexOf(this.config.ID_WILDCARD)) + random;
                } else {
                    this.assignmentDetails[this.assignmentDetailIndex].facultyPassword = this.products.selectedProduct.defaultFacultyPassword;
                }
            }
        };

        Assignments.prototype.firstIDChanged = function firstIDChanged() {
            if (this.firstID < this.firstAllowableID) this.firstID = this.firstAllowableID;
            if (parseInt(this.lastID) + parseInt(this.firstID) - parseInt(this.lastFirstID) > this.lastIDAvailable) {
                this.firstID = this.lastFirstID;
                return;
            }

            this.lastID = parseInt(this.lastID) + parseInt(this.firstID) - parseInt(this.lastFirstID);

            if (this.assignmentDetailIndex > -1) {
                this.assignmentDetails[this.assignmentDetailIndex].firstID = this.firstID;
                this.assignmentDetails[this.assignmentDetailIndex].lastID = this.lastID;
                this.calcIDRangeFromTemplate();
            }

            this.lastFirstID = this.firstID;
        };

        Assignments.prototype.lastIDChanged = function lastIDChanged() {
            if (this.lastID > this.lastIDAvailable) {
                this.lastID = this.lastIDAvailable;
            }

            this.idsRequired = parseInt(this.idsRequired) + parseInt(this.lastID) - parseInt(this.oldLastID);

            if (this.assignmentDetailIndex > -1) {
                this.assignmentDetails[this.assignmentDetailIndex].idsAssigned = parseInt(this.assignmentDetails[this.assignmentDetailIndex].idsAssigned) + parseInt(this.lastID) - parseInt(this.oldLastID);
                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) + parseInt(this.lastID) - parseInt(this.oldLastID);

                this.assignmentDetails[this.assignmentDetailIndex].lastID = this.lastID;
                this.proposedClient[this.assignmentDetailIndex].lastIdAssigned = this.lastID;

                this.calcIDRangeFromTemplate();
            } else {
                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.lastID) - parseInt(this.oldLastID);
            }
            this.oldLastID = this.lastID;
        };

        Assignments.prototype.lastFacIDChanged = function lastFacIDChanged() {
            this.numberOfFacIDs = parseInt(this.lastNumericFacID) - parseInt(this.firstNumericFacID) + 1;
            if (this.assignmentDetailIndex > -1) {
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = parseInt(this.lastNumericFacID);
                this.assignmentDetails[this.assignmentDetailIndex].lastFacID = parseInt(this.lastNumericFacID);
                this.calcFacIDRangeFromTemplate();
            }
        };

        Assignments.prototype.firstFacIDChanged = function firstFacIDChanged() {
            this.lastNumericFacID = parseInt(this.firstNumericFacID) + parseInt(this.numberOfFacIDs) - 1;
            if (this.assignmentDetailIndex > -1) {
                this.proposedClient[this.assignmentDetailIndex].firstFacIdAssigned = this.firstNumericFacID;
                this.assignmentDetails[this.assignmentDetailIndex].firstFacID = this.firstNumericFacID;
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = this.lastNumericFacID;
                this.assignmentDetails[this.assignmentDetailIndex].lastFacID = this.lastNumericFacID;
                this.calcFacIDRangeFromTemplate();
            }
        };

        Assignments.prototype.selectProposedClient = function selectProposedClient(index, el) {
            this.assignmentDetailIndex = this.assignmentDetailIndex == -1 ? index : -1;
            if (this.assignmentDetailIndex == -1) {
                this.selectedAssignedClient = "";
                if (this.selectedRow) this.selectedRow.children().removeClass('info');
            } else {
                this.selectedAssignedClient = this.assignmentDetails[this.assignmentDetailIndex].client;

                this.firstID = this.assignmentDetails[this.assignmentDetailIndex].firstID;
                this.lastID = this.assignmentDetails[this.assignmentDetailIndex].lastID;
                this.proposedClient[this.assignmentDetailIndex].lastIdAssigned = this.lastID;
                this.firstNumericFacID = this.assignmentDetails[this.assignmentDetailIndex].firstFacID;
                this.lastNumericFacID = this.assignmentDetails[this.assignmentDetailIndex].lastFacID;
                this.proposedClient[this.assignmentDetailIndex].lastFacIdAssigned = this.assignmentDetails[this.assignmentDetailIndex].lastFacID;
                this.oldIdsAssigned = parseInt(this.lastID) - parseInt(this.lastID);
                this.oldLastID = this.lastID;
                this.lastFirstID = this.firstID;

                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                this.selectedRow = $(el.target).closest('tr');
                this.selectedRow.children().addClass('info');
            }
        };

        Assignments.prototype.deleteProposedClient = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(index) {
                var _this3 = this;

                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                if (!this.assignmentDetails[index].assignedDate) {
                                    _context4.next = 4;
                                    break;
                                }

                                return _context4.abrupt('return', this.dialog.showMessage("This will delete the assignment.  Are you sure you want to do that?", "Delete Assignment", ['Yes', 'No']).then(function (response) {
                                    if (!response.wasCancelled) {
                                        _this3.deleteSaved(index);
                                    }
                                }));

                            case 4:
                                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.assignmentDetails[index].idsAssigned);
                                this.assignmentDetailIndex = -1;

                                this.assignmentDetails.splice(index, 1);
                                this.proposedClient.splice(index, 1);

                            case 9:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function deleteProposedClient(_x) {
                return _ref4.apply(this, arguments);
            }

            return deleteProposedClient;
        }();

        Assignments.prototype.deleteSaved = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(index) {
                var i, request, serverResponse;
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:
                                this.proposedClient[index].idsAvailable = parseInt(this.proposedClient[index].idsAvailable) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.idsRemaining = parseInt(this.idsRemaining) + parseInt(this.assignmentDetails[index].idsAssigned);
                                this.totalIdsAssigned = parseInt(this.totalIdsAssigned) - parseInt(this.assignmentDetails[index].idsAssigned);

                                i = 0;

                            case 4:
                                if (!(i < this.proposedClient[index].assignments.length)) {
                                    _context5.next = 12;
                                    break;
                                }

                                if (!(this.proposedClient[index].assignments[i].assignment == this.selectedRequestDetail._id)) {
                                    _context5.next = 9;
                                    break;
                                }

                                this.proposedClient[index].assignments.splice(i, 1);
                                if (this.proposedClient[index].assignments.length == 0 && this.proposedClient[index].clientStatus != this.config.SANDBOX_ID) this.proposedClient[index].clientStatus = this.config.UNASSIGNED_CLIENT_CODE;
                                return _context5.abrupt('break', 12);

                            case 9:
                                i++;
                                _context5.next = 4;
                                break;

                            case 12:
                                this.systems.updateClient(this.proposedClient[index]);
                                this.assignmentDetails.splice(index, 1);
                                if (this.assignmentDetails.length == 0) this.selectedRequestDetail.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;

                                this.selectedRequestDetail.idsAssigned = parseInt(this.totalIdsAssigned);
                                this.selectedRequestDetail.assignments = this.assignmentDetails;
                                this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);
                                this.requestToSave.requestDetailsToSave = new Array();
                                request = this.utils.copyObject(this.selectedRequestDetail);

                                delete request['requestId'];
                                this.requestToSave.requestDetailsToSave.push(request);

                                this.requests.setSelectedRequest(this.requestToSave);
                                _context5.next = 25;
                                return this.requests.saveRequest();

                            case 25:
                                serverResponse = _context5.sent;

                                if (serverResponse.status) {
                                    _context5.next = 30;
                                    break;
                                }

                                this.utils.showNotification("The assignment was deleted", "", "", "", "", 5);
                                _context5.next = 30;
                                return this.systems.saveClients(this.proposedClient);

                            case 30:
                                this.selectedAssignedClient = "";

                            case 31:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function deleteSaved(_x2) {
                return _ref5.apply(this, arguments);
            }

            return deleteSaved;
        }();

        Assignments.prototype.delete = function _delete() {
            var _this4 = this;

            return this.dialog.showMessage("Are you sure you want to delete the request?", "Delete Request", ['Yes', 'No']).then(function (response) {
                if (!response.wasCancelled) {
                    _this4.deleteRequest();
                }
            });
        };

        Assignments.prototype.deleteRequest = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                var serverResponse;
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                this.requests.setSelectedRequest(this.selectedRequestDetail);
                                _context6.next = 3;
                                return this.requests.deleteRequest();

                            case 3:
                                serverResponse = _context6.sent;

                                if (!serverResponse.error) {
                                    this.filterInAssigned();
                                    this.utils.showNotification("The request was deleted");
                                    this.dataTable.updateArray(this.requests.requestsDetailsArray);
                                    this.filterInAssigned();
                                }
                                this.requestSelected = 'table';

                            case 6:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function deleteRequest() {
                return _ref6.apply(this, arguments);
            }

            return deleteRequest;
        }();

        Assignments.prototype.save = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.validation.validate(1, this)) {
                                    _context7.next = 8;
                                    break;
                                }

                                if (!this._buildRequest()) {
                                    _context7.next = 8;
                                    break;
                                }

                                this.requests.setSelectedRequest(this.requestToSave);
                                email = this._buildEmailObject();
                                _context7.next = 6;
                                return this.requests.assignRequest(email);

                            case 6:
                                serverResponse = _context7.sent;

                                if (!serverResponse.status) {
                                    this.utils.showNotification("The request was updated");
                                    this.systems.saveSystem();
                                    this._cleanUp();
                                }

                            case 8:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function save() {
                return _ref7.apply(this, arguments);
            }

            return save;
        }();

        Assignments.prototype._buildEmailObject = function _buildEmailObject() {
            var mailObject = {};
            var date = new Date(this.selectedRequestDetail.requiredDate);
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
            if (this.selectedRequestDetail.requestStatus !== this.config.PROVISIONAL_REQUEST_CODE && this.sendEmail) {
                mailObject.reason = 2;
                mailObject.numStudents = parseInt(this.selectedRequestDetail.requestId.undergradIds) + parseInt(this.selectedRequestDetail.requestId.graduateIds);
                mailObject.fullName = this.selectedRequestDetail.requestId.personId.fullName;
                mailObject.requestNo = this.selectedRequestDetail.requestId.clientRequestNo;
                mailObject.email = this.selectedRequestDetail.requestId.personId.email;
                mailObject.product = [{ name: this.selectedRequestDetail.productId.name, requiredDate: month + "/" + day + "/" + year }], mailObject.course = this.selectedRequestDetail.requestId.courseId.name;
                mailObject.cc = this.config.PRODUCT_REQUESTS_EMAIL_LIST ? this.config.PRODUCT_REQUESTS_EMAIL_LIST : "";
                mailObject.message = "Your product request has been updated.";
            }

            return mailObject;
        };

        Assignments.prototype._buildRequest = function _buildRequest() {
            if (this.selectedRequestDetail.requestStatus == this.config.ASSIGNED_REQUEST_CODE) {
                for (var i = 0; i < this.assignmentDetails.length; i++) {
                    for (var j = 0; j < this.proposedClient.length; j++) {
                        var oldIdsAssigned = parseInt(this.proposedClient[j].idsAssigned);
                        var oldIdsAvailable = parseInt(this.proposedClient[j].idsAvailable);
                        if (this.assignmentDetails[i].client == this.proposedClient[j].client) {
                            if (this.assignmentDetails[i].assignedDate) {
                                if (this.proposedClient[j].assignments) {
                                    for (var k = 0; k < this.proposedClient[j].assignments.length; k++) {
                                        if (this.proposedClient[j].assignments[k].assignment == this.selectedRequestDetail._id) {
                                            var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                                            this.proposedClient[j].idsAvailable = parseInt(this.proposedClient[j].idsAvailable) + parseInt(this.oldRequest.assignments[i].idsAssigned) - totalIdsAssigned;
                                            this.proposedClient[j].assignments[k].studentIDRange = this.assignmentDetails[i].studentUserIds;
                                            this.proposedClient[j].assignments[k].facultyIDRange = this.assignmentDetails[i].facultyUserIds;
                                            this.proposedClient[j].assignments[k].firstID = this.assignmentDetails[i].firstID;
                                            this.proposedClient[j].assignments[k].lastID = this.assignmentDetails[i].lastID;
                                            this.systems.updateClient(this.proposedClient[j]);
                                        }
                                    }
                                }
                            } else {
                                this.assignmentDetails[i].assignedDate = new Date();
                                this.selectedRequestDetail.assignedDate = new Date();
                                if (this.selectedRequestDetail.requestId.courseId != this.config.SANDBOX_ID) this.proposedClient[i].clientStatus = this.config.ASSIGNED_CLIENT_CODE;
                                var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                                this.proposedClient[i].idsAvailable = parseInt(this.proposedClient[i].idsAvailable) - (parseInt(totalIdsAssigned) - this.oldIdsAssigned);
                                this.proposedClient[i].assignments.push({
                                    assignment: this.selectedRequestDetail._id,
                                    studentIDRange: this.assignmentDetails[i].studentUserIds,
                                    facultyIDRange: this.assignmentDetails[i].facultyUserIds,
                                    institutionId: this.selectedRequestDetail.requestId.institutionId,
                                    firstID: this.assignmentDetails[i].firstID,
                                    lastID: this.assignmentDetails[i].lastID
                                });
                                this.systems.updateClient(this.proposedClient[i]);
                            }
                        }
                    }
                }
            } else {
                if (this.provisionalAssignment) {
                    this.selectedRequestDetail.requestStatus = this.config.PROVISIONAL_REQUEST_CODE;
                } else {
                    this.selectedRequestDetail.requestStatus = this.config.ASSIGNED_REQUEST_CODE;
                }

                for (var i = 0; i < this.proposedClient.length; i++) {
                    this.assignmentDetails[i].assignedDate = new Date();
                    this.assignmentDetails[i].modifiedDate = new Date();
                    if (this.selectedRequestDetail.requestId.courseId != this.config.SANDBOX_ID) this.proposedClient[i].clientStatus = this.config.ASSIGNED_CLIENT_CODE;
                    if (this.proposedClient[i].assignments.length > 1 && this.proposedClient[i].clientStatus != this.config.SANDBOX_CLIENT_CODE) this.proposedClient[i].clientStatus = this.config.SHARED_CLIENT_CODE;
                    var totalIdsAssigned = parseInt(this.assignmentDetails[i].lastID) - parseInt(this.assignmentDetails[i].firstID);
                    this.proposedClient[i].idsAvailable = parseInt(this.proposedClient[i].idsAvailable) - totalIdsAssigned;
                    this.proposedClient[i].assignments.push({
                        assignment: this.selectedRequestDetail._id,
                        studentIDRange: this.assignmentDetails[i].studentUserIds,
                        facultyIDRange: this.assignmentDetails[i].facultyUserIds,
                        institutionId: this.selectedRequestDetail.requestId.institutionId,
                        firstID: this.assignmentDetails[i].firstID,
                        lastID: this.assignmentDetails[i].lastID,
                        assignedDate: new Date()
                    });
                    this.systems.updateClient(this.proposedClient[i]);
                };
            }

            this.selectedRequestDetail.idsAssigned = parseInt(this.totalIdsAssigned);
            this.selectedRequestDetail.assignments = this.assignmentDetails;
            this.requestToSave = this.utils.copyObject(this.selectedRequestDetail.requestId);
            this.requestToSave.audit.push({
                property: 'Assigned',
                newValue: this.selectedRequestDetail.requestNo,
                oldValue: this.selectedRequestDetail.productId._id,
                eventDate: new Date(),
                personId: this.userObj._id
            });
            this.requestToSave.requestDetailsToSave = new Array();
            var request = this.utils.copyObject(this.selectedRequestDetail);
            delete request['requestId'];
            this.requestToSave.requestDetailsToSave.push(request);

            return true;
        };

        Assignments.prototype.saveEdit = function () {
            var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                        switch (_context8.prev = _context8.next) {
                            case 0:
                                email = false;

                                this.buildAuditDetail();
                                this.requests.selectedRequestDetail = this.utils.copyObject(this.selectedRequestDetail);
                                _context8.next = 5;
                                return this.requests.saveRequestDetail(email);

                            case 5:
                                serverResponse = _context8.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The request was updated");
                                    this.dataTable.updateArray(this.requests.requestsDetailsArray);
                                    this.filterInAssigned();
                                    this._cleanUp();
                                }

                            case 7:
                            case 'end':
                                return _context8.stop();
                        }
                    }
                }, _callee8, this);
            }));

            function saveEdit() {
                return _ref8.apply(this, arguments);
            }

            return saveEdit;
        }();

        Assignments.prototype.buildAuditDetail = function buildAuditDetail() {
            var obj = this.selectedRequestDetail;
            if (obj.productId != this.originalRequestDetail.productId._id) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "productId",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.productId._id,
                    newValue: obj.productId._id,
                    personId: this.userObj._id
                });
            }
            if (obj.requestStatus != this.originalRequestDetail.requestStatus) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'requestStatus',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestStatus,
                    newValue: obj.requestStatus,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.undergradIds != this.originalRequestDetail.requestId.undergradIds) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "undergradIds",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.undergradIds,
                    newValue: obj.requestId.undergradIds,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.graduateIds != this.originalRequestDetail.requestId.graduateIds) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "graduateIds",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.graduateIds,
                    newValue: obj.requestId.graduateIds,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.startDate != this.originalRequestDetail.requestId.startDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'startDate',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetailrequestId.startDate,
                    newValue: obj.requestId.startDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.endDate != this.originalRequestDetail.requestId.endDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'endDate',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.endDate,
                    newValue: obj.requestId.endDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requiredDate != this.originalRequestDetail.requiredDate) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: "requiredDate",
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requiredDate,
                    newValue: obj.requiredDate,
                    personId: this.userObj._id
                });
            }
            if (obj.requestId.courseId != this.originalRequestDetail.requestId.courseId) {
                this.selectedRequestDetail.requestId.audit.push({
                    property: 'courseId',
                    eventDate: new Date(),
                    oldValue: this.originalRequestDetail.requestId.courseId,
                    newValue: obj.requestId.courseId,
                    personId: this.userObj._id
                });
            }
        };

        Assignments.prototype.validateIDRange = function validateIDRange(client, assignment, id) {
            if (!client.assignments || client.assignments.length == 0) return true;
            var valid = true;
            var x1 = parseInt(assignment.firstID);
            var x2 = parseInt(assignment.lastID);
            for (var i = 0; i < client.assignments.length; i++) {
                if (this.existingRequest && client.assignments[i].assignment == id) {
                    continue;
                } else {
                    var y1 = parseInt(client.assignments[i].firstID);
                    var y2 = parseInt(client.assignments[i].lastID);
                    if (!(x2 < y1 || x1 > y2)) valid = false;
                }
            }
            return valid;
        };

        Assignments.prototype.back = function back() {
            this._cleanUp();
        };

        Assignments.prototype._cleanUp = function _cleanUp() {
            this.proposedClient = new Array();
            this.assignmentDetails = new Array();
            this.proposedAssignment = new Object();
            this.parameterIndex = new Object();
            this.systems.selectSystem();
            this.selectedAssignedClient = "";
            this.firstID = 0;
            this.lastID = 0;
            this.requestSelected = 'table';
            this.customerMessage = false;
        };

        Assignments.prototype.findAssignedClients = function findAssignedClients() {
            var _this5 = this;

            this.assignmentDetails.forEach(function (item) {
                _this5.systems.selectClientFromID(item.systemId, item.client);
                _this5.proposedClient.push(_this5.systems.selectedClient);
            });
        };

        Assignments.prototype.systemSelected = function systemSelected() {
            this.systems.selectedSystemFromId($("#systemSelect").val());
            if (!this.products.selectedProduct.clientRelevant) {
                this.calcAssignment();
            }
        };

        Assignments.prototype.openEditStudentTemplate = function openEditStudentTemplate() {
            this.showAddStudentTemplate = true;
        };

        Assignments.prototype.cancelEditStudentTemplate = function cancelEditStudentTemplate() {
            this.showAddStudentTemplate = false;
        };

        Assignments.prototype.saveStudentTemplate = function () {
            var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
                return regeneratorRuntime.wrap(function _callee9$(_context9) {
                    while (1) {
                        switch (_context9.prev = _context9.next) {
                            case 0:
                                _context9.next = 2;
                                return this.products.saveProduct();

                            case 2:
                                this.studentIDTemplates = this.products.selectedProduct.defaultStudentIdPrefix.split(":");
                                this.showAddStudentTemplate = false;

                            case 4:
                            case 'end':
                                return _context9.stop();
                        }
                    }
                }, _callee9, this);
            }));

            function saveStudentTemplate() {
                return _ref9.apply(this, arguments);
            }

            return saveStudentTemplate;
        }();

        Assignments.prototype.changeManualMode = function changeManualMode() {
            localStorage.setItem('manualMode', this.manualMode);
        };

        Assignments.prototype.changeUnassignedOnlychangeUnassignedOnly = function changeUnassignedOnlychangeUnassignedOnly() {
            localStorage.setItem('unassignedOnly', this.unassignedOnly);
        };

        Assignments.prototype.changeRoundTo10 = function changeRoundTo10() {
            localStorage.setItem('roundTo10', this.roundTo10);
        };

        Assignments.prototype.customerActionDialog = function customerActionDialog() {
            var _this6 = this;

            if (this.profileRequest) {
                this.model = 'header';
                this.selectedRequestNo = this.profileRequest.requestId.clientRequestNo;
                this.requestId = this.profileRequest.requestId._id;
                this.course = this.profileRequest.requestId.courseId.name;
                this.productName = this.profileRequest.productId.name;
                this.requiredDate = this.profileRequest.requiredDate;
                this.email = this.profileRequest.requestId.personId.email;
                this.hideProfile();
            } else {
                this.model = 'detail';
                this.requestId = this.selectedRequestDetail._id;
                this.productName = this.selectedRequestDetail.productId.name;
                this.selectedRequestNo = this.selectedRequestDetail.requestId.clientRequestNo;
                this.course = this.selectedRequestDetail.requestId.courseId.name;
                this.requiredDate = this.selectedRequestDetail.requiredDate;
                this.email = this.selectedRequestDetail.requestId.personId.email;
            }

            var subject = "Question about product request " + this.selectedRequestNo;
            var email = { emailBody: "", emailSubject: subject, emailId: this.email };
            return this.dialog.showEmail("Enter Email", email, ['Submit', 'Cancel']).whenClosed(function (response) {
                if (!response.wasCancelled) {
                    _this6.sendTheEmail(response.output);
                } else {
                    console.log("Cancelled");
                }
            });
        };

        Assignments.prototype.sendTheEmail = function () {
            var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(email) {
                var date, day, month, year, serverResponse;
                return regeneratorRuntime.wrap(function _callee10$(_context10) {
                    while (1) {
                        switch (_context10.prev = _context10.next) {
                            case 0:
                                if (!email) {
                                    _context10.next = 12;
                                    break;
                                }

                                if (this.model === 'header') {
                                    this.requests.updateDetailStatuses(this.selectedRequestNo, this.config.CUSTOMER_ACTION_REQUEST_CODE);
                                } else {
                                    this.requests.updateDetailStatus(this.requestId, this.config.CUSTOMER_ACTION_REQUEST_CODE);
                                }

                                this.filterInAssigned();
                                date = new Date(this.requiredDate);
                                day = date.getDate();
                                month = date.getMonth() + 1;
                                year = date.getFullYear();

                                this.message = {
                                    reason: 3,
                                    id: this.requestId,
                                    customerMessage: email.email.emailBody,
                                    email: email.email.emailId,
                                    subject: email.email.emailSubject,
                                    clientRequestNo: this.selectedRequestNo,
                                    product: [{ name: this.productName, requiredDate: month + "/" + day + "/" + year }],
                                    session: this.sessions.selectedSession.session + ' ' + this.sessions.selectedSession.year,
                                    course: this.course,
                                    requestStatus: this.config.CUSTOMER_ACTION_REQUEST_CODE,
                                    model: this.model,
                                    audit: {
                                        property: 'Send Message',
                                        eventDate: new Date(),
                                        newValue: email.email.emailBody,
                                        personId: this.userObj._id
                                    }
                                };
                                _context10.next = 10;
                                return this.requests.sendCustomerMessage(this.message);

                            case 10:
                                serverResponse = _context10.sent;

                                if (!serverResponse.error) {
                                    this.utils.showNotification("The message was sent");
                                }

                            case 12:
                            case 'end':
                                return _context10.stop();
                        }
                    }
                }, _callee10, this);
            }));

            function sendTheEmail(_x3) {
                return _ref10.apply(this, arguments);
            }

            return sendTheEmail;
        }();

        Assignments.prototype.showProfile = function showProfile(request, el) {
            this.profileRequest = request;
            $(".hoverProfile").css("top", el.clientY - 175);
            $(".hoverProfile").css("left", el.clientX - 300);
            $(".hoverProfile").css("display", "block");
        };

        Assignments.prototype.hideProfile = function hideProfile() {
            $(".hoverProfile").css("display", "none");
        };

        Assignments.prototype.showComment = function showComment(request, el) {
            if (request.requestStatus == this.config.REPLIED_REQUEST_CODE) {
                this.commentShown = request.requestId.comments;
                $(".hover").css("top", el.clientY - 200);
                $(".hover").css("left", el.clientX - 10);
                $(".hover").css("display", "block");
            }
        };

        Assignments.prototype.hideComment = function hideComment() {
            $(".hover").css("display", "none");
        };

        Assignments.prototype.openSettings = function openSettings() {
            this.showSettings = !this.showSettings;
            if (this.showSettings) {
                this.idSandboxBuffer = localStorage.getItem('idSandboxBuffer') ? localStorage.getItem('idBuffer') : this.config.SANDBOX_ID_BUFFER;
                this.idBuffer = localStorage.getItem('idBuffer') ? localStorage.getItem('idBuffer') : this.config.REGULAR_ID_BUFFER;
                this.sandBoxIDs = localStorage.getItem('sandBoxIDs') ? localStorage.getItem('sandBoxIDs') : this.config.SANDBOX_ID_COUNT;
            }
        };

        Assignments.prototype.saveSettings = function saveSettings() {
            localStorage.setItem('idSandboxBuffer', this.idSandboxBuffer);
            localStorage.setItem('idBuffer', this.idBuffer);
            localStorage.setItem('sandBoxIDs', this.sandBoxIDs);
            this.showSettings = false;
        };

        Assignments.prototype.restoreDefaults = function restoreDefaults() {
            this.idBuffer = this.config.REGULAR_ID_BUFFER;
            this.sandBoxIDs = this.config.SANDBOX_ID_COUNT;
        };

        Assignments.prototype.openFacultyDetails = function openFacultyDetails() {
            this.facultyDetails = !this.facultyDetails;
        };

        Assignments.prototype._setUpValidation = function _setUpValidation() {
            this.validation.addRule(1, "errorRange", [{ "rule": "custom", "message": "Invalid ID range",
                "valFunction": function valFunction(context) {
                    var valid = true;
                    if (context.assignmentDetails) {
                        for (var i = 0; i < context.assignmentDetails.length; i++) {
                            if (context.assignmentDetails[i].notValid == 'danger') valid = false;
                        }
                    }
                    return valid;
                } }]);
        };

        Assignments.prototype.openAudit = function openAudit() {
            this.showAudit = !this.showAudit;
        };

        Assignments.prototype.filterInAssigned = function filterInAssigned() {
            if (this.isCheckedAssigned) {
                this.dataTable.filterList(this.config.ASSIGNED_REQUEST_CODE, { type: 'custom', filter: this.statusCustomFilter, compare: 'custom' });
            } else {
                this.dataTable.updateArray(this.requests.requestsDetailsArray, 'requiredDate', -1);
            }
        };

        Assignments.prototype.editRequest = function editRequest(index, request) {
            var _this7 = this;

            this.editIndex = this.dataTable.getOriginalIndex(index);
            this.selectedRequestDetail = this.utils.copyObject(request);

            this.products.selectedProductFromId(this.selectedRequestDetail.productId._id);
            this.editStartDate = this.selectedRequestDetail.requestId.startDate;
            this.originalRequestDetail = this.utils.copyObject(this.selectedRequestDetail);
            this.personCourses = this.people.coursesArray.filter(function (item) {
                return item.personId == _this7.selectedRequestDetail.requestId.personId._id;
            });

            this.requestSelected = 'edit';
        };

        Assignments.prototype.backEdit = function backEdit() {
            this.requestSelected = 'table';
        };

        Assignments.prototype.setDates = function setDates(session) {
            if (session) {
                $("#input-startDate").val("");
                $("#input-endDate").val("");
            }
            this.minStartDate = this.sessions.selectedSession.startDate;
            this.maxStartDate = this.sessions.selectedSession.endDate;
            this.minEndDate = this.sessions.selectedSession.startDate;
            this.maxEndDate = this.sessions.selectedSession.endDate;

            var nowPlusLeeway = (0, _moment2.default)(new Date()).add(this.config.REQUEST_LEEWAY, 'days');
            this.minRequiredDate = _moment2.default.max(nowPlusLeeway, (0, _moment2.default)(this.sessions.selectedSession.startDate));
            this.minRequiredDate = (0, _moment2.default)(this.minRequiredDate._d).format('YYYY-MM-DD');
            this.maxRequiredDate = this.sessions.selectedSession.endDate;
        };

        Assignments.prototype.changeBeginDate = function changeBeginDate(evt) {
            if (evt.detail && evt.detail.value.date !== "") {
                this.minEndDate = (0, _moment2.default)(evt.detail.value.date).format("MM/DD/YYYY");
                this.requests.selectedRequest.endDate = _moment2.default.max(this.requests.selectedRequest.startDate, this.requests.selectedRequest.endDate);
            }
        };

        Assignments.prototype.customNameFilter = function customNameFilter(value, item, context) {
            return item.requestId.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.statusCustomFilter = function statusCustomFilter(value, item, context) {
            if (item.requestStatus == value) return false;
            return true;
        };

        Assignments.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
            return item.requestId.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.courseCustomFilter = function courseCustomFilter(value, item, context) {
            return item.requestId.courseId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
        };

        Assignments.prototype.customProductNameFilter = function customProductNameFilter(value, item, context) {
            for (var i = 0; i < context.products.productsArray.length; i++) {
                if (item.productId._id == context.products.productsArray[i]._id) {
                    return context.products.productsArray[i].name.toUpperCase().indexOf(value.toUpperCase()) > -1;
                }
            }
            return false;
        };

        Assignments.prototype.customCourseSorter = function customCourseSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['courseId']['name'] < b['requestId']['courseId']['name'] ? -1 : a['requestId']['courseId']['name'] > b['requestId']['courseId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        Assignments.prototype.customInstitutionsSorter = function customInstitutionsSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['institutionId']['name'] < b['requestId']['institutionId']['name'] ? -1 : a['requestId']['institutionId']['name'] > b['requestId']['institutionId']['name'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        Assignments.prototype.customPersonSorter = function customPersonSorter(sortProperty, sortDirection, sortArray, context) {
            return sortArray.sort(function (a, b) {
                var result = a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName'] ? -1 : a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName'] ? 1 : 0;
                return result * sortDirection;
            });
        };

        return Assignments;
    }()) || _class);
});
define('modules/tech/requests/createRequest',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../resources/data/sessions', '../../../resources/data/products', '../../../resources/data/siteInfo', '../../../resources/data/clientRequests', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/dialogs/common-dialogs', 'flatpickr', 'aurelia-event-aggregator', 'fuelux', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _sessions, _products, _siteInfo, _clientRequests, _appConfig, _utils, _people, _validation, _commonDialogs, _flatpickr, _aureliaEventAggregator, _fuelux, _moment) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.CreateRequestTech = undefined;

	var _validation2 = _interopRequireDefault(_validation);

	var _flatpickr2 = _interopRequireDefault(_flatpickr);

	var _fuelux2 = _interopRequireDefault(_fuelux);

	var _moment2 = _interopRequireDefault(_moment);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {
			default: obj
		};
	}

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var CreateRequestTech = exports.CreateRequestTech = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _commonDialogs.CommonDialogs, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _clientRequests.ClientRequests, _siteInfo.SiteInfo, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
		function CreateRequestTech(router, config, validation, people, dialog, datatable, utils, sessions, products, requests, siteInfo, ea) {
			_classCallCheck(this, CreateRequestTech);

			this.sessionSelected = false;
			this.spinnerHTML = "";

			this.router = router;
			this.config = config;
			this.validation = validation;
			this.validation.initialize(this);
			this.people = people;
			this.dataTable = datatable;
			this.dataTable.initialize(this);
			this.utils = utils;
			this.sessions = sessions;
			this.products = products;
			this.requests = requests;
			this.siteInfo = siteInfo;
			this.dialog = dialog;
			this.ea = ea;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));;
		}

		CreateRequestTech.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.sessions.getSessionsArray('?filter=[or]sessionStatus|Active:Requests&order=startDate', true), this.products.getProductsArray('?filter=active|eq|true&order=name', true), this.people.getInstitutionsArray('?filter=institutionStatus|eq|01&order=name'), this.siteInfo.getMessageArray('?filter=category|eq|CLIENT_REQUESTS', true), this.config.getConfig()]);

							case 2:
								responses = _context.sent;


								this.requests.selectRequest();
								this.filterList();
								this._setUpValidation();

								if (!this.config.SANDBOX_USED) {
									this.typeSelected = true;
									this.regularClient = true;
									this.requestType = "regularCourse";
								}

							case 7:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		CreateRequestTech.prototype.changeBeginDate = function changeBeginDate(evt) {
			if (evt.detail && evt.detail.value.date !== "") {
				this.minEndDate = (0, _moment2.default)(evt.detail.value.date).format("MM/DD/YYYY");
				this.requests.selectedRequest.endDate = _moment2.default.max(this.requests.selectedRequest.startDate, this.requests.selectedRequest.endDate);
			}
		};

		CreateRequestTech.prototype.selectProduct = function selectProduct(el) {
			if (this.requests.selectedRequest.requestDetails.length < this.config.REQUEST_LIMIT && !this.showLockMessage) {
				if (this.alreadyOnList(el.target.id)) {
					this.utils.showNotification('If you need more than one client of a product, add a comment on the next step.');
				} else {
					$("#requestProductsLabel").html("Requested Products");
					var newObj = this.requests.emptyRequestDetail();
					newObj.productId = el.target.id;
					newObj.sessionId = this.sessionId;
					newObj.courseId = this.courseId;
					this.requests.selectedRequest.requestDetails.push(newObj);
					this.products.selectedProductFromId(newObj.productId);
					this.requests.selectedRequest.requestDetails[this.requests.selectedRequest.requestDetails.length - 1].productName = this.products.selectedProduct.name;
				}
			}

			this.validation.makeValid($("#productList"));
		};

		CreateRequestTech.prototype.alreadyOnList = function alreadyOnList(id) {
			for (var i = 0; i < this.requests.selectedRequest.requestDetails.length; i++) {
				if (this.requests.selectedRequest.requestDetails[i].productId === id) return true;
			}
			return false;
		};

		CreateRequestTech.prototype.removeProduct = function removeProduct(el) {
			var _this = this;

			if (!this.showLockMessage) {
				for (var i = 0; i < this.requests.selectedRequest.requestDetails.length; i++) {
					if (el.target.id === this.requests.selectedRequest.requestDetails[i].productId) {
						if (this.requests.selectedRequest.requestDetails[i]._id) {
							if (this.requests.selectedRequest.requestDetails[i].requestStatus == this.config.ASSIGNED_REQUEST_CODE) {
								return this.dialog.showMessage("That request has already been assigned and cannot be deleted?", "Cannot Delete Request", ['Ok']).then(function (response) {});
							} else {
								return this.dialog.showMessage("Are you sure you want to delete that request?", "Delete Request", ['Yes', 'No']).then(function (response) {
									if (!response.wasCancelled) {
										_this.requests.selectedRequest.requestDetails[i].delete = true;
									}
								});
							}
							break;
						} else {
							this.requests.selectedRequest.requestDetails.splice(i, 1);
							for (var j = 0; j < this.productInfo.length; j++) {
								if (el.target.id == this.productInfo[j].productId) {
									this.productInfo.splice(j, 1);
									break;
								}
							}
							break;
						}
					}
				}
			}
		};

		CreateRequestTech.prototype._buildRequest = function _buildRequest() {
			var _this2 = this;

			if (this.requests.selectedRequest._id) {
				this.requests.selectedRequest.requestDetailsToSave = this.requests.selectedRequest.requestDetails;
				this.requests.selectedRequest.requestDetailsToSave.forEach(function (item, index) {
					if (item.requestStatus != _this2.config.ASSIGNED_REQUEST_CODE) item.requestStatus = _this2.config.UPDATED_REQUEST_CODE;
				});
				this.requests.selectedRequest.requestStatus = this.config.UPDATED_REQUEST_CODE;
			} else {
				this.requests.selectedRequest.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;
			}

			this.requests.selectedRequest.audit[0].personId = this.userObj._id;
			this.requests.selectedRequest.institutionId = this.selectedInstitution;
			this.requests.selectedRequest.sessionId = this.sessionId;
			this.requests.selectedRequest.courseId = this.courseId;
			this.requests.selectedRequest.personId = this.selectedPerson;
		};

		CreateRequestTech.prototype.save = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var email, serverResponse;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!this.validation.validate(1)) {
									_context2.next = 8;
									break;
								}

								this._buildRequest();
								email = this._buildEmailObject();
								_context2.next = 5;
								return this.requests.saveRequest(email);

							case 5:
								serverResponse = _context2.sent;

								if (!serverResponse.status) {
									this.utils.showNotification("The product request was updated");
									this.systemSelected = false;
								}
								this._cleanUp();

							case 8:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function save() {
				return _ref2.apply(this, arguments);
			}

			return save;
		}();

		CreateRequestTech.prototype._buildEmailObject = function _buildEmailObject() {
			var _this3 = this;

			var mailObject = new Object();
			mailObject.products = new Array();
			this.requests.selectedRequest.requestDetails.forEach(function (detail, index) {
				_this3.products.selectedProductFromId(detail.productId);
				var date = new Date(detail.requiredDate);
				var day = date.getDate();
				var month = date.getMonth();
				var year = date.getFullYear();
				mailObject.products.push({ id: detail.productId, requiredDate: month + "/" + day + "/" + year, name: _this3.products.selectedProduct.name });
			});

			mailObject.comments = this.requests.selectedRequest.comments;
			mailObject.name = this.userObj.fullName;
			mailObject.numStudents = parseInt(this.requests.selectedRequest.undergradIds) + parseInt(this.requests.selectedRequest.graduateIds);
			mailObject.email = this.people.selectedPerson.email;
			mailObject.reason = 1;
			mailObject.cc = this.config.REQUESTS_EMAIL_LIST ? this.config.REQUESTS_EMAIL_LIST : "";

			return mailObject;
		};

		CreateRequestTech.prototype._cleanUp = function _cleanUp() {
			this.requests.selectRequest();
			this.productInfo = new Array();
			this.sessionSelected = false;
			this.institutionSelected = false;
			this.personSelected = false;
			this.typeSelected = false;
			this.courseSelected = false;
			this.regularClient = false;
			this.sandBoxClient = false;
			$("#existingRequestInfo").hide();
			this.courseId = "-1";
			this.sessionId = "";
			this.requestType = -1;
		};

		CreateRequestTech.prototype.changeSession = function () {
			var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(el) {
				return regeneratorRuntime.wrap(function _callee3$(_context3) {
					while (1) {
						switch (_context3.prev = _context3.next) {
							case 0:
								if (this.sessionId == "") {
									this.sessionSelected = false;
									this.courseSelected = false;
									this.sandBoxClient = false;
								} else {
									this.sessionSelected = true;

									this.sessions.selectSession(el.target.selectedIndex - 1);
									this.setDates();
								}

							case 1:
							case 'end':
								return _context3.stop();
						}
					}
				}, _callee3, this);
			}));

			function changeSession(_x) {
				return _ref3.apply(this, arguments);
			}

			return changeSession;
		}();

		CreateRequestTech.prototype.changeInstitution = function changeInstitution(el) {
			console.log(this.selectedInstitution);
			this.institutionSelected = true;
			this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.selectedInstitution + '&order=lastName', true);
		};

		CreateRequestTech.prototype.changePerson = function changePerson(el) {
			this.personSelected = true;
			this.people.selectedPersonFromId(this.selectedPerson, 'i');
		};

		CreateRequestTech.prototype.changeRequestType = function changeRequestType(el) {
			switch (this.requestType) {
				case -1:
					this.regularClient = false;
					break;
				case "regularCourse":
					this.regularClient = true;
					this.people.getCoursesArray(true, '?filter=personId|eq|' + this.selectedPerson + '&order=number', true);
					break;
				case "sandboxCourse":
					this.courseId = this.config.SANDBOX_ID;
					this.sandBoxClient = true;
					break;
			}
		};

		CreateRequestTech.prototype.openEditCourseForm = function () {
			var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
				return regeneratorRuntime.wrap(function _callee4$(_context4) {
					while (1) {
						switch (_context4.prev = _context4.next) {
							case 0:
								if (this.showCourses) {
									_context4.next = 3;
									break;
								}

								_context4.next = 3;
								return this.refreshCourses();

							case 3:
								this.showCourses = !this.showCourses;

							case 4:
							case 'end':
								return _context4.stop();
						}
					}
				}, _callee4, this);
			}));

			function openEditCourseForm() {
				return _ref4.apply(this, arguments);
			}

			return openEditCourseForm;
		}();

		CreateRequestTech.prototype.refreshCourses = function () {
			var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
				return regeneratorRuntime.wrap(function _callee5$(_context5) {
					while (1) {
						switch (_context5.prev = _context5.next) {
							case 0:
								_context5.next = 2;
								return this.people.getCoursesArray(true, '?filter=personId|eq|' + this.selectedPerson + '&order=number', true);

							case 2:
							case 'end':
								return _context5.stop();
						}
					}
				}, _callee5, this);
			}));

			function refreshCourses() {
				return _ref5.apply(this, arguments);
			}

			return refreshCourses;
		}();

		CreateRequestTech.prototype.editACourse = function editACourse() {
			if (this.courseId != -1) {
				this.editCourse = true;
				$("#number").focus();
			}
		};

		CreateRequestTech.prototype.newCourse = function newCourse() {
			this.editCourseIndex = -1;
			this.people.selectCourse();
			$("#number").focus();
			this.editCourse = true;
		};

		CreateRequestTech.prototype.saveCourse = function () {
			var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
				var serverResponse;
				return regeneratorRuntime.wrap(function _callee6$(_context6) {
					while (1) {
						switch (_context6.prev = _context6.next) {
							case 0:
								if (!this.validation.validate(5)) {
									_context6.next = 9;
									break;
								}

								if (!this.userObj._id) {
									_context6.next = 9;
									break;
								}

								if (this.people.selectedCourse._id) this.editCourseIndex = this.baseArray.length;
								this.people.selectedCourse.personId = this.userObj._id;
								_context6.next = 6;
								return this.people.saveCourse();

							case 6:
								serverResponse = _context6.sent;

								if (!serverResponse.status) {
									this.utils.showNotification("The course was updated");
								}
								this.editCourse = false;

							case 9:
							case 'end':
								return _context6.stop();
						}
					}
				}, _callee6, this);
			}));

			function saveCourse() {
				return _ref6.apply(this, arguments);
			}

			return saveCourse;
		}();

		CreateRequestTech.prototype.cancelEditCourse = function cancelEditCourse() {
			this.editCourse = false;
		};

		CreateRequestTech.prototype.selectCourse = function () {
			var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(index, el) {
				return regeneratorRuntime.wrap(function _callee7$(_context7) {
					while (1) {
						switch (_context7.prev = _context7.next) {
							case 0:
								this.editCourseIndex = index;
								this.people.selectCourse(this.editCourseIndex);
								this.courseSelected = true;
								this.courseId = this.people.selectedCourse._id;
								_context7.next = 6;
								return this.getRequests();

							case 6:

								if (this.selectedCourseRow) this.selectedCourseRow.children().removeClass('info');
								this.selectedCourseRow = $(el.target).closest('tr');
								this.selectedCourseRow.children().addClass('info');

							case 9:
							case 'end':
								return _context7.stop();
						}
					}
				}, _callee7, this);
			}));

			function selectCourse(_x2, _x3) {
				return _ref7.apply(this, arguments);
			}

			return selectCourse;
		}();

		CreateRequestTech.prototype.getRequests = function () {
			var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
				var dateFoo, existingMsg;
				return regeneratorRuntime.wrap(function _callee8$(_context8) {
					while (1) {
						switch (_context8.prev = _context8.next) {
							case 0:
								if (!(this.sessionId != -1 && this.courseId != -1)) {
									_context8.next = 8;
									break;
								}

								this.ILockedIt = false;
								this.existingRequest = false;
								_context8.next = 5;
								return this.requests.getPersonClientRequestsArray('?filter=[and]personId|eq|' + this.selectedPerson + ':sessionId|eq|' + this.sessionId + ':courseId|eq|' + this.courseId, true);

							case 5:
								if (this.requests.requestsArray && this.requests.requestsArray.length > 0) {
									this.requests.selectRequest(0);
									this.setDates(false);

									this.ILockedIt = true;
									this.existingRequest = true;
									if (this.requests.requestsArray && this.requests.requestsArray.length > 0) {
										dateFoo = (0, _moment2.default)(new Date(this.requests.selectedRequest.requestDetails[0].createdDate)).format(this.config.DATE_FORMAT_TABLE);
										existingMsg = this.siteInfo.selectMessageByKey('EXISTING_REQUEST_MESSAGE').content.replace('DATECREATED', dateFoo);

										$("#existingRequestInfo").html('').append(existingMsg).fadeIn();
									} else {
										$("#existingRequestInfo").empty().hide();
									}
								} else {
									$("#existingRequestInfo").empty().hide();
									this.setDates(true);
									this.existingRequest = false;
									this.requests.selectRequest();
									this.requests.selectedRequest.sessionId = this.sessionId;
								}

								_context8.next = 9;
								break;

							case 8:
								this.existingRequest = false;

							case 9:
							case 'end':
								return _context8.stop();
						}
					}
				}, _callee8, this);
			}));

			function getRequests() {
				return _ref8.apply(this, arguments);
			}

			return getRequests;
		}();

		CreateRequestTech.prototype.filterList = function filterList() {
			if (this.filter) {
				var thisFilter = this.filter;
				this.filteredProductsArray = this.products.productsArray.filter(function (item) {
					return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
				});
			} else {
				this.filteredProductsArray = this.products.productsArray;
			}
		};

		CreateRequestTech.prototype.setDates = function setDates(session) {
			if (session) {
				$("#input-startDate").val("");
				$("#input-endDate").val("");
			}
			this.minStartDate = this.sessions.selectedSession.startDate;
			this.maxStartDate = this.sessions.selectedSession.endDate;
			this.minEndDate = this.sessions.selectedSession.startDate;
			this.maxEndDate = this.sessions.selectedSession.endDate;

			var nowPlusLeeway = (0, _moment2.default)(new Date()).add(this.config.REQUEST_LEEWAY, 'days');
			this.minRequiredDate = _moment2.default.max(nowPlusLeeway, (0, _moment2.default)(this.sessions.selectedSession.startDate));
			this.minRequiredDate = (0, _moment2.default)(this.minRequiredDate._d).format('YYYY-MM-DD');
			this.maxRequiredDate = this.sessions.selectedSession.endDate;
		};

		CreateRequestTech.prototype.changeCourse = function () {
			var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(el) {
				var courseId;
				return regeneratorRuntime.wrap(function _callee9$(_context9) {
					while (1) {
						switch (_context9.prev = _context9.next) {
							case 0:
								courseId = el.target.options[el.target.selectedIndex].value;

								this.selectedCourseIndex = el.target.selectedIndex;

								if (!(courseId === "")) {
									_context9.next = 6;
									break;
								}

								this.courseSelected = false;
								_context9.next = 11;
								break;

							case 6:
								this.courseSelected = true;
								this.courseName = this.courses[el.target.selectedIndex - 1].number + " - " + this.courses[el.target.selectedIndex - 1].name;
								this.validation.makeValid($(el.target));
								_context9.next = 11;
								return this.getRequests();

							case 11:
							case 'end':
								return _context9.stop();
						}
					}
				}, _callee9, this);
			}));

			function changeCourse(_x4) {
				return _ref9.apply(this, arguments);
			}

			return changeCourse;
		}();

		CreateRequestTech.prototype._setUpValidation = function _setUpValidation() {
			this.validation.addRule(1, "session", [{ "rule": "custom", "message": "Select a session",
				"valFunction": function valFunction(context) {
					return !(context.sessionId == -1);
				} }]);
			this.validation.addRule(1, "institution", [{ "rule": "custom", "message": "Select an institution",
				"valFunction": function valFunction(context) {
					return !(context.selectedInstitution == "");
				} }]);
			this.validation.addRule(1, "faculty", [{ "rule": "custom", "message": "Select a person",
				"valFunction": function valFunction(context) {
					return !(context.selectedPerson == "");
				} }]);
			this.validation.addRule(1, "course", [{ "rule": "custom", "message": "Select a course",
				"valFunction": function valFunction(context) {
					return context.courseId != undefined && !(context.courseId == "-1");
				}
			}]);
			this.validation.addRule(1, "startDateError", [{ "rule": "required", "message": "Select a date",
				"value": "requests.selectedRequest.startDate" }]);
			this.validation.addRule(1, "endDateError", [{ "rule": "required", "message": "Select a date",
				"value": "requests.selectedRequest.endDate" }]);

			this.validation.addRule(1, "requestType", [{ "rule": "custom", "message": "Select a request type",
				"valFunction": function valFunction(context) {
					return !(context.requestType == -1);
				} }]);
			this.validation.addRule(1, "numberOfStudentsError", [{ "rule": "custom", "message": "Enter either the number of undergradate or graduate students",
				"valFunction": function valFunction(context) {
					if (context.requestType === "sandboxCourse") {
						return true;
					} else if (context.requests.selectedRequest.undergradIds == 0 && context.requests.selectedRequest.graduateIds == 0) {
						return false;
					} else {
						return true;
					}
				}
			}]);
			this.validation.addRule(1, "productList", [{ "rule": "custom", "message": "Select at least one product",
				"valFunction": function valFunction(context) {
					if (context.requests.selectedRequest.requestDetails.length === 0) {
						return false;
					} else {
						return true;
					}
				}
			}]);
			this.validation.addRule(1, "productListTable", [{ "rule": "custom", "message": "Enter all required dates",
				"valFunction": function valFunction(context) {
					for (var i = 0; i < context.requests.selectedRequest.requestDetails.length; i++) {
						if (!context.requests.selectedRequest.requestDetails[i].requiredDate || context.requests.selectedRequest.requestDetails[i].requiredDate === "") {
							return false;
						}
					}
					return true;
				}
			}]);
			this.validation.addRule(5, "number", [{ "rule": "required", "message": "Enter the course number", "value": "people.selectedCourse.number" }, { "rule": "required", "message": "Enter the course name", "value": "people.selectedCourse.name" }]);
		};

		return CreateRequestTech;
	}()) || _class);
});
define('modules/tech/requests/techRequests',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.TechRequests = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var TechRequests = exports.TechRequests = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function TechRequests(router, config) {
            _classCallCheck(this, TechRequests);

            this.title = "Tech Staff Client Assignments";

            this.router = router;
            this.config = config;
        }

        TechRequests.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        TechRequests.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        TechRequests.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'assignments'],
                moduleId: './assignments',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'assignments',
                title: "Assignments"
            }, {
                route: 'createRequest',
                moduleId: './createRequest',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'createRequest',
                title: 'Create Request'
            }, {
                route: 'clientRequestsAnalytics',
                moduleId: '../../analytics/clientRequests',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'clientRequests',
                title: 'Client Requests Analytics'
            }]);

            this.router = router;
        };

        return TechRequests;
    }()) || _class);
});
define('modules/tech/support/archiveHelpTickets',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../resources/data/helpTickets', '../../../resources/data/sessions', '../../../resources/data/products', '../../../resources/data/downloads', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _helpTickets, _sessions, _products, _downloads, _appConfig, _utils, _people, _validation, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ArchiveHelpTickets = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ArchiveHelpTickets = exports.ArchiveHelpTickets = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _dataTable.DataTable, _utils.Utils, _helpTickets.HelpTickets, _sessions.Sessions, _downloads.Downloads, _products.Products), _dec(_class = function () {
    function ArchiveHelpTickets(router, config, validation, people, datatable, utils, helpTickets, sessions, apps, products) {
      _classCallCheck(this, ArchiveHelpTickets);

      this.searchResults = false;
      this.helpTicketSelected = false;
      this.navControl = "supportNavButtons";
      this.spinnerHTML = "";
      this.helpTicketNo = "";
      this.selectedProducts = new Array();
      this.selectedPeople = new Array();
      this.selectedInstitutions = new Array();

      this.router = router;
      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this.people = people;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.utils = utils;
      this.helpTickets = helpTickets;
      this.sessions = sessions;
      this.apps = apps;
      this.products = products;
    }

    ArchiveHelpTickets.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.all([this.helpTickets.getHelpTicketTypes('?order=category'), this.helpTickets.getHelpTicketArray("", true), this.sessions.getSessionsArray('?order=startDate', true), this.products.getProductsArray('?order=name'), this.people.getInstitutionsArray('?order=name'), this.people.getPeopleArray('?order=lastName'), this.config.getConfig()]);

              case 2:
                responses = _context.sent;

                this.filterList();
                this.filterPeopleList();
                this.filterInstitutionsList();

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ArchiveHelpTickets.prototype.attached = function attached() {
      $("#helpTicketStatus").val(this.config.NEW_HELPTICKET_STATUS).change();
      this.dateFrom = "";
      this.dateTo = "";
    };

    ArchiveHelpTickets.prototype.buildSearchCriteria = function buildSearchCriteria() {
      this.searchObj = new Object();

      this.searchObj.helpTicketNo = this.helpTicketNo;

      this.searchObj.dateRange = {
        dateFrom: this.dateFrom,
        dateTo: this.dateTo
      };

      this.searchObj.status = this.selectedStatus;

      this.searchObj.keyWords = this.keyWords;

      this.searchObj.content = this.content;

      this.searchObj.type = this.selectedType;

      this.searchObj.productIds = this.selectedProducts;

      this.searchObj.peopleIds = this.selectedPeople;

      this.searchObj.institutionIds = this.selectedInstitutions;
    };

    ArchiveHelpTickets.prototype.search = function search() {
      this.buildSearchCriteria();
      this.resultArray = this.helpTickets.advancedSearch(this.searchObj);
      this.helpTicketSelected = true;
      this.dataTable.updateArray(this.resultArray);
    };

    ArchiveHelpTickets.prototype.helpTicketNoEntered = function helpTicketNoEntered() {
      if (this.helpTicketNo.length > 0) {
        $('#elementsToOperateOn :input').attr('disabled', true);
      } else {
        $('#elementsToOperateOn :input').removeAttr('disabled');
      }
    };

    ArchiveHelpTickets.prototype.typeChanged = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
        var index;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this._hideTypes();
                index = parseInt(this.selectedType) - 1;

                if (!(index === 3)) {
                  _context2.next = 6;
                  break;
                }

                this.showAdditionalInfo = false;
                _context2.next = 15;
                break;

              case 6:
                this.showAdditionalInfo = true;
                this.config.HELP_TICKET_TYPES[index].show = true;

                if (!(this.config.HELP_TICKET_TYPES[index].appsRequired || !this.config.HELP_TICKET_TYPES[index].clientRequired)) {
                  _context2.next = 13;
                  break;
                }

                _context2.next = 11;
                return this.apps.getDownloadsArray(true, '?fields=helpTicketRelevant|eq|true&order=name');

              case 11:
                _context2.next = 15;
                break;

              case 13:
                _context2.next = 15;
                return this.products.getProductsArray('?fields=_id name');

              case 15:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function typeChanged() {
        return _ref2.apply(this, arguments);
      }

      return typeChanged;
    }();

    ArchiveHelpTickets.prototype._hideTypes = function _hideTypes() {
      for (var i = 0; i < this.config.HELP_TICKET_TYPES.length; i++) {
        this.config.HELP_TICKET_TYPES[i].show = false;
      }
    };

    ArchiveHelpTickets.prototype.filterList = function filterList() {
      if (this.filter) {
        var thisFilter = this.filter;
        this.filteredProductsArray = this.products.productsArray.filter(function (item) {
          return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
        });
      } else {
        this.filteredProductsArray = this.products.productsArray;
      }
    };

    ArchiveHelpTickets.prototype.selectProduct = function selectProduct(el) {
      $("#requestProductsLabel").html("Requested Products");
      this.selectedProducts.push(el.target.id);
    };

    ArchiveHelpTickets.prototype.removeProduct = function removeProduct(el) {
      this.selectedProducts.splice(this.selectedProducts.indexOf(el.target.id), 1);
    };

    ArchiveHelpTickets.prototype.filterPeopleList = function filterPeopleList() {
      if (this.peopleFilter) {
        var thisFilter = this.peopleFilter;
        this.filteredPersonArray = this.people.peopleArray.filter(function (item) {
          return item.fullName.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
        });
      } else {
        this.filteredPersonArray = this.people.peopleArray;
      }
    };

    ArchiveHelpTickets.prototype.selectPerson = function selectPerson(el) {
      $("#requestProductsLabel").html("Requested Person");
      this.selectedPeople.push(el.target.id);
    };

    ArchiveHelpTickets.prototype.removePerson = function removePerson(el) {
      this.selectedPeople.splice(this.selectedPeople.indexOf(el.target.id), 1);
    };

    ArchiveHelpTickets.prototype.filterInstitutionsList = function filterInstitutionsList() {
      if (this.institutionsFilter) {
        var thisFilter = this.institutionsFilter;
        this.filteredInstitutionArray = this.people.institutionsArray.filter(function (item) {
          return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
        });
      } else {
        this.filteredInstitutionArray = this.people.institutionsArray;
      }
    };

    ArchiveHelpTickets.prototype.selectInstitution = function selectInstitution(el) {
      this.selectedInstitutions.push(el.target.id);
    };

    ArchiveHelpTickets.prototype.removeInstitution = function removeInstitution(el) {
      this.selectedInstitutions.splice(this.selectedInstitutions.indexOf(el.target.id), 1);
    };

    ArchiveHelpTickets.prototype.clearCriteria = function clearCriteria() {
      this.selectedInstitutions = new Array();
      this.selectedPeople = new Array();
      this.selectedProducts = new Array();
      this.searchInstitution = false;
      this.searchPeople = false;
      this.searchProduct = false;
      this.keyWords = "";
      this.content = "";
      this.dateFrom = "";
      this.dateTo = "";
      this.selectedStatus = new Array();
      this.helpTicketNo = "";
      $('#elementsToOperateOn :input').removeAttr('disabled');
    };

    ArchiveHelpTickets.prototype.selectHelpTicket = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(helpTicket, el) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.helpTickets.selectHelpTicketByID(helpTicket._id);

                if (!this.helpTickets.selectedHelpTicket.content[0].content.systemId) {
                  _context3.next = 4;
                  break;
                }

                _context3.next = 4;
                return this.systems.getSystem(this.helpTickets.content.content.systemId);

              case 4:

                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                this.selectedRow = $(el.target).closest('tr');
                this.selectedRow.children().addClass('info');
                this.searchResults = true;

                this.viewHelpTicketsHeading = "Help Ticket " + this.helpTickets.selectedHelpTicket.helpTicketNo;

              case 9:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function selectHelpTicket(_x, _x2) {
        return _ref3.apply(this, arguments);
      }

      return selectHelpTicket;
    }();

    ArchiveHelpTickets.prototype._cleanUp = function _cleanUp() {
      this.enterResponse = false;
    };

    ArchiveHelpTickets.prototype.back = function back() {
      this.searchResults = false;
    };

    ArchiveHelpTickets.prototype.backToSearch = function backToSearch() {
      this.helpTicketSelected = false;
    };

    ArchiveHelpTickets.prototype._cleanUpFilters = function _cleanUpFilters() {
      $("#type").val("");
      $("#status").val("");
      $("#personStatus").val("");
    };

    return ArchiveHelpTickets;
  }()) || _class);
});
define('modules/tech/support/createHelpTickets',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/utils', '../../../resources/data/sessions', '../../../resources/data/downloads', '../../../resources/data/products', '../../../resources/data/systems', '../../../resources/data/helpTickets', '../../../resources/data/clientRequests', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/data/siteInfo'], function (exports, _aureliaFramework, _aureliaRouter, _utils, _sessions, _downloads, _products, _systems, _helpTickets, _clientRequests, _people, _validation, _dataTable, _appConfig, _siteInfo) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.CreateHelpTickets = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var CreateHelpTickets = exports.CreateHelpTickets = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _sessions.Sessions, _downloads.Downloads, _helpTickets.HelpTickets, _validation2.default, _utils.Utils, _dataTable.DataTable, _appConfig.AppConfig, _people.People, _clientRequests.ClientRequests, _products.Products, _systems.Systems, _siteInfo.SiteInfo, _aureliaFramework.TemplatingEngine), _dec(_class = function () {
        function CreateHelpTickets(router, sessions, apps, helpTickets, validation, utils, datatable, config, people, clientRequests, products, systems, site, templatingEngine) {
            _classCallCheck(this, CreateHelpTickets);

            this.showInfoBox = false;
            this.courseSelected = false;
            this.showHelpTicketDescription = false;
            this.showInputForm = false;
            this.showRequests = false;
            this.inputForm = null;
            this.showTypes = false;
            this.showCategories = false;
            this.inputHTML = "";
            this.spinnerHTML = "";
            this.removedFiles = new Array();
            this.showAdditionalInfo = false;

            this.router = router;
            this.sessions = sessions;
            this.apps = apps;
            this.helpTickets = helpTickets;
            this.people = people;
            this.utils = utils;
            this.validation = validation;
            this.validation.initialize(this);
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.clientRequests = clientRequests;
            this.products = products;
            this.systems = systems;
            this.site = site;
            this.templatingEngine = templatingEngine;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        CreateHelpTickets.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        CreateHelpTickets.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.helpTickets.getHelpTicketTypes('?order=category'), this.sessions.getSessionsArray('?filter=[or]sessionStatus|Active:Requests&order=startDate', true), this.people.getInstitutionsArray('?order=name', true), this.apps.getDownloadsArray(true, '?filter=helpTicketRelevant[eq]true&order=name'), this.systems.getSystemsArray(), this.config.getConfig(), this.site.getMessageArray('?filter=category|eq|HELP_TICKETS', true)]);

                            case 2:
                                responses = _context.sent;

                                this.helpTickets.selectHelpTicket();
                                this.sendEmail = this.config.SEND_EMAILS;
                                this.appsArray = this.apps.appDownloadsArray.filter(function (item) {
                                    return item.helpTicketRelevant;
                                });
                                this.editorMessage = this.getMessage('EDITOR_DESCRIPTION_MESSAGE');
                                this.fileUploadMessage = this.getMessage('FILE_UPLOAD_DESCRIPTION');

                            case 8:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        CreateHelpTickets.prototype.changeInstitution = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(event) {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return this.people.getPeopleArray('?filter=institutionId|eq|' + this.selectedInstitution + '&order=lastName', true);

                            case 2:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function changeInstitution(_x) {
                return _ref2.apply(this, arguments);
            }

            return changeInstitution;
        }();

        CreateHelpTickets.prototype.changePerson = function changePerson() {
            this.showCategories = this.selectedPerson != "";
        };

        CreateHelpTickets.prototype.categoryChanged = function categoryChanged() {
            if (this.helpTickets.selectedHelpTicket.helpTicketCategory > -1) {
                this.showTypes = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].showSubtypes;
                if (!this.showTypes) {
                    this.helpTicketTypeMessage = this.getMessage(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].type);
                    this.resources = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].documents;
                    this.helpTickets.selectedHelpTicket.helpTicketType = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].type;
                    this.showRequests = false;
                    this.showHelpTicketDescription = true;
                    this.showAdditionalInfo = true;
                    this.createInputForm(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].inputForm);

                    this.setupValidation(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].validation);
                } else {
                    this.inputForm = null;
                    this.showAdditionalInfo = false;
                    this.showHelpTicketDescription = false;
                    this.showRequests = false;
                }
            } else {
                this.inputForm = null;
                this.showTypes = false;
                this.showAdditionalInfo = false;
                this.showHelpTicketDescription = false;
                this.showRequests = false;
            }
        };

        CreateHelpTickets.prototype.getMessage = function getMessage(messageKey) {
            for (var i = 0; i < this.site.messageArray.length; i++) {
                if (this.site.messageArray[i].key === messageKey) return this.site.messageArray[i].content;
            }
            return "";
        };

        CreateHelpTickets.prototype.createInputForm = function createInputForm(html) {
            $('#container').html(html);
            var extendedInput = $('.extend');
            for (var i = 0; i < extendedInput.length; i++) {
                this.helpTickets.selectedHelpTicketContent.content[$(extendedInput[i]).attr('id')] = "";
            }

            var el = document.getElementById('container');

            if (el) {
                if (!el.querySelectorAll('.au-target').length) {
                    this.templatingEngine.enhance({ element: el, bindingContext: this });
                }
            }
        };

        CreateHelpTickets.prototype.typeChanged = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(el) {
                var keyWords, refreshProductArray;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.clearTables();

                                if (!(this.helpTicketType !== "NULL")) {
                                    _context3.next = 18;
                                    break;
                                }

                                this.helpTickets.selectedHelpTicket.helpTicketType = this.helpTicketType;
                                this.selectedHelpTicketType = this.getIndex();
                                this.createInputForm(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].inputForm);
                                this.helpTicketTypeMessage = this.getMessage(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].type);
                                this.showHelpTicketDescription = true;
                                this.inputForm = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].inputForm;
                                this.setupValidation(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].validation);

                                _context3.next = 11;
                                return this.products.getProductsArray('?fields=_id name');

                            case 11:
                                if (!this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].clientRequired) {
                                    _context3.next = 14;
                                    break;
                                }

                                _context3.next = 14;
                                return this.getActiveRequests();

                            case 14:
                                this.showAdditionalInfo = false;

                                if (this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].requestKeywords) {
                                    keyWords = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].requestKeywords;
                                    refreshProductArray = new Array();

                                    this.products.productsArray.forEach(function (item) {
                                        var foo = item.name.toUpperCase();
                                        if (foo.indexOf(keyWords) > -1) {
                                            refreshProductArray.push(item._id);
                                        }
                                    });
                                    this.clientRequestsArray = this.clientRequestsArray.filter(function (item) {
                                        return refreshProductArray.indexOf(item.productId) > -1 && item.systemId;
                                    });
                                }
                                _context3.next = 22;
                                break;

                            case 18:
                                this.inputForm = null;
                                this.showAdditionalInfo = false;
                                this.showHelpTicketDescription = false;
                                this.showRequests = false;

                            case 22:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function typeChanged(_x2) {
                return _ref3.apply(this, arguments);
            }

            return typeChanged;
        }();

        CreateHelpTickets.prototype.setupValidation = function setupValidation(rules) {
            var _this = this;

            this.validation.clearRules();
            rules.forEach(function (item) {
                _this.validation.addRule(1, item.control, [{ "rule": item.rule, "message": item.message, "value": item.value }]);
            });
        };

        CreateHelpTickets.prototype.getIndex = function getIndex() {
            var _this2 = this;

            var returnIndex;
            this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes.forEach(function (item, index) {
                if (item.type === _this2.helpTickets.selectedHelpTicket.helpTicketType) {
                    returnIndex = index;
                }
            });
            return returnIndex;
        };

        CreateHelpTickets.prototype.getActiveRequests = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var _this3 = this;

                var sessions;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                sessions = "";

                                this.sessions.sessionsArray.forEach(function (item) {
                                    sessions += item._id + ":";
                                });
                                sessions = sessions.substring(0, sessions.length - 1);
                                _context4.next = 5;
                                return this.clientRequests.getActiveClientRequestsArray(this.selectedPerson, sessions);

                            case 5:
                                this.clientRequestsArray = new Array();

                                this.clientRequests.requestsArray.forEach(function (item) {
                                    item.requestDetails.forEach(function (item2) {
                                        if (item2.assignments && item2.assignments.length > 0) {
                                            item2.assignments.forEach(function (assign) {
                                                _this3.clientRequestsArray.push({
                                                    productId: item2.productId,
                                                    sessionId: item.sessionId,
                                                    requestStatus: item2.requestStatus,
                                                    systemId: assign.systemId,
                                                    courseId: item.courseId,
                                                    client: assign.client,
                                                    clientId: assign.clientId,
                                                    _id: item2._id
                                                });
                                            });
                                        } else {
                                            _this3.clientRequestsArray.push({
                                                productId: item2.productId,
                                                sessionId: item.sessionId,
                                                requestStatus: item2.requestStatus,
                                                courseId: item.courseId,
                                                _id: item2._id
                                            });
                                        }
                                    });
                                });
                                if (this.clientRequestsArray.length > 0) this.showRequests = true;

                            case 8:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function getActiveRequests() {
                return _ref4.apply(this, arguments);
            }

            return getActiveRequests;
        }();

        CreateHelpTickets.prototype.requestChosen = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(el, index) {
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:

                                this.showAdditionalInfo = true;
                                this.SelectedClientRequest = this.clientRequestsArray[index];
                                this.selectedSessionId = this.clientRequestsArray[index].sessionId;

                                if (this.selectedProductRow) this.selectedProductRow.children().removeClass('info');
                                this.selectedProductRow = $(el.target).closest('tr');
                                this.selectedProductRow.children().addClass('info');

                            case 6:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function requestChosen(_x3, _x4) {
                return _ref5.apply(this, arguments);
            }

            return requestChosen;
        }();

        CreateHelpTickets.prototype.cancel = function cancel() {
            this.helpTickets.selectHelpTicket();
            this.helpTickets.selectHelpTicketContent();
            this.showHelpTicketDescription = false;
            this.courseSelected = false;
            this.showAdditionalInfo = false;
            this.showRequests = false;
        };

        CreateHelpTickets.prototype.buldHelpTicket = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                this.helpTickets.selectedHelpTicket.owner = [{ "personId": "b1b1b1b1b1b1b1b1b1b1b1b1", "date": new Date() }];
                                this.helpTickets.selectedHelpTicket.personId = this.selectedPerson;
                                this.helpTickets.selectedHelpTicket.institutionId = this.selectedInstitution;
                                this.helpTickets.selectedHelpTicket.sessionId = this.selectedSessionId;


                                if (!this.showTypes) {
                                    this.helpTickets.selectedHelpTicket.courseId = 'b1b1b1b1b1b1b1b1b1b1b1b1';
                                } else {
                                    this.helpTickets.selectedHelpTicket.requestId = this.SelectedClientRequest._id;
                                    this.helpTickets.selectedHelpTicket.systemId = this.SelectedClientRequest.systemId;
                                    this.helpTickets.selectedHelpTicket.clientId = this.SelectedClientRequest.clientId;
                                    this.helpTickets.selectedHelpTicket.productId = this.SelectedClientRequest.productId;
                                    this.helpTickets.selectedHelpTicket.courseId = this.SelectedClientRequest.courseId;
                                }

                                this.helpTickets.selectedHelpTicketContent.personId = this.userObj._id;
                                this.helpTickets.selectedHelpTicketContent.type = this.helpTickets.selectedHelpTicket.helpTicketType;
                                this.helpTickets.selectedHelpTicketContent.displayForm = this.inputForm;
                                this.helpTickets.selectedHelpTicket.content.push(this.helpTickets.selectedHelpTicketContent);

                            case 9:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function buldHelpTicket() {
                return _ref6.apply(this, arguments);
            }

            return buldHelpTicket;
        }();

        CreateHelpTickets.prototype.save = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context7.next = 9;
                                    break;
                                }

                                _context7.next = 3;
                                return this.buldHelpTicket();

                            case 3:
                                email = this.sendEmail ? 1 : 0;
                                _context7.next = 6;
                                return this.helpTickets.saveHelpTicket(email);

                            case 6:
                                serverResponse = _context7.sent;

                                if (!serverResponse.status) {
                                    this.utils.showNotification("The help ticket was created");
                                    if (this.files && this.files.length > 0) this.helpTickets.uploadFile(this.files, serverResponse.content[0]._id);
                                }

                                this._cleanUp();

                            case 9:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function save() {
                return _ref7.apply(this, arguments);
            }

            return save;
        }();

        CreateHelpTickets.prototype._cleanUp = function _cleanUp() {
            this.showTypes = false;
            this.selectedInstitution = "";
            this.selectedPerson = "";
            this.showCategories = false;
            this.showHelpTicketDescription = false;
            this.showRequests = false;
            this.showAdditionalInfo = false;
            this.helpTickets.selectHelpTicket();
            this.helpTickets.selectHelpTicketContent();
            this.clearTables();
            this.filesSelected = "";
        };

        CreateHelpTickets.prototype.clearTables = function clearTables() {
            if (this.selectedCourseRow) this.selectedCourseRow.children().removeClass('rowSelected');
            if (this.selectedProductRow) this.selectedProductRow.children().removeClass('rowSelected');
        };

        CreateHelpTickets.prototype.uploadFiles = function uploadFiles() {
            this.helpTickets.uploadFile(this.files);
        };

        CreateHelpTickets.prototype.changeFiles = function changeFiles() {
            this.filesSelected = "";
            this.selectedFiles = new Array();
            for (var i = 0; i < this.files.length; i++) {
                this.selectedFiles.push(this.files[i].name);
                this.filesSelected += this.files[i].name + " ";
            }
        };

        return CreateHelpTickets;
    }()) || _class);
});
define('modules/tech/support/support',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Support = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Support = exports.Support = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Support(router, config) {
            _classCallCheck(this, Support);

            this.title = "Tech Staff Help Tickets";

            this.router = router;
            this.config = config;
        }

        Support.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Support.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Support.prototype.getClass = function getClass(first) {
            return first ? 'active' : '';
        };

        Support.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'viewHelpTickets'],
                moduleId: './viewHelpTickets',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'viewHelpTickets',
                title: 'View Help Tickets'
            }, {
                route: 'createHelpTickets',
                moduleId: './createHelpTickets',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'createHelpTickets',
                title: 'Create Help Tickets'
            }]);

            this.router = router;
        };

        return Support;
    }()) || _class);
});
define('modules/tech/support/viewHelpTickets',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../resources/data/helpTickets', '../../../resources/data/sessions', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/downloads', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/dialogs/common-dialogs', '../../../resources/data/clientRequests', '../../../resources/data/documents'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _helpTickets, _sessions, _systems, _products, _downloads, _appConfig, _utils, _people, _validation, _commonDialogs, _clientRequests, _documents) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewHelpTickets = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ViewHelpTickets = exports.ViewHelpTickets = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _commonDialogs.CommonDialogs, _dataTable.DataTable, _utils.Utils, _helpTickets.HelpTickets, _sessions.Sessions, _systems.Systems, _downloads.Downloads, _products.Products, _aureliaFramework.TemplatingEngine, _clientRequests.ClientRequests, _documents.DocumentsServices), _dec(_class = function () {
    function ViewHelpTickets(router, config, validation, people, dialog, datatable, utils, helpTickets, sessions, systems, apps, products, templatingEngine, requests, documents) {
      _classCallCheck(this, ViewHelpTickets);

      this.helpTicketSelected = false;
      this.enterResponse = false;
      this.showLockMessage = false;
      this.sendMailDisable = false;
      this.notesHistory = false;
      this.lockMessage = "";
      this.colSpan = 10;
      this.spinnerHTML = "";
      this.filterValues = new Array();
      this.commentShown = "";
      this.responseMessage = "";

      this.router = router;
      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this.people = people;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.utils = utils;
      this.helpTickets = helpTickets;
      this.sessions = sessions;
      this.systems = systems;
      this.apps = apps;
      this.products = products;
      this.dialog = dialog;
      this.templatingEngine = templatingEngine;
      this.requests = requests;
      this.documents = documents;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));
      this.isUCC = this.userObj.userRole >= this.config.UCC_ROLE;
    }

    ViewHelpTickets.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(params) {
        var _this = this;

        var responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.all([this.helpTickets.getHelpTicketTypes('?order=category'), this.helpTickets.getHelpTicketArray("?filter=helpTicketStatus|lt|" + this.config.CLOSED_HELPTICKET_STATUS + "&order=createdDate:DSC", true), this.config.getConfig()]);

              case 2:
                responses = _context.sent;


                this.sessions.getSessionsArray('?order=startDate');
                this.apps.getDownloadsArray(true, '?filter=helpTicketRelevant|eq|true&order=name');
                this.systems.getSystemsArray();
                this.documents.getDocumentsCategoriesArray();

                this.peopleArray = this.people.peopleArray;
                this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                this.sendEmail = this.config.SEND_EMAILS;
                this._setUpValidation();
                this.helpTicketTypes = this.config.HELP_TICKET_STATUSES.filter(function (item) {
                  return item.code !== _this.config.CLOSED_HELPTICKET_STATUS;
                });

                this.helpTicketTypeLookupArray = new Array();
                this.helpTickets.helpTicketTypesArray.forEach(function (item) {
                  item.subtypes.forEach(function (item2) {
                    _this.helpTicketTypeLookupArray.push({ helpTicketType: item2.type, description: item2.description });
                  });
                });

                this.removeHTStatus = [this.config.NEW_HELPTICKET_STATUS, this.config.REPLIED_HELPTICKET_STATUS];

              case 15:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate(_x) {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ViewHelpTickets.prototype.attached = function attached() {
      $('[data-toggle="tooltip"]').tooltip();
    };

    ViewHelpTickets.prototype.detached = function detached() {
      this._unLock();
    };

    ViewHelpTickets.prototype.sendMailNow = function sendMailNow() {
      this.helpTickets.sendMail();
    };

    ViewHelpTickets.prototype.showComment = function showComment(helpTicket, el) {
      this.commentShown = helpTicket.content[0].content.comments;
      $(".hover").css("top", el.clientY - 100);
      $(".hover").css("left", el.clientX + 10);
      $(".hover").css("display", "block");
    };

    ViewHelpTickets.prototype.hideComment = function hideComment() {
      $(".hover").css("display", "none");
    };

    ViewHelpTickets.prototype.showProfile = function showProfile(helpTicket, el) {
      this.profileHelpTicket = helpTicket;
      $(".hoverProfile").css("top", el.clientY - 175);
      $(".hoverProfile").css("left", el.clientX - 100);
      $(".hoverProfile").css("display", "block");
    };

    ViewHelpTickets.prototype.hideProfile = function hideProfile() {
      $(".hoverProfile").css("display", "none");
    };

    ViewHelpTickets.prototype.sendAnEmail = function sendAnEmail(person) {
      var _this2 = this;

      if (person) {
        var email = { emailBody: "", emailSubject: "", person: person };
        return this.dialog.showEmail("Enter Email", email, ['Submit', 'Cancel']).whenClosed(function (response) {
          if (!response.wasCancelled) {
            _this2.sendTheEmail(response.output);
          } else {
            console.log("Cancelled");
          }
        });
      }
    };

    ViewHelpTickets.prototype.sendTheEmail = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(email) {
        var message, serverResponse;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!email) {
                  _context2.next = 6;
                  break;
                }

                message = {
                  id: email.email.person._id,
                  fullName: email.email.person.fullName,
                  message: email.email.emailBody,
                  email: email.email.person.email,
                  subject: email.email.emailSubject,
                  audit: {
                    property: 'Send Message',
                    eventDate: new Date(),
                    newValue: email.email.emailBody,
                    personId: this.userObj._id
                  }
                };
                _context2.next = 4;
                return this.people.sendCustomerMessage(message);

              case 4:
                serverResponse = _context2.sent;

                if (!serverResponse.error) {
                  this.utils.showNotification("The message was sent");
                  this.hideProfile();
                }

              case 6:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function sendTheEmail(_x2) {
        return _ref2.apply(this, arguments);
      }

      return sendTheEmail;
    }();

    ViewHelpTickets.prototype.confidentialChecked = function confidentialChecked() {
      if (document.getElementById('confidentialCheckBox').checked) {
        this.sendMailDisable = true;
        this.sendEmail = false;
      } else {
        this.sendMailDisable = false;
        this.sendEmail = true;
      }
    };

    ViewHelpTickets.prototype.refresh = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                this.helpTickets.getHelpTicketArray("?filter=helpTicketStatus|lt|" + this.config.CLOSED_HELPTICKET_STATUS + "&order=createdDate:DSC", true), this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                this.spinnerHTML = "";
                this._cleanUpFilters();

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function refresh() {
        return _ref3.apply(this, arguments);
      }

      return refresh;
    }();

    ViewHelpTickets.prototype.selectHelpTicket = function () {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(el, index) {
        var categoryIndex, subTypeIndex;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.editIndex = this.dataTable.displayArray[index + parseInt(this.dataTable.startRecord)].baseIndex;
                this.helpTickets.selectHelpTicket(this.editIndex);
                this.oroginalHelpTicket = this.helpTickets.selectedHelpTicket;
                this.openHelpTicket();

                categoryIndex = this.helpTickets.selectedHelpTicket.helpTicketCategory;
                subTypeIndex = this.getIndex(this.helpTickets.helpTicketTypesArray[categoryIndex].subtypes, this.helpTickets.selectedHelpTicket.content[0].type);

                this.clientRequired = this.helpTickets.helpTicketTypesArray[categoryIndex].subtypes[subTypeIndex].clientRequired;
                this.createOutputForm(this.helpTickets.helpTicketTypesArray[categoryIndex].subtypes[subTypeIndex].outputForm);

                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                this.selectedRow = $(el.target).closest('tr');
                this.selectedRow.children().addClass('info');

                this.viewHelpTicketsHeading = "Help Ticket " + this.helpTickets.selectedHelpTicket.helpTicketNo;
                this.helpTicketSelected = true;

              case 13:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function selectHelpTicket(_x3, _x4) {
        return _ref4.apply(this, arguments);
      }

      return selectHelpTicket;
    }();

    ViewHelpTickets.prototype.getIndex = function getIndex(subtypes, type) {
      for (var i = 0; i < subtypes.length; i++) {
        if (subtypes[i].type === type) {
          return i;
        }
      }
      return null;
    };

    ViewHelpTickets.prototype.createOutputForm = function createOutputForm(html) {
      var el = document.getElementById('container');
      el.innerHTML = html;

      if (el) {
        if (!el.querySelectorAll('.au-target').length) {
          this.templatingEngine.enhance({ element: el, bindingContext: this });
        }
      }
    };

    ViewHelpTickets.prototype.openHelpTicket = function () {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
        var response;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!this.helpTickets.selectedHelpTicket._id.length) {
                  _context5.next = 9;
                  break;
                }

                _context5.next = 3;
                return this.getDetails();

              case 3:
                _context5.next = 5;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 5:
                response = _context5.sent;

                if (!response.error) {
                  if (response.helpTicketId === 0) {
                    this.helpTickets.lockHelpTicket({
                      helpTicketId: this.helpTickets.selectedHelpTicket._id,
                      personId: this.userObj._id
                    });
                    this.lockMessage = "";
                    this.showLockMessage = false;
                    this.lockObject = { personId: this.userObj._id };
                  } else {
                    if (response[0].personId === this.userObj._id) {
                      this.showLockMessage = false;
                      this.lockMessage = "";
                      this.lockObject = { personId: this.userObj._id };
                    } else {
                      if (response[0].personId !== this.userObj._id) {
                        this.lockObject = response[0];
                        this.lockMessage = "Help Ticket is currently locked by " + this.getName();
                        this.showLockMessage = true;
                      }
                    }
                  }
                }
                _context5.next = 10;
                break;

              case 9:
                this.utils.showNotification('Help Ticket not found');

              case 10:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function openHelpTicket() {
        return _ref5.apply(this, arguments);
      }

      return openHelpTicket;
    }();

    ViewHelpTickets.prototype.getDetails = function () {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.showRequestDetails = false;
                if (this.helpTickets.selectedHelpTicket.requestId) {
                  if (this.helpTickets.selectedHelpTicket.requestId.assignments && this.helpTickets.selectedHelpTicket.requestId.assignments.length > 0) this.showRequestDetails = true;
                  this.showCourse = false;
                  this.course = "";
                  this.showCourse = true;
                  if (this.helpTickets.selectedHelpTicket.courseId) {
                    this.course = this.helpTickets.selectedHelpTicket.courseId.number + " - " + this.helpTickets.selectedHelpTicket.courseId.name;
                  } else {
                    this.course = this.config.SANDBOX_NAME;
                  }
                }

              case 2:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function getDetails() {
        return _ref6.apply(this, arguments);
      }

      return getDetails;
    }();

    ViewHelpTickets.prototype.getName = function getName() {
      for (var i = 0; i < this.people.uccPeople.length; i++) {
        if (this.people.uccPeople[i]._id == this.lockObject.personId) return this.people.uccPeople[i].fullName;
      }
      return "someone";
    };

    ViewHelpTickets.prototype.save = function () {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(changes) {
        var _this3 = this;

        var response, email, lastChange, serverResponse;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                changes = changes ? changes : this.helpTickets.isHelpTicketDirty(this.oroginalHelpTicket, ["requestId", "courseId", "personId", "institutionId"]);
                if (changes && changes.length > 0) {
                  changes.forEach(function (item) {
                    _this3.helpTickets.selectedHelpTicket.audit.push({
                      property: item.property,
                      oldValue: item.oldValue,
                      newValue: item.newValue,
                      eventDate: new Date(),
                      personId: _this3.userObj._id
                    });
                  });
                }

                _context7.next = 4;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 4:
                response = _context7.sent;

                if (response.error) {
                  _context7.next = 15;
                  break;
                }

                if (!(response.helpTicketId === 0 || response[0].personId === this.userObj._id)) {
                  _context7.next = 15;
                  break;
                }

                email = new Object();
                lastChange = this.helpTickets.selectedHelpTicket.audit[this.helpTickets.selectedHelpTicket.audit.length - 1];

                if (this.sendEmail) {
                  email.reason = 2;
                  email.fullName = this.helpTickets.selectedHelpTicket.personId.fullName;
                  email.email = this.helpTickets.selectedHelpTicket.personId.email;
                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  if (lastChange.property == 'helpTicketStatus') {
                    email.reason = lastChange.newValue;
                    email.message = "The status was changed to " + this.getStatusDescription(lastChange.newValue);
                  } else if (lastChange.property == 'priority') {
                    email.reason = 2;
                    email.message = "The priority was changed to " + this.config.HELP_TICKET_PRIORITIES[lastChange.newValue].priority;
                  } else {
                    email = new Object();
                  }
                }
                _context7.next = 12;
                return this.helpTickets.saveHelpTicket(email);

              case 12:
                serverResponse = _context7.sent;

                if (!serverResponse.error) {
                  this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                  this.utils.showNotification("The help ticket was updated");
                }
                this._cleanUp();

              case 15:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function save(_x5) {
        return _ref7.apply(this, arguments);
      }

      return save;
    }();

    ViewHelpTickets.prototype.getStatusDescription = function getStatusDescription(status) {
      for (var i = 0; i < this.config.HELP_TICKET_STATUSES.length; i++) {
        if (status == this.config.HELP_TICKET_STATUSES[i].code) {
          return this.config.HELP_TICKET_STATUSES[i].description;
        }
      }
      return "";
    };

    ViewHelpTickets.prototype.respond = function respond() {
      if (!this.showLockMessage && !this.enterResponse) {
        this.sendMailDisable = false;
        this.responseMessage = "";
        this.helpTickets.selectHelpTicketContent();
        this.enterResponse = true;
        this.enableButton = true;
      }
    };

    ViewHelpTickets.prototype.cancelResponse = function cancelResponse() {
      this.response = new Object();
      this.isUnchanged = true;
      this.enterResponse = false;
    };

    ViewHelpTickets.prototype._createResponse = function _createResponse() {
      this.helpTickets.selectedHelpTicketContent.personId = this.userObj._id;
      this.helpTickets.selectedHelpTicketContent.type = this.config.HELP_TICKET_OTHER_TYPE;
      this.helpTickets.selectedHelpTicketContent.emailSent = this.sendEmail;
      this.helpTickets.selectedHelpTicketContent.content.comments = this.responseMessage;
      this.helpTickets.selectedHelpTicketContent.displayForm = this.config.HELP_TICKET_OTHER_TYPE;
    };

    ViewHelpTickets.prototype.saveResponse = function () {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(status) {
        var email, serverResponse;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.helpTickets.selectedHelpTicket.helpTicketStatus = status;
                this._createResponse();
                email = new Object();

                if (this.sendEmail) {
                  email.reason = status;
                  email.fullName = this.helpTickets.selectedHelpTicket.personId.fullName;
                  email.email = this.helpTickets.selectedHelpTicket.personId.email;
                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = status == this.config.CUSTOMER_ACTION_HELPTICKET_STATUS ? this.userObj.fullName + " has asked for more information." : this.userObj.fullName + " has responded to the help ticket.";
                }
                _context8.next = 6;
                return this.helpTickets.saveHelpTicketResponse(email);

              case 6:
                serverResponse = _context8.sent;

                if (serverResponse.error) {
                  _context8.next = 14;
                  break;
                }

                if (!(status = this.config.CLOSED_HELPTICKET_STATUS)) {
                  _context8.next = 11;
                  break;
                }

                _context8.next = 11;
                return this.refresh();

              case 11:
                this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                this.utils.showNotification("The help ticket was updated");
                if (this.filesToUpload && this.filesToUpload.length > 0) this.helpTickets.uploadFile(this.filesToUpload, serverResponse._id);

              case 14:
                this._cleanUp();

              case 15:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function saveResponse(_x6) {
        return _ref8.apply(this, arguments);
      }

      return saveResponse;
    }();

    ViewHelpTickets.prototype.ownHelpTicket = function () {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(helpTicket) {
        var email, serverResponse;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (helpTicket) {
                  this.helpTickets.selectHelpTicketByID(helpTicket._id);
                }

                if (!(this.helpTickets.selectedHelpTicket.owner[0].personId === null || this.helpTickets.selectedHelpTicket.owner[0].personId._id != this.userObj._id)) {
                  _context9.next = 12;
                  break;
                }

                if (this.showLockMessage) {
                  _context9.next = 12;
                  break;
                }

                email = new Object();

                email.personId = this.userObj._id;
                email.status = this.config.REVIEW_HELPTICKET_STATUS;
                if (this.sendEmail) {
                  email.reason = 2;
                  email.fullName = this.helpTickets.selectedHelpTicket.personId.fullName;
                  email.personId = this.userObj._id;
                  email.status = this.config.REVIEW_HELPTICKET_STATUS;

                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = this.userObj.fullName + " has taken ownership of the help ticket.";
                }
                _context9.next = 9;
                return this.helpTickets.updateOwner(email, this.userObj);

              case 9:
                serverResponse = _context9.sent;

                if (!serverResponse.error) {
                  this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                  this.utils.showNotification("The help ticket was updated");
                }
                if (helpTicket) {
                  this._cleanUp();
                }

              case 12:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function ownHelpTicket(_x7) {
        return _ref9.apply(this, arguments);
      }

      return ownHelpTicket;
    }();

    ViewHelpTickets.prototype.changeStatus = function () {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(helpTicket, status, description) {
        var response, obj, email, serverResponse;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                this.helpTickets.selectHelpTicketByID(helpTicket._id);
                _context10.next = 3;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 3:
                response = _context10.sent;

                if (response.error) {
                  _context10.next = 16;
                  break;
                }

                if (!(response.helpTicketId === 0)) {
                  _context10.next = 16;
                  break;
                }

                obj = {
                  property: "helpTicketStatus",
                  oldValue: this.helpTickets.selectedHelpTicket.helpTicketStatus,
                  newValue: status,
                  personId: this.userObj._id,
                  date: new Date()
                };

                this.helpTickets.selectedHelpTicket.audit.push(obj);
                email = new Object();

                if (this.sendEmail) {
                  email.reason = status;
                  email.fullName = this.helpTickets.selectedHelpTicket.personId.fullName;

                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = "The status was changed to " + description;
                }
                this.helpTickets.selectedHelpTicket.helpTicketStatus = status;
                _context10.next = 13;
                return this.helpTickets.saveHelpTicket(email);

              case 13:
                serverResponse = _context10.sent;

                if (!serverResponse.error) {
                  this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
                  this.utils.showNotification("The help ticket was updated");
                }
                this._cleanUp();

              case 16:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function changeStatus(_x8, _x9, _x10) {
        return _ref10.apply(this, arguments);
      }

      return changeStatus;
    }();

    ViewHelpTickets.prototype._unLock = function _unLock() {
      if (!this.showLockMessage) {
        if (this.helpTickets.selectedHelpTicket && this.helpTickets.selectedHelpTicket._id) {
          this.helpTickets.removeHelpTicketLock(this.helpTickets.selectedHelpTicket._id);
        }
      }
    };

    ViewHelpTickets.prototype._cleanUp = function _cleanUp() {
      this.enterResponse = false;
      this.filesToUpload = new Array();
      this.files = new Array();
      this.filesSelected = "";
      this._unLock();
      this.helpTicketSelected = false;
    };

    ViewHelpTickets.prototype.flag = function flag() {
      var _this4 = this;

      var note = { noteBody: "", noteCategories: this.userObj.noteCategories, selectedCategory: 0 };
      return this.dialog.showNote("Save Changes", note, ['Submit', 'Cancel']).whenClosed(function (response) {
        if (!response.wasCancelled) {
          _this4.saveNote(response.output);
        } else {
          console.log("Cancelled");
        }
      });
    };

    ViewHelpTickets.prototype.saveNote = function () {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(note) {
        var response;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                this.people.selectNote();
                this.people.selectedNote.personId = this.userObj._id;
                this.people.selectedNote.category = this.userObj.noteCategories[note.selectedCategory];
                this.people.selectedNote.note = note.note.noteBody;
                this.people.selectedNote.reference = this.helpTickets.selectedHelpTicket._id;
                this.people.selectedNote.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                _context11.next = 8;
                return this.people.saveNote();

              case 8:
                response = _context11.sent;

                if (!response.error) {
                  this.utils.showNotification('The note was saved');
                }

              case 10:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function saveNote(_x11) {
        return _ref11.apply(this, arguments);
      }

      return saveNote;
    }();

    ViewHelpTickets.prototype.back = function back() {
      var _this5 = this;

      var changes = this.helpTickets.isHelpTicketDirty(this.oroginalHelpTicket, ["requestId", "courseId", "personId", "institutionId"]);
      if (changes.length) {
        var that = this;
        this.message = "The help ticket has been changed. Do you want to save your changes?";
        return this.dialog.showMessage(that.message, "Save Changes", ['Yes', 'No']).whenClosed(function (response) {
          if (!response.wasCancelled) {
            _this5.save(changes);
          } else {
            _this5._cleanUp();
          }
        });
      } else {
        this._cleanUp();
      }
    };

    ViewHelpTickets.prototype._setUpValidation = function _setUpValidation() {
      this.validation.addRule("00", "curriculumTitle", [{ "rule": "required", "message": "Curriculum Title is required" }]);
      this.validation.addRule("00", "client", [{
        "rule": "custom", "message": "You must select a client",
        "valFunction": function valFunction(context) {
          return context.helpTicket.clientId !== undefined;
        }
      }]);
      this.validation.addRule("01", "resetPasswordUserIDs", [{ "rule": "required", "message": "You must enter the passwords to reset" }]);
      this.validation.addRule("01", "client", [{
        "rule": "custom", "message": "You must enter the passwords to reset",
        "valFunction": function valFunction(context) {
          return context.helpTicket.clientId !== undefined;
        }
      }]);
      this.validation.addRule("02", "application", [{
        "rule": "custom", "message": "You must select the application",
        "valFunction": function valFunction(context) {
          return context.content.application !== undefined;
        }
      }]);
      this.validation.addRule("9", "owner", [{
        "rule": "custom", "message": "You are already the owner",
        "valFunction": function valFunction(context) {
          return context.helpTickets.selectedHelpTicket.owner[0].personId !== context.userObj._id;
        }
      }]);
    };

    ViewHelpTickets.prototype._cleanUpFilters = function _cleanUpFilters() {
      $("#helpTicketType-description").val("");
      $(this.ownerFilter).val("");
      $(this.nameFilter).val("");
      $("#helpTicketStatus").val("");
      this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
    };

    ViewHelpTickets.prototype.checkSendMail = function checkSendMail() {
      console.log(this.sendMail);
      this.sendMail = !this.sendMail;
    };

    ViewHelpTickets.prototype.changeFiles = function changeFiles() {
      var _this6 = this;

      this.filesToUpload = this.filesToUpload ? this.filesToUpload : new Array();
      for (var i = 0; i < this.files.length; i++) {
        var addFile = true;
        this.filesToUpload.forEach(function (item) {
          if (item.name === _this6.files[i].name) addFile = false;
        });
        if (addFile) this.filesToUpload.push(this.files[i]);
      }
    };

    ViewHelpTickets.prototype.removeFile = function removeFile(index) {
      this.filesToUpload.splice(index, 1);
    };

    ViewHelpTickets.prototype.insertDocument = function insertDocument() {
      var _this7 = this;

      var document = { documentURL: "", documentCats: this.documents.docCatsArray, documents: new Array(), selectedCategory: 0 };
      return this.dialog.showDocument("Select Document", document, ['Submit', 'Cancel']).whenClosed(function (response) {
        if (!response.wasCancelled) {
          _this7.helpTickets.selectedHelpTicketContent.documents = _this7.helpTickets.selectedHelpTicketContent.documents ? _this7.helpTickets.selectedHelpTicketContent.documents : new Array();
          response.output.documents.documents.forEach(function (item) {
            _this7.helpTickets.selectedHelpTicketContent.documents.push({
              categoryCode: item.categoryCode,
              categoryName: item.categoryName,
              fileName: item.fileName
            });
          });
        } else {
          console.log("Cancelled");
        }
      });
    };

    ViewHelpTickets.prototype.removeDocument = function removeDocument(index) {
      this.helpTickets.selectedHelpTicketContent.documents.splice(index, 1);
    };

    ViewHelpTickets.prototype.customHelpTicketTypeFilter = function customHelpTicketTypeFilter(value, item, context) {
      var foo = value.toUpperCase();
      for (var i = 0; i < context.helpTickets.helpTicketTypesArray.length; i++) {
        for (var j = 0; j < context.helpTickets.helpTicketTypesArray[i].subtypes.length; j++) {
          if (context.helpTickets.helpTicketTypesArray[i].subtypes[j].type == item.helpTicketType) {
            return context.helpTickets.helpTicketTypesArray[i].subtypes[j].description.toUpperCase().indexOf(foo) > -1;
          }
        }
      }
      return false;
    };

    ViewHelpTickets.prototype.customOwnerFilter = function customOwnerFilter(value, item, context) {
      if (item.owner[0].personId === null) return false;
      return item.owner[0].personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
    };

    ViewHelpTickets.prototype.customNameFilter = function customNameFilter(value, item, context) {
      return item.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;
    };

    ViewHelpTickets.prototype.institutionCustomFilter = function institutionCustomFilter(value, item, context) {
      return item.institutionId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;
    };

    ViewHelpTickets.prototype.customOwnerSorter = function customOwnerSorter(sortProperty, sortDirection, sortArray, context) {
      context.sortDirection = context.sortDirection === null ? 1 : context.sortDirection === 1 ? -1 : 1;
      return sortArray.sort(function (a, b) {
        if (a.owner[0].personId === null && b.owner[0].personId === null) return 0;
        if (a.owner[0].personId === null && b.owner[0].personId !== null) return context.sortDirection * -1;
        if (a.owner[0].personId !== null && b.owner[0].personId === null) return context.sortDirection;
        var result = a.owner[0].personId.lastName < b.owner[0].personId.lastName ? -1 : a.owner[0].personId.lastName > b.owner[0].personId.lastName ? 1 : 0;
        return result * context.sortDirection;
      });
    };

    return ViewHelpTickets;
  }()) || _class);
});
define('modules/user/requests/clientRequests',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ClientRequests = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var ClientRequests = exports.ClientRequests = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function ClientRequests(router, config) {
            _classCallCheck(this, ClientRequests);

            this.title = "Product Requests";

            this.router = router;
            this.config = config;
        }

        ClientRequests.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        ClientRequests.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        ClientRequests.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'viewRequests'],
                moduleId: './viewRequests',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'viewRequests',
                title: 'View Requests'
            }, {
                route: 'createRequests',
                moduleId: './createRequests',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'createRequests',
                title: 'Create Request'
            }, {
                route: 'viewProducts',
                moduleId: './viewProducts',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'viewProducts',
                title: 'Product List'
            }]);

            this.router = router;
        };

        return ClientRequests;
    }()) || _class);
});
define('modules/user/requests/createRequests',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../resources/data/sessions', '../../../resources/data/products', '../../../resources/data/siteInfo', '../../../resources/data/clientRequests', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/dialogs/common-dialogs', 'flatpickr', 'aurelia-event-aggregator', 'fuelux', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _sessions, _products, _siteInfo, _clientRequests, _appConfig, _utils, _people, _validation, _commonDialogs, _flatpickr, _aureliaEventAggregator, _fuelux, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewHelpTickets = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  var _flatpickr2 = _interopRequireDefault(_flatpickr);

  var _fuelux2 = _interopRequireDefault(_fuelux);

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ViewHelpTickets = exports.ViewHelpTickets = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _commonDialogs.CommonDialogs, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _products.Products, _clientRequests.ClientRequests, _siteInfo.SiteInfo, _aureliaEventAggregator.EventAggregator), _dec(_class = function () {
    function ViewHelpTickets(router, config, validation, people, dialog, datatable, utils, sessions, products, requests, siteInfo, ea) {
      _classCallCheck(this, ViewHelpTickets);

      this.sessionSelected = false;
      this.courseSelected = false;
      this.sandBoxClient = false;
      this.editCourse = false;
      this.editCourseFlag = false;
      this.showLockMessage = false;
      this.showInfoBox = true;
      this.spinnerHTML = "";
      this.sessionId = -1;
      this.courseId = -1;
      this.requestType = -1;
      this.tempRequests = new Array();
      this.productInfo = new Array();
      this.lockObject = new Object();
      this.minStartDate = "1/1/1900";
      this.maxStartDate = "1/1/9999";
      this.startDate = "";
      this.configDate = {
        "disable": [function (date) {
          return date.getDay() === 6 || date.getDay() === 0;
        }],
        "locale": {
          "firstDayOfWeek": 1 }
      };

      this.router = router;
      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this.people = people;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.utils = utils;
      this.sessions = sessions;
      this.products = products;
      this.requests = requests;
      this.siteInfo = siteInfo;
      this.dialog = dialog;
      this.ea = ea;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));;
    }

    ViewHelpTickets.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.all([this.sessions.getSessionsArray('?filter=[or]sessionStatus|Active:Requests&order=startDate', true), this.products.getProductsArray('?filter=active|eq|true&order=name', true), this.siteInfo.getMessageArray('?filter=category|eq|CLIENT_REQUESTS', true), this.config.getConfig()]);

              case 2:
                responses = _context.sent;


                this.people.getPeopleArray();
                this.people.getCoursesArray(true, '?filter=personId|eq|' + this.userObj._id + '&order=number');
                this.requests.selectRequest();
                this.filterList();
                this._setUpValidation();
                this.getMessages();

                this.useSandbox = this.config.SANDBOX_USED;
                if (!this.useSandbox) {
                  this.typeSelected = true;
                  this.regularClient = true;
                  this.requestType = "regularCourse";
                }

              case 11:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ViewHelpTickets.prototype.getMessages = function getMessages() {
      this.CLIENT_REQUEST_START = this.siteInfo.selectMessageByKey('CLIENT_REQUEST_START');
      this.SESSION_SELECTED = this.siteInfo.selectMessageByKey('SESSION_SELECTED');
      this.REGULAR_NUMBER_OF_STUDENTS = this.siteInfo.selectMessageByKey('REGULAR_NUMBER_OF_STUDENTS');
      this.START_END_DATES = this.siteInfo.selectMessageByKey('START_END_DATES');
    };

    ViewHelpTickets.prototype.getRequests = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
        var dateFoo, existingMsg;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._unLock();

              case 2:
                if (!(this.sessionId != -1 && this.courseId != -1)) {
                  _context2.next = 24;
                  break;
                }

                this.ILockedIt = false;
                this.existingRequest = false;
                _context2.next = 7;
                return this.requests.getClientRequestsArray('?filter=[and]personId|eq|' + this.userObj._id + ':sessionId|eq|' + this.sessionId + ':courseId|eq|' + this.courseId, true);

              case 7:
                if (!(this.requests.requestsArray && this.requests.requestsArray.length > 0)) {
                  _context2.next = 17;
                  break;
                }

                this.requests.selectRequest(0);
                this.setDates(false);
                _context2.next = 12;
                return this._lock();

              case 12:
                this.ILockedIt = true;
                this.existingRequest = true;
                if (this.requests.requestsArray && this.requests.requestsArray.length > 0) {
                  dateFoo = (0, _moment2.default)(new Date(this.requests.selectedRequest.requestDetails[0].createdDate)).format(this.config.DATE_FORMAT_TABLE);
                  existingMsg = this.siteInfo.selectMessageByKey('EXISTING_REQUEST_MESSAGE').content.replace('DATECREATED', dateFoo);

                  $("#existingRequestInfo").html('').append(existingMsg).fadeIn();
                } else {
                  $("#existingRequestInfo").empty().hide();
                }
                _context2.next = 22;
                break;

              case 17:
                $("#existingRequestInfo").empty().hide();
                this.setDates(true);
                this.existingRequest = false;
                this.requests.selectRequest();
                this.requests.selectedRequest.sessionId = this.sessionId;

              case 22:
                _context2.next = 25;
                break;

              case 24:
                this.existingRequest = false;

              case 25:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getRequests() {
        return _ref2.apply(this, arguments);
      }

      return getRequests;
    }();

    ViewHelpTickets.prototype.refresh = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                _context3.next = 3;
                return this.getRequests();

              case 3:
                this.spinnerHTML = "";

              case 4:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function refresh() {
        return _ref3.apply(this, arguments);
      }

      return refresh;
    }();

    ViewHelpTickets.prototype.attached = function attached() {
      var wizard = $('.wizard').wizard();
      this.toolTips();
      var that = this;

      wizard.on('actionclicked.fu.wizard', function (e, data) {
        that.step = data.step;
        if (data.direction !== "previous") {
          if (!that.validation.validate(data.step)) {
            e.preventDefault();
          } else if (data.step === 4) {
            that.validation.makeValid($("#productListTable"));
            that.save();
          }
        }
      });
      var config = {
        altInput: true,
        altFormat: "F j, Y"
      };
    };

    ViewHelpTickets.prototype.deactivate = function deactivate() {
      this._unLock();
    };

    ViewHelpTickets.prototype.changeSession = function () {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(el) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(this.sessionId == -1)) {
                  _context4.next = 6;
                  break;
                }

                this.sessionSelected = false;
                this.courseSelected = false;
                this.sandBoxClient = false;
                _context4.next = 13;
                break;

              case 6:
                this._unLock();
                this.sessionSelected = true;

                this.sessions.selectSession(el.target.selectedIndex - 1);
                this.setDates();
                this.validation.makeValid($(el.target));
                _context4.next = 13;
                return this.getRequests();

              case 13:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function changeSession(_x) {
        return _ref4.apply(this, arguments);
      }

      return changeSession;
    }();

    ViewHelpTickets.prototype.selectCourse = function () {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(index, el) {
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this.editCourseIndex = index;
                this.people.selectCourse(this.editCourseIndex);
                this.courseSelected = true;
                this.courseId = this.people.selectedCourse._id;
                _context5.next = 6;
                return this.getRequests();

              case 6:

                if (this.selectedCourseRow) this.selectedCourseRow.children().removeClass('info');
                this.selectedCourseRow = $(el.target).closest('tr');
                this.selectedCourseRow.children().addClass('info');

              case 9:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function selectCourse(_x2, _x3) {
        return _ref5.apply(this, arguments);
      }

      return selectCourse;
    }();

    ViewHelpTickets.prototype.setDates = function setDates(session) {
      if (session) {
        $("#input-startDate").val("");
        $("#input-endDate").val("");
      }
      this.minStartDate = this.sessions.selectedSession.startDate;
      this.maxStartDate = this.sessions.selectedSession.endDate;
      this.minEndDate = this.sessions.selectedSession.startDate;
      this.maxEndDate = this.sessions.selectedSession.endDate;

      var nowPlusLeeway = (0, _moment2.default)(new Date()).add(this.config.REQUEST_LEEWAY, 'days');
      this.minRequiredDate = _moment2.default.max(nowPlusLeeway, (0, _moment2.default)(this.sessions.selectedSession.startDate));
      this.minRequiredDate = (0, _moment2.default)(this.minRequiredDate._d).format('YYYY-MM-DD');
      this.maxRequiredDate = this.sessions.selectedSession.endDate;
    };

    ViewHelpTickets.prototype.changeCourse = function () {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(el) {
        var courseId;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                courseId = el.target.options[el.target.selectedIndex].value;

                this.selectedCourseIndex = el.target.selectedIndex;

                if (!(courseId === "")) {
                  _context6.next = 6;
                  break;
                }

                this.courseSelected = false;
                _context6.next = 11;
                break;

              case 6:
                this.courseSelected = true;
                this.courseName = this.courses[el.target.selectedIndex - 1].number + " - " + this.courses[el.target.selectedIndex - 1].name;
                this.validation.makeValid($(el.target));
                _context6.next = 11;
                return this.getRequests();

              case 11:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function changeCourse(_x4) {
        return _ref6.apply(this, arguments);
      }

      return changeCourse;
    }();

    ViewHelpTickets.prototype.filterList = function filterList() {
      if (this.filter) {
        var thisFilter = this.filter;
        this.filteredProductsArray = this.products.productsArray.filter(function (item) {
          return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
        });
      } else {
        this.filteredProductsArray = this.products.productsArray;
      }
    };

    ViewHelpTickets.prototype.changeBeginDate = function changeBeginDate(evt) {
      if (evt.detail && evt.detail.value.date !== "") {
        this.minEndDate = (0, _moment2.default)(evt.detail.value.date).format("YYYY-MM-DD");
        this.requests.selectedRequest.endDate = _moment2.default.max(this.requests.selectedRequest.startDate, this.requests.selectedRequest.endDate);
      }
    };

    ViewHelpTickets.prototype.changeRequestType = function () {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(el) {
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                $("#existingRequestInfo").empty().hide();
                _context7.t0 = el.target.value;
                _context7.next = _context7.t0 === "-1" ? 4 : _context7.t0 === 'sandboxCourse' ? 8 : _context7.t0 === 'regularCourse' ? 17 : 24;
                break;

              case 4:
                this.typeSelected = false;
                this.courseSelected = false;
                this.sandBoxClient = false;
                return _context7.abrupt('break', 24);

              case 8:
                this.typeSelected = true;
                this.courseSelected = false;
                this.sandBoxClient = true;
                this.regularClient = false;
                this.courseId = this.config.SANDBOX_ID;
                _context7.next = 15;
                return this.getRequests();

              case 15:
                this.validation.makeValid($(el.target));
                return _context7.abrupt('break', 24);

              case 17:
                this.typeSelected = true;
                this.courseId = "-1";
                this.regularClient = true;
                this.sandBoxClient = false;
                this.validation.makeValid($(el.target));
                _context7.next = 24;
                return this.getRequests();

              case 24:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function changeRequestType(_x5) {
        return _ref7.apply(this, arguments);
      }

      return changeRequestType;
    }();

    ViewHelpTickets.prototype._cleanRequest = function _cleanRequest() {
      this.request.undergraduates = 0;
      this.request.graduates = 0;
      this.request.comments = "";
      this.tempRequests = [];
      this.tempRequest = {};
    };

    ViewHelpTickets.prototype.selectProduct = function selectProduct(el) {
      if (this.requests.selectedRequest.requestDetails.length < this.config.REQUEST_LIMIT && !this.showLockMessage) {
        if (this.alreadyOnList(el.target.id)) {
          this.utils.showNotification('If you need more than one client of a product, add a comment on the next step.');
        } else {
          $("#requestProductsLabel").html("Requested Products");
          var newObj = this.requests.emptyRequestDetail();
          newObj.productId = el.target.id;
          newObj.sessionId = this.requests.selectedRequest.sessionId;
          this.requests.selectedRequest.requestDetails.push(newObj);
          this.products.selectedProductFromId(newObj.productId);
          this.requests.selectedRequest.requestDetails[this.requests.selectedRequest.requestDetails.length - 1].productName = this.products.selectedProduct.name;
        }
      }

      this.validation.makeValid($("#productList"));
    };

    ViewHelpTickets.prototype.alreadyOnList = function alreadyOnList(id) {
      for (var i = 0; i < this.requests.selectedRequest.requestDetails.length; i++) {
        if (this.requests.selectedRequest.requestDetails[i].productId === id) return true;
      }
      return false;
    };

    ViewHelpTickets.prototype.removeProduct = function removeProduct(el) {
      var _this = this;

      if (!this.showLockMessage) {
        for (var i = 0; i < this.requests.selectedRequest.requestDetails.length; i++) {
          if (el.target.id === this.requests.selectedRequest.requestDetails[i].productId) {
            if (this.requests.selectedRequest.requestDetails[i]._id) {
              if (this.requests.selectedRequest.requestDetails[i].requestStatus == this.config.ASSIGNED_REQUEST_CODE) {
                return this.dialog.showMessage("That request has already been assigned and cannot be deleted?", "Cannot Delete Request", ['Ok']).whenClosed(function (response) {});
              } else {
                return this.dialog.showMessage("Are you sure you want to delete that request?", "Delete Request", ['Yes', 'No']).whenClosed(function (response) {
                  if (!response.wasCancelled) {
                    _this.requests.selectedRequest.requestDetails[i].delete = true;
                  }
                });
              }
              break;
            } else {
              this.requests.selectedRequest.requestDetails.splice(i, 1);
              for (var j = 0; j < this.productInfo.length; j++) {
                if (el.target.id == this.productInfo[j].productId) {
                  this.productInfo.splice(j, 1);
                  break;
                }
              }
              break;
            }
          }
        }
      }
    };

    ViewHelpTickets.prototype.showCurriculum = function showCurriculum(product, $event) {
      this.productInfoObject = this.products.getProductInfo(product._id);
      if (this.productInfoObject) $("#curriculumInfo").css("display", "block");
    };

    ViewHelpTickets.prototype.hideCurriculum = function hideCurriculum() {
      $("#curriculumInfo").css("display", "none");
    };

    ViewHelpTickets.prototype._setUpValidation = function _setUpValidation() {
      this.validation.addRule(1, "course", [{ "rule": "custom", "message": "Select a course",
        "valFunction": function valFunction(context) {
          if (context.requestType === "sandboxCourse") {
            return true;
          } else {
            return !(context.courseId == -1);
          }
        }
      }]);
      this.validation.addRule(1, "session", [{ "rule": "custom", "message": "Select a session",
        "valFunction": function valFunction(context) {
          return !(context.sessionId == -1);
        } }]);
      this.validation.addRule(1, "startDateError", [{ "rule": "required", "message": "Select a date",
        "value": "requests.selectedRequest.startDate" }]);
      this.validation.addRule(1, "endDateError", [{ "rule": "required", "message": "Select a date",
        "value": "requests.selectedRequest.endDate" }]);

      this.validation.addRule(1, "requestType", [{ "rule": "custom", "message": "Select a request type",
        "valFunction": function valFunction(context) {
          return !(context.requestType == -1);
        } }]);
      this.validation.addRule(1, "numberOfStudentsError", [{ "rule": "custom", "message": "Enter either the number of undergradate or graduate students",
        "valFunction": function valFunction(context) {
          if (context.requestType === "sandboxCourse") {
            return true;
          } else if (context.requests.selectedRequest.undergradIds == 0 && context.requests.selectedRequest.graduateIds == 0) {
            return false;
          } else {
            return true;
          }
        }
      }]);
      this.validation.addRule(2, "productList", [{ "rule": "custom", "message": "Select at least one product",
        "valFunction": function valFunction(context) {
          if (context.requests.selectedRequest.requestDetails.length === 0) {
            return false;
          } else {
            return true;
          }
        }
      }]);
      this.validation.addRule(4, "productListTable", [{ "rule": "custom", "message": "Enter all required dates",
        "valFunction": function valFunction(context) {
          for (var i = 0; i < context.requests.selectedRequest.requestDetails.length; i++) {
            if (!context.requests.selectedRequest.requestDetails[i].requiredDate || context.requests.selectedRequest.requestDetails[i].requiredDate === "" || (0, _moment2.default)(context.requests.selectedRequest.requestDetails[i].requiredDate).isBefore(context.minStartDate)) {
              return false;
            }
          }
          return true;
        }
      }]);
      this.validation.addRule(5, "number", [{ "rule": "required", "message": "Enter the course number", "value": "people.selectedCourse.number" }, { "rule": "required", "message": "Enter the course name", "value": "people.selectedCourse.name" }]);
    };

    ViewHelpTickets.prototype._buildRequest = function _buildRequest() {
      var _this2 = this;

      if (this.existingRequest) {
        this.requests.selectedRequest.requestDetailsToSave = this.requests.selectedRequest.requestDetails;
        this.requests.selectedRequest.requestDetailsToSave.forEach(function (item, index) {
          if (item.requestStatus != _this2.config.ASSIGNED_REQUEST_CODE) item.requestStatus = _this2.config.UPDATED_REQUEST_CODE;
        });
      }

      this.requests.selectedRequest.audit[0].personId = this.userObj._id;
      this.requests.selectedRequest.institutionId = this.userObj.institutionId._id;
      this.requests.selectedRequest.sessionId = this.sessionId;
      this.requests.selectedRequest.courseId = this.courseId;
      this.requests.selectedRequest.personId = this.userObj._id;
      this.requests.selectedRequest.requestStatus = this.config.UPDATED_REQUEST_CODE;
    };

    ViewHelpTickets.prototype.save = function () {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
        var email, serverResponse;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (!this.validation.validate(1)) {
                  _context8.next = 7;
                  break;
                }

                this._buildRequest();
                email = this._buildEmailObject();
                _context8.next = 5;
                return this.requests.saveRequest(email);

              case 5:
                serverResponse = _context8.sent;

                if (!serverResponse.status) {
                  this.utils.showNotification("The product request was updated");
                  this.systemSelected = false;
                }

              case 7:
                this._cleanUp();

              case 8:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function save() {
        return _ref8.apply(this, arguments);
      }

      return save;
    }();

    ViewHelpTickets.prototype._buildEmailObject = function _buildEmailObject() {
      var _this3 = this;

      var mailObject = new Object();
      if (this.config.SEND_EMAILS) {
        mailObject.products = new Array();
        this.requests.selectedRequest.requestDetails.forEach(function (detail, index) {
          _this3.products.selectedProductFromId(detail.productId);
          var date = new Date(detail.requiredDate);
          var day = date.getDate();
          var month = date.getMonth() + 1;
          var year = date.getFullYear();
          mailObject.products.push({ id: detail.productId, requiredDate: month + "/" + day + "/" + year, name: _this3.products.selectedProduct.name });
        });

        mailObject.comments = this.requests.selectedRequest.comments;
        mailObject.name = this.userObj.fullName;
        mailObject.numStudents = parseInt(this.requests.selectedRequest.undergradIds) + parseInt(this.requests.selectedRequest.graduateIds);
        mailObject.email = this.userObj.email;
        mailObject.cc = this.config.REQUESTS_EMAIL_LIST ? this.config.REQUESTS_EMAIL_LIST : "";
      }

      return mailObject;
    };

    ViewHelpTickets.prototype._cleanUp = function _cleanUp() {
      this._unLock();
      this.requests.selectRequest();
      this.productInfo = new Array();
      this.sessionSelected = false;
      this.typeSelected = false;
      this.sandBoxClient = false;
      this.courseSelected = false;
      this.courseId = "-1";
      this.sessionId = -1;
      this.requestType = -1;
      $("#existingRequestInfo").hide();
      $('.wizard').wizard('selectedItem', {
        step: 1
      });
    };

    ViewHelpTickets.prototype.openEditCourseForm = function () {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (this.showCourses) {
                  _context9.next = 3;
                  break;
                }

                _context9.next = 3;
                return this.refreshCourses();

              case 3:
                this.showCourses = !this.showCourses;

              case 4:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function openEditCourseForm() {
        return _ref9.apply(this, arguments);
      }

      return openEditCourseForm;
    }();

    ViewHelpTickets.prototype.refreshCourses = function () {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this.people.getCoursesArray(true, '?filter=personId|eq|' + this.userObj._id + '&order=number');

              case 2:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function refreshCourses() {
        return _ref10.apply(this, arguments);
      }

      return refreshCourses;
    }();

    ViewHelpTickets.prototype.editACourse = function editACourse() {
      if (this.courseId != -1) {
        this.editCourse = true;
        $("#number").focus();
      }
    };

    ViewHelpTickets.prototype.newCourse = function newCourse() {
      this.editCourseIndex = -1;
      this.people.selectCourse();
      $("#number").focus();
      this.editCourse = true;
    };

    ViewHelpTickets.prototype.saveCourse = function () {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
        var serverResponse;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!this.validation.validate(5)) {
                  _context11.next = 9;
                  break;
                }

                if (!this.userObj._id) {
                  _context11.next = 9;
                  break;
                }

                if (this.people.selectedCourse._id) this.editCourseIndex = this.baseArray.length;
                this.people.selectedCourse.personId = this.userObj._id;
                _context11.next = 6;
                return this.people.saveCourse();

              case 6:
                serverResponse = _context11.sent;

                if (!serverResponse.status) {
                  this.utils.showNotification("The course was updated");
                }
                this.editCourse = false;

              case 9:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function saveCourse() {
        return _ref11.apply(this, arguments);
      }

      return saveCourse;
    }();

    ViewHelpTickets.prototype.cancelEditCourse = function cancelEditCourse() {
      this.editCourse = false;
    };

    ViewHelpTickets.prototype._lock = function () {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
        var response;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this.requests.getRequestLock(this.requests.selectedRequest._id);

              case 2:
                response = _context12.sent;

                if (!response.error) {
                  if (response.requestId === 0) {
                    this.requests.lockRequest({
                      requestId: this.requests.selectedRequest._id,
                      personId: this.userObj._id
                    });
                    this.showLockMessage = false;
                    this.lockObject = {};
                  } else {
                    if (response[0].personId !== this.userObj._id) {
                      this.lockObject = response[0];
                      this.showLockMessage = true;
                    }
                  }
                }

              case 4:
              case 'end':
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));

      function _lock() {
        return _ref12.apply(this, arguments);
      }

      return _lock;
    }();

    ViewHelpTickets.prototype._unLock = function _unLock() {
      if (this.ILockedIt) {
        if (this.requests.selectedRequest._id) {
          this.showLockMessage = false;
          this.requests.removeRequestLock(this.requests.selectedRequest._id);
        }
      }
    };

    ViewHelpTickets.prototype.toolTips = function toolTips() {
      $('[data-toggle="tooltip"]').tooltip();
    };

    return ViewHelpTickets;
  }()) || _class);
});
define('modules/user/requests/viewProducts',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../resources/data/products', '../../../config/appConfig'], function (exports, _aureliaFramework, _dataTable, _products, _appConfig) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewProducts = undefined;

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ViewProducts = exports.ViewProducts = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig, _dataTable.DataTable, _products.Products), _dec(_class = function () {
    function ViewProducts(config, datatable, products) {
      _classCallCheck(this, ViewProducts);

      this.config = config;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.products = products;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));
    }

    ViewProducts.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.all([this.products.getProductsArray('?filter=active|eq|true&order=name'), this.config.getConfig()]);

              case 2:
                responses = _context.sent;

                this.filterList();

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ViewProducts.prototype.filterList = function filterList() {
      if (this.filter) {
        var thisFilter = this.filter;
        this.filteredProductsArray = this.products.productsArray.filter(function (item) {
          return item.name.toUpperCase().indexOf(thisFilter.toUpperCase()) != -1;
        });
      } else {
        this.filteredProductsArray = this.products.productsArray;
      }
    };

    ViewProducts.prototype.showCurriculum = function showCurriculum(product, $event) {
      this.productInfoObject = this.products.getProductInfo(product._id);
      if (this.productInfoObject) $("#curriculumInfo").css("display", "block");
    };

    ViewProducts.prototype.hideCurriculum = function hideCurriculum() {
      $("#curriculumInfo").css("display", "none");
    };

    return ViewProducts;
  }()) || _class);
});
define('modules/user/requests/viewRequests',['exports', 'aurelia-framework', 'aurelia-router', '../../../resources/utils/dataTable', '../../../resources/data/sessions', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/clientRequests', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/dialogs/common-dialogs', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _dataTable, _sessions, _systems, _products, _clientRequests, _appConfig, _utils, _people, _validation, _commonDialogs, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewRequests = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  var _moment2 = _interopRequireDefault(_moment);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ViewRequests = exports.ViewRequests = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _validation2.default, _people.People, _dataTable.DataTable, _utils.Utils, _sessions.Sessions, _systems.Systems, _products.Products, _clientRequests.ClientRequests, _commonDialogs.CommonDialogs), _dec(_class = function () {
    function ViewRequests(router, config, validation, people, datatable, utils, sessions, systems, products, requests, dialogs) {
      _classCallCheck(this, ViewRequests);

      this.requestSelected = false;
      this.showLockMessage = false;
      this.showRequests = false;
      this.statusClass = ["", "unassigned", "assigned", "", "customer"];
      this.navControl = "requestsNavButtons";
      this.spinnerHTML = "";
      this.lockObject = new Object();

      this.router = router;
      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this.people = people;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.utils = utils;
      this.sessions = sessions;
      this.products = products;
      this.requests = requests;
      this.systems = systems;
      this.dialogs = dialogs;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));
    }

    ViewRequests.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                $("#infoBox").fadeOut();
                $("#existingRequestInfo").fadeOut();
                _context.next = 4;
                return Promise.all([this.sessions.getSessionsArray('?filter=[or]sessionStatus|Active:Requests&order=startDate', true), this.people.getCoursesArray(true, "?filter=personId|eq|" + this.userObj._id), this.products.getProductsArray('?filter=active|eq|true&order=Category'), this.systems.getSystemsArray(), this.config.getConfig()]);

              case 4:
                responses = _context.sent;

                this.people.coursesArray.push({ _id: this.config.SANDBOX_ID, name: this.config.SANDBOX_NAME });
                this.selectedSession = this.sessions.sessionsArray[0]._id;
                this.getRequests();

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ViewRequests.prototype.deactivate = function deactivate() {
      this._unLock();
    };

    ViewRequests.prototype.getRequests = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!this.selectedSession) {
                  _context2.next = 5;
                  break;
                }

                this.sessions.selectSessionById(this.selectedSession);
                _context2.next = 4;
                return this.requests.getClientRequestsArray('?filter=[and]sessionId|eq|' + this.selectedSession + ':personId|eq|' + this.userObj._id, true);

              case 4:
                if (this.requests.requestsArray && this.requests.requestsArray.length) {
                  this.dataTable.updateArray(this.requests.requestsArray);
                }

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getRequests() {
        return _ref2.apply(this, arguments);
      }

      return getRequests;
    }();

    ViewRequests.prototype.refresh = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this._unLock();

              case 2:
                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                _context3.next = 5;
                return this.getRequests();

              case 5:
                this.spinnerHTML = "";

              case 6:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function refresh() {
        return _ref3.apply(this, arguments);
      }

      return refresh;
    }();

    ViewRequests.prototype.edit = function () {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(product, el, index) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.requestSelected = true;
                this.selectedDetailIndex = index;
                this.showDetails = true;
                this.requests.setTheSelectedRequestDetail(product);
                this.customerActionRequired = this.requests.selectedRequestDetail.requestStatus == this.config.CUSTOMER_ACTION_REQUEST_CODE;
                this.customerMessage = this.requests.selectedRequestDetail.customerMessage;
                this.requests.selectRequstById(product.requestId);
                this.sessions.selectSessionById(this.requests.selectedRequest.sessionId);
                this.products.selectedProductFromId(this.requests.selectedRequestDetail.productId);


                if (this.requests.selectedRequestDetail.assignments.length) {
                  this.selectedAssignmentIndex = 0;
                  this.systems.selectedSystemFromId(this.requests.selectedRequestDetail.assignments[this.selectedAssignmentIndex].systemId);
                }

                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                this.selectedRow = $(el.target).closest('tr');
                this.selectedRow.children().addClass('info');

              case 13:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function edit(_x, _x2, _x3) {
        return _ref4.apply(this, arguments);
      }

      return edit;
    }();

    ViewRequests.prototype.back = function back() {
      this.requestSelected = false;
    };

    ViewRequests.prototype.customerActionResponse = function customerActionResponse(request, el) {
      if (request.requestStatus == this.config.CUSTOMER_ACTION_REQUEST_CODE) {
        this.requests.setSelectedRequest(request);
        this.showDetails = false;
        this.requestSelected = true;
        this.customerActionRequired = true;
        this.selectedDetailIndex = -1;
        this.customerMessage = request.customerMessage;

        if (this.selectedRow) this.selectedRow.children().removeClass('info');
        this.selectedRow = $(el.target).closest('tr');
        this.selectedRow.children().addClass('info');
      }
    };

    ViewRequests.prototype.save = function () {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
        var serverResponse;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (this.showLockMessage) {
                  _context5.next = 9;
                  break;
                }

                if (!this._buildRequest()) {
                  _context5.next = 7;
                  break;
                }

                _context5.next = 4;
                return this.requests.saveRequest(this.config.SEND_EMAILS);

              case 4:
                serverResponse = _context5.sent;

                if (!serverResponse.error) {
                  this.getRequests();
                  this.utils.showNotification("The request was updated");
                }
                this._cleanUp();

              case 7:
                _context5.next = 10;
                break;

              case 9:
                this.utils.showNotification("The request is locked and can't be saved");

              case 10:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function save() {
        return _ref5.apply(this, arguments);
      }

      return save;
    }();

    ViewRequests.prototype._buildRequest = function _buildRequest() {
      var _this = this;

      this.requests.selectedRequest.requestDetails.forEach(function (item) {
        if (item.requestStatus != _this.config.ASSIGNED_REQUEST_CODE) item.requestStatus = _this.config.REPLIED_REQUEST_CODE;
        item.modifiedDate = new Date();
      });
      this.requests.selectedRequest.requestStatus = this.config.REPLIED_REQUEST_CODE;
      this.requests.selectedRequest.comments = '<div class="well">' + this.customerResponse + '</div><p>' + this.requests.selectedRequest.comments;
      this.requests.selectedRequest.audit.push({
        property: "Replied to Message",
        newValue: this.customerResponse,
        personId: this.userObj._id
      });

      this.requests.selectedRequest.requestDetailsToSave = new Array();
      this.requests.selectedRequest.requestDetailsToSave = this.requests.selectedRequest.requestDetails;
      this.requests.selectedRequest.requestDetails = new Array();
      this.requests.selectedRequest.requestDetailsToSave.forEach(function (item) {
        _this.requests.selectedRequest.requestDetails.push(item._id);
      });
      return true;
    };

    ViewRequests.prototype.delete = function _delete() {
      var _this2 = this;

      return this.dialogs.showMessage("Are you sure you want to delete that request?", "Delete Request", ['Yes', 'No']).whenClosed(function (response) {
        if (!response.wasCancelled) {
          _this2.deleteRequest();
        }
      });
    };

    ViewRequests.prototype.deleteRequest = function () {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
        var _this3 = this;

        var serverResponse;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.requests.selectedRequest.requestDetails[this.selectedDetailIndex].delete = true;
                this.requests.selectedRequest.audit.push({
                  property: "Deleted Product",
                  newValue: this.requests.selectedRequest.requestDetails[this.selectedDetailIndex].productId,
                  personId: this.userObj._id
                });

                this.requests.selectedRequest.requestDetailsToSave = new Array();
                this.requests.selectedRequest.requestDetailsToSave = this.requests.selectedRequest.requestDetails;
                this.requests.selectedRequest.requestDetails = new Array();
                this.requests.selectedRequest.requestDetailsToSave.forEach(function (item) {
                  _this3.requests.selectedRequest.requestDetails.push(item._id);
                });
                _context6.next = 8;
                return this.requests.saveRequest(this.config.SEND_EMAILS);

              case 8:
                serverResponse = _context6.sent;

                if (!serverResponse.error) {
                  this.getRequests();
                  this.utils.showNotification("The request was deleted");
                }
                this._cleanUp();

              case 11:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function deleteRequest() {
        return _ref6.apply(this, arguments);
      }

      return deleteRequest;
    }();

    ViewRequests.prototype._cleanUp = function _cleanUp() {
      this.requestSelected = false;
      this.customeResponse = "";
    };

    ViewRequests.prototype.selectAssignment = function selectAssignment(assign, index) {
      this.selectedAssignmentIndex = index;
      this.systems.selectedSystemFromId(assign.systemId);
    };

    ViewRequests.prototype.cancel = function cancel() {
      this.requests.selectRequest(0);
    };

    ViewRequests.prototype.changeBeginDate = function changeBeginDate(evt) {
      this.minEndDate = (0, _moment2.default)(evt.detail.event.date).format("MM/DD/YYYY");
      this.requests.selectedRequest.endDate = _moment2.default.max((0, _moment2.default)(this.requests.selectedRequest.startDate).format("MM/DD/YYYY"), (0, _moment2.default)(this.requests.selectedRequest.endDate).format("MM/DD/YYYY")).format("MM/DD/YYYY");
    };

    ViewRequests.prototype._lock = function () {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
        var response;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.requests.getRequestLock(this.requests.selectedRequest._id);

              case 2:
                response = _context7.sent;

                if (!response.error) {
                  if (response.requestId === 0) {
                    this.requests.lockRequest({
                      requestId: this.requests.selectedRequest._id,
                      personId: this.userObj._id
                    });
                    this.showLockMessage = false;
                    this.lockObject = {};
                  } else {
                    this.lockObject = response[0];
                    this.showLockMessage = true;
                  }
                }

              case 4:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function _lock() {
        return _ref7.apply(this, arguments);
      }

      return _lock;
    }();

    ViewRequests.prototype._unLock = function _unLock() {
      if (!this.showLockMessage) {
        if (this.requests.selectedRequest && this.requests.selectedRequest._id) {
          this.showLockMessage = false;
          this.requests.removeRequestLock(this.requests.selectedRequest._id);
        }
      }
    };

    return ViewRequests;
  }()) || _class);
});
define('modules/user/support/createHelpTickets',['exports', 'aurelia-framework', '../../../resources/utils/utils', '../../../resources/data/sessions', '../../../resources/data/downloads', '../../../resources/data/products', '../../../resources/data/systems', '../../../resources/data/helpTickets', '../../../resources/data/clientRequests', '../../../resources/data/people', '../../../resources/utils/validation', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/data/siteInfo'], function (exports, _aureliaFramework, _utils, _sessions, _downloads, _products, _systems, _helpTickets, _clientRequests, _people, _validation, _dataTable, _appConfig, _siteInfo) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.CreateHelpTickets = undefined;

    var _validation2 = _interopRequireDefault(_validation);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var CreateHelpTickets = exports.CreateHelpTickets = (_dec = (0, _aureliaFramework.inject)(_sessions.Sessions, _downloads.Downloads, _helpTickets.HelpTickets, _validation2.default, _utils.Utils, _dataTable.DataTable, _appConfig.AppConfig, _people.People, _clientRequests.ClientRequests, _products.Products, _systems.Systems, _siteInfo.SiteInfo, _aureliaFramework.TemplatingEngine), _dec(_class = function () {
        function CreateHelpTickets(sessions, apps, helpTickets, validation, utils, datatable, config, people, clientRequests, products, systems, site, templatingEngine) {
            _classCallCheck(this, CreateHelpTickets);

            this.showInfoBox = false;
            this.courseSelected = false;
            this.showHelpTicketDescription = false;
            this.showInputForm = false;
            this.showRequests = false;
            this.inputForm = null;
            this.showTypes = false;
            this.inputHTML = "";
            this.spinnerHTML = "";
            this.removedFiles = new Array();
            this.showAdditionalInfo = false;

            this.sessions = sessions;
            this.apps = apps;
            this.helpTickets = helpTickets;
            this.people = people;
            this.utils = utils;
            this.validation = validation;
            this.validation.initialize(this);
            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.config = config;
            this.clientRequests = clientRequests;
            this.products = products;
            this.systems = systems;
            this.site = site;
            this.templatingEngine = templatingEngine;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        CreateHelpTickets.prototype.attached = function attached() {
            $('[data-toggle="tooltip"]').tooltip();
        };

        CreateHelpTickets.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var responses;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return Promise.all([this.helpTickets.getHelpTicketTypes('?order=category'), this.sessions.getSessionsArray('?filter=[or]sessionStatus|Active:Requests&order=startDate', true), this.people.getCoursesArray(true, '?filter=personId|eq|' + this.userObj._id + '&order=number'), this.apps.getDownloadsArray(true, '?filter=helpTicketRelevant[eq]true&order=name'), this.systems.getSystemsArray(), this.config.getConfig(), this.site.getMessageArray('?filter=category|eq|HELP_TICKETS', true)]);

                            case 2:
                                responses = _context.sent;

                                this.helpTickets.selectHelpTicket();
                                this.sendEmail = this.config.SEND_EMAILS;
                                this.appsArray = this.apps.appDownloadsArray.filter(function (item) {
                                    return item.helpTicketRelevant;
                                });
                                this.editorMessage = this.getMessage('EDITOR_DESCRIPTION_MESSAGE');
                                this.fileUploadMessage = this.getMessage('FILE_UPLOAD_DESCRIPTION');
                                this.stepsMessage = this.getMessage('RECREATE_STEPS');

                            case 9:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        CreateHelpTickets.prototype.categoryChanged = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.showAdditionalInfo = false;

                                if (!(this.helpTickets.selectedHelpTicket.helpTicketCategory > -1)) {
                                    _context2.next = 10;
                                    break;
                                }

                                this.requestsRequired = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].requestsRequired;

                                if (!this.requestsRequired) {
                                    _context2.next = 6;
                                    break;
                                }

                                _context2.next = 6;
                                return this.getActiveRequests();

                            case 6:
                                this.showTypes = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].showSubtypes && this.clientRequestsArray.length;
                                if (!this.showTypes) {
                                    this.selectedHelpTicketType = 0;
                                    this.helpTicketTypeMessage = this.getMessage(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].type);
                                    this.resources = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].documents;
                                    this.helpTicketType = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].type;
                                    this.helpTickets.selectedHelpTicket.helpTicketType = this.helpTicketType;
                                    if (this.requestsRequired && clientRequestsArray.length > 0 || !this.requestsRequired) this.showAdditionalInfo = true;
                                    this.createInputForm(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].inputForm);
                                    this.setupValidation(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[0].validation);
                                } else {
                                    this.helpTicketTypeMessage = this.clientRequestsArray.length ? this.getMessage('SELECT_TYPE') : undefined;
                                    this.inputForm = null;
                                    this.showAdditionalInfo = false;
                                }
                                _context2.next = 14;
                                break;

                            case 10:
                                this.inputForm = null;
                                this.showTypes = false;
                                this.showAdditionalInfo = false;
                                this.helpTicketTypeMessage = undefined;

                            case 14:
                                $("#helpTicketPurpose").addClass('focus');

                            case 15:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function categoryChanged() {
                return _ref2.apply(this, arguments);
            }

            return categoryChanged;
        }();

        CreateHelpTickets.prototype.getMessage = function getMessage(messageKey) {
            for (var i = 0; i < this.site.messageArray.length; i++) {
                if (this.site.messageArray[i].key === messageKey) return this.site.messageArray[i].content;
            }
            return "";
        };

        CreateHelpTickets.prototype.createInputForm = function createInputForm(html) {
            $('#container').html(html);
            var extendedInput = $('.extend');
            for (var i = 0; i < extendedInput.length; i++) {
                this.helpTickets.selectedHelpTicketContent.content[$(extendedInput[i]).attr('id')] = "";
            }

            var el = document.getElementById('container');

            if (el) {
                if (!el.querySelectorAll('.au-target').length) {
                    this.templatingEngine.enhance({ element: el, bindingContext: this });
                }
            }
        };

        CreateHelpTickets.prototype.typeChanged = function () {
            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(el) {
                var _this = this;

                var keyWords, refreshProductArray;
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while (1) {
                        switch (_context3.prev = _context3.next) {
                            case 0:
                                this.clearTables();

                                if (!(this.helpTicketType !== "NULL")) {
                                    _context3.next = 14;
                                    break;
                                }

                                this.helpTickets.selectedHelpTicket.helpTicketType = this.helpTicketType;
                                this.selectedHelpTicketType = this.getIndex();
                                this.createInputForm(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].inputForm);
                                this.helpTicketTypeMessage = this.getMessage(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].type);
                                this.inputForm = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].inputForm;
                                this.setupValidation(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].validation);

                                _context3.next = 10;
                                return this.products.getProductsArray('?fields=_id name');

                            case 10:
                                this.showAdditionalInfo = false;

                                if (this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].requestKeywords) {
                                    keyWords = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].requestKeywords;
                                    refreshProductArray = new Array();

                                    this.products.productsArray.forEach(function (item) {
                                        var foo = item.name.toUpperCase();
                                        if (foo.indexOf(keyWords) > -1) {
                                            refreshProductArray.push(item._id);
                                        }
                                    });
                                    this.clientRequestsArray = this.originalClientRequestsArray.filter(function (item) {
                                        return refreshProductArray.indexOf(item.productId) > -1 && item.systemId;
                                    });
                                } else {
                                    if (this.originalClientRequestsArray && this.originalClientRequestsArray.length !== this.clientRequestsArray.length) {
                                        this.originalClientRequestsArray.forEach(function (item) {
                                            _this.clientRequestsArray.push(item);
                                        });
                                    }
                                }
                                _context3.next = 17;
                                break;

                            case 14:
                                this.helpTicketTypeMessage = this.getMessage('SELECT_TYPE');
                                this.inputForm = null;
                                this.showAdditionalInfo = false;

                            case 17:
                            case 'end':
                                return _context3.stop();
                        }
                    }
                }, _callee3, this);
            }));

            function typeChanged(_x) {
                return _ref3.apply(this, arguments);
            }

            return typeChanged;
        }();

        CreateHelpTickets.prototype.setupValidation = function setupValidation(rules) {
            var _this2 = this;

            this.validation.clearRules();
            rules.forEach(function (item) {
                _this2.validation.addRule(1, item.control, [{ "rule": item.rule, "message": item.message, "value": item.value }]);
            });
        };

        CreateHelpTickets.prototype.getIndex = function getIndex() {
            var _this3 = this;

            var returnIndex;
            this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes.forEach(function (item, index) {
                if (item.type === _this3.helpTickets.selectedHelpTicket.helpTicketType) {
                    returnIndex = index;
                }
            });
            return returnIndex;
        };

        CreateHelpTickets.prototype.getActiveRequests = function () {
            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
                var _this4 = this;

                var sessions;
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while (1) {
                        switch (_context4.prev = _context4.next) {
                            case 0:
                                sessions = "";

                                this.sessions.sessionsArray.forEach(function (item) {
                                    sessions += item._id + ":";
                                });
                                sessions = sessions.substring(0, sessions.length - 1);
                                _context4.next = 5;
                                return this.clientRequests.getActiveClientRequestsArray(this.userObj._id, sessions);

                            case 5:
                                this.originalClientRequestsArray = new Array();
                                this.clientRequestsArray = new Array();

                                this.clientRequests.requestsArray.forEach(function (item) {
                                    item.requestDetails.forEach(function (item2) {
                                        if (item2.assignments && item2.assignments.length > 0) {
                                            item2.assignments.forEach(function (assign) {
                                                _this4.originalClientRequestsArray.push({
                                                    productId: item2.productId,
                                                    sessionId: item.sessionId,
                                                    requestStatus: item2.requestStatus,
                                                    systemId: assign.systemId,
                                                    courseId: item.courseId,
                                                    client: assign.client,
                                                    clientId: assign.clientId,
                                                    _id: item2._id
                                                });
                                            });
                                        } else {
                                            _this4.originalClientRequestsArray.push({
                                                productId: item2.productId,
                                                sessionId: item.sessionId,
                                                requestStatus: item2.requestStatus,
                                                courseId: item.courseId,
                                                _id: item2._id
                                            });
                                        }
                                    });
                                });
                                this.originalClientRequestsArray.forEach(function (item) {
                                    _this4.clientRequestsArray.push(item);
                                });

                            case 9:
                            case 'end':
                                return _context4.stop();
                        }
                    }
                }, _callee4, this);
            }));

            function getActiveRequests() {
                return _ref4.apply(this, arguments);
            }

            return getActiveRequests;
        }();

        CreateHelpTickets.prototype.requestChosen = function () {
            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(el, index) {
                return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                        switch (_context5.prev = _context5.next) {
                            case 0:

                                this.showAdditionalInfo = true;
                                this.SelectedClientRequest = this.clientRequestsArray[index];
                                this.selectedSessionId = this.clientRequestsArray[index].sessionId;

                                if (this.selectedProductRow) this.selectedProductRow.children().removeClass('info');
                                this.selectedProductRow = $(el.target).closest('tr');
                                this.selectedProductRow.children().addClass('info');

                            case 6:
                            case 'end':
                                return _context5.stop();
                        }
                    }
                }, _callee5, this);
            }));

            function requestChosen(_x2, _x3) {
                return _ref5.apply(this, arguments);
            }

            return requestChosen;
        }();

        CreateHelpTickets.prototype.cancel = function cancel() {
            this.helpTickets.selectHelpTicket();
            this.helpTickets.selectHelpTicketContent();
            this.helpTicketTypeMessage = undefined;

            this.courseSelected = false;
            this.showAdditionalInfo = false;

            this.filesToUpload = new Array();
            this.clientRequests = new Array();
        };

        CreateHelpTickets.prototype.buldHelpTicket = function () {
            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                        switch (_context6.prev = _context6.next) {
                            case 0:
                                this.helpTickets.selectedHelpTicket.owner = [{ "personId": "b1b1b1b1b1b1b1b1b1b1b1b1", "date": new Date() }];
                                this.helpTickets.selectedHelpTicket.personId = this.userObj._id;
                                this.helpTickets.selectedHelpTicket.institutionId = this.userObj.institutionId._id;
                                this.helpTickets.selectedHelpTicket.sessionId = this.selectedSessionId;

                                if (!this.showTypes) {
                                    this.helpTickets.selectedHelpTicket.courseId = 'b1b1b1b1b1b1b1b1b1b1b1b1';
                                } else {
                                    this.helpTickets.selectedHelpTicket.requestId = this.SelectedClientRequest._id;
                                    this.helpTickets.selectedHelpTicket.systemId = this.SelectedClientRequest.systemId;
                                    this.helpTickets.selectedHelpTicket.client = this.SelectedClientRequest.client;
                                    this.helpTickets.selectedHelpTicket.productId = this.SelectedClientRequest.productId;
                                    this.helpTickets.selectedHelpTicket.courseId = this.SelectedClientRequest.courseId;
                                }

                                this.helpTickets.selectedHelpTicketContent.personId = this.userObj._id;
                                this.helpTickets.selectedHelpTicketContent.type = this.helpTickets.selectedHelpTicket.helpTicketType;
                                this.helpTickets.selectedHelpTicketContent.displayForm = this.inputForm;
                                this.helpTickets.selectedHelpTicket.content.push(this.helpTickets.selectedHelpTicketContent);

                            case 9:
                            case 'end':
                                return _context6.stop();
                        }
                    }
                }, _callee6, this);
            }));

            function buldHelpTicket() {
                return _ref6.apply(this, arguments);
            }

            return buldHelpTicket;
        }();

        CreateHelpTickets.prototype.save = function () {
            var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
                var email, serverResponse;
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                        switch (_context7.prev = _context7.next) {
                            case 0:
                                if (!this.validation.validate(1)) {
                                    _context7.next = 10;
                                    break;
                                }

                                _context7.next = 3;
                                return this.buldHelpTicket();

                            case 3:
                                email = new Object();

                                if (this.sendEmail) {
                                    email.reason = this.config.HELP_TICKET_EMAIL_CREATE;
                                    email.fullName = this.userObj.fullName;
                                    email.email = this.userObj.email;
                                    email.helpTicketNo = 0;
                                    email.helpTicketContext = this.buildHelpTicketContext();
                                    email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                                }

                                _context7.next = 7;
                                return this.helpTickets.saveHelpTicket(email);

                            case 7:
                                serverResponse = _context7.sent;

                                if (!serverResponse.status) {
                                    this.utils.showNotification("The help ticket was created");
                                    if (this.filesToUpload && this.filesToUpload.length > 0) {
                                        this.helpTickets.uploadFile(this.filesToUpload, serverResponse.content[0]._id, this.helpTickets.selectedHelpTicket);
                                    }
                                }
                                this._cleanUp();

                            case 10:
                            case 'end':
                                return _context7.stop();
                        }
                    }
                }, _callee7, this);
            }));

            function save() {
                return _ref7.apply(this, arguments);
            }

            return save;
        }();

        CreateHelpTickets.prototype.buildHelpTicketContext = function buildHelpTicketContext() {
            var obj = new Object();
            this.selectedHelpTicketType = this.selectedHelpTicketType ? this.selectedHelpTicketType : 0;
            obj.type = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].description;
            obj.subtype = this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[this.selectedHelpTicketType].description;

            return obj;
        };

        CreateHelpTickets.prototype._cleanUp = function _cleanUp() {
            this.showTypes = false;
            this.helpTicketTypeMessage = undefined;

            this.showAdditionalInfo = false;
            this.helpTickets.selectHelpTicket();
            this.helpTickets.selectHelpTicketContent();
            this.clearTables();
            this.filesToUpload = new Array();
        };

        CreateHelpTickets.prototype.clearTables = function clearTables() {
            if (this.selectedCourseRow) this.selectedCourseRow.children().removeClass('rowSelected');
            if (this.selectedProductRow) this.selectedProductRow.children().removeClass('rowSelected');
        };

        CreateHelpTickets.prototype.changeFiles = function changeFiles() {
            var _this5 = this;

            this.filesToUpload = this.filesToUpload ? this.filesToUpload : new Array();
            for (var i = 0; i < this.files.length; i++) {
                var addFile = true;
                this.filesToUpload.forEach(function (item) {
                    if (item.name === _this5.files[i].name) addFile = false;
                });
                if (addFile) this.filesToUpload.push(this.files[i]);
            }
        };

        CreateHelpTickets.prototype.removeFile = function removeFile(index) {
            this.filesToUpload.splice(index, 1);
        };

        return CreateHelpTickets;
    }()) || _class);
});
define('modules/user/support/curriculum',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/curriculum', '../../../resources/data/products'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _curriculum, _products) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.CurrInfo = undefined;

	function _asyncToGenerator(fn) {
		return function () {
			var gen = fn.apply(this, arguments);
			return new Promise(function (resolve, reject) {
				function step(key, arg) {
					try {
						var info = gen[key](arg);
						var value = info.value;
					} catch (error) {
						reject(error);
						return;
					}

					if (info.done) {
						resolve(value);
					} else {
						return Promise.resolve(value).then(function (value) {
							step("next", value);
						}, function (err) {
							step("throw", err);
						});
					}
				}

				return step("next");
			});
		};
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _dec, _class;

	var CurrInfo = exports.CurrInfo = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _curriculum.Curriculum, _products.Products, _appConfig.AppConfig, _utils.Utils), _dec(_class = function () {
		function CurrInfo(datatable, curriculum, products, config, utils) {
			_classCallCheck(this, CurrInfo);

			this.curriculumItemSelected = false;
			this.spinnerHTML = "";
			this.curriculumContent = " ";
			this.newItem = false;
			this.curriculumSelected = false;
			this.addComment = false;
			this.description = "";
			this.comment = "";

			this.dataTable = datatable;
			this.dataTable.initialize(this);
			this.utils = utils;
			this.curriculum = curriculum;
			this.products = products;
			this.config = config;

			this.userObj = JSON.parse(sessionStorage.getItem('user'));
		}

		CurrInfo.prototype.attached = function attached() {
			$('[data-toggle="tooltip"]').tooltip();
		};

		CurrInfo.prototype.activate = function () {
			var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
				var responses;
				return regeneratorRuntime.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								_context.next = 2;
								return Promise.all([this.curriculum.getCurriculumCategoryArray(true, '?order=name'), this.curriculum.getCurriculumArray(true, '?order=sortOrder'), this.products.getProductsArray('?order=name', true), this.config.getConfig()]);

							case 2:
								responses = _context.sent;

								this.curriculum.selectCurriculumCategory(0);
								this.curriculum.selectCurriculum();
								this.filterList();

							case 6:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, this);
			}));

			function activate() {
				return _ref.apply(this, arguments);
			}

			return activate;
		}();

		CurrInfo.prototype.filterList = function filterList() {
			var _this = this;

			this.curriculumArray = this.curriculum.curriculumArray.filter(function (item) {
				return item.category === _this.curriculum.selectedCurriculumCategory.name;
			});
		};

		CurrInfo.prototype.typeChanged = function typeChanged(index, el) {
			this.curriculum.selectCurriculumCategory(index);
			$("#buttonGroup").children().removeClass('menuButtons');
			$("#buttonGroup").children().css("background-color", "");
			$("#buttonGroup").children().css("color", "");
			$(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
			$(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);
			this.filterList();
			this.curriculumSelected = false;
		};

		CurrInfo.prototype.togglePanel = function togglePanel(el) {
			var panel = $(el.target);
			if (!panel.hasClass('panel-collapsed')) {
				panel.parents('.panel').find('.panel-body').slideUp();
				panel.addClass('panel-collapsed');
				panel.find('i').removeClass('fa-chevron-up').addClass('fa-chevron-down');
			} else {
				panel.parents('.panel').find('.panel-body').slideDown();
				panel.removeClass('panel-collapsed');
				panel.find('i').removeClass('fa-chevron-down').addClass('fa-chevron-up');
			}
		};

		CurrInfo.prototype.selectCurriculum = function selectCurriculum(curriculum) {
			this.curriculum.selectCurriculumById(curriculum._id);
			this.curriculumSelected = true;
		};

		CurrInfo.prototype.add = function add() {
			this.addComment = true;
		};

		CurrInfo.prototype.cancel = function cancel() {
			this.addComment = false;
			this.comment = "";
		};

		CurrInfo.prototype.save = function () {
			var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
				var serverResponse;
				return regeneratorRuntime.wrap(function _callee2$(_context2) {
					while (1) {
						switch (_context2.prev = _context2.next) {
							case 0:
								if (!this.comment) {
									_context2.next = 7;
									break;
								}

								if (!this.curriculum.selectedCurriculum.customerComments) {
									this.curriculum.selectedCurriculum.customerComments = new Array();
								}
								this.curriculum.selectedCurriculum.customerComments.unshift({
									authorEmail: this.userObj.email,
									comment: this.comment,
									dateCreated: new Date()
								});
								_context2.next = 5;
								return this.curriculum.save();

							case 5:
								serverResponse = _context2.sent;

								this.addComment = false;

							case 7:
							case 'end':
								return _context2.stop();
						}
					}
				}, _callee2, this);
			}));

			function save() {
				return _ref2.apply(this, arguments);
			}

			return save;
		}();

		CurrInfo.prototype.back = function back() {
			this.curriculumSelected = false;
		};

		CurrInfo.prototype.rateCurriculum = function rateCurriculum(el) {
			this.curriculum.selectCurriculumById(el.detail.id);
			this.curriculum.selectedCurriculum.rating = el.detail.rating;
			this.curriculum.selectedCurriculum.raters = this.curriculum.selectedCurriculum.raters ? this.curriculum.selectedCurriculum.raters + 1 : 0;
			var serverResponse = this.curriculum.save();
		};

		return CurrInfo;
	}()) || _class);
});
define('modules/user/support/downloads',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/data/downloads'], function (exports, _aureliaFramework, _dataTable, _appConfig, _utils, _downloads) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Download = undefined;

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Download = exports.Download = (_dec = (0, _aureliaFramework.inject)(_dataTable.DataTable, _downloads.Downloads, _utils.Utils, _appConfig.AppConfig), _dec(_class = function () {
        function Download(datatable, downloads, utils, config) {
            _classCallCheck(this, Download);

            this.navControl = "downloadsNavButtons";
            this.spinnerHTML = "";
            this.filterValues = new Array();

            this.dataTable = datatable;
            this.dataTable.initialize(this);
            this.utils = utils;
            this.downloads = downloads;
            this.config = config;
        }

        Download.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return this.downloads.getDownloadsArray();

                            case 2:
                                _context.next = 4;
                                return this.downloads.getDownloadCategoriesArray();

                            case 4:

                                this.updateArray();

                                this.typeSelected = this.downloads.appCatsArray[0].downCatcode;
                                this.filterList();

                            case 7:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        Download.prototype.refresh = function () {
            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                                _context2.next = 3;
                                return this.downloads.getDownloadsArray(true);

                            case 3:
                                this.updateArray();
                                this.spinnerHTML = "";

                            case 5:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function refresh() {
                return _ref2.apply(this, arguments);
            }

            return refresh;
        }();

        Download.prototype.updateArray = function updateArray() {
            this.dataTable.updateArray(this.downloads.appDownloadsArray);
        };

        Download.prototype.typeChanged = function typeChanged(el) {
            if (el.target.id != "") {
                $("#buttonGroup").children().removeClass('menuButtons');
                $("#buttonGroup").children().css("background-color", "");
                $("#buttonGroup").children().css("color", "");
                $(el.target).css("background-color", this.config.BUTTONS_BACKGROUND);
                $(el.target).css("color", this.config.ACTIVE_SUBMENU_COLOR);
                this.typeSelected = el.target.id;
                this.filterList();
            }
        };

        Download.prototype.filterList = function filterList() {
            this.dataTable.filterList(this.typeSelected, { type: 'value', filter: "downCatcodeFilter", collectionProperty: 'downCatcode', compare: 'match' });
        };

        return Download;
    }()) || _class);
});
define('modules/user/support/links',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig', '../../../resources/data/siteInfo', '../../../resources/utils/utils', 'moment'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig, _siteInfo, _utils, _moment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.UsefulInfo = undefined;

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _asyncToGenerator(fn) {
        return function () {
            var gen = fn.apply(this, arguments);
            return new Promise(function (resolve, reject) {
                function step(key, arg) {
                    try {
                        var info = gen[key](arg);
                        var value = info.value;
                    } catch (error) {
                        reject(error);
                        return;
                    }

                    if (info.done) {
                        resolve(value);
                    } else {
                        return Promise.resolve(value).then(function (value) {
                            step("next", value);
                        }, function (err) {
                            step("throw", err);
                        });
                    }
                }

                return step("next");
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var UsefulInfo = exports.UsefulInfo = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig, _siteInfo.SiteInfo, _utils.Utils), _dec(_class = function () {
        function UsefulInfo(router, config, siteinfo, utils) {
            _classCallCheck(this, UsefulInfo);

            this.email = '';
            this.password = '';
            this.loginError = '';

            this.router = router;
            this.config = config;
            this.siteinfo = siteinfo;
            this.utils = utils;
        }

        UsefulInfo.prototype.activate = function () {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
                var currentDate, options, category, i, obj, j, objLinks;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                currentDate = (0, _moment2.default)(new Date()).format("MM-DD-YYYY");
                                options = '?filter=[and]itemType|eq|ILNK:expiredDate|gt|' + currentDate + '&order=Category';
                                _context.next = 4;
                                return this.siteinfo.getInfoArray(true, options);

                            case 4:

                                this.linkArray = new Array();
                                category = "";

                                for (i = 0; i < this.siteinfo.siteArray.length; i++) {
                                    if (this.siteinfo.siteArray[i].category != category) {
                                        obj = new Object();
                                        j = i;

                                        obj.category = this.siteinfo.siteArray[i].category;
                                        category = this.siteinfo.siteArray[i].category;
                                        objLinks = new Array();

                                        while (i < this.siteinfo.siteArray.length && this.siteinfo.siteArray[i].category == category) {
                                            objLinks.push(this.siteinfo.siteArray[i]);
                                            i++;
                                        }
                                        i--;
                                        obj.links = objLinks;
                                        this.linkArray.push(obj);
                                    }
                                };

                            case 8:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function activate() {
                return _ref.apply(this, arguments);
            }

            return activate;
        }();

        return UsefulInfo;
    }()) || _class);
});
define('modules/user/support/support',['exports', 'aurelia-framework', 'aurelia-router', '../../../config/appConfig'], function (exports, _aureliaFramework, _aureliaRouter, _appConfig) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Support = undefined;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _dec, _class;

    var Support = exports.Support = (_dec = (0, _aureliaFramework.inject)(_aureliaRouter.Router, _appConfig.AppConfig), _dec(_class = function () {
        function Support(router, config) {
            _classCallCheck(this, Support);

            this.title = "Support";

            this.router = router;
            this.config = config;

            this.userObj = JSON.parse(sessionStorage.getItem('user'));
        }

        Support.prototype.attached = function attached() {
            $(".nav a").on("click", function () {
                $(".nav").find(".active").removeClass("active");
                $(this).parent().addClass("active");
            });
        };

        Support.prototype.activate = function activate() {
            this.config.getConfig(true);
        };

        Support.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{
                route: ['', 'viewHelpTickets'],
                moduleId: './viewHelpTickets',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'viewHelpTickets',
                title: 'View Help Tickets'
            }, {
                route: 'createHelpTickets',
                moduleId: './createHelpTickets',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'createHelpTickets',
                title: 'Create Help Tickets'
            }, {
                route: 'downloads',
                moduleId: './downloads',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'downloads',
                title: 'Downloads'
            }, {
                route: 'curriculum',
                moduleId: './curriculum',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'curriculum',
                title: 'Curriculum'
            }, {
                route: 'links',
                moduleId: './links',
                settings: { auth: true, roles: [] },
                nav: true,
                name: 'links',
                title: 'Useful Information'
            }]);

            this.router = router;
        };

        return Support;
    }()) || _class);
});
define('modules/user/support/viewHelpTickets',['exports', 'aurelia-framework', '../../../resources/utils/dataTable', '../../../resources/data/helpTickets', '../../../resources/data/sessions', '../../../resources/data/systems', '../../../resources/data/products', '../../../resources/data/clientRequests', '../../../resources/data/downloads', '../../../config/appConfig', '../../../resources/utils/utils', '../../../resources/dialogs/common-dialogs', '../../../resources/data/people', '../../../resources/utils/validation'], function (exports, _aureliaFramework, _dataTable, _helpTickets, _sessions, _systems, _products, _clientRequests, _downloads, _appConfig, _utils, _commonDialogs, _people, _validation) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ViewHelpTickets = undefined;

  var _validation2 = _interopRequireDefault(_validation);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _asyncToGenerator(fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new Promise(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return Promise.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var ViewHelpTickets = exports.ViewHelpTickets = (_dec = (0, _aureliaFramework.inject)(_appConfig.AppConfig, _validation2.default, _people.People, _dataTable.DataTable, _utils.Utils, _helpTickets.HelpTickets, _sessions.Sessions, _systems.Systems, _downloads.Downloads, _products.Products, _clientRequests.ClientRequests, _commonDialogs.CommonDialogs, _aureliaFramework.TemplatingEngine), _dec(_class = function () {
    function ViewHelpTickets(config, validation, people, datatable, utils, helpTickets, sessions, systems, apps, products, requests, dialog, templatingEngine) {
      _classCallCheck(this, ViewHelpTickets);

      this.helpTicketSelected = false;
      this.enterResponse = false;
      this.showLockMessage = false;
      this.responseMessage = "";
      this.isChecked = true;
      this.spinnerHTML = "";
      this.filterValues = new Array();
      this.lockObject = new Object();

      this.config = config;
      this.validation = validation;
      this.validation.initialize(this);
      this.people = people;
      this.dataTable = datatable;
      this.dataTable.initialize(this);
      this.utils = utils;
      this.helpTickets = helpTickets;
      this.sessions = sessions;
      this.systems = systems;
      this.apps = apps;
      this.products = products;
      this.requests = requests;
      this.dialog = dialog;
      this.templatingEngine = templatingEngine;

      this.userObj = JSON.parse(sessionStorage.getItem('user'));
      this.isUCC = this.userObj.userRole >= this.config.UCC_ROLE;
    }

    ViewHelpTickets.prototype.attached = function attached() {
      this.toolTips();
    };

    ViewHelpTickets.prototype.deactivate = function deactivate() {
      this._unLock();
    };

    ViewHelpTickets.prototype.activate = function () {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
        var _this = this;

        var uccRoles, responses;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                uccRoles = "";

                this.config.ROLES.forEach(function (item) {
                  if (item.UCConly) uccRoles += item.role + ":";
                });

                _context.next = 4;
                return Promise.all([this.helpTickets.getHelpTicketArray("?filter=personId|eq|" + this.userObj._id + "&order=modifiedDate:DSC", true), this.people.getUCCStaff(uccRoles), this.helpTickets.getHelpTicketTypes('?order=category'), this.sessions.getSessionsArray('?order=startDate', true), this.apps.getDownloadsArray(true, '?filter=helpTicketRelevant|eq|true&order=name'), this.systems.getSystemsArray(), this.config.getConfig()]);

              case 4:
                responses = _context.sent;


                this.people = this.people.uccPeople;

                this.updateArray();

                this.filterOutClosed();

                this.sendEmail = this.config.SEND_EMAILS;;

                this.helpTicketTypeLookupArray = new Array();
                this.helpTickets.helpTicketTypesArray.forEach(function (item) {
                  item.subtypes.forEach(function (item2) {
                    _this.helpTicketTypeLookupArray.push({ helpTicketType: item2.type, description: item2.description });
                  });
                });

                this._setUpValidation();

              case 13:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _ref.apply(this, arguments);
      }

      return activate;
    }();

    ViewHelpTickets.prototype.refresh = function () {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.spinnerHTML = "<i class='fa fa-spinner fa-spin'></i>";
                _context2.next = 3;
                return this.helpTickets.getHelpTicketArray('?filter=personId|eq|' + this.userObj._id, true);

              case 3:
                this.updateArray();
                this.spinnerHTML = "";

              case 5:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function refresh() {
        return _ref2.apply(this, arguments);
      }

      return refresh;
    }();

    ViewHelpTickets.prototype.updateArray = function updateArray() {
      this.dataTable.updateArray(this.helpTickets.helpTicketsArray);
      this._cleanUpFilters();
    };

    ViewHelpTickets.prototype.selectHelpTicket = function () {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(el, index) {
        var response, subTypeIndex;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.editIndex = this.dataTable.displayArray[index + parseInt(this.dataTable.startRecord)].baseIndex;
                this.helpTickets.selectHelpTicket(this.editIndex);

                _context3.next = 4;
                return this.getDetails();

              case 4:
                _context3.next = 6;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 6:
                response = _context3.sent;

                if (!response.error) {
                  if (response.helpTicketId === 0) {
                    this.helpTickets.lockHelpTicket({
                      helpTicketId: this.helpTickets.selectedHelpTicket._id,
                      personId: this.userObj._id
                    });
                    this.responseMessage = "";
                    this.showLockMessage = false;
                    this.lockObject = {};
                  } else {
                    if (response[0].personId !== this.userObj._id) {
                      this.lockObject = response[0];
                      this.responseMessage = "Help Ticket is currently locked by " + this.getName();
                      this.showLockMessage = true;
                    }
                  }
                }

                subTypeIndex = this.getIndex(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes, this.helpTickets.selectedHelpTicket.content[0].type);

                this.createOutputForm(this.helpTickets.helpTicketTypesArray[this.helpTickets.selectedHelpTicket.helpTicketCategory].subtypes[subTypeIndex].outputForm);

                if (this.selectedRow) this.selectedRow.children().removeClass('info');
                this.selectedRow = $(el.target).closest('tr');
                this.selectedRow.children().addClass('info');
                this.helpTicketSelected = true;

                this.viewHelpTicketsHeading = "Help Ticket " + this.helpTickets.selectedHelpTicket.helpTicketNo;

              case 15:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function selectHelpTicket(_x, _x2) {
        return _ref3.apply(this, arguments);
      }

      return selectHelpTicket;
    }();

    ViewHelpTickets.prototype.getIndex = function getIndex(subtypes, type) {
      for (var i = 0; i < subtypes.length; i++) {
        if (subtypes[i].type === type) {
          return i;
        }
      }
      return null;
    };

    ViewHelpTickets.prototype.createOutputForm = function createOutputForm(html) {
      var el = document.getElementById('container');
      el.innerHTML = html;

      if (el) {
        if (!el.querySelectorAll('.au-target').length) {
          this.templatingEngine.enhance({ element: el, bindingContext: this });
        }
      }
    };

    ViewHelpTickets.prototype.getDetails = function () {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.showRequestDetails = false;
                if (this.helpTickets.selectedHelpTicket.requestId) {
                  if (this.helpTickets.selectedHelpTicket.requestId.assignments && this.helpTickets.selectedHelpTicket.requestId.assignments.length > 0) this.showRequestDetails = true;
                  this.showCourse = false;
                  this.course = "";
                  this.showCourse = true;
                  if (this.helpTickets.selectedHelpTicket.courseId) {
                    this.course = this.helpTickets.selectedHelpTicket.courseId.number + " - " + this.helpTickets.selectedHelpTicket.courseId.name;
                  } else {
                    this.course = this.config.SANDBOX_NAME;
                  }
                }

              case 2:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getDetails() {
        return _ref4.apply(this, arguments);
      }

      return getDetails;
    }();

    ViewHelpTickets.prototype.getName = function getName() {
      for (var i = 0; i < this.people.uccPeople.length; i++) {
        if (this.people.uccPeople[i]._id == this.lockObject.personId) return this.people.uccPeople[i].fullName;
      }
      return "someone";
    };

    ViewHelpTickets.prototype.respond = function respond() {
      if (!this.showLockMessage && !this.enterResponse) {
        this.helpTickets.selectHelpTicketContent();
        this.enterResponse = true;
        this.enableButton = true;
      }
    };

    ViewHelpTickets.prototype.cancelResponse = function cancelResponse() {
      this.response = new Object();
      this.isUnchanged = true;
      this.enterResponse = false;
    };

    ViewHelpTickets.prototype._createResponse = function _createResponse() {
      this.helpTickets.selectedHelpTicket.helpTicketStatus = this.config.REPLIED_HELPTICKET_STATUS;
      this.helpTickets.selectedHelpTicketContent.personId = this.userObj._id;
      this.helpTickets.selectedHelpTicketContent.type = this.config.HELP_TICKET_OTHER_TYPE;
      this.helpTickets.selectedHelpTicketContent.emailSent = this.sendEmail;
      this.helpTickets.selectedHelpTicketContent.displayForm = this.config.HELP_TICKET_OTHER_TYPE;
    };

    ViewHelpTickets.prototype.saveResponse = function () {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
        var email, serverResponse;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this._createResponse();
                email = new Object();

                if (this.sendEmail) {
                  email.reason = 2;
                  email.fullName = this.userObj.fullName;
                  email.email = this.userObj.email;
                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = this.userObj.fullName + " has responded to the help ticket.";
                }
                _context5.next = 5;
                return this.helpTickets.saveHelpTicketResponse(email);

              case 5:
                serverResponse = _context5.sent;

                if (!serverResponse.error) {
                  this.updateArray();
                  this.filterOutClosed();
                  this.utils.showNotification("The help ticket was updated");
                  if (this.filesToUpload && this.filesToUpload.length > 0) this.helpTickets.uploadFile(this.filesToUpload, serverResponse._id);
                }
                this._cleanUp();

              case 8:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function saveResponse() {
        return _ref5.apply(this, arguments);
      }

      return saveResponse;
    }();

    ViewHelpTickets.prototype.closeHelpTicket = function closeHelpTicket(helpTicket) {
      var _this2 = this;

      return this.dialog.showMessage("Are you sure you want to close the help ticket?", "Close Help Ticket", ['Yes', 'No']).whenClosed(function (response) {
        if (!response.wasCancelled) {
          _this2.closeTicket(helpTicket);
        } else {
          _this2._cleanUp();
        }
      });
    };

    ViewHelpTickets.prototype.closeTicket = function () {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(helpTicket) {
        var response, email, serverResponse;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.helpTickets.selectHelpTicketByID(helpTicket._id);
                _context6.next = 3;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 3:
                response = _context6.sent;

                if (response.error) {
                  _context6.next = 15;
                  break;
                }

                if (!(response.helpTicketId === 0)) {
                  _context6.next = 15;
                  break;
                }

                email = new Object();

                if (this.sendEmail) {
                  email.reason = this.config.CLOSED_HELPTICKET_STATUS;
                  email.fullName = this.userObj.fullName;
                  email.email = this.userObj.email;
                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = "The help ticket was closed by " + this.userObj.fullName;
                }
                this.helpTickets.selectedHelpTicket.helpTicketStatus = this.config.CLOSED_HELPTICKET_STATUS;
                _context6.next = 11;
                return this.helpTickets.updateStatus(email);

              case 11:
                serverResponse = _context6.sent;

                if (!serverResponse.error) {
                  this.updateArray();
                  this.filterOutClosed();
                  this.utils.showNotification("The help ticket was updated");
                }
                if (this.isChecked) this.filterOutClosed();
                this._cleanUp();

              case 15:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function closeTicket(_x3) {
        return _ref6.apply(this, arguments);
      }

      return closeTicket;
    }();

    ViewHelpTickets.prototype.openHelpTicket = function () {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(helpTicket) {
        var response, email, serverResponse;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                this.helpTickets.selectHelpTicketByID(helpTicket._id);
                _context7.next = 3;
                return this.helpTickets.getHelpTicketLock(this.helpTickets.selectedHelpTicket._id);

              case 3:
                response = _context7.sent;

                if (response.error) {
                  _context7.next = 14;
                  break;
                }

                if (!(response.helpTicketId === 0)) {
                  _context7.next = 14;
                  break;
                }

                email = new Object();

                if (this.sendEmail) {
                  email.reason = 2;
                  email.fullName = this.userObj.fullName;
                  email.email = this.userObj.email;
                  email.helpTicketNo = this.helpTickets.selectedHelpTicket.helpTicketNo;
                  email.cc = this.config.HELP_TICKET_EMAIL_LIST ? this.config.HELP_TICKET_EMAIL_LIST : "";
                  email.message = "The help ticket was reopened by " + this.userObj.fullName;
                }
                this.helpTickets.selectedHelpTicket.helpTicketStatus = this.config.REVIEW_HELPTICKET_STATUS;
                _context7.next = 11;
                return this.helpTickets.updateStatus(email);

              case 11:
                serverResponse = _context7.sent;

                if (!serverResponse.error) {
                  this.updateArray();
                  this.filterOutClosed();
                  this.utils.showNotification("The help ticket was updated");
                }
                this._cleanUp();

              case 14:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function openHelpTicket(_x4) {
        return _ref7.apply(this, arguments);
      }

      return openHelpTicket;
    }();

    ViewHelpTickets.prototype.changeFiles = function changeFiles() {
      this.filesSelected = "";
      this.selectedFiles = new Array();
      for (var i = 0; i < this.files.length; i++) {
        this.selectedFiles.push(this.files[i].name);
        this.filesSelected += this.files[i].name + " ";
      }
    };

    ViewHelpTickets.prototype._cleanUp = function _cleanUp() {
      this.enterResponse = false;
      this.files = new Array();
      this.filesSelected = "";
      this.filesToUpload = new Array();
    };

    ViewHelpTickets.prototype._unLock = function _unLock() {
      if (!this.showLockMessage) {
        if (this.helpTickets.selectedHelpTicket && this.helpTickets.selectedHelpTicket._id) {
          this.helpTickets.removeHelpTicketLock(this.helpTickets.selectedHelpTicket._id);
        }
      }
    };

    ViewHelpTickets.prototype.back = function back() {
      this.helpTicketSelected = false;
      this._cleanUp();
      this._unLock();
    };

    ViewHelpTickets.prototype.filterOutClosed = function filterOutClosed() {
      if (this.isChecked) {
        this.dataTable.filterList(this.config.CLOSED_HELPTICKET_STATUS, { type: 'value', filter: "expiredFilter", collectionProperty: 'helpTicketStatus', compare: 'not-match' });
      } else {
        this.updateArray();
      }
      this.toolTips();
    };

    ViewHelpTickets.prototype._cleanUpResponse = function () {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.enterResponse = false;

              case 1:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function _cleanUpResponse() {
        return _ref8.apply(this, arguments);
      }

      return _cleanUpResponse;
    }();

    ViewHelpTickets.prototype._cleanUpFilters = function _cleanUpFilters() {
      $("#type").val("");
      $("#status").val("");
      $("#personStatus").val("");
    };

    ViewHelpTickets.prototype.changeFiles = function changeFiles() {
      var _this3 = this;

      this.filesToUpload = this.filesToUpload ? this.filesToUpload : new Array();
      for (var i = 0; i < this.files.length; i++) {
        var addFile = true;
        this.filesToUpload.forEach(function (item) {
          if (item.name === _this3.files[i].name) addFile = false;
        });
        if (addFile) this.filesToUpload.push(this.files[i]);
      }
    };

    ViewHelpTickets.prototype.removeFile = function removeFile(index) {
      this.filesToUpload.splice(index, 1);
    };

    ViewHelpTickets.prototype.toolTips = function toolTips() {
      $('[data-toggle="tooltip"]').tooltip();
    };

    ViewHelpTickets.prototype.customHelpTicketTypeFilter = function customHelpTicketTypeFilter(value, item, context) {
      var foo = value.toUpperCase();
      for (var i = 0; i < context.helpTickets.helpTicketTypesArray.length; i++) {
        for (var j = 0; j < context.helpTickets.helpTicketTypesArray[i].subtypes.length; j++) {
          if (context.helpTickets.helpTicketTypesArray[i].subtypes[j].type == item.helpTicketType) {
            return context.helpTickets.helpTicketTypesArray[i].subtypes[j].description.toUpperCase().indexOf(foo) > -1;
          }
        }
      }
      return false;
    };

    ViewHelpTickets.prototype._setUpValidation = function _setUpValidation() {
      this.validation.addRule("00", "curriculumTitle", [{ "rule": "required", "message": "Curriculum Title is required" }]);
      this.validation.addRule("00", "client", [{
        "rule": "custom", "message": "You must select a client",
        "valFunction": function valFunction(context) {
          return context.helpTicket.clientId !== undefined;
        }
      }]);
      this.validation.addRule("01", "resetPasswordUserIDs", [{ "rule": "required", "message": "You must enter the passwords to reset" }]);
      this.validation.addRule("01", "client", [{
        "rule": "custom", "message": "You must enter the passwords to reset",
        "valFunction": function valFunction(context) {
          return context.helpTicket.clientId !== undefined;
        }
      }]);
      this.validation.addRule("02", "application", [{
        "rule": "custom", "message": "You must select the application",
        "valFunction": function valFunction(context) {
          return context.content.application !== undefined;
        }
      }]);
    };

    return ViewHelpTickets;
  }()) || _class);
});
define('aurelia-templating-resources/compose',['exports', 'aurelia-dependency-injection', 'aurelia-task-queue', 'aurelia-templating', 'aurelia-pal'], function (exports, _aureliaDependencyInjection, _aureliaTaskQueue, _aureliaTemplating, _aureliaPal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Compose = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  var Compose = exports.Compose = (_dec = (0, _aureliaTemplating.customElement)('compose'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaPal.DOM.Element, _aureliaDependencyInjection.Container, _aureliaTemplating.CompositionEngine, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaTaskQueue.TaskQueue), _dec(_class = (0, _aureliaTemplating.noView)(_class = _dec2(_class = (_class2 = function () {
    function Compose(element, container, compositionEngine, viewSlot, viewResources, taskQueue) {
      

      _initDefineProp(this, 'model', _descriptor, this);

      _initDefineProp(this, 'view', _descriptor2, this);

      _initDefineProp(this, 'viewModel', _descriptor3, this);

      _initDefineProp(this, 'swapOrder', _descriptor4, this);

      this.element = element;
      this.container = container;
      this.compositionEngine = compositionEngine;
      this.viewSlot = viewSlot;
      this.viewResources = viewResources;
      this.taskQueue = taskQueue;
      this.currentController = null;
      this.currentViewModel = null;
    }

    Compose.prototype.created = function created(owningView) {
      this.owningView = owningView;
    };

    Compose.prototype.bind = function bind(bindingContext, overrideContext) {
      this.bindingContext = bindingContext;
      this.overrideContext = overrideContext;
      processInstruction(this, createInstruction(this, {
        view: this.view,
        viewModel: this.viewModel,
        model: this.model
      }));
    };

    Compose.prototype.unbind = function unbind(bindingContext, overrideContext) {
      this.bindingContext = null;
      this.overrideContext = null;
      var returnToCache = true;
      var skipAnimation = true;
      this.viewSlot.removeAll(returnToCache, skipAnimation);
    };

    Compose.prototype.modelChanged = function modelChanged(newValue, oldValue) {
      var _this = this;

      if (this.currentInstruction) {
        this.currentInstruction.model = newValue;
        return;
      }

      this.taskQueue.queueMicroTask(function () {
        if (_this.currentInstruction) {
          _this.currentInstruction.model = newValue;
          return;
        }

        var vm = _this.currentViewModel;

        if (vm && typeof vm.activate === 'function') {
          vm.activate(newValue);
        }
      });
    };

    Compose.prototype.viewChanged = function viewChanged(newValue, oldValue) {
      var _this2 = this;

      var instruction = createInstruction(this, {
        view: newValue,
        viewModel: this.currentViewModel || this.viewModel,
        model: this.model
      });

      if (this.currentInstruction) {
        this.currentInstruction = instruction;
        return;
      }

      this.currentInstruction = instruction;
      this.taskQueue.queueMicroTask(function () {
        return processInstruction(_this2, _this2.currentInstruction);
      });
    };

    Compose.prototype.viewModelChanged = function viewModelChanged(newValue, oldValue) {
      var _this3 = this;

      var instruction = createInstruction(this, {
        viewModel: newValue,
        view: this.view,
        model: this.model
      });

      if (this.currentInstruction) {
        this.currentInstruction = instruction;
        return;
      }

      this.currentInstruction = instruction;
      this.taskQueue.queueMicroTask(function () {
        return processInstruction(_this3, _this3.currentInstruction);
      });
    };

    return Compose;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'model', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'view', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'viewModel', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'swapOrder', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class) || _class) || _class);


  function createInstruction(composer, instruction) {
    return Object.assign(instruction, {
      bindingContext: composer.bindingContext,
      overrideContext: composer.overrideContext,
      owningView: composer.owningView,
      container: composer.container,
      viewSlot: composer.viewSlot,
      viewResources: composer.viewResources,
      currentController: composer.currentController,
      host: composer.element,
      swapOrder: composer.swapOrder
    });
  }

  function processInstruction(composer, instruction) {
    composer.currentInstruction = null;
    composer.compositionEngine.compose(instruction).then(function (controller) {
      composer.currentController = controller;
      composer.currentViewModel = controller ? controller.viewModel : null;
    });
  }
});
define('aurelia-templating-resources/if',['exports', 'aurelia-templating', 'aurelia-dependency-injection'], function (exports, _aureliaTemplating, _aureliaDependencyInjection) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.If = undefined;

  

  var _dec, _dec2, _class;

  var If = exports.If = (_dec = (0, _aureliaTemplating.customAttribute)('if'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function () {
    function If(viewFactory, viewSlot) {
      

      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.showing = false;
      this.view = null;
      this.bindingContext = null;
      this.overrideContext = null;
    }

    If.prototype.bind = function bind(bindingContext, overrideContext) {
      this.bindingContext = bindingContext;
      this.overrideContext = overrideContext;
      this.valueChanged(this.value);
    };

    If.prototype.valueChanged = function valueChanged(newValue) {
      var _this = this;

      if (this.__queuedChanges) {
        this.__queuedChanges.push(newValue);
        return;
      }

      var maybePromise = this._runValueChanged(newValue);
      if (maybePromise instanceof Promise) {
        (function () {
          var queuedChanges = _this.__queuedChanges = [];

          var runQueuedChanges = function runQueuedChanges() {
            if (!queuedChanges.length) {
              _this.__queuedChanges = undefined;
              return;
            }

            var nextPromise = _this._runValueChanged(queuedChanges.shift()) || Promise.resolve();
            nextPromise.then(runQueuedChanges);
          };

          maybePromise.then(runQueuedChanges);
        })();
      }
    };

    If.prototype._runValueChanged = function _runValueChanged(newValue) {
      var _this2 = this;

      if (!newValue) {
        var viewOrPromise = void 0;
        if (this.view !== null && this.showing) {
          viewOrPromise = this.viewSlot.remove(this.view);
          if (viewOrPromise instanceof Promise) {
            viewOrPromise.then(function () {
              return _this2.view.unbind();
            });
          } else {
            this.view.unbind();
          }
        }

        this.showing = false;
        return viewOrPromise;
      }

      if (this.view === null) {
        this.view = this.viewFactory.create();
      }

      if (!this.view.isBound) {
        this.view.bind(this.bindingContext, this.overrideContext);
      }

      if (!this.showing) {
        this.showing = true;
        return this.viewSlot.add(this.view);
      }

      return undefined;
    };

    If.prototype.unbind = function unbind() {
      if (this.view === null) {
        return;
      }

      this.view.unbind();

      if (!this.viewFactory.isCaching) {
        return;
      }

      if (this.showing) {
        this.showing = false;
        this.viewSlot.remove(this.view, true, true);
      }
      this.view.returnToCache();
      this.view = null;
    };

    return If;
  }()) || _class) || _class) || _class);
});
define('aurelia-templating-resources/with',['exports', 'aurelia-dependency-injection', 'aurelia-templating', 'aurelia-binding'], function (exports, _aureliaDependencyInjection, _aureliaTemplating, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.With = undefined;

  

  var _dec, _dec2, _class;

  var With = exports.With = (_dec = (0, _aureliaTemplating.customAttribute)('with'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function () {
    function With(viewFactory, viewSlot) {
      

      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.parentOverrideContext = null;
      this.view = null;
    }

    With.prototype.bind = function bind(bindingContext, overrideContext) {
      this.parentOverrideContext = overrideContext;
      this.valueChanged(this.value);
    };

    With.prototype.valueChanged = function valueChanged(newValue) {
      var overrideContext = (0, _aureliaBinding.createOverrideContext)(newValue, this.parentOverrideContext);
      if (!this.view) {
        this.view = this.viewFactory.create();
        this.view.bind(newValue, overrideContext);
        this.viewSlot.add(this.view);
      } else {
        this.view.bind(newValue, overrideContext);
      }
    };

    With.prototype.unbind = function unbind() {
      this.parentOverrideContext = null;

      if (this.view) {
        this.view.unbind();
      }
    };

    return With;
  }()) || _class) || _class) || _class);
});
define('aurelia-templating-resources/repeat',['exports', 'aurelia-dependency-injection', 'aurelia-binding', 'aurelia-templating', './repeat-strategy-locator', './repeat-utilities', './analyze-view-factory', './abstract-repeater'], function (exports, _aureliaDependencyInjection, _aureliaBinding, _aureliaTemplating, _repeatStrategyLocator, _repeatUtilities, _analyzeViewFactory, _abstractRepeater) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Repeat = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

  var Repeat = exports.Repeat = (_dec = (0, _aureliaTemplating.customAttribute)('repeat'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.TargetInstruction, _aureliaTemplating.ViewSlot, _aureliaTemplating.ViewResources, _aureliaBinding.ObserverLocator, _repeatStrategyLocator.RepeatStrategyLocator), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = (_class2 = function (_AbstractRepeater) {
    _inherits(Repeat, _AbstractRepeater);

    function Repeat(viewFactory, instruction, viewSlot, viewResources, observerLocator, strategyLocator) {
      

      var _this = _possibleConstructorReturn(this, _AbstractRepeater.call(this, {
        local: 'item',
        viewsRequireLifecycle: (0, _analyzeViewFactory.viewsRequireLifecycle)(viewFactory)
      }));

      _initDefineProp(_this, 'items', _descriptor, _this);

      _initDefineProp(_this, 'local', _descriptor2, _this);

      _initDefineProp(_this, 'key', _descriptor3, _this);

      _initDefineProp(_this, 'value', _descriptor4, _this);

      _this.viewFactory = viewFactory;
      _this.instruction = instruction;
      _this.viewSlot = viewSlot;
      _this.lookupFunctions = viewResources.lookupFunctions;
      _this.observerLocator = observerLocator;
      _this.key = 'key';
      _this.value = 'value';
      _this.strategyLocator = strategyLocator;
      _this.ignoreMutation = false;
      _this.sourceExpression = (0, _repeatUtilities.getItemsSourceExpression)(_this.instruction, 'repeat.for');
      _this.isOneTime = (0, _repeatUtilities.isOneTime)(_this.sourceExpression);
      _this.viewsRequireLifecycle = (0, _analyzeViewFactory.viewsRequireLifecycle)(viewFactory);
      return _this;
    }

    Repeat.prototype.call = function call(context, changes) {
      this[context](this.items, changes);
    };

    Repeat.prototype.bind = function bind(bindingContext, overrideContext) {
      this.scope = { bindingContext: bindingContext, overrideContext: overrideContext };
      this.matcherBinding = this._captureAndRemoveMatcherBinding();
      this.itemsChanged();
    };

    Repeat.prototype.unbind = function unbind() {
      this.scope = null;
      this.items = null;
      this.matcherBinding = null;
      this.viewSlot.removeAll(true);
      this._unsubscribeCollection();
    };

    Repeat.prototype._unsubscribeCollection = function _unsubscribeCollection() {
      if (this.collectionObserver) {
        this.collectionObserver.unsubscribe(this.callContext, this);
        this.collectionObserver = null;
        this.callContext = null;
      }
    };

    Repeat.prototype.itemsChanged = function itemsChanged() {
      this._unsubscribeCollection();

      if (!this.scope) {
        return;
      }

      var items = this.items;
      this.strategy = this.strategyLocator.getStrategy(items);
      if (!this.strategy) {
        throw new Error('Value for \'' + this.sourceExpression + '\' is non-repeatable');
      }

      if (!this.isOneTime && !this._observeInnerCollection()) {
        this._observeCollection();
      }
      this.strategy.instanceChanged(this, items);
    };

    Repeat.prototype._getInnerCollection = function _getInnerCollection() {
      var expression = (0, _repeatUtilities.unwrapExpression)(this.sourceExpression);
      if (!expression) {
        return null;
      }
      return expression.evaluate(this.scope, null);
    };

    Repeat.prototype.handleCollectionMutated = function handleCollectionMutated(collection, changes) {
      if (!this.collectionObserver) {
        return;
      }
      this.strategy.instanceMutated(this, collection, changes);
    };

    Repeat.prototype.handleInnerCollectionMutated = function handleInnerCollectionMutated(collection, changes) {
      var _this2 = this;

      if (!this.collectionObserver) {
        return;
      }

      if (this.ignoreMutation) {
        return;
      }
      this.ignoreMutation = true;
      var newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);
      this.observerLocator.taskQueue.queueMicroTask(function () {
        return _this2.ignoreMutation = false;
      });

      if (newItems === this.items) {
        this.itemsChanged();
      } else {
        this.items = newItems;
      }
    };

    Repeat.prototype._observeInnerCollection = function _observeInnerCollection() {
      var items = this._getInnerCollection();
      var strategy = this.strategyLocator.getStrategy(items);
      if (!strategy) {
        return false;
      }
      this.collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);
      if (!this.collectionObserver) {
        return false;
      }
      this.callContext = 'handleInnerCollectionMutated';
      this.collectionObserver.subscribe(this.callContext, this);
      return true;
    };

    Repeat.prototype._observeCollection = function _observeCollection() {
      var items = this.items;
      this.collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, items);
      if (this.collectionObserver) {
        this.callContext = 'handleCollectionMutated';
        this.collectionObserver.subscribe(this.callContext, this);
      }
    };

    Repeat.prototype._captureAndRemoveMatcherBinding = function _captureAndRemoveMatcherBinding() {
      if (this.viewFactory.viewFactory) {
        var instructions = this.viewFactory.viewFactory.instructions;
        var instructionIds = Object.keys(instructions);
        for (var i = 0; i < instructionIds.length; i++) {
          var expressions = instructions[instructionIds[i]].expressions;
          if (expressions) {
            for (var ii = 0; i < expressions.length; i++) {
              if (expressions[ii].targetProperty === 'matcher') {
                var matcherBinding = expressions[ii];
                expressions.splice(ii, 1);
                return matcherBinding;
              }
            }
          }
        }
      }

      return undefined;
    };

    Repeat.prototype.viewCount = function viewCount() {
      return this.viewSlot.children.length;
    };

    Repeat.prototype.views = function views() {
      return this.viewSlot.children;
    };

    Repeat.prototype.view = function view(index) {
      return this.viewSlot.children[index];
    };

    Repeat.prototype.matcher = function matcher() {
      return this.matcherBinding ? this.matcherBinding.sourceExpression.evaluate(this.scope, this.matcherBinding.lookupFunctions) : null;
    };

    Repeat.prototype.addView = function addView(bindingContext, overrideContext) {
      var view = this.viewFactory.create();
      view.bind(bindingContext, overrideContext);
      this.viewSlot.add(view);
    };

    Repeat.prototype.insertView = function insertView(index, bindingContext, overrideContext) {
      var view = this.viewFactory.create();
      view.bind(bindingContext, overrideContext);
      this.viewSlot.insert(index, view);
    };

    Repeat.prototype.moveView = function moveView(sourceIndex, targetIndex) {
      this.viewSlot.move(sourceIndex, targetIndex);
    };

    Repeat.prototype.removeAllViews = function removeAllViews(returnToCache, skipAnimation) {
      return this.viewSlot.removeAll(returnToCache, skipAnimation);
    };

    Repeat.prototype.removeViews = function removeViews(viewsToRemove, returnToCache, skipAnimation) {
      return this.viewSlot.removeMany(viewsToRemove, returnToCache, skipAnimation);
    };

    Repeat.prototype.removeView = function removeView(index, returnToCache, skipAnimation) {
      return this.viewSlot.removeAt(index, returnToCache, skipAnimation);
    };

    Repeat.prototype.updateBindings = function updateBindings(view) {
      var j = view.bindings.length;
      while (j--) {
        (0, _repeatUtilities.updateOneTimeBinding)(view.bindings[j]);
      }
      j = view.controllers.length;
      while (j--) {
        var k = view.controllers[j].boundProperties.length;
        while (k--) {
          var binding = view.controllers[j].boundProperties[k].binding;
          (0, _repeatUtilities.updateOneTimeBinding)(binding);
        }
      }
    };

    return Repeat;
  }(_abstractRepeater.AbstractRepeater), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'items', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, 'local', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, 'key', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, 'value', [_aureliaTemplating.bindable], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class) || _class) || _class);
});
define('aurelia-templating-resources/repeat-strategy-locator',['exports', './null-repeat-strategy', './array-repeat-strategy', './map-repeat-strategy', './set-repeat-strategy', './number-repeat-strategy'], function (exports, _nullRepeatStrategy, _arrayRepeatStrategy, _mapRepeatStrategy, _setRepeatStrategy, _numberRepeatStrategy) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RepeatStrategyLocator = undefined;

  

  var RepeatStrategyLocator = exports.RepeatStrategyLocator = function () {
    function RepeatStrategyLocator() {
      

      this.matchers = [];
      this.strategies = [];

      this.addStrategy(function (items) {
        return items === null || items === undefined;
      }, new _nullRepeatStrategy.NullRepeatStrategy());
      this.addStrategy(function (items) {
        return items instanceof Array;
      }, new _arrayRepeatStrategy.ArrayRepeatStrategy());
      this.addStrategy(function (items) {
        return items instanceof Map;
      }, new _mapRepeatStrategy.MapRepeatStrategy());
      this.addStrategy(function (items) {
        return items instanceof Set;
      }, new _setRepeatStrategy.SetRepeatStrategy());
      this.addStrategy(function (items) {
        return typeof items === 'number';
      }, new _numberRepeatStrategy.NumberRepeatStrategy());
    }

    RepeatStrategyLocator.prototype.addStrategy = function addStrategy(matcher, strategy) {
      this.matchers.push(matcher);
      this.strategies.push(strategy);
    };

    RepeatStrategyLocator.prototype.getStrategy = function getStrategy(items) {
      var matchers = this.matchers;

      for (var i = 0, ii = matchers.length; i < ii; ++i) {
        if (matchers[i](items)) {
          return this.strategies[i];
        }
      }

      return null;
    };

    return RepeatStrategyLocator;
  }();
});
define('aurelia-templating-resources/null-repeat-strategy',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  

  var NullRepeatStrategy = exports.NullRepeatStrategy = function () {
    function NullRepeatStrategy() {
      
    }

    NullRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      repeat.removeAllViews(true);
    };

    NullRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {};

    return NullRepeatStrategy;
  }();
});
define('aurelia-templating-resources/array-repeat-strategy',['exports', './repeat-utilities', 'aurelia-binding'], function (exports, _repeatUtilities, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ArrayRepeatStrategy = undefined;

  

  var ArrayRepeatStrategy = exports.ArrayRepeatStrategy = function () {
    function ArrayRepeatStrategy() {
      
    }

    ArrayRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {
      return observerLocator.getArrayObserver(items);
    };

    ArrayRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      var _this = this;

      var itemsLength = items.length;

      if (!items || itemsLength === 0) {
        repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
        return;
      }

      var children = repeat.views();
      var viewsLength = children.length;

      if (viewsLength === 0) {
        this._standardProcessInstanceChanged(repeat, items);
        return;
      }

      if (repeat.viewsRequireLifecycle) {
        (function () {
          var childrenSnapshot = children.slice(0);
          var itemNameInBindingContext = repeat.local;
          var matcher = repeat.matcher();

          var itemsPreviouslyInViews = [];
          var viewsToRemove = [];

          for (var index = 0; index < viewsLength; index++) {
            var view = childrenSnapshot[index];
            var oldItem = view.bindingContext[itemNameInBindingContext];

            if ((0, _repeatUtilities.indexOf)(items, oldItem, matcher) === -1) {
              viewsToRemove.push(view);
            } else {
              itemsPreviouslyInViews.push(oldItem);
            }
          }

          var updateViews = void 0;
          var removePromise = void 0;

          if (itemsPreviouslyInViews.length > 0) {
            removePromise = repeat.removeViews(viewsToRemove, true, !repeat.viewsRequireLifecycle);
            updateViews = function updateViews() {
              for (var _index = 0; _index < itemsLength; _index++) {
                var item = items[_index];
                var indexOfView = (0, _repeatUtilities.indexOf)(itemsPreviouslyInViews, item, matcher, _index);
                var _view = void 0;

                if (indexOfView === -1) {
                  var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[_index], _index, itemsLength);
                  repeat.insertView(_index, overrideContext.bindingContext, overrideContext);

                  itemsPreviouslyInViews.splice(_index, 0, undefined);
                } else if (indexOfView === _index) {
                  _view = children[indexOfView];
                  itemsPreviouslyInViews[indexOfView] = undefined;
                } else {
                  _view = children[indexOfView];
                  repeat.moveView(indexOfView, _index);
                  itemsPreviouslyInViews.splice(indexOfView, 1);
                  itemsPreviouslyInViews.splice(_index, 0, undefined);
                }

                if (_view) {
                  (0, _repeatUtilities.updateOverrideContext)(_view.overrideContext, _index, itemsLength);
                }
              }

              _this._inPlaceProcessItems(repeat, items);
            };
          } else {
            removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
            updateViews = function updateViews() {
              return _this._standardProcessInstanceChanged(repeat, items);
            };
          }

          if (removePromise instanceof Promise) {
            removePromise.then(updateViews);
          } else {
            updateViews();
          }
        })();
      } else {
        this._inPlaceProcessItems(repeat, items);
      }
    };

    ArrayRepeatStrategy.prototype._standardProcessInstanceChanged = function _standardProcessInstanceChanged(repeat, items) {
      for (var i = 0, ii = items.length; i < ii; i++) {
        var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[i], i, ii);
        repeat.addView(overrideContext.bindingContext, overrideContext);
      }
    };

    ArrayRepeatStrategy.prototype._inPlaceProcessItems = function _inPlaceProcessItems(repeat, items) {
      var itemsLength = items.length;
      var viewsLength = repeat.viewCount();

      while (viewsLength > itemsLength) {
        viewsLength--;
        repeat.removeView(viewsLength, true, !repeat.viewsRequireLifecycle);
      }

      var local = repeat.local;

      for (var i = 0; i < viewsLength; i++) {
        var view = repeat.view(i);
        var last = i === itemsLength - 1;
        var middle = i !== 0 && !last;

        if (view.bindingContext[local] === items[i] && view.overrideContext.$middle === middle && view.overrideContext.$last === last) {
          continue;
        }

        view.bindingContext[local] = items[i];
        view.overrideContext.$middle = middle;
        view.overrideContext.$last = last;
        repeat.updateBindings(view);
      }

      for (var _i = viewsLength; _i < itemsLength; _i++) {
        var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, items[_i], _i, itemsLength);
        repeat.addView(overrideContext.bindingContext, overrideContext);
      }
    };

    ArrayRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, array, splices) {
      var _this2 = this;

      if (repeat.__queuedSplices) {
        for (var i = 0, ii = splices.length; i < ii; ++i) {
          var _splices$i = splices[i],
              index = _splices$i.index,
              removed = _splices$i.removed,
              addedCount = _splices$i.addedCount;

          (0, _aureliaBinding.mergeSplice)(repeat.__queuedSplices, index, removed, addedCount);
        }

        repeat.__array = array.slice(0);
        return;
      }

      var maybePromise = this._runSplices(repeat, array.slice(0), splices);
      if (maybePromise instanceof Promise) {
        (function () {
          var queuedSplices = repeat.__queuedSplices = [];

          var runQueuedSplices = function runQueuedSplices() {
            if (!queuedSplices.length) {
              repeat.__queuedSplices = undefined;
              repeat.__array = undefined;
              return;
            }

            var nextPromise = _this2._runSplices(repeat, repeat.__array, queuedSplices) || Promise.resolve();
            queuedSplices = repeat.__queuedSplices = [];
            nextPromise.then(runQueuedSplices);
          };

          maybePromise.then(runQueuedSplices);
        })();
      }
    };

    ArrayRepeatStrategy.prototype._runSplices = function _runSplices(repeat, array, splices) {
      var _this3 = this;

      var removeDelta = 0;
      var rmPromises = [];

      for (var i = 0, ii = splices.length; i < ii; ++i) {
        var splice = splices[i];
        var removed = splice.removed;

        for (var j = 0, jj = removed.length; j < jj; ++j) {
          var viewOrPromise = repeat.removeView(splice.index + removeDelta + rmPromises.length, true);
          if (viewOrPromise instanceof Promise) {
            rmPromises.push(viewOrPromise);
          }
        }
        removeDelta -= splice.addedCount;
      }

      if (rmPromises.length > 0) {
        return Promise.all(rmPromises).then(function () {
          var spliceIndexLow = _this3._handleAddedSplices(repeat, array, splices);
          (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), spliceIndexLow);
        });
      }

      var spliceIndexLow = this._handleAddedSplices(repeat, array, splices);
      (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), spliceIndexLow);

      return undefined;
    };

    ArrayRepeatStrategy.prototype._handleAddedSplices = function _handleAddedSplices(repeat, array, splices) {
      var spliceIndex = void 0;
      var spliceIndexLow = void 0;
      var arrayLength = array.length;
      for (var i = 0, ii = splices.length; i < ii; ++i) {
        var splice = splices[i];
        var addIndex = spliceIndex = splice.index;
        var end = splice.index + splice.addedCount;

        if (typeof spliceIndexLow === 'undefined' || spliceIndexLow === null || spliceIndexLow > splice.index) {
          spliceIndexLow = spliceIndex;
        }

        for (; addIndex < end; ++addIndex) {
          var overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, array[addIndex], addIndex, arrayLength);
          repeat.insertView(addIndex, overrideContext.bindingContext, overrideContext);
        }
      }

      return spliceIndexLow;
    };

    return ArrayRepeatStrategy;
  }();
});
define('aurelia-templating-resources/repeat-utilities',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.updateOverrideContexts = updateOverrideContexts;
  exports.createFullOverrideContext = createFullOverrideContext;
  exports.updateOverrideContext = updateOverrideContext;
  exports.getItemsSourceExpression = getItemsSourceExpression;
  exports.unwrapExpression = unwrapExpression;
  exports.isOneTime = isOneTime;
  exports.updateOneTimeBinding = updateOneTimeBinding;
  exports.indexOf = indexOf;


  var oneTime = _aureliaBinding.bindingMode.oneTime;

  function updateOverrideContexts(views, startIndex) {
    var length = views.length;

    if (startIndex > 0) {
      startIndex = startIndex - 1;
    }

    for (; startIndex < length; ++startIndex) {
      updateOverrideContext(views[startIndex].overrideContext, startIndex, length);
    }
  }

  function createFullOverrideContext(repeat, data, index, length, key) {
    var bindingContext = {};
    var overrideContext = (0, _aureliaBinding.createOverrideContext)(bindingContext, repeat.scope.overrideContext);

    if (typeof key !== 'undefined') {
      bindingContext[repeat.key] = key;
      bindingContext[repeat.value] = data;
    } else {
      bindingContext[repeat.local] = data;
    }
    updateOverrideContext(overrideContext, index, length);
    return overrideContext;
  }

  function updateOverrideContext(overrideContext, index, length) {
    var first = index === 0;
    var last = index === length - 1;
    var even = index % 2 === 0;

    overrideContext.$index = index;
    overrideContext.$first = first;
    overrideContext.$last = last;
    overrideContext.$middle = !(first || last);
    overrideContext.$odd = !even;
    overrideContext.$even = even;
  }

  function getItemsSourceExpression(instruction, attrName) {
    return instruction.behaviorInstructions.filter(function (bi) {
      return bi.originalAttrName === attrName;
    })[0].attributes.items.sourceExpression;
  }

  function unwrapExpression(expression) {
    var unwrapped = false;
    while (expression instanceof _aureliaBinding.BindingBehavior) {
      expression = expression.expression;
    }
    while (expression instanceof _aureliaBinding.ValueConverter) {
      expression = expression.expression;
      unwrapped = true;
    }
    return unwrapped ? expression : null;
  }

  function isOneTime(expression) {
    while (expression instanceof _aureliaBinding.BindingBehavior) {
      if (expression.name === 'oneTime') {
        return true;
      }
      expression = expression.expression;
    }
    return false;
  }

  function updateOneTimeBinding(binding) {
    if (binding.call && binding.mode === oneTime) {
      binding.call(_aureliaBinding.sourceContext);
    } else if (binding.updateOneTimeBindings) {
      binding.updateOneTimeBindings();
    }
  }

  function indexOf(array, item, matcher, startIndex) {
    if (!matcher) {
      return array.indexOf(item);
    }
    var length = array.length;
    for (var index = startIndex || 0; index < length; index++) {
      if (matcher(array[index], item)) {
        return index;
      }
    }
    return -1;
  }
});
define('aurelia-templating-resources/map-repeat-strategy',['exports', './repeat-utilities'], function (exports, _repeatUtilities) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MapRepeatStrategy = undefined;

  

  var MapRepeatStrategy = exports.MapRepeatStrategy = function () {
    function MapRepeatStrategy() {
      
    }

    MapRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {
      return observerLocator.getMapObserver(items);
    };

    MapRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      var _this = this;

      var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
      if (removePromise instanceof Promise) {
        removePromise.then(function () {
          return _this._standardProcessItems(repeat, items);
        });
        return;
      }
      this._standardProcessItems(repeat, items);
    };

    MapRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, items) {
      var index = 0;
      var overrideContext = void 0;

      items.forEach(function (value, key) {
        overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, index, items.size, key);
        repeat.addView(overrideContext.bindingContext, overrideContext);
        ++index;
      });
    };

    MapRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, map, records) {
      var key = void 0;
      var i = void 0;
      var ii = void 0;
      var overrideContext = void 0;
      var removeIndex = void 0;
      var record = void 0;
      var rmPromises = [];
      var viewOrPromise = void 0;

      for (i = 0, ii = records.length; i < ii; ++i) {
        record = records[i];
        key = record.key;
        switch (record.type) {
          case 'update':
            removeIndex = this._getViewIndexByKey(repeat, key);
            viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);
            if (viewOrPromise instanceof Promise) {
              rmPromises.push(viewOrPromise);
            }
            overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, map.get(key), removeIndex, map.size, key);
            repeat.insertView(removeIndex, overrideContext.bindingContext, overrideContext);
            break;
          case 'add':
            overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, map.get(key), map.size - 1, map.size, key);
            repeat.insertView(map.size - 1, overrideContext.bindingContext, overrideContext);
            break;
          case 'delete':
            if (record.oldValue === undefined) {
              return;
            }
            removeIndex = this._getViewIndexByKey(repeat, key);
            viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);
            if (viewOrPromise instanceof Promise) {
              rmPromises.push(viewOrPromise);
            }
            break;
          case 'clear':
            repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
            break;
          default:
            continue;
        }
      }

      if (rmPromises.length > 0) {
        Promise.all(rmPromises).then(function () {
          (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);
        });
      } else {
        (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);
      }
    };

    MapRepeatStrategy.prototype._getViewIndexByKey = function _getViewIndexByKey(repeat, key) {
      var i = void 0;
      var ii = void 0;
      var child = void 0;

      for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {
        child = repeat.view(i);
        if (child.bindingContext[repeat.key] === key) {
          return i;
        }
      }

      return undefined;
    };

    return MapRepeatStrategy;
  }();
});
define('aurelia-templating-resources/set-repeat-strategy',['exports', './repeat-utilities'], function (exports, _repeatUtilities) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SetRepeatStrategy = undefined;

  

  var SetRepeatStrategy = exports.SetRepeatStrategy = function () {
    function SetRepeatStrategy() {
      
    }

    SetRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver(observerLocator, items) {
      return observerLocator.getSetObserver(items);
    };

    SetRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, items) {
      var _this = this;

      var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
      if (removePromise instanceof Promise) {
        removePromise.then(function () {
          return _this._standardProcessItems(repeat, items);
        });
        return;
      }
      this._standardProcessItems(repeat, items);
    };

    SetRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, items) {
      var index = 0;
      var overrideContext = void 0;

      items.forEach(function (value) {
        overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, index, items.size);
        repeat.addView(overrideContext.bindingContext, overrideContext);
        ++index;
      });
    };

    SetRepeatStrategy.prototype.instanceMutated = function instanceMutated(repeat, set, records) {
      var value = void 0;
      var i = void 0;
      var ii = void 0;
      var overrideContext = void 0;
      var removeIndex = void 0;
      var record = void 0;
      var rmPromises = [];
      var viewOrPromise = void 0;

      for (i = 0, ii = records.length; i < ii; ++i) {
        record = records[i];
        value = record.value;
        switch (record.type) {
          case 'add':
            overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, value, set.size - 1, set.size);
            repeat.insertView(set.size - 1, overrideContext.bindingContext, overrideContext);
            break;
          case 'delete':
            removeIndex = this._getViewIndexByValue(repeat, value);
            viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);
            if (viewOrPromise instanceof Promise) {
              rmPromises.push(viewOrPromise);
            }
            break;
          case 'clear':
            repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
            break;
          default:
            continue;
        }
      }

      if (rmPromises.length > 0) {
        Promise.all(rmPromises).then(function () {
          (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);
        });
      } else {
        (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);
      }
    };

    SetRepeatStrategy.prototype._getViewIndexByValue = function _getViewIndexByValue(repeat, value) {
      var i = void 0;
      var ii = void 0;
      var child = void 0;

      for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {
        child = repeat.view(i);
        if (child.bindingContext[repeat.local] === value) {
          return i;
        }
      }

      return undefined;
    };

    return SetRepeatStrategy;
  }();
});
define('aurelia-templating-resources/number-repeat-strategy',['exports', './repeat-utilities'], function (exports, _repeatUtilities) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NumberRepeatStrategy = undefined;

  

  var NumberRepeatStrategy = exports.NumberRepeatStrategy = function () {
    function NumberRepeatStrategy() {
      
    }

    NumberRepeatStrategy.prototype.getCollectionObserver = function getCollectionObserver() {
      return null;
    };

    NumberRepeatStrategy.prototype.instanceChanged = function instanceChanged(repeat, value) {
      var _this = this;

      var removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);
      if (removePromise instanceof Promise) {
        removePromise.then(function () {
          return _this._standardProcessItems(repeat, value);
        });
        return;
      }
      this._standardProcessItems(repeat, value);
    };

    NumberRepeatStrategy.prototype._standardProcessItems = function _standardProcessItems(repeat, value) {
      var childrenLength = repeat.viewCount();
      var i = void 0;
      var ii = void 0;
      var overrideContext = void 0;
      var viewsToRemove = void 0;

      value = Math.floor(value);
      viewsToRemove = childrenLength - value;

      if (viewsToRemove > 0) {
        if (viewsToRemove > childrenLength) {
          viewsToRemove = childrenLength;
        }

        for (i = 0, ii = viewsToRemove; i < ii; ++i) {
          repeat.removeView(childrenLength - (i + 1), true, !repeat.viewsRequireLifecycle);
        }

        return;
      }

      for (i = childrenLength, ii = value; i < ii; ++i) {
        overrideContext = (0, _repeatUtilities.createFullOverrideContext)(repeat, i, i, ii);
        repeat.addView(overrideContext.bindingContext, overrideContext);
      }

      (0, _repeatUtilities.updateOverrideContexts)(repeat.views(), 0);
    };

    return NumberRepeatStrategy;
  }();
});
define('aurelia-templating-resources/analyze-view-factory',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.viewsRequireLifecycle = viewsRequireLifecycle;
  var lifecycleOptionalBehaviors = exports.lifecycleOptionalBehaviors = ['focus', 'if', 'repeat', 'show', 'with'];

  function behaviorRequiresLifecycle(instruction) {
    var t = instruction.type;
    var name = t.elementName !== null ? t.elementName : t.attributeName;
    return lifecycleOptionalBehaviors.indexOf(name) === -1 && (t.handlesAttached || t.handlesBind || t.handlesCreated || t.handlesDetached || t.handlesUnbind) || t.viewFactory && viewsRequireLifecycle(t.viewFactory) || instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);
  }

  function targetRequiresLifecycle(instruction) {
    var behaviors = instruction.behaviorInstructions;
    if (behaviors) {
      var i = behaviors.length;
      while (i--) {
        if (behaviorRequiresLifecycle(behaviors[i])) {
          return true;
        }
      }
    }

    return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);
  }

  function viewsRequireLifecycle(viewFactory) {
    if ('_viewsRequireLifecycle' in viewFactory) {
      return viewFactory._viewsRequireLifecycle;
    }

    viewFactory._viewsRequireLifecycle = false;

    if (viewFactory.viewFactory) {
      viewFactory._viewsRequireLifecycle = viewsRequireLifecycle(viewFactory.viewFactory);
      return viewFactory._viewsRequireLifecycle;
    }

    if (viewFactory.template.querySelector('.au-animate')) {
      viewFactory._viewsRequireLifecycle = true;
      return true;
    }

    for (var id in viewFactory.instructions) {
      if (targetRequiresLifecycle(viewFactory.instructions[id])) {
        viewFactory._viewsRequireLifecycle = true;
        return true;
      }
    }

    viewFactory._viewsRequireLifecycle = false;
    return false;
  }
});
define('aurelia-templating-resources/abstract-repeater',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  

  var AbstractRepeater = exports.AbstractRepeater = function () {
    function AbstractRepeater(options) {
      

      Object.assign(this, {
        local: 'items',
        viewsRequireLifecycle: true
      }, options);
    }

    AbstractRepeater.prototype.viewCount = function viewCount() {
      throw new Error('subclass must implement `viewCount`');
    };

    AbstractRepeater.prototype.views = function views() {
      throw new Error('subclass must implement `views`');
    };

    AbstractRepeater.prototype.view = function view(index) {
      throw new Error('subclass must implement `view`');
    };

    AbstractRepeater.prototype.matcher = function matcher() {
      throw new Error('subclass must implement `matcher`');
    };

    AbstractRepeater.prototype.addView = function addView(bindingContext, overrideContext) {
      throw new Error('subclass must implement `addView`');
    };

    AbstractRepeater.prototype.insertView = function insertView(index, bindingContext, overrideContext) {
      throw new Error('subclass must implement `insertView`');
    };

    AbstractRepeater.prototype.moveView = function moveView(sourceIndex, targetIndex) {
      throw new Error('subclass must implement `moveView`');
    };

    AbstractRepeater.prototype.removeAllViews = function removeAllViews(returnToCache, skipAnimation) {
      throw new Error('subclass must implement `removeAllViews`');
    };

    AbstractRepeater.prototype.removeViews = function removeViews(viewsToRemove, returnToCache, skipAnimation) {
      throw new Error('subclass must implement `removeView`');
    };

    AbstractRepeater.prototype.removeView = function removeView(index, returnToCache, skipAnimation) {
      throw new Error('subclass must implement `removeView`');
    };

    AbstractRepeater.prototype.updateBindings = function updateBindings(view) {
      throw new Error('subclass must implement `updateBindings`');
    };

    return AbstractRepeater;
  }();
});
define('aurelia-templating-resources/show',['exports', 'aurelia-dependency-injection', 'aurelia-templating', 'aurelia-pal', './aurelia-hide-style'], function (exports, _aureliaDependencyInjection, _aureliaTemplating, _aureliaPal, _aureliaHideStyle) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Show = undefined;

  

  var _dec, _dec2, _class;

  var Show = exports.Show = (_dec = (0, _aureliaTemplating.customAttribute)('show'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaPal.DOM.Element, _aureliaTemplating.Animator, _aureliaDependencyInjection.Optional.of(_aureliaPal.DOM.boundary, true)), _dec(_class = _dec2(_class = function () {
    function Show(element, animator, domBoundary) {
      

      this.element = element;
      this.animator = animator;
      this.domBoundary = domBoundary;
    }

    Show.prototype.created = function created() {
      (0, _aureliaHideStyle.injectAureliaHideStyleAtBoundary)(this.domBoundary);
    };

    Show.prototype.valueChanged = function valueChanged(newValue) {
      if (newValue) {
        this.animator.removeClass(this.element, _aureliaHideStyle.aureliaHideClassName);
      } else {
        this.animator.addClass(this.element, _aureliaHideStyle.aureliaHideClassName);
      }
    };

    Show.prototype.bind = function bind(bindingContext) {
      this.valueChanged(this.value);
    };

    return Show;
  }()) || _class) || _class);
});
define('aurelia-templating-resources/aurelia-hide-style',['exports', 'aurelia-pal'], function (exports, _aureliaPal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.aureliaHideClassName = undefined;
  exports.injectAureliaHideStyleAtHead = injectAureliaHideStyleAtHead;
  exports.injectAureliaHideStyleAtBoundary = injectAureliaHideStyleAtBoundary;
  var aureliaHideClassName = exports.aureliaHideClassName = 'aurelia-hide';

  var aureliaHideClass = '.' + aureliaHideClassName + ' { display:none !important; }';

  function injectAureliaHideStyleAtHead() {
    _aureliaPal.DOM.injectStyles(aureliaHideClass);
  }

  function injectAureliaHideStyleAtBoundary(domBoundary) {
    if (_aureliaPal.FEATURE.shadowDOM && domBoundary && !domBoundary.hasAureliaHideStyle) {
      domBoundary.hasAureliaHideStyle = true;
      _aureliaPal.DOM.injectStyles(aureliaHideClass, domBoundary);
    }
  }
});
define('aurelia-templating-resources/hide',['exports', 'aurelia-dependency-injection', 'aurelia-templating', 'aurelia-pal', './aurelia-hide-style'], function (exports, _aureliaDependencyInjection, _aureliaTemplating, _aureliaPal, _aureliaHideStyle) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Hide = undefined;

  

  var _dec, _dec2, _class;

  var Hide = exports.Hide = (_dec = (0, _aureliaTemplating.customAttribute)('hide'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaPal.DOM.Element, _aureliaTemplating.Animator, _aureliaDependencyInjection.Optional.of(_aureliaPal.DOM.boundary, true)), _dec(_class = _dec2(_class = function () {
    function Hide(element, animator, domBoundary) {
      

      this.element = element;
      this.animator = animator;
      this.domBoundary = domBoundary;
    }

    Hide.prototype.created = function created() {
      (0, _aureliaHideStyle.injectAureliaHideStyleAtBoundary)(this.domBoundary);
    };

    Hide.prototype.valueChanged = function valueChanged(newValue) {
      if (newValue) {
        this.animator.addClass(this.element, _aureliaHideStyle.aureliaHideClassName);
      } else {
        this.animator.removeClass(this.element, _aureliaHideStyle.aureliaHideClassName);
      }
    };

    Hide.prototype.bind = function bind(bindingContext) {
      this.valueChanged(this.value);
    };

    return Hide;
  }()) || _class) || _class);
});
define('aurelia-templating-resources/sanitize-html',['exports', 'aurelia-binding', 'aurelia-dependency-injection', './html-sanitizer'], function (exports, _aureliaBinding, _aureliaDependencyInjection, _htmlSanitizer) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SanitizeHTMLValueConverter = undefined;

  

  var _dec, _dec2, _class;

  var SanitizeHTMLValueConverter = exports.SanitizeHTMLValueConverter = (_dec = (0, _aureliaBinding.valueConverter)('sanitizeHTML'), _dec2 = (0, _aureliaDependencyInjection.inject)(_htmlSanitizer.HTMLSanitizer), _dec(_class = _dec2(_class = function () {
    function SanitizeHTMLValueConverter(sanitizer) {
      

      this.sanitizer = sanitizer;
    }

    SanitizeHTMLValueConverter.prototype.toView = function toView(untrustedMarkup) {
      if (untrustedMarkup === null || untrustedMarkup === undefined) {
        return null;
      }

      return this.sanitizer.sanitize(untrustedMarkup);
    };

    return SanitizeHTMLValueConverter;
  }()) || _class) || _class);
});
define('aurelia-templating-resources/html-sanitizer',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  

  var SCRIPT_REGEX = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;

  var HTMLSanitizer = exports.HTMLSanitizer = function () {
    function HTMLSanitizer() {
      
    }

    HTMLSanitizer.prototype.sanitize = function sanitize(input) {
      return input.replace(SCRIPT_REGEX, '');
    };

    return HTMLSanitizer;
  }();
});
define('aurelia-templating-resources/replaceable',['exports', 'aurelia-dependency-injection', 'aurelia-templating'], function (exports, _aureliaDependencyInjection, _aureliaTemplating) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Replaceable = undefined;

  

  var _dec, _dec2, _class;

  var Replaceable = exports.Replaceable = (_dec = (0, _aureliaTemplating.customAttribute)('replaceable'), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaTemplating.BoundViewFactory, _aureliaTemplating.ViewSlot), _dec(_class = (0, _aureliaTemplating.templateController)(_class = _dec2(_class = function () {
    function Replaceable(viewFactory, viewSlot) {
      

      this.viewFactory = viewFactory;
      this.viewSlot = viewSlot;
      this.view = null;
    }

    Replaceable.prototype.bind = function bind(bindingContext, overrideContext) {
      if (this.view === null) {
        this.view = this.viewFactory.create();
        this.viewSlot.add(this.view);
      }

      this.view.bind(bindingContext, overrideContext);
    };

    Replaceable.prototype.unbind = function unbind() {
      this.view.unbind();
    };

    return Replaceable;
  }()) || _class) || _class) || _class);
});
define('aurelia-templating-resources/focus',['exports', 'aurelia-templating', 'aurelia-binding', 'aurelia-dependency-injection', 'aurelia-task-queue', 'aurelia-pal'], function (exports, _aureliaTemplating, _aureliaBinding, _aureliaDependencyInjection, _aureliaTaskQueue, _aureliaPal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Focus = undefined;

  

  var _dec, _dec2, _class;

  var Focus = exports.Focus = (_dec = (0, _aureliaTemplating.customAttribute)('focus', _aureliaBinding.bindingMode.twoWay), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaPal.DOM.Element, _aureliaTaskQueue.TaskQueue), _dec(_class = _dec2(_class = function () {
    function Focus(element, taskQueue) {
      var _this = this;

      

      this.element = element;
      this.taskQueue = taskQueue;
      this.isAttached = false;
      this.needsApply = false;

      this.focusListener = function (e) {
        _this.value = true;
      };
      this.blurListener = function (e) {
        if (_aureliaPal.DOM.activeElement !== _this.element) {
          _this.value = false;
        }
      };
    }

    Focus.prototype.valueChanged = function valueChanged(newValue) {
      if (this.isAttached) {
        this._apply();
      } else {
        this.needsApply = true;
      }
    };

    Focus.prototype._apply = function _apply() {
      var _this2 = this;

      if (this.value) {
        this.taskQueue.queueMicroTask(function () {
          if (_this2.value) {
            _this2.element.focus();
          }
        });
      } else {
        this.element.blur();
      }
    };

    Focus.prototype.attached = function attached() {
      this.isAttached = true;
      if (this.needsApply) {
        this.needsApply = false;
        this._apply();
      }
      this.element.addEventListener('focus', this.focusListener);
      this.element.addEventListener('blur', this.blurListener);
    };

    Focus.prototype.detached = function detached() {
      this.isAttached = false;
      this.element.removeEventListener('focus', this.focusListener);
      this.element.removeEventListener('blur', this.blurListener);
    };

    return Focus;
  }()) || _class) || _class);
});
define('aurelia-templating-resources/css-resource',['exports', 'aurelia-templating', 'aurelia-loader', 'aurelia-dependency-injection', 'aurelia-path', 'aurelia-pal'], function (exports, _aureliaTemplating, _aureliaLoader, _aureliaDependencyInjection, _aureliaPath, _aureliaPal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._createCSSResource = _createCSSResource;

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  

  var cssUrlMatcher = /url\((?!['"]data)([^)]+)\)/gi;

  function fixupCSSUrls(address, css) {
    if (typeof css !== 'string') {
      throw new Error('Failed loading required CSS file: ' + address);
    }
    return css.replace(cssUrlMatcher, function (match, p1) {
      var quote = p1.charAt(0);
      if (quote === '\'' || quote === '"') {
        p1 = p1.substr(1, p1.length - 2);
      }
      return 'url(\'' + (0, _aureliaPath.relativeToFile)(p1, address) + '\')';
    });
  }

  var CSSResource = function () {
    function CSSResource(address) {
      

      this.address = address;
      this._scoped = null;
      this._global = false;
      this._alreadyGloballyInjected = false;
    }

    CSSResource.prototype.initialize = function initialize(container, target) {
      this._scoped = new target(this);
    };

    CSSResource.prototype.register = function register(registry, name) {
      if (name === 'scoped') {
        registry.registerViewEngineHooks(this._scoped);
      } else {
        this._global = true;
      }
    };

    CSSResource.prototype.load = function load(container) {
      var _this = this;

      return container.get(_aureliaLoader.Loader).loadText(this.address).catch(function (err) {
        return null;
      }).then(function (text) {
        text = fixupCSSUrls(_this.address, text);
        _this._scoped.css = text;
        if (_this._global) {
          _this._alreadyGloballyInjected = true;
          _aureliaPal.DOM.injectStyles(text);
        }
      });
    };

    return CSSResource;
  }();

  var CSSViewEngineHooks = function () {
    function CSSViewEngineHooks(owner) {
      

      this.owner = owner;
      this.css = null;
    }

    CSSViewEngineHooks.prototype.beforeCompile = function beforeCompile(content, resources, instruction) {
      if (instruction.targetShadowDOM) {
        _aureliaPal.DOM.injectStyles(this.css, content, true);
      } else if (_aureliaPal.FEATURE.scopedCSS) {
        var styleNode = _aureliaPal.DOM.injectStyles(this.css, content, true);
        styleNode.setAttribute('scoped', 'scoped');
      } else if (!this.owner._alreadyGloballyInjected) {
        _aureliaPal.DOM.injectStyles(this.css);
        this.owner._alreadyGloballyInjected = true;
      }
    };

    return CSSViewEngineHooks;
  }();

  function _createCSSResource(address) {
    var _dec, _class;

    var ViewCSS = (_dec = (0, _aureliaTemplating.resource)(new CSSResource(address)), _dec(_class = function (_CSSViewEngineHooks) {
      _inherits(ViewCSS, _CSSViewEngineHooks);

      function ViewCSS() {
        

        return _possibleConstructorReturn(this, _CSSViewEngineHooks.apply(this, arguments));
      }

      return ViewCSS;
    }(CSSViewEngineHooks)) || _class);

    return ViewCSS;
  }
});
define('aurelia-templating-resources/attr-binding-behavior',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttrBindingBehavior = undefined;

  

  var AttrBindingBehavior = exports.AttrBindingBehavior = function () {
    function AttrBindingBehavior() {
      
    }

    AttrBindingBehavior.prototype.bind = function bind(binding, source) {
      binding.targetObserver = new _aureliaBinding.DataAttributeObserver(binding.target, binding.targetProperty);
    };

    AttrBindingBehavior.prototype.unbind = function unbind(binding, source) {};

    return AttrBindingBehavior;
  }();
});
define('aurelia-templating-resources/binding-mode-behaviors',['exports', 'aurelia-binding', 'aurelia-metadata'], function (exports, _aureliaBinding, _aureliaMetadata) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TwoWayBindingBehavior = exports.OneWayBindingBehavior = exports.OneTimeBindingBehavior = undefined;

  

  var _dec, _class, _dec2, _class2, _dec3, _class3;

  var modeBindingBehavior = {
    bind: function bind(binding, source, lookupFunctions) {
      binding.originalMode = binding.mode;
      binding.mode = this.mode;
    },
    unbind: function unbind(binding, source) {
      binding.mode = binding.originalMode;
      binding.originalMode = null;
    }
  };

  var OneTimeBindingBehavior = exports.OneTimeBindingBehavior = (_dec = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec(_class = function OneTimeBindingBehavior() {
    

    this.mode = _aureliaBinding.bindingMode.oneTime;
  }) || _class);
  var OneWayBindingBehavior = exports.OneWayBindingBehavior = (_dec2 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec2(_class2 = function OneWayBindingBehavior() {
    

    this.mode = _aureliaBinding.bindingMode.oneWay;
  }) || _class2);
  var TwoWayBindingBehavior = exports.TwoWayBindingBehavior = (_dec3 = (0, _aureliaMetadata.mixin)(modeBindingBehavior), _dec3(_class3 = function TwoWayBindingBehavior() {
    

    this.mode = _aureliaBinding.bindingMode.twoWay;
  }) || _class3);
});
define('aurelia-templating-resources/throttle-binding-behavior',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ThrottleBindingBehavior = undefined;

  

  function throttle(newValue) {
    var _this = this;

    var state = this.throttleState;
    var elapsed = +new Date() - state.last;
    if (elapsed >= state.delay) {
      clearTimeout(state.timeoutId);
      state.timeoutId = null;
      state.last = +new Date();
      this.throttledMethod(newValue);
      return;
    }
    state.newValue = newValue;
    if (state.timeoutId === null) {
      state.timeoutId = setTimeout(function () {
        state.timeoutId = null;
        state.last = +new Date();
        _this.throttledMethod(state.newValue);
      }, state.delay - elapsed);
    }
  }

  var ThrottleBindingBehavior = exports.ThrottleBindingBehavior = function () {
    function ThrottleBindingBehavior() {
      
    }

    ThrottleBindingBehavior.prototype.bind = function bind(binding, source) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;

      var methodToThrottle = 'updateTarget';
      if (binding.callSource) {
        methodToThrottle = 'callSource';
      } else if (binding.updateSource && binding.mode === _aureliaBinding.bindingMode.twoWay) {
        methodToThrottle = 'updateSource';
      }

      binding.throttledMethod = binding[methodToThrottle];
      binding.throttledMethod.originalName = methodToThrottle;

      binding[methodToThrottle] = throttle;

      binding.throttleState = {
        delay: delay,
        last: 0,
        timeoutId: null
      };
    };

    ThrottleBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var methodToRestore = binding.throttledMethod.originalName;
      binding[methodToRestore] = binding.throttledMethod;
      binding.throttledMethod = null;
      clearTimeout(binding.throttleState.timeoutId);
      binding.throttleState = null;
    };

    return ThrottleBindingBehavior;
  }();
});
define('aurelia-templating-resources/debounce-binding-behavior',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DebounceBindingBehavior = undefined;

  

  function debounce(newValue) {
    var _this = this;

    var state = this.debounceState;
    if (state.immediate) {
      state.immediate = false;
      this.debouncedMethod(newValue);
      return;
    }
    clearTimeout(state.timeoutId);
    state.timeoutId = setTimeout(function () {
      return _this.debouncedMethod(newValue);
    }, state.delay);
  }

  var DebounceBindingBehavior = exports.DebounceBindingBehavior = function () {
    function DebounceBindingBehavior() {
      
    }

    DebounceBindingBehavior.prototype.bind = function bind(binding, source) {
      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;

      var methodToDebounce = 'updateTarget';
      if (binding.callSource) {
        methodToDebounce = 'callSource';
      } else if (binding.updateSource && binding.mode === _aureliaBinding.bindingMode.twoWay) {
        methodToDebounce = 'updateSource';
      }

      binding.debouncedMethod = binding[methodToDebounce];
      binding.debouncedMethod.originalName = methodToDebounce;

      binding[methodToDebounce] = debounce;

      binding.debounceState = {
        delay: delay,
        timeoutId: null,
        immediate: methodToDebounce === 'updateTarget' };
    };

    DebounceBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var methodToRestore = binding.debouncedMethod.originalName;
      binding[methodToRestore] = binding.debouncedMethod;
      binding.debouncedMethod = null;
      clearTimeout(binding.debounceState.timeoutId);
      binding.debounceState = null;
    };

    return DebounceBindingBehavior;
  }();
});
define('aurelia-templating-resources/self-binding-behavior',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  

  function findOriginalEventTarget(event) {
    return event.path && event.path[0] || event.deepPath && event.deepPath[0] || event.target;
  }

  function handleSelfEvent(event) {
    var target = findOriginalEventTarget(event);
    if (this.target !== target) return;
    this.selfEventCallSource(event);
  }

  var SelfBindingBehavior = exports.SelfBindingBehavior = function () {
    function SelfBindingBehavior() {
      
    }

    SelfBindingBehavior.prototype.bind = function bind(binding, source) {
      if (!binding.callSource || !binding.targetEvent) throw new Error('Self binding behavior only supports event.');
      binding.selfEventCallSource = binding.callSource;
      binding.callSource = handleSelfEvent;
    };

    SelfBindingBehavior.prototype.unbind = function unbind(binding, source) {
      binding.callSource = binding.selfEventCallSource;
      binding.selfEventCallSource = null;
    };

    return SelfBindingBehavior;
  }();
});
define('aurelia-templating-resources/signal-binding-behavior',['exports', './binding-signaler'], function (exports, _bindingSignaler) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SignalBindingBehavior = undefined;

  

  var SignalBindingBehavior = exports.SignalBindingBehavior = function () {
    SignalBindingBehavior.inject = function inject() {
      return [_bindingSignaler.BindingSignaler];
    };

    function SignalBindingBehavior(bindingSignaler) {
      

      this.signals = bindingSignaler.signals;
    }

    SignalBindingBehavior.prototype.bind = function bind(binding, source) {
      if (!binding.updateTarget) {
        throw new Error('Only property bindings and string interpolation bindings can be signaled.  Trigger, delegate and call bindings cannot be signaled.');
      }
      if (arguments.length === 3) {
        var name = arguments[2];
        var bindings = this.signals[name] || (this.signals[name] = []);
        bindings.push(binding);
        binding.signalName = name;
      } else if (arguments.length > 3) {
        var names = Array.prototype.slice.call(arguments, 2);
        var i = names.length;
        while (i--) {
          var _name = names[i];
          var _bindings = this.signals[_name] || (this.signals[_name] = []);
          _bindings.push(binding);
        }
        binding.signalName = names;
      } else {
        throw new Error('Signal name is required.');
      }
    };

    SignalBindingBehavior.prototype.unbind = function unbind(binding, source) {
      var name = binding.signalName;
      binding.signalName = null;
      if (Array.isArray(name)) {
        var names = name;
        var i = names.length;
        while (i--) {
          var n = names[i];
          var bindings = this.signals[n];
          bindings.splice(bindings.indexOf(binding), 1);
        }
      } else {
        var _bindings2 = this.signals[name];
        _bindings2.splice(_bindings2.indexOf(binding), 1);
      }
    };

    return SignalBindingBehavior;
  }();
});
define('aurelia-templating-resources/binding-signaler',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BindingSignaler = undefined;

  

  var BindingSignaler = exports.BindingSignaler = function () {
    function BindingSignaler() {
      

      this.signals = {};
    }

    BindingSignaler.prototype.signal = function signal(name) {
      var bindings = this.signals[name];
      if (!bindings) {
        return;
      }
      var i = bindings.length;
      while (i--) {
        bindings[i].call(_aureliaBinding.sourceContext);
      }
    };

    return BindingSignaler;
  }();
});
define('aurelia-templating-resources/update-trigger-binding-behavior',['exports', 'aurelia-binding'], function (exports, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UpdateTriggerBindingBehavior = undefined;

  

  var _class, _temp;

  var eventNamesRequired = 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind="firstName & updateTrigger:\'blur\'">';
  var notApplicableMessage = 'The updateTrigger binding behavior can only be applied to two-way bindings on input/select elements.';

  var UpdateTriggerBindingBehavior = exports.UpdateTriggerBindingBehavior = (_temp = _class = function () {
    function UpdateTriggerBindingBehavior(eventManager) {
      

      this.eventManager = eventManager;
    }

    UpdateTriggerBindingBehavior.prototype.bind = function bind(binding, source) {
      for (var _len = arguments.length, events = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        events[_key - 2] = arguments[_key];
      }

      if (events.length === 0) {
        throw new Error(eventNamesRequired);
      }
      if (binding.mode !== _aureliaBinding.bindingMode.twoWay) {
        throw new Error(notApplicableMessage);
      }

      var targetObserver = binding.observerLocator.getObserver(binding.target, binding.targetProperty);
      if (!targetObserver.handler) {
        throw new Error(notApplicableMessage);
      }
      binding.targetObserver = targetObserver;

      targetObserver.originalHandler = binding.targetObserver.handler;

      var handler = this.eventManager.createElementHandler(events);
      targetObserver.handler = handler;
    };

    UpdateTriggerBindingBehavior.prototype.unbind = function unbind(binding, source) {
      binding.targetObserver.handler = binding.targetObserver.originalHandler;
      binding.targetObserver.originalHandler = null;
    };

    return UpdateTriggerBindingBehavior;
  }(), _class.inject = [_aureliaBinding.EventManager], _temp);
});
define('aurelia-templating-resources/html-resource-plugin',['exports', 'aurelia-templating', './dynamic-element'], function (exports, _aureliaTemplating, _dynamicElement) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getElementName = getElementName;
  exports.configure = configure;
  function getElementName(address) {
    return (/([^\/^\?]+)\.html/i.exec(address)[1].toLowerCase()
    );
  }

  function configure(config) {
    var viewEngine = config.container.get(_aureliaTemplating.ViewEngine);
    var loader = config.aurelia.loader;

    viewEngine.addResourcePlugin('.html', {
      'fetch': function fetch(address) {
        return loader.loadTemplate(address).then(function (registryEntry) {
          var _ref;

          var bindable = registryEntry.template.getAttribute('bindable');
          var elementName = getElementName(address);

          if (bindable) {
            bindable = bindable.split(',').map(function (x) {
              return x.trim();
            });
            registryEntry.template.removeAttribute('bindable');
          } else {
            bindable = [];
          }

          return _ref = {}, _ref[elementName] = (0, _dynamicElement._createDynamicElement)(elementName, address, bindable), _ref;
        });
      }
    });
  }
});
define('aurelia-templating-resources/dynamic-element',['exports', 'aurelia-templating'], function (exports, _aureliaTemplating) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports._createDynamicElement = _createDynamicElement;

  

  function _createDynamicElement(name, viewUrl, bindableNames) {
    var _dec, _dec2, _class;

    var DynamicElement = (_dec = (0, _aureliaTemplating.customElement)(name), _dec2 = (0, _aureliaTemplating.useView)(viewUrl), _dec(_class = _dec2(_class = function () {
      function DynamicElement() {
        
      }

      DynamicElement.prototype.bind = function bind(bindingContext) {
        this.$parent = bindingContext;
      };

      return DynamicElement;
    }()) || _class) || _class);

    for (var i = 0, ii = bindableNames.length; i < ii; ++i) {
      (0, _aureliaTemplating.bindable)(bindableNames[i])(DynamicElement);
    }
    return DynamicElement;
  }
});
define('aurelia-i18n/i18n',['exports', 'i18next', 'aurelia-pal', 'aurelia-event-aggregator', 'aurelia-templating-resources'], function (exports, _i18next, _aureliaPal, _aureliaEventAggregator, _aureliaTemplatingResources) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.I18N = undefined;

  var _i18next2 = _interopRequireDefault(_i18next);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  

  var _class, _temp;

  var I18N = exports.I18N = (_temp = _class = function () {
    function I18N(ea, signaler) {
      var _this = this;

      

      this.globalVars = {};
      this.params = {};
      this.i18nextDefered = {
        resolve: null,
        promise: null
      };

      this.i18next = _i18next2.default;
      this.ea = ea;
      this.Intl = window.Intl;
      this.signaler = signaler;
      this.i18nextDefered.promise = new Promise(function (resolve) {
        return _this.i18nextDefered.resolve = resolve;
      });
    }

    I18N.prototype.setup = function setup(options) {
      var _this2 = this;

      var defaultOptions = {
        compatibilityAPI: 'v1',
        compatibilityJSON: 'v1',
        lng: 'en',
        attributes: ['t', 'i18n'],
        fallbackLng: 'en',
        debug: false
      };

      _i18next2.default.init(options || defaultOptions, function (err, t) {
        if (_i18next2.default.options.attributes instanceof String) {
          _i18next2.default.options.attributes = [_i18next2.default.options.attributes];
        }

        _this2.i18nextDefered.resolve(_this2.i18next);
      });

      return this.i18nextDefered.promise;
    };

    I18N.prototype.i18nextReady = function i18nextReady() {
      return this.i18nextDefered.promise;
    };

    I18N.prototype.setLocale = function setLocale(locale) {
      var _this3 = this;

      return new Promise(function (resolve) {
        var oldLocale = _this3.getLocale();
        _this3.i18next.changeLanguage(locale, function (err, tr) {
          _this3.ea.publish('i18n:locale:changed', { oldValue: oldLocale, newValue: locale });
          _this3.signaler.signal('aurelia-translation-signal');
          resolve(tr);
        });
      });
    };

    I18N.prototype.getLocale = function getLocale() {
      return this.i18next.language;
    };

    I18N.prototype.nf = function nf(options, locales) {
      return new this.Intl.NumberFormat(locales || this.getLocale(), options || {});
    };

    I18N.prototype.uf = function uf(number, locale) {
      var nf = this.nf({}, locale || this.getLocale());
      var comparer = nf.format(10000 / 3);

      var thousandSeparator = comparer[1];
      var decimalSeparator = comparer[5];

      var result = number.replace(thousandSeparator, '').replace(/[^\d.,-]/g, '').replace(decimalSeparator, '.');

      return Number(result);
    };

    I18N.prototype.df = function df(options, locales) {
      return new this.Intl.DateTimeFormat(locales || this.getLocale(), options);
    };

    I18N.prototype.tr = function tr(key, options) {
      var fullOptions = this.globalVars;

      if (options !== undefined) {
        fullOptions = Object.assign(Object.assign({}, this.globalVars), options);
      }

      return this.i18next.t(key, fullOptions);
    };

    I18N.prototype.registerGlobalVariable = function registerGlobalVariable(key, value) {
      this.globalVars[key] = value;
    };

    I18N.prototype.unregisterGlobalVariable = function unregisterGlobalVariable(key) {
      delete this.globalVars[key];
    };

    I18N.prototype.updateTranslations = function updateTranslations(el) {
      if (!el || !el.querySelectorAll) {
        return;
      }

      var i = void 0;
      var l = void 0;

      var selector = [].concat(this.i18next.options.attributes);
      for (i = 0, l = selector.length; i < l; i++) {
        selector[i] = '[' + selector[i] + ']';
      }selector = selector.join(',');

      var nodes = el.querySelectorAll(selector);
      for (i = 0, l = nodes.length; i < l; i++) {
        var node = nodes[i];
        var keys = void 0;

        for (var i2 = 0, l2 = this.i18next.options.attributes.length; i2 < l2; i2++) {
          keys = node.getAttribute(this.i18next.options.attributes[i2]);
          if (keys) break;
        }

        if (!keys) continue;

        this.updateValue(node, keys);
      }
    };

    I18N.prototype.updateValue = function updateValue(node, value, params) {
      if (value === null || value === undefined) {
        return;
      }

      var keys = value.split(';');
      var i = keys.length;

      while (i--) {
        var key = keys[i];

        var re = /\[([a-z\-]*)\]/ig;

        var m = void 0;
        var attr = 'text';

        if (node.nodeName === 'IMG') attr = 'src';

        while ((m = re.exec(key)) !== null) {
          if (m.index === re.lastIndex) {
            re.lastIndex++;
          }
          if (m) {
            key = key.replace(m[0], '');
            attr = m[1];
          }
        }

        if (!node._textContent) node._textContent = node.textContent;
        if (!node._innerHTML) node._innerHTML = node.innerHTML;

        var attrCC = attr.replace(/-([a-z])/g, function (g) {
          return g[1].toUpperCase();
        });

        switch (attr) {
          case 'text':
            var newChild = _aureliaPal.DOM.createTextNode(this.tr(key, params));
            if (node._newChild) {
              node.removeChild(node._newChild);
            }

            node._newChild = newChild;
            while (node.firstChild) {
              node.removeChild(node.firstChild);
            }
            node.appendChild(node._newChild);
            break;
          case 'prepend':
            var prependParser = _aureliaPal.DOM.createElement('div');
            prependParser.innerHTML = this.tr(key, params);
            for (var ni = node.childNodes.length - 1; ni >= 0; ni--) {
              if (node.childNodes[ni]._prepended) {
                node.removeChild(node.childNodes[ni]);
              }
            }

            for (var pi = prependParser.childNodes.length - 1; pi >= 0; pi--) {
              prependParser.childNodes[pi]._prepended = true;
              if (node.firstChild) {
                node.insertBefore(prependParser.childNodes[pi], node.firstChild);
              } else {
                node.appendChild(prependParser.childNodes[pi]);
              }
            }
            break;
          case 'append':
            var appendParser = _aureliaPal.DOM.createElement('div');
            appendParser.innerHTML = this.tr(key, params);
            for (var _ni = node.childNodes.length - 1; _ni >= 0; _ni--) {
              if (node.childNodes[_ni]._appended) {
                node.removeChild(node.childNodes[_ni]);
              }
            }

            while (appendParser.firstChild) {
              appendParser.firstChild._appended = true;
              node.appendChild(appendParser.firstChild);
            }
            break;
          case 'html':
            node.innerHTML = this.tr(key, params);
            break;
          default:
            if (node.au && node.au.controller && node.au.controller.viewModel && attrCC in node.au.controller.viewModel) {
              node.au.controller.viewModel[attrCC] = this.tr(key, params);
            } else {
              node.setAttribute(attr, this.tr(key, params));
            }

            break;
        }
      }
    };

    return I18N;
  }(), _class.inject = [_aureliaEventAggregator.EventAggregator, _aureliaTemplatingResources.BindingSignaler], _temp);
});
define('i18next/i18next',['require','exports','module','./logger','./EventEmitter','./ResourceStore','./Translator','./LanguageUtils','./PluralResolver','./Interpolator','./BackendConnector','./CacheConnector','./defaults','./postProcessor','./compatibility/v1'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _EventEmitter2 = require('./EventEmitter');

var _EventEmitter3 = _interopRequireDefault(_EventEmitter2);

var _ResourceStore = require('./ResourceStore');

var _ResourceStore2 = _interopRequireDefault(_ResourceStore);

var _Translator = require('./Translator');

var _Translator2 = _interopRequireDefault(_Translator);

var _LanguageUtils = require('./LanguageUtils');

var _LanguageUtils2 = _interopRequireDefault(_LanguageUtils);

var _PluralResolver = require('./PluralResolver');

var _PluralResolver2 = _interopRequireDefault(_PluralResolver);

var _Interpolator = require('./Interpolator');

var _Interpolator2 = _interopRequireDefault(_Interpolator);

var _BackendConnector = require('./BackendConnector');

var _BackendConnector2 = _interopRequireDefault(_BackendConnector);

var _CacheConnector = require('./CacheConnector');

var _CacheConnector2 = _interopRequireDefault(_CacheConnector);

var _defaults2 = require('./defaults');

var _postProcessor = require('./postProcessor');

var _postProcessor2 = _interopRequireDefault(_postProcessor);

var _v = require('./compatibility/v1');

var compat = _interopRequireWildcard(_v);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function noop() {};

var I18n = function (_EventEmitter) {
  _inherits(I18n, _EventEmitter);

  function I18n() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments[1];

    _classCallCheck(this, I18n);

    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

    _this.options = (0, _defaults2.transformOptions)(options);
    _this.services = {};
    _this.logger = _logger2.default;
    _this.modules = { external: [] };

    if (callback && !_this.isInitialized && !options.isClone) {
      var _ret;

      // https://github.com/i18next/i18next/issues/879
      if (!_this.options.initImmediate) return _ret = _this.init(options, callback), _possibleConstructorReturn(_this, _ret);
      setTimeout(function () {
        _this.init(options, callback);
      }, 0);
    }
    return _this;
  }

  I18n.prototype.init = function init(options, callback) {
    var _this2 = this;

    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!options) options = {};

    if (options.compatibilityAPI === 'v1') {
      this.options = _extends({}, (0, _defaults2.get)(), (0, _defaults2.transformOptions)(compat.convertAPIOptions(options)), {});
    } else if (options.compatibilityJSON === 'v1') {
      this.options = _extends({}, (0, _defaults2.get)(), (0, _defaults2.transformOptions)(compat.convertJSONOptions(options)), {});
    } else {
      this.options = _extends({}, (0, _defaults2.get)(), this.options, (0, _defaults2.transformOptions)(options));
    }
    if (!callback) callback = noop;

    function createClassOnDemand(ClassOrObject) {
      if (!ClassOrObject) return;
      if (typeof ClassOrObject === 'function') return new ClassOrObject();
      return ClassOrObject;
    }

    // init services
    if (!this.options.isClone) {
      if (this.modules.logger) {
        _logger2.default.init(createClassOnDemand(this.modules.logger), this.options);
      } else {
        _logger2.default.init(null, this.options);
      }

      var lu = new _LanguageUtils2.default(this.options);
      this.store = new _ResourceStore2.default(this.options.resources, this.options);

      var s = this.services;
      s.logger = _logger2.default;
      s.resourceStore = this.store;
      s.resourceStore.on('added removed', function (lng, ns) {
        s.cacheConnector.save();
      });
      s.languageUtils = lu;
      s.pluralResolver = new _PluralResolver2.default(lu, { prepend: this.options.pluralSeparator, compatibilityJSON: this.options.compatibilityJSON, simplifyPluralSuffix: this.options.simplifyPluralSuffix });
      s.interpolator = new _Interpolator2.default(this.options);

      s.backendConnector = new _BackendConnector2.default(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
      // pipe events from backendConnector
      s.backendConnector.on('*', function (event) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        _this2.emit.apply(_this2, [event].concat(args));
      });

      s.backendConnector.on('loaded', function (loaded) {
        s.cacheConnector.save();
      });

      s.cacheConnector = new _CacheConnector2.default(createClassOnDemand(this.modules.cache), s.resourceStore, s, this.options);
      // pipe events from backendConnector
      s.cacheConnector.on('*', function (event) {
        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        _this2.emit.apply(_this2, [event].concat(args));
      });

      if (this.modules.languageDetector) {
        s.languageDetector = createClassOnDemand(this.modules.languageDetector);
        s.languageDetector.init(s, this.options.detection, this.options);
      }

      this.translator = new _Translator2.default(this.services, this.options);
      // pipe events from translator
      this.translator.on('*', function (event) {
        for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          args[_key3 - 1] = arguments[_key3];
        }

        _this2.emit.apply(_this2, [event].concat(args));
      });

      this.modules.external.forEach(function (m) {
        if (m.init) m.init(_this2);
      });
    }

    // append api
    var storeApi = ['getResource', 'addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle', 'hasResourceBundle', 'getResourceBundle'];
    storeApi.forEach(function (fcName) {
      _this2[fcName] = function () {
        return this.store[fcName].apply(this.store, arguments);
      };
    });

    // TODO: COMPATIBILITY remove this
    if (this.options.compatibilityAPI === 'v1') compat.appendBackwardsAPI(this);

    var load = function load() {
      _this2.changeLanguage(_this2.options.lng, function (err, t) {
        _this2.isInitialized = true;
        _this2.logger.log('initialized', _this2.options);
        _this2.emit('initialized', _this2.options);

        callback(err, t);
      });
    };

    if (this.options.resources || !this.options.initImmediate) {
      load();
    } else {
      setTimeout(load, 0);
    }

    return this;
  };

  I18n.prototype.loadResources = function loadResources() {
    var _this3 = this;

    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;

    if (!this.options.resources) {
      var _ret2 = function () {
        if (_this3.language && _this3.language.toLowerCase() === 'cimode') return {
            v: callback()
          }; // avoid loading resources for cimode

        var toLoad = [];

        var append = function append(lng) {
          if (!lng) return;
          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);
          lngs.forEach(function (l) {
            if (toLoad.indexOf(l) < 0) toLoad.push(l);
          });
        };

        if (!_this3.language) {
          // at least load fallbacks in this case
          var fallbacks = _this3.services.languageUtils.getFallbackCodes(_this3.options.fallbackLng);
          fallbacks.forEach(function (l) {
            return append(l);
          });
        } else {
          append(_this3.language);
        }

        if (_this3.options.preload) {
          _this3.options.preload.forEach(function (l) {
            return append(l);
          });
        }

        _this3.services.cacheConnector.load(toLoad, _this3.options.ns, function () {
          _this3.services.backendConnector.load(toLoad, _this3.options.ns, callback);
        });
      }();

      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
    } else {
      callback(null);
    }
  };

  I18n.prototype.reloadResources = function reloadResources(lngs, ns) {
    if (!lngs) lngs = this.languages;
    if (!ns) ns = this.options.ns;
    this.services.backendConnector.reload(lngs, ns);
  };

  I18n.prototype.use = function use(module) {
    if (module.type === 'backend') {
      this.modules.backend = module;
    }

    if (module.type === 'cache') {
      this.modules.cache = module;
    }

    if (module.type === 'logger' || module.log && module.warn && module.error) {
      this.modules.logger = module;
    }

    if (module.type === 'languageDetector') {
      this.modules.languageDetector = module;
    }

    if (module.type === 'postProcessor') {
      _postProcessor2.default.addPostProcessor(module);
    }

    if (module.type === '3rdParty') {
      this.modules.external.push(module);
    }

    return this;
  };

  I18n.prototype.changeLanguage = function changeLanguage(lng, callback) {
    var _this4 = this;

    var done = function done(err) {
      if (lng) {
        _this4.emit('languageChanged', lng);
        _this4.logger.log('languageChanged', lng);
      }

      if (callback) callback(err, function () {
        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return _this4.t.apply(_this4, args);
      });
    };

    if (!lng && this.services.languageDetector) lng = this.services.languageDetector.detect();

    if (lng) {
      this.language = lng;
      this.languages = this.services.languageUtils.toResolveHierarchy(lng);

      this.translator.changeLanguage(lng);

      if (this.services.languageDetector) this.services.languageDetector.cacheUserLanguage(lng);
    }

    this.loadResources(function (err) {
      done(err);
    });
  };

  I18n.prototype.getFixedT = function getFixedT(lng, ns) {
    var _this5 = this;

    var fixedT = function fixedT(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var options = _extends({}, opts);
      options.lng = options.lng || fixedT.lng;
      options.ns = options.ns || fixedT.ns;
      return _this5.t(key, options);
    };
    fixedT.lng = lng;
    fixedT.ns = ns;
    return fixedT;
  };

  I18n.prototype.t = function t() {
    return this.translator && this.translator.translate.apply(this.translator, arguments);
  };

  I18n.prototype.exists = function exists() {
    return this.translator && this.translator.exists.apply(this.translator, arguments);
  };

  I18n.prototype.setDefaultNamespace = function setDefaultNamespace(ns) {
    this.options.defaultNS = ns;
  };

  I18n.prototype.loadNamespaces = function loadNamespaces(ns, callback) {
    var _this6 = this;

    if (!this.options.ns) return callback && callback();
    if (typeof ns === 'string') ns = [ns];

    ns.forEach(function (n) {
      if (_this6.options.ns.indexOf(n) < 0) _this6.options.ns.push(n);
    });

    this.loadResources(callback);
  };

  I18n.prototype.loadLanguages = function loadLanguages(lngs, callback) {
    if (typeof lngs === 'string') lngs = [lngs];
    var preloaded = this.options.preload || [];

    var newLngs = lngs.filter(function (lng) {
      return preloaded.indexOf(lng) < 0;
    });
    // Exit early if all given languages are already preloaded
    if (!newLngs.length) return callback();

    this.options.preload = preloaded.concat(newLngs);
    this.loadResources(callback);
  };

  I18n.prototype.dir = function dir(lng) {
    if (!lng) lng = this.language;
    if (!lng) return 'rtl';

    var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];

    return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';
  };

  I18n.prototype.createInstance = function createInstance() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments[1];

    return new I18n(options, callback);
  };

  I18n.prototype.cloneInstance = function cloneInstance() {
    var _this7 = this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;

    var mergedOptions = _extends({}, options, this.options, { isClone: true });
    var clone = new I18n(mergedOptions, callback);
    var membersToCopy = ['store', 'services', 'language'];
    membersToCopy.forEach(function (m) {
      clone[m] = _this7[m];
    });
    clone.translator = new _Translator2.default(clone.services, clone.options);
    clone.translator.on('*', function (event) {
      for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
        args[_key5 - 1] = arguments[_key5];
      }

      clone.emit.apply(clone, [event].concat(args));
    });
    clone.init(mergedOptions, callback);

    return clone;
  };

  return I18n;
}(_EventEmitter3.default);

exports.default = new I18n();
});

define('i18next/logger',['require','exports','module'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var consoleLogger = {
  type: 'logger',

  log: function log(args) {
    this._output('log', args);
  },
  warn: function warn(args) {
    this._output('warn', args);
  },
  error: function error(args) {
    this._output('error', args);
  },
  _output: function _output(type, args) {
    if (console && console[type]) console[type].apply(console, Array.prototype.slice.call(args));
  }
};

var Logger = function () {
  function Logger(concreteLogger) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Logger);

    this.init(concreteLogger, options);
  }

  Logger.prototype.init = function init(concreteLogger) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    this.prefix = options.prefix || 'i18next:';
    this.logger = concreteLogger || consoleLogger;
    this.options = options;
    this.debug = options.debug === false ? false : true;
  };

  Logger.prototype.setDebug = function setDebug(bool) {
    this.debug = bool;
  };

  Logger.prototype.log = function log() {
    this.forward(arguments, 'log', '', true);
  };

  Logger.prototype.warn = function warn() {
    this.forward(arguments, 'warn', '', true);
  };

  Logger.prototype.error = function error() {
    this.forward(arguments, 'error', '');
  };

  Logger.prototype.deprecate = function deprecate() {
    this.forward(arguments, 'warn', 'WARNING DEPRECATED: ', true);
  };

  Logger.prototype.forward = function forward(args, lvl, prefix, debugOnly) {
    if (debugOnly && !this.debug) return;
    if (typeof args[0] === 'string') args[0] = prefix + this.prefix + ' ' + args[0];
    this.logger[lvl](args);
  };

  Logger.prototype.create = function create(moduleName) {
    var sub = new Logger(this.logger, _extends({ prefix: this.prefix + ':' + moduleName + ':' }, this.options));

    return sub;
  };

  // createInstance(options = {}) {
  //   return new Logger(options, callback);
  // }

  return Logger;
}();

;

exports.default = new Logger();
});

define('i18next/EventEmitter',['require','exports','module'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventEmitter = function () {
	function EventEmitter() {
		_classCallCheck(this, EventEmitter);

		this.observers = {};
	}

	EventEmitter.prototype.on = function on(events, listener) {
		var _this = this;

		events.split(' ').forEach(function (event) {
			_this.observers[event] = _this.observers[event] || [];
			_this.observers[event].push(listener);
		});
	};

	EventEmitter.prototype.off = function off(event, listener) {
		var _this2 = this;

		if (!this.observers[event]) {
			return;
		}

		this.observers[event].forEach(function () {
			if (!listener) {
				delete _this2.observers[event];
			} else {
				var index = _this2.observers[event].indexOf(listener);
				if (index > -1) {
					_this2.observers[event].splice(index, 1);
				}
			}
		});
	};

	EventEmitter.prototype.emit = function emit(event) {
		for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
			args[_key - 1] = arguments[_key];
		}

		if (this.observers[event]) {
			var cloned = [].concat(this.observers[event]);
			cloned.forEach(function (observer) {
				observer.apply(undefined, args);
			});
		}

		if (this.observers['*']) {
			var _cloned = [].concat(this.observers['*']);
			_cloned.forEach(function (observer) {
				var _ref;

				observer.apply(observer, (_ref = [event]).concat.apply(_ref, args));
			});
		}
	};

	return EventEmitter;
}();

exports.default = EventEmitter;
});

define('i18next/ResourceStore',['require','exports','module','./EventEmitter','./utils'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _EventEmitter2 = require('./EventEmitter');

var _EventEmitter3 = _interopRequireDefault(_EventEmitter2);

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var ResourceStore = function (_EventEmitter) {
  _inherits(ResourceStore, _EventEmitter);

  function ResourceStore() {
    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { ns: ['translation'], defaultNS: 'translation' };

    _classCallCheck(this, ResourceStore);

    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

    _this.data = data;
    _this.options = options;
    return _this;
  }

  ResourceStore.prototype.addNamespaces = function addNamespaces(ns) {
    if (this.options.ns.indexOf(ns) < 0) {
      this.options.ns.push(ns);
    }
  };

  ResourceStore.prototype.removeNamespaces = function removeNamespaces(ns) {
    var index = this.options.ns.indexOf(ns);
    if (index > -1) {
      this.options.ns.splice(index, 1);
    }
  };

  ResourceStore.prototype.getResource = function getResource(lng, ns, key) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    var keySeparator = options.keySeparator || this.options.keySeparator;
    if (keySeparator === undefined) keySeparator = '.';

    var path = [lng, ns];
    if (key && typeof key !== 'string') path = path.concat(key);
    if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);

    if (lng.indexOf('.') > -1) {
      path = lng.split('.');
    }

    return utils.getPath(this.data, path);
  };

  ResourceStore.prototype.addResource = function addResource(lng, ns, key, value) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : { silent: false };

    var keySeparator = this.options.keySeparator;
    if (keySeparator === undefined) keySeparator = '.';

    var path = [lng, ns];
    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);

    if (lng.indexOf('.') > -1) {
      path = lng.split('.');
      value = ns;
      ns = path[1];
    }

    this.addNamespaces(ns);

    utils.setPath(this.data, path, value);

    if (!options.silent) this.emit('added', lng, ns, key, value);
  };

  ResourceStore.prototype.addResources = function addResources(lng, ns, resources) {
    for (var m in resources) {
      if (typeof resources[m] === 'string') this.addResource(lng, ns, m, resources[m], { silent: true });
    }
    this.emit('added', lng, ns, resources);
  };

  ResourceStore.prototype.addResourceBundle = function addResourceBundle(lng, ns, resources, deep, overwrite) {
    var path = [lng, ns];
    if (lng.indexOf('.') > -1) {
      path = lng.split('.');
      deep = resources;
      resources = ns;
      ns = path[1];
    }

    this.addNamespaces(ns);

    var pack = utils.getPath(this.data, path) || {};

    if (deep) {
      utils.deepExtend(pack, resources, overwrite);
    } else {
      pack = _extends({}, pack, resources);
    }

    utils.setPath(this.data, path, pack);

    this.emit('added', lng, ns, resources);
  };

  ResourceStore.prototype.removeResourceBundle = function removeResourceBundle(lng, ns) {
    if (this.hasResourceBundle(lng, ns)) {
      delete this.data[lng][ns];
    }
    this.removeNamespaces(ns);

    this.emit('removed', lng, ns);
  };

  ResourceStore.prototype.hasResourceBundle = function hasResourceBundle(lng, ns) {
    return this.getResource(lng, ns) !== undefined;
  };

  ResourceStore.prototype.getResourceBundle = function getResourceBundle(lng, ns) {
    if (!ns) ns = this.options.defaultNS;

    // TODO: COMPATIBILITY remove extend in v2.1.0
    if (this.options.compatibilityAPI === 'v1') return _extends({}, this.getResource(lng, ns));

    return this.getResource(lng, ns);
  };

  ResourceStore.prototype.toJSON = function toJSON() {
    return this.data;
  };

  return ResourceStore;
}(_EventEmitter3.default);

exports.default = ResourceStore;
});

define('i18next/utils',['require','exports','module'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeString = makeString;
exports.copy = copy;
exports.setPath = setPath;
exports.pushPath = pushPath;
exports.getPath = getPath;
exports.deepExtend = deepExtend;
exports.regexEscape = regexEscape;
exports.escape = escape;
function makeString(object) {
  if (object == null) return '';
  return '' + object;
}

function copy(a, s, t) {
  a.forEach(function (m) {
    if (s[m]) t[m] = s[m];
  });
}

function getLastOfPath(object, path, Empty) {
  function cleanKey(key) {
    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;
  }

  function canNotTraverseDeeper() {
    return !object || typeof object === 'string';
  }

  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');
  while (stack.length > 1) {
    if (canNotTraverseDeeper()) return {};

    var key = cleanKey(stack.shift());
    if (!object[key] && Empty) object[key] = new Empty();
    object = object[key];
  }

  if (canNotTraverseDeeper()) return {};
  return {
    obj: object,
    k: cleanKey(stack.shift())
  };
}

function setPath(object, path, newValue) {
  var _getLastOfPath = getLastOfPath(object, path, Object),
      obj = _getLastOfPath.obj,
      k = _getLastOfPath.k;

  obj[k] = newValue;
}

function pushPath(object, path, newValue, concat) {
  var _getLastOfPath2 = getLastOfPath(object, path, Object),
      obj = _getLastOfPath2.obj,
      k = _getLastOfPath2.k;

  obj[k] = obj[k] || [];
  if (concat) obj[k] = obj[k].concat(newValue);
  if (!concat) obj[k].push(newValue);
}

function getPath(object, path) {
  var _getLastOfPath3 = getLastOfPath(object, path),
      obj = _getLastOfPath3.obj,
      k = _getLastOfPath3.k;

  if (!obj) return undefined;
  return obj[k];
}

function deepExtend(target, source, overwrite) {
  for (var prop in source) {
    if (prop in target) {
      // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch
      if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {
        if (overwrite) target[prop] = source[prop];
      } else {
        deepExtend(target[prop], source[prop], overwrite);
      }
    } else {
      target[prop] = source[prop];
    }
  }return target;
}

function regexEscape(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
}

/* eslint-disable */
var _entityMap = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': '&quot;',
  "'": '&#39;',
  "/": '&#x2F;'
};
/* eslint-enable */

function escape(data) {
  if (typeof data === 'string') {
    return data.replace(/[&<>"'\/]/g, function (s) {
      return _entityMap[s];
    });
  } else {
    return data;
  }
}
});

define('i18next/Translator',['require','exports','module','./logger','./EventEmitter','./postProcessor','./compatibility/v1','./utils'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _EventEmitter2 = require('./EventEmitter');

var _EventEmitter3 = _interopRequireDefault(_EventEmitter2);

var _postProcessor = require('./postProcessor');

var _postProcessor2 = _interopRequireDefault(_postProcessor);

var _v = require('./compatibility/v1');

var compat = _interopRequireWildcard(_v);

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Translator = function (_EventEmitter) {
  _inherits(Translator, _EventEmitter);

  function Translator(services) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Translator);

    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

    utils.copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector'], services, _this);

    _this.options = options;
    _this.logger = _logger2.default.create('translator');
    return _this;
  }

  Translator.prototype.changeLanguage = function changeLanguage(lng) {
    if (lng) this.language = lng;
  };

  Translator.prototype.exists = function exists(key) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { interpolation: {} };

    if (this.options.compatibilityAPI === 'v1') {
      options = compat.convertTOptions(options);
    }

    return this.resolve(key, options) !== undefined;
  };

  Translator.prototype.extractFromKey = function extractFromKey(key, options) {
    var nsSeparator = options.nsSeparator || this.options.nsSeparator;
    if (nsSeparator === undefined) nsSeparator = ':';
    var keySeparator = options.keySeparator || this.options.keySeparator || '.';

    var namespaces = options.ns || this.options.defaultNS;
    if (nsSeparator && key.indexOf(nsSeparator) > -1) {
      var parts = key.split(nsSeparator);
      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
      key = parts.join(keySeparator);
    }
    if (typeof namespaces === 'string') namespaces = [namespaces];

    return {
      key: key,
      namespaces: namespaces
    };
  };

  Translator.prototype.translate = function translate(keys) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {
      options = this.options.overloadTranslationOptionHandler(arguments);
    } else if (this.options.compatibilityAPI === 'v1') {
      options = compat.convertTOptions(options);
    }

    // non valid keys handling
    if (keys === undefined || keys === null || keys === '') return '';
    if (typeof keys === 'number') keys = String(keys);
    if (typeof keys === 'string') keys = [keys];

    // separators
    var keySeparator = options.keySeparator || this.options.keySeparator || '.';

    // get namespace(s)

    var _extractFromKey = this.extractFromKey(keys[keys.length - 1], options),
        key = _extractFromKey.key,
        namespaces = _extractFromKey.namespaces;

    var namespace = namespaces[namespaces.length - 1];

    // return key on CIMode
    var lng = options.lng || this.language;
    var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (lng && lng.toLowerCase() === 'cimode') {
      if (appendNamespaceToCIMode) {
        var nsSeparator = options.nsSeparator || this.options.nsSeparator;
        return namespace + nsSeparator + key;
      }

      return key;
    }

    // resolve from store
    var res = this.resolve(keys, options);

    var resType = Object.prototype.toString.apply(res);
    var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];
    var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;

    // object
    if (res && typeof res !== 'string' && noObject.indexOf(resType) < 0 && !(joinArrays && resType === '[object Array]')) {
      if (!options.returnObjects && !this.options.returnObjects) {
        this.logger.warn('accessing an object - but returnObjects options is not enabled!');
        return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(key, res, options) : 'key \'' + key + ' (' + this.language + ')\' returned an object instead of string.';
      }

      // if we got a separator we loop over children - else we just return object as is
      // as having it set to false means no hierarchy so no lookup for nested values
      if (options.keySeparator || this.options.keySeparator) {
        var copy = resType === '[object Array]' ? [] : {}; // apply child translation on a copy

        for (var m in res) {
          if (res.hasOwnProperty(m)) {
            copy[m] = this.translate('' + key + keySeparator + m, _extends({}, options, { joinArrays: false, ns: namespaces }));
          }
        }
        res = copy;
      }
    }
    // array special treatment
    else if (joinArrays && resType === '[object Array]') {
        res = res.join(joinArrays);
        if (res) res = this.extendTranslation(res, key, options);
      }
      // string, empty or null
      else {
          var usedDefault = false,
              usedKey = false;

          // fallback value
          if (!this.isValidLookup(res) && options.defaultValue !== undefined) {
            usedDefault = true;
            res = options.defaultValue;
          }
          if (!this.isValidLookup(res)) {
            usedKey = true;
            res = key;
          }

          // save missing
          if (usedKey || usedDefault) {
            this.logger.log('missingKey', lng, namespace, key, res);

            var lngs = [];
            var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
            if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {
              for (var i = 0; i < fallbackLngs.length; i++) {
                lngs.push(fallbackLngs[i]);
              }
            } else if (this.options.saveMissingTo === 'all') {
              lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
            } else {
              //(this.options.saveMissingTo === 'current' || (this.options.saveMissingTo === 'fallback' && this.options.fallbackLng[0] === false) ) {
              lngs.push(options.lng || this.language);
            }

            if (this.options.saveMissing) {
              if (this.options.missingKeyHandler) {
                this.options.missingKeyHandler(lngs, namespace, key, res);
              } else if (this.backendConnector && this.backendConnector.saveMissing) {
                this.backendConnector.saveMissing(lngs, namespace, key, res);
              }
            }

            this.emit('missingKey', lngs, namespace, key, res);
          }

          // extend
          res = this.extendTranslation(res, key, options);

          // append namespace if still key
          if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = namespace + ':' + key;

          // parseMissingKeyHandler
          if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);
        }

    // return
    return res;
  };

  Translator.prototype.extendTranslation = function extendTranslation(res, key, options) {
    var _this2 = this;

    if (options.interpolation) this.interpolator.init(_extends({}, options, { interpolation: _extends({}, this.options.interpolation, options.interpolation) }));

    // interpolate
    var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;
    if (this.options.interpolation.defaultVariables) data = _extends({}, this.options.interpolation.defaultVariables, data);
    res = this.interpolator.interpolate(res, data, options.lng || this.language);

    // nesting
    if (options.nest !== false) res = this.interpolator.nest(res, function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _this2.translate.apply(_this2, args);
    }, options);

    if (options.interpolation) this.interpolator.reset();

    // post process
    var postProcess = options.postProcess || this.options.postProcess;
    var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;

    if (res !== undefined && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {
      res = _postProcessor2.default.handle(postProcessorNames, res, key, options, this);
    }

    return res;
  };

  Translator.prototype.resolve = function resolve(keys) {
    var _this3 = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var found = void 0;

    if (typeof keys === 'string') keys = [keys];

    // forEach possible key
    keys.forEach(function (k) {
      if (_this3.isValidLookup(found)) return;

      var _extractFromKey2 = _this3.extractFromKey(k, options),
          key = _extractFromKey2.key,
          namespaces = _extractFromKey2.namespaces;

      if (_this3.options.fallbackNS) namespaces = namespaces.concat(_this3.options.fallbackNS);

      var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
      var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';

      var codes = options.lngs ? options.lngs : _this3.languageUtils.toResolveHierarchy(options.lng || _this3.language);

      namespaces.forEach(function (ns) {
        if (_this3.isValidLookup(found)) return;

        codes.forEach(function (code) {
          if (_this3.isValidLookup(found)) return;

          var finalKey = key;
          var finalKeys = [finalKey];

          var pluralSuffix = void 0;
          if (needsPluralHandling) pluralSuffix = _this3.pluralResolver.getSuffix(code, options.count);

          // fallback for plural if context not found
          if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);

          // get key for context if needed
          if (needsContextHandling) finalKeys.push(finalKey += '' + _this3.options.contextSeparator + options.context);

          // get key for plural if needed
          if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);

          // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only
          var possibleKey = void 0;
          while (possibleKey = finalKeys.pop()) {
            if (_this3.isValidLookup(found)) continue;
            found = _this3.getResource(code, ns, possibleKey, options);
          }
        });
      });
    });

    return found;
  };

  Translator.prototype.isValidLookup = function isValidLookup(res) {
    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');
  };

  Translator.prototype.getResource = function getResource(code, ns, key) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    return this.resourceStore.getResource(code, ns, key, options);
  };

  return Translator;
}(_EventEmitter3.default);

exports.default = Translator;
});

define('i18next/postProcessor',['require','exports','module'],function (require, exports, module) {"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {

  processors: {},

  addPostProcessor: function addPostProcessor(module) {
    this.processors[module.name] = module;
  },
  handle: function handle(processors, value, key, options, translator) {
    var _this = this;

    processors.forEach(function (processor) {
      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);
    });

    return value;
  }
};
});

define('i18next/compatibility/v1',['require','exports','module','../logger'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertAPIOptions = convertAPIOptions;
exports.convertJSONOptions = convertJSONOptions;
exports.convertTOptions = convertTOptions;
exports.appendBackwardsAPI = appendBackwardsAPI;

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function convertInterpolation(options) {

  options.interpolation = {
    unescapeSuffix: 'HTML'
  };

  options.interpolation.prefix = options.interpolationPrefix || '__';
  options.interpolation.suffix = options.interpolationSuffix || '__';
  options.interpolation.escapeValue = options.escapeInterpolation || false;

  options.interpolation.nestingPrefix = options.reusePrefix || '$t(';
  options.interpolation.nestingSuffix = options.reuseSuffix || ')';

  return options;
}

function convertAPIOptions(options) {
  if (options.resStore) options.resources = options.resStore;

  if (options.ns && options.ns.defaultNs) {
    options.defaultNS = options.ns.defaultNs;
    options.ns = options.ns.namespaces;
  } else {
    options.defaultNS = options.ns || 'translation';
  }

  if (options.fallbackToDefaultNS && options.defaultNS) options.fallbackNS = options.defaultNS;

  options.saveMissing = options.sendMissing;
  options.saveMissingTo = options.sendMissingTo || 'current';
  options.returnNull = options.fallbackOnNull ? false : true;
  options.returnEmptyString = options.fallbackOnEmpty ? false : true;
  options.returnObjects = options.returnObjectTrees;
  options.joinArrays = '\n';

  options.returnedObjectHandler = options.objectTreeKeyHandler;
  options.parseMissingKeyHandler = options.parseMissingKey;
  options.appendNamespaceToMissingKey = true;

  options.nsSeparator = options.nsseparator || ':';
  options.keySeparator = options.keyseparator || '.';

  if (options.shortcutFunction === 'sprintf') {
    options.overloadTranslationOptionHandler = function (args) {
      var values = [];

      for (var i = 1; i < args.length; i++) {
        values.push(args[i]);
      }

      return {
        postProcess: 'sprintf',
        sprintf: values
      };
    };
  }

  options.whitelist = options.lngWhitelist;
  options.preload = options.preload;
  if (options.load === 'current') options.load = 'currentOnly';
  if (options.load === 'unspecific') options.load = 'languageOnly';

  // backend
  options.backend = options.backend || {};
  options.backend.loadPath = options.resGetPath || 'locales/__lng__/__ns__.json';
  options.backend.addPath = options.resPostPath || 'locales/add/__lng__/__ns__';
  options.backend.allowMultiLoading = options.dynamicLoad;

  // cache
  options.cache = options.cache || {};
  options.cache.prefix = 'res_';
  options.cache.expirationTime = 7 * 24 * 60 * 60 * 1000;
  options.cache.enabled = options.useLocalStorage ? true : false;

  options = convertInterpolation(options);
  if (options.defaultVariables) options.interpolation.defaultVariables = options.defaultVariables;

  // TODO: deprecation
  // if (options.getAsync === false) throw deprecation error

  return options;
}

function convertJSONOptions(options) {
  options = convertInterpolation(options);
  options.joinArrays = '\n';

  return options;
}

function convertTOptions(options) {
  if (options.interpolationPrefix || options.interpolationSuffix || options.escapeInterpolation) {
    options = convertInterpolation(options);
  }

  options.nsSeparator = options.nsseparator;
  options.keySeparator = options.keyseparator;

  options.returnObjects = options.returnObjectTrees;

  return options;
}

function appendBackwardsAPI(i18n) {
  i18n.lng = function () {
    _logger2.default.deprecate('i18next.lng() can be replaced by i18next.language for detected language or i18next.languages for languages ordered by translation lookup.');
    return i18n.services.languageUtils.toResolveHierarchy(i18n.language)[0];
  };

  i18n.preload = function (lngs, cb) {
    _logger2.default.deprecate('i18next.preload() can be replaced with i18next.loadLanguages()');
    i18n.loadLanguages(lngs, cb);
  };

  i18n.setLng = function (lng, options, callback) {
    _logger2.default.deprecate('i18next.setLng() can be replaced with i18next.changeLanguage() or i18next.getFixedT() to get a translation function with fixed language or namespace.');
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!options) options = {};

    if (options.fixLng === true) {
      if (callback) return callback(null, i18n.getFixedT(lng));
    }

    i18n.changeLanguage(lng, callback);
  };

  i18n.addPostProcessor = function (name, fc) {
    _logger2.default.deprecate('i18next.addPostProcessor() can be replaced by i18next.use({ type: \'postProcessor\', name: \'name\', process: fc })');
    i18n.use({
      type: 'postProcessor',
      name: name,
      process: fc
    });
  };
}
});

define('i18next/LanguageUtils',['require','exports','module','./logger'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

var LanguageUtil = function () {
  function LanguageUtil(options) {
    _classCallCheck(this, LanguageUtil);

    this.options = options;

    this.whitelist = this.options.whitelist || false;
    this.logger = _logger2.default.create('languageUtils');
  }

  LanguageUtil.prototype.getScriptPartFromCode = function getScriptPartFromCode(code) {
    if (!code || code.indexOf('-') < 0) return null;

    var p = code.split('-');
    if (p.length === 2) return null;
    p.pop();
    return this.formatLanguageCode(p.join('-'));
  };

  LanguageUtil.prototype.getLanguagePartFromCode = function getLanguagePartFromCode(code) {
    if (!code || code.indexOf('-') < 0) return code;

    var p = code.split('-');
    return this.formatLanguageCode(p[0]);
  };

  LanguageUtil.prototype.formatLanguageCode = function formatLanguageCode(code) {
    // http://www.iana.org/assignments/language-tags/language-tags.xhtml
    if (typeof code === 'string' && code.indexOf('-') > -1) {
      var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];
      var p = code.split('-');

      if (this.options.lowerCaseLng) {
        p = p.map(function (part) {
          return part.toLowerCase();
        });
      } else if (p.length === 2) {
        p[0] = p[0].toLowerCase();
        p[1] = p[1].toUpperCase();

        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
      } else if (p.length === 3) {
        p[0] = p[0].toLowerCase();

        // if lenght 2 guess it's a country
        if (p[1].length === 2) p[1] = p[1].toUpperCase();
        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();

        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());
      }

      return p.join('-');
    } else {
      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
    }
  };

  LanguageUtil.prototype.isWhitelisted = function isWhitelisted(code) {
    if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {
      code = this.getLanguagePartFromCode(code);
    }
    return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;
  };

  LanguageUtil.prototype.getFallbackCodes = function getFallbackCodes(fallbacks, code) {
    if (!fallbacks) return [];
    if (typeof fallbacks === 'string') fallbacks = [fallbacks];
    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;

    if (!code) return fallbacks.default || [];

    // asume we have an object defining fallbacks
    var found = fallbacks[code];
    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
    if (!found) found = fallbacks[this.formatLanguageCode(code)];
    if (!found) found = fallbacks.default;

    return found || [];
  };

  LanguageUtil.prototype.toResolveHierarchy = function toResolveHierarchy(code, fallbackCode) {
    var _this = this;

    var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);

    var codes = [];
    var addCode = function addCode(code) {
      if (!code) return;
      if (_this.isWhitelisted(code)) {
        codes.push(code);
      } else {
        _this.logger.warn('rejecting non-whitelisted language code: ' + code);
      }
    };

    if (typeof code === 'string' && code.indexOf('-') > -1) {
      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));
      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));
      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));
    } else if (typeof code === 'string') {
      addCode(this.formatLanguageCode(code));
    }

    fallbackCodes.forEach(function (fc) {
      if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));
    });

    return codes;
  };

  return LanguageUtil;
}();

;

exports.default = LanguageUtil;
});

define('i18next/PluralResolver',['require','exports','module','./logger'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// definition http://translate.sourceforge.net/wiki/l10n/pluralforms
/* eslint-disable */
var sets = [{ lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'tg', 'ti', 'tr', 'uz', 'wa'], nr: [1, 2], fc: 1 }, { lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'es_ar', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'he', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt', 'pt_br', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'], nr: [1, 2], fc: 2 }, { lngs: ['ay', 'bo', 'cgg', 'fa', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'], nr: [1], fc: 3 }, { lngs: ['be', 'bs', 'dz', 'hr', 'ru', 'sr', 'uk'], nr: [1, 2, 5], fc: 4 }, { lngs: ['ar'], nr: [0, 1, 2, 3, 11, 100], fc: 5 }, { lngs: ['cs', 'sk'], nr: [1, 2, 5], fc: 6 }, { lngs: ['csb', 'pl'], nr: [1, 2, 5], fc: 7 }, { lngs: ['cy'], nr: [1, 2, 3, 8], fc: 8 }, { lngs: ['fr'], nr: [1, 2], fc: 9 }, { lngs: ['ga'], nr: [1, 2, 3, 7, 11], fc: 10 }, { lngs: ['gd'], nr: [1, 2, 3, 20], fc: 11 }, { lngs: ['is'], nr: [1, 2], fc: 12 }, { lngs: ['jv'], nr: [0, 1], fc: 13 }, { lngs: ['kw'], nr: [1, 2, 3, 4], fc: 14 }, { lngs: ['lt'], nr: [1, 2, 10], fc: 15 }, { lngs: ['lv'], nr: [1, 2, 0], fc: 16 }, { lngs: ['mk'], nr: [1, 2], fc: 17 }, { lngs: ['mnk'], nr: [0, 1, 2], fc: 18 }, { lngs: ['mt'], nr: [1, 2, 11, 20], fc: 19 }, { lngs: ['or'], nr: [2, 1], fc: 2 }, { lngs: ['ro'], nr: [1, 2, 20], fc: 20 }, { lngs: ['sl'], nr: [5, 1, 2, 3], fc: 21 }];

var _rulesPluralsTypes = {
  1: function _(n) {
    return Number(n > 1);
  },
  2: function _(n) {
    return Number(n != 1);
  },
  3: function _(n) {
    return 0;
  },
  4: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  5: function _(n) {
    return Number(n === 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
  },
  6: function _(n) {
    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
  },
  7: function _(n) {
    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  8: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
  },
  9: function _(n) {
    return Number(n >= 2);
  },
  10: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
  },
  11: function _(n) {
    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
  },
  12: function _(n) {
    return Number(n % 10 != 1 || n % 100 == 11);
  },
  13: function _(n) {
    return Number(n !== 0);
  },
  14: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
  },
  15: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  16: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
  },
  17: function _(n) {
    return Number(n == 1 || n % 10 == 1 ? 0 : 1);
  },
  18: function _(n) {
    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
  },
  19: function _(n) {
    return Number(n == 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
  },
  20: function _(n) {
    return Number(n == 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
  },
  21: function _(n) {
    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
  }
};
/* eslint-enable */

function createRules() {
  var l,
      rules = {};
  sets.forEach(function (set) {
    set.lngs.forEach(function (l) {
      return rules[l] = {
        numbers: set.nr,
        plurals: _rulesPluralsTypes[set.fc]
      };
    });
  });
  return rules;
}

var PluralResolver = function () {
  function PluralResolver(languageUtils) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, PluralResolver);

    this.languageUtils = languageUtils;
    this.options = options;

    this.logger = _logger2.default.create('pluralResolver');

    this.rules = createRules();
  }

  PluralResolver.prototype.addRule = function addRule(lng, obj) {
    this.rules[lng] = obj;
  };

  PluralResolver.prototype.getRule = function getRule(code) {
    return this.rules[this.languageUtils.getLanguagePartFromCode(code)];
  };

  PluralResolver.prototype.needsPlural = function needsPlural(code) {
    var rule = this.getRule(code);

    return rule && rule.numbers.length <= 1 ? false : true;
  };

  PluralResolver.prototype.getSuffix = function getSuffix(code, count) {
    var _this = this;

    var rule = this.getRule(code);

    if (rule) {
      var _ret = function () {
        if (rule.numbers.length === 1) return {
            v: ''
          }; // only singular

        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
        var suffix = rule.numbers[idx];

        // special treatment for lngs only having singular and plural
        if (_this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
          if (suffix === 2) {
            suffix = 'plural';
          } else if (suffix === 1) {
            suffix = '';
          }
        }

        var returnSuffix = function returnSuffix() {
          return _this.options.prepend && suffix.toString() ? _this.options.prepend + suffix.toString() : suffix.toString();
        };

        // COMPATIBILITY JSON
        // v1
        if (_this.options.compatibilityJSON === 'v1') {
          if (suffix === 1) return {
              v: ''
            };
          if (typeof suffix === 'number') return {
              v: '_plural_' + suffix.toString()
            };
          return {
            v: returnSuffix()
          };
        }
        // v2
        else if (_this.options.compatibilityJSON === 'v2' || rule.numbers.length === 2 && rule.numbers[0] === 1) {
            return {
              v: returnSuffix()
            };
          }
          // v3 - gettext index
          else if (rule.numbers.length === 2 && rule.numbers[0] === 1) {
              return {
                v: returnSuffix()
              };
            }
        return {
          v: _this.options.prepend && idx.toString() ? _this.options.prepend + idx.toString() : idx.toString()
        };
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
    } else {
      this.logger.warn('no plural rule found for: ' + code);
      return '';
    }
  };

  return PluralResolver;
}();

;

exports.default = PluralResolver;
});

define('i18next/Interpolator',['require','exports','module','./utils','./logger'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Interpolator = function () {
  function Interpolator() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Interpolator);

    this.logger = _logger2.default.create('interpolator');

    this.init(options, true);
  }

  Interpolator.prototype.init = function init() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var reset = arguments[1];

    if (reset) {
      this.options = options;
      this.format = options.interpolation && options.interpolation.format || function (value) {
        return value;
      };
      this.escape = options.interpolation && options.interpolation.escape || utils.escape;
    }
    if (!options.interpolation) options.interpolation = { escapeValue: true };

    var iOpts = options.interpolation;

    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;

    this.prefix = iOpts.prefix ? utils.regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';
    this.suffix = iOpts.suffix ? utils.regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';

    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';

    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';
    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';

    this.nestingPrefix = iOpts.nestingPrefix ? utils.regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || utils.regexEscape('$t(');
    this.nestingSuffix = iOpts.nestingSuffix ? utils.regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || utils.regexEscape(')');

    // the regexp
    this.resetRegExp();
  };

  Interpolator.prototype.reset = function reset() {
    if (this.options) this.init(this.options);
  };

  Interpolator.prototype.resetRegExp = function resetRegExp() {
    // the regexp
    var regexpStr = this.prefix + '(.+?)' + this.suffix;
    this.regexp = new RegExp(regexpStr, 'g');

    var regexpUnescapeStr = this.prefix + this.unescapePrefix + '(.+?)' + this.unescapeSuffix + this.suffix;
    this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');

    var nestingRegexpStr = this.nestingPrefix + '(.+?)' + this.nestingSuffix;
    this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');
  };

  Interpolator.prototype.interpolate = function interpolate(str, data, lng) {
    var _this = this;

    var match = void 0,
        value = void 0;

    function regexSafe(val) {
      return val.replace(/\$/g, '$$$$');
    }

    var handleFormat = function handleFormat(key) {
      if (key.indexOf(_this.formatSeparator) < 0) return utils.getPath(data, key);

      var p = key.split(_this.formatSeparator);
      var k = p.shift().trim();
      var f = p.join(_this.formatSeparator).trim();

      return _this.format(utils.getPath(data, k), f, lng);
    };

    this.resetRegExp();

    // unescape if has unescapePrefix/Suffix
    while (match = this.regexpUnescape.exec(str)) {
      var _value = handleFormat(match[1].trim());
      str = str.replace(match[0], _value);
      this.regexpUnescape.lastIndex = 0;
    }

    // regular escape on demand
    while (match = this.regexp.exec(str)) {
      value = handleFormat(match[1].trim());
      if (typeof value !== 'string') value = utils.makeString(value);
      if (!value) {
        this.logger.warn('missed to pass in variable ' + match[1] + ' for interpolating ' + str);
        value = '';
      }
      value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);
      str = str.replace(match[0], value);
      this.regexp.lastIndex = 0;
    }
    return str;
  };

  Interpolator.prototype.nest = function nest(str, fc) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    var match = void 0,
        value = void 0;

    var clonedOptions = _extends({}, options);
    clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup

    function regexSafe(val) {
      return val.replace(/\$/g, '$$$$');
    }

    // if value is something like "myKey": "lorem $(anotherKey, { "count": {{aValueInOptions}} })"
    function handleHasOptions(key) {
      if (key.indexOf(',') < 0) return key;

      var p = key.split(',');
      key = p.shift();
      var optionsString = p.join(',');
      optionsString = this.interpolate(optionsString, clonedOptions);
      optionsString = optionsString.replace(/'/g, '"');

      try {
        clonedOptions = JSON.parse(optionsString);
      } catch (e) {
        this.logger.error('failed parsing options string in nesting for key ' + key, e);
      }

      return key;
    }

    // regular escape on demand
    while (match = this.nestingRegexp.exec(str)) {
      value = fc(handleHasOptions.call(this, match[1].trim()), clonedOptions);
      if (typeof value !== 'string') value = utils.makeString(value);
      if (!value) {
        this.logger.warn('missed to pass in variable ' + match[1] + ' for interpolating ' + str);
        value = '';
      }
      // Nested keys should not be escaped by default #854
      // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);
      str = str.replace(match[0], value);
      this.regexp.lastIndex = 0;
    }
    return str;
  };

  return Interpolator;
}();

exports.default = Interpolator;
});

define('i18next/BackendConnector',['require','exports','module','./utils','./logger','./EventEmitter'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _EventEmitter2 = require('./EventEmitter');

var _EventEmitter3 = _interopRequireDefault(_EventEmitter2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function remove(arr, what) {
  var found = arr.indexOf(what);

  while (found !== -1) {
    arr.splice(found, 1);
    found = arr.indexOf(what);
  }
}

var Connector = function (_EventEmitter) {
  _inherits(Connector, _EventEmitter);

  function Connector(backend, store, services) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    _classCallCheck(this, Connector);

    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

    _this.backend = backend;
    _this.store = store;
    _this.services = services;
    _this.options = options;
    _this.logger = _logger2.default.create('backendConnector');

    _this.state = {};
    _this.queue = [];

    _this.backend && _this.backend.init && _this.backend.init(services, options.backend, options);
    return _this;
  }

  Connector.prototype.queueLoad = function queueLoad(languages, namespaces, callback) {
    var _this2 = this;

    // find what needs to be loaded
    var toLoad = [],
        pending = [],
        toLoadLanguages = [],
        toLoadNamespaces = [];

    languages.forEach(function (lng) {
      var hasAllNamespaces = true;

      namespaces.forEach(function (ns) {
        var name = lng + '|' + ns;

        if (_this2.store.hasResourceBundle(lng, ns)) {
          _this2.state[name] = 2; // loaded
        } else if (_this2.state[name] < 0) {
          // nothing to do for err
        } else if (_this2.state[name] === 1) {
          if (pending.indexOf(name) < 0) pending.push(name);
        } else {
          _this2.state[name] = 1; // pending

          hasAllNamespaces = false;

          if (pending.indexOf(name) < 0) pending.push(name);
          if (toLoad.indexOf(name) < 0) toLoad.push(name);
          if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);
        }
      });

      if (!hasAllNamespaces) toLoadLanguages.push(lng);
    });

    if (toLoad.length || pending.length) {
      this.queue.push({
        pending: pending,
        loaded: {},
        errors: [],
        callback: callback
      });
    }

    return {
      toLoad: toLoad,
      pending: pending,
      toLoadLanguages: toLoadLanguages,
      toLoadNamespaces: toLoadNamespaces
    };
  };

  Connector.prototype.loaded = function loaded(name, err, data) {
    var _this3 = this;

    var _name$split = name.split('|'),
        _name$split2 = _slicedToArray(_name$split, 2),
        lng = _name$split2[0],
        ns = _name$split2[1];

    if (err) this.emit('failedLoading', lng, ns, err);

    if (data) {
      this.store.addResourceBundle(lng, ns, data);
    }

    // set loaded
    this.state[name] = err ? -1 : 2;
    // callback if ready
    this.queue.forEach(function (q) {
      utils.pushPath(q.loaded, [lng], ns);
      remove(q.pending, name);

      if (err) q.errors.push(err);

      if (q.pending.length === 0 && !q.done) {
        _this3.emit('loaded', q.loaded);
        q.errors.length ? q.callback(q.errors) : q.callback();
        q.done = true;
      }
    });

    // remove done load requests
    this.queue = this.queue.filter(function (q) {
      return !q.done;
    });
  };

  Connector.prototype.read = function read(lng, ns, fcName, tried, wait, callback) {
    var _this4 = this;

    if (!tried) tried = 0;
    if (!wait) wait = 250;

    if (!lng.length) return callback(null, {}); // noting to load

    this.backend[fcName](lng, ns, function (err, data) {
      if (err && data /* = retryFlag */ && tried < 5) {
        setTimeout(function () {
          _this4.read.call(_this4, lng, ns, fcName, ++tried, wait * 2, callback);
        }, wait);
        return;
      }
      callback(err, data);
    });
  };

  Connector.prototype.load = function load(languages, namespaces, callback) {
    var _this5 = this;

    if (!this.backend) {
      this.logger.warn('No backend was added via i18next.use. Will not load resources.');
      return callback && callback();
    }
    var options = _extends({}, this.backend.options, this.options.backend);

    if (typeof languages === 'string') languages = this.services.languageUtils.toResolveHierarchy(languages);
    if (typeof namespaces === 'string') namespaces = [namespaces];

    var toLoad = this.queueLoad(languages, namespaces, callback);
    if (!toLoad.toLoad.length) {
      if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now
      return; // pendings will trigger callback
    }

    // load with multi-load
    if (options.allowMultiLoading && this.backend.readMulti) {
      this.read(toLoad.toLoadLanguages, toLoad.toLoadNamespaces, 'readMulti', null, null, function (err, data) {
        if (err) _this5.logger.warn('loading namespaces ' + toLoad.toLoadNamespaces.join(', ') + ' for languages ' + toLoad.toLoadLanguages.join(', ') + ' via multiloading failed', err);
        if (!err && data) _this5.logger.log('loaded namespaces ' + toLoad.toLoadNamespaces.join(', ') + ' for languages ' + toLoad.toLoadLanguages.join(', ') + ' via multiloading', data);

        toLoad.toLoad.forEach(function (name) {
          var _name$split3 = name.split('|'),
              _name$split4 = _slicedToArray(_name$split3, 2),
              l = _name$split4[0],
              n = _name$split4[1];

          var bundle = utils.getPath(data, [l, n]);
          if (bundle) {
            _this5.loaded(name, err, bundle);
          } else {
            var _err = 'loading namespace ' + n + ' for language ' + l + ' via multiloading failed';
            _this5.loaded(name, _err);
            _this5.logger.error(_err);
          }
        });
      });
    }

    // load one by one
    else {
        (function () {
          var readOne = function readOne(name) {
            var _this6 = this;

            var _name$split5 = name.split('|'),
                _name$split6 = _slicedToArray(_name$split5, 2),
                lng = _name$split6[0],
                ns = _name$split6[1];

            this.read(lng, ns, 'read', null, null, function (err, data) {
              if (err) _this6.logger.warn('loading namespace ' + ns + ' for language ' + lng + ' failed', err);
              if (!err && data) _this6.logger.log('loaded namespace ' + ns + ' for language ' + lng, data);

              _this6.loaded(name, err, data);
            });
          };

          ;

          toLoad.toLoad.forEach(function (name) {
            readOne.call(_this5, name);
          });
        })();
      }
  };

  Connector.prototype.reload = function reload(languages, namespaces) {
    var _this7 = this;

    if (!this.backend) {
      this.logger.warn('No backend was added via i18next.use. Will not load resources.');
    }
    var options = _extends({}, this.backend.options, this.options.backend);

    if (typeof languages === 'string') languages = this.services.languageUtils.toResolveHierarchy(languages);
    if (typeof namespaces === 'string') namespaces = [namespaces];

    // load with multi-load
    if (options.allowMultiLoading && this.backend.readMulti) {
      this.read(languages, namespaces, 'readMulti', null, null, function (err, data) {
        if (err) _this7.logger.warn('reloading namespaces ' + namespaces.join(', ') + ' for languages ' + languages.join(', ') + ' via multiloading failed', err);
        if (!err && data) _this7.logger.log('reloaded namespaces ' + namespaces.join(', ') + ' for languages ' + languages.join(', ') + ' via multiloading', data);

        languages.forEach(function (l) {
          namespaces.forEach(function (n) {
            var bundle = utils.getPath(data, [l, n]);
            if (bundle) {
              _this7.loaded(l + '|' + n, err, bundle);
            } else {
              var _err2 = 'reloading namespace ' + n + ' for language ' + l + ' via multiloading failed';
              _this7.loaded(l + '|' + n, _err2);
              _this7.logger.error(_err2);
            }
          });
        });
      });
    }

    // load one by one
    else {
        (function () {
          var readOne = function readOne(name) {
            var _this8 = this;

            var _name$split7 = name.split('|'),
                _name$split8 = _slicedToArray(_name$split7, 2),
                lng = _name$split8[0],
                ns = _name$split8[1];

            this.read(lng, ns, 'read', null, null, function (err, data) {
              if (err) _this8.logger.warn('reloading namespace ' + ns + ' for language ' + lng + ' failed', err);
              if (!err && data) _this8.logger.log('reloaded namespace ' + ns + ' for language ' + lng, data);

              _this8.loaded(name, err, data);
            });
          };

          ;

          languages.forEach(function (l) {
            namespaces.forEach(function (n) {
              readOne.call(_this7, l + '|' + n);
            });
          });
        })();
      }
  };

  Connector.prototype.saveMissing = function saveMissing(languages, namespace, key, fallbackValue) {
    if (this.backend && this.backend.create) this.backend.create(languages, namespace, key, fallbackValue);

    // write to store to avoid resending
    if (!languages || !languages[0]) return;
    this.store.addResource(languages[0], namespace, key, fallbackValue);
  };

  return Connector;
}(_EventEmitter3.default);

exports.default = Connector;
});

define('i18next/CacheConnector',['require','exports','module','./utils','./logger','./EventEmitter'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = require('./utils');

var utils = _interopRequireWildcard(_utils);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _EventEmitter2 = require('./EventEmitter');

var _EventEmitter3 = _interopRequireDefault(_EventEmitter2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Connector = function (_EventEmitter) {
  _inherits(Connector, _EventEmitter);

  function Connector(cache, store, services) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    _classCallCheck(this, Connector);

    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

    _this.cache = cache;
    _this.store = store;
    _this.services = services;
    _this.options = options;
    _this.logger = _logger2.default.create('cacheConnector');

    _this.cache && _this.cache.init && _this.cache.init(services, options.cache, options);
    return _this;
  }

  Connector.prototype.load = function load(languages, namespaces, callback) {
    var _this2 = this;

    if (!this.cache) return callback && callback();
    var options = _extends({}, this.cache.options, this.options.cache);

    if (typeof languages === 'string') languages = this.services.languageUtils.toResolveHierarchy(languages);
    if (typeof namespaces === 'string') namespaces = [namespaces];

    if (options.enabled) {
      this.cache.load(languages, function (err, data) {
        if (err) _this2.logger.error('loading languages ' + languages.join(', ') + ' from cache failed', err);
        if (data) {
          for (var l in data) {
            for (var n in data[l]) {
              if (n === 'i18nStamp') continue;
              var bundle = data[l][n];
              if (bundle) _this2.store.addResourceBundle(l, n, bundle);
            }
          }
        }
        if (callback) callback();
      });
    } else {
      if (callback) callback();
    }
  };

  Connector.prototype.save = function save() {
    if (this.cache && this.options.cache && this.options.cache.enabled) this.cache.save(this.store.data);
  };

  return Connector;
}(_EventEmitter3.default);

exports.default = Connector;
});

define('i18next/defaults',['require','exports','module'],function (require, exports, module) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;
exports.transformOptions = transformOptions;
function get() {
  return {
    debug: false,
    initImmediate: true,

    ns: ['translation'],
    defaultNS: ['translation'],
    fallbackLng: ['dev'],
    fallbackNS: false, // string or array of namespaces

    whitelist: false, // array with whitelisted languages
    nonExplicitWhitelist: false,
    load: 'all', // | currentOnly | languageOnly
    preload: false, // array with preload languages

    simplifyPluralSuffix: true,
    keySeparator: '.',
    nsSeparator: ':',
    pluralSeparator: '_',
    contextSeparator: '_',

    saveMissing: false, // enable to send missing values
    saveMissingTo: 'fallback', // 'current' || 'all'
    missingKeyHandler: false, // function(lng, ns, key, fallbackValue) -> override if prefer on handling

    postProcess: false, // string or array of postProcessor names
    returnNull: true, // allows null value as valid translation
    returnEmptyString: true, // allows empty string value as valid translation
    returnObjects: false,
    joinArrays: false, // or string to join array
    returnedObjectHandler: function returnedObjectHandler() {}, // function(key, value, options) triggered if key returns object but returnObjects is set to false
    parseMissingKeyHandler: false, // function(key) parsed a key that was not found in t() before returning
    appendNamespaceToMissingKey: false,
    appendNamespaceToCIMode: false,
    overloadTranslationOptionHandler: function overloadTranslationOptionHandler(args) {
      return { defaultValue: args[1] };
    },

    interpolation: {
      escapeValue: true,
      format: function format(value, _format, lng) {
        return value;
      },
      prefix: '{{',
      suffix: '}}',
      formatSeparator: ',',
      // prefixEscaped: '{{',
      // suffixEscaped: '}}',
      // unescapeSuffix: '',
      unescapePrefix: '-',

      nestingPrefix: '$t(',
      nestingSuffix: ')',
      // nestingPrefixEscaped: '$t(',
      // nestingSuffixEscaped: ')',
      defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data
    }
  };
}

function transformOptions(options) {
  // create namespace object if namespace is passed in as string
  if (typeof options.ns === 'string') options.ns = [options.ns];
  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];
  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];

  // extend whitelist with cimode
  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) options.whitelist.push('cimode');

  return options;
}
});

define('aurelia-i18n/relativeTime',['exports', './i18n', './defaultTranslations/relative.time', 'aurelia-event-aggregator'], function (exports, _i18n, _relative, _aureliaEventAggregator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RelativeTime = undefined;

  

  var RelativeTime = exports.RelativeTime = function () {
    RelativeTime.inject = function inject() {
      return [_i18n.I18N, _aureliaEventAggregator.EventAggregator];
    };

    function RelativeTime(i18n, ea) {
      var _this = this;

      

      this.service = i18n;
      this.ea = ea;

      this.service.i18nextReady().then(function () {
        _this.setup();
      });
      this.ea.subscribe('i18n:locale:changed', function (locales) {
        _this.setup(locales);
      });
    }

    RelativeTime.prototype.setup = function setup(locales) {
      var trans = _relative.translations.default || _relative.translations;
      var key = locales && locales.newValue ? locales.newValue : this.service.getLocale();
      var fallbackLng = this.service.i18next.fallbackLng;
      var index = 0;

      if ((index = key.indexOf('-')) >= 0) {
        var baseLocale = key.substring(0, index);

        if (trans[baseLocale]) {
          this.addTranslationResource(baseLocale, trans[baseLocale].translation);
        }
      }

      if (trans[key]) {
        this.addTranslationResource(key, trans[key].translation);
      }
      if (trans[fallbackLng]) {
        this.addTranslationResource(key, trans[fallbackLng].translation);
      }
    };

    RelativeTime.prototype.addTranslationResource = function addTranslationResource(key, translation) {
      var options = this.service.i18next.options;

      if (options.interpolation && options.interpolation.prefix !== '__' || options.interpolation.suffix !== '__') {
        for (var subkey in translation) {
          translation[subkey] = translation[subkey].replace('__count__', (options.interpolation.prefix || '{{') + 'count' + (options.interpolation.suffix || '}}'));
        }
      }

      this.service.i18next.addResources(key, options.defaultNS, translation);
    };

    RelativeTime.prototype.getRelativeTime = function getRelativeTime(time) {
      var now = new Date();
      var diff = now.getTime() - time.getTime();

      var timeDiff = this.getTimeDiffDescription(diff, 'year', 31104000000);
      if (!timeDiff) {
        timeDiff = this.getTimeDiffDescription(diff, 'month', 2592000000);
        if (!timeDiff) {
          timeDiff = this.getTimeDiffDescription(diff, 'day', 86400000);
          if (!timeDiff) {
            timeDiff = this.getTimeDiffDescription(diff, 'hour', 3600000);
            if (!timeDiff) {
              timeDiff = this.getTimeDiffDescription(diff, 'minute', 60000);
              if (!timeDiff) {
                timeDiff = this.getTimeDiffDescription(diff, 'second', 1000);
                if (!timeDiff) {
                  timeDiff = this.service.tr('now');
                }
              }
            }
          }
        }
      }

      return timeDiff;
    };

    RelativeTime.prototype.getTimeDiffDescription = function getTimeDiffDescription(diff, unit, timeDivisor) {
      var unitAmount = (diff / timeDivisor).toFixed(0);
      if (unitAmount > 0) {
        return this.service.tr(unit, { count: parseInt(unitAmount, 10), context: 'ago' });
      } else if (unitAmount < 0) {
        var abs = Math.abs(unitAmount);
        return this.service.tr(unit, { count: abs, context: 'in' });
      }

      return null;
    };

    return RelativeTime;
  }();
});
define('aurelia-i18n/defaultTranslations/relative.time',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var translations = exports.translations = {
    ar: {
      translation: {
        'now': 'الآن',
        'second_ago': 'منذ __count__ ثانية',
        'second_ago_plural': 'منذ __count__ ثواني',
        'second_in': 'في __count__ ثانية',
        'second_in_plural': 'في __count__ ثواني',
        'minute_ago': 'منذ __count__ دقيقة',
        'minute_ago_plural': 'منذ __count__ دقائق',
        'minute_in': 'في __count__ دقيقة',
        'minute_in_plural': 'في __count__ دقائق',
        'hour_ago': 'منذ __count__ ساعة',
        'hour_ago_plural': 'منذ __count__ ساعات',
        'hour_in': 'في __count__ ساعة',
        'hour_in_plural': 'في __count__ ساعات',
        'day_ago': 'منذ __count__ يوم',
        'day_ago_plural': 'منذ __count__ أيام',
        'day_in': 'في __count__ يوم',
        'day_in_plural': 'في __count__ أيام'
      }
    },
    en: {
      translation: {
        'now': 'just now',
        'second_ago': '__count__ second ago',
        'second_ago_plural': '__count__ seconds ago',
        'second_in': 'in __count__ second',
        'second_in_plural': 'in __count__ seconds',
        'minute_ago': '__count__ minute ago',
        'minute_ago_plural': '__count__ minutes ago',
        'minute_in': 'in __count__ minute',
        'minute_in_plural': 'in __count__ minutes',
        'hour_ago': '__count__ hour ago',
        'hour_ago_plural': '__count__ hours ago',
        'hour_in': 'in __count__ hour',
        'hour_in_plural': 'in __count__ hours',
        'day_ago': '__count__ day ago',
        'day_ago_plural': '__count__ days ago',
        'day_in': 'in __count__ day',
        'day_in_plural': 'in __count__ days',
        'month_ago': '__count__ month ago',
        'month_ago_plural': '__count__ months ago',
        'month_in': 'in __count__ month',
        'month_in_plural': 'in __count__ months',
        'year_ago': '__count__ year ago',
        'year_ago_plural': '__count__ years ago',
        'year_in': 'in __count__ year',
        'year_in_plural': 'in __count__ years'
      }
    },
    it: {
      translation: {
        'now': 'adesso',
        'second_ago': '__count__ secondo fa',
        'second_ago_plural': '__count__ secondi fa',
        'second_in': 'in __count__ secondo',
        'second_in_plural': 'in __count__ secondi',
        'minute_ago': '__count__ minuto fa',
        'minute_ago_plural': '__count__ minuti fa',
        'minute_in': 'in __count__ minuto',
        'minute_in_plural': 'in __count__ minuti',
        'hour_ago': '__count__ ora fa',
        'hour_ago_plural': '__count__ ore fa',
        'hour_in': 'in __count__ ora',
        'hour_in_plural': 'in __count__ ore',
        'day_ago': '__count__ giorno fa',
        'day_ago_plural': '__count__ giorni fa',
        'day_in': 'in __count__ giorno',
        'day_in_plural': 'in __count__ giorni',
        'month_ago': '__count__ mese fa',
        'month_ago_plural': '__count__ mesi fa',
        'month_in': 'in __count__ mese',
        'month_in_plural': 'in __count__ mesi',
        'year_ago': '__count__ anno fa',
        'year_ago_plural': '__count__ anni fa',
        'year_in': 'in __count__ anno',
        'year_in_plural': 'in __count__ anni'
      }
    },
    de: {
      translation: {
        'now': 'jetzt gerade',
        'second_ago': 'vor __count__ Sekunde',
        'second_ago_plural': 'vor __count__ Sekunden',
        'second_in': 'in __count__ Sekunde',
        'second_in_plural': 'in __count__ Sekunden',
        'minute_ago': 'vor __count__ Minute',
        'minute_ago_plural': 'vor __count__ Minuten',
        'minute_in': 'in __count__ Minute',
        'minute_in_plural': 'in __count__ Minuten',
        'hour_ago': 'vor __count__ Stunde',
        'hour_ago_plural': 'vor __count__ Stunden',
        'hour_in': 'in __count__ Stunde',
        'hour_in_plural': 'in __count__ Stunden',
        'day_ago': 'vor __count__ Tag',
        'day_ago_plural': 'vor __count__ Tagen',
        'day_in': 'in __count__ Tag',
        'day_in_plural': 'in __count__ Tagen',
        'month_ago': 'vor __count__ Monat',
        'month_ago_plural': 'vor __count__ Monaten',
        'month_in': 'in __count__ Monat',
        'month_in_plural': 'in __count__ Monaten',
        'year_ago': 'vor __count__ Jahr',
        'year_ago_plural': 'vor __count__ Jahren',
        'year_in': 'in __count__ Jahr',
        'year_in_plural': 'in __count__ Jahren'
      }
    },
    nl: {
      translation: {
        'now': 'zonet',
        'second_ago': '__count__ seconde geleden',
        'second_ago_plural': '__count__ seconden geleden',
        'second_in': 'in __count__ seconde',
        'second_in_plural': 'in __count__ seconden',
        'minute_ago': '__count__ minuut geleden',
        'minute_ago_plural': '__count__ minuten geleden',
        'minute_in': 'in __count__ minuut',
        'minute_in_plural': 'in __count__ minuten',
        'hour_ago': '__count__ uur geleden',
        'hour_ago_plural': '__count__ uren geleden',
        'hour_in': 'in __count__ uur',
        'hour_in_plural': 'in __count__ uren',
        'day_ago': '__count__ dag geleden',
        'day_ago_plural': '__count__ dagen geleden',
        'day_in': 'in __count__ dag',
        'day_in_plural': 'in __count__ dagen',
        'month_ago': '__count__ maand geleden',
        'month_ago_plural': '__count__ maanden geleden',
        'month_in': 'in __count__ maand',
        'month_in_plural': 'in __count__ maanden',
        'year_ago': '__count__ jaar geleden',
        'year_ago_plural': '__count__ jaren geleden',
        'year_in': 'in __count__ jaar',
        'year_in_plural': 'in __count__ jaren'
      }
    },
    fr: {
      translation: {
        'now': 'maintenant',
        'second_ago': '__count__ seconde plus tôt',
        'second_ago_plural': '__count__ secondes plus tôt',
        'second_in': 'en __count__ seconde',
        'second_in_plural': 'en __count__ secondes',
        'minute_ago': '__count__ minute plus tôt',
        'minute_ago_plural': '__count__ minutes plus tôt',
        'minute_in': 'en __count__ minute',
        'minute_in_plural': 'en __count__ minutes',
        'hour_ago': '__count__ heure plus tôt',
        'hour_ago_plural': '__count__ heures plus tôt',
        'hour_in': 'en __count__ heure',
        'hour_in_plural': 'en __count__ heures',
        'day_ago': '__count__ jour plus tôt',
        'day_ago_plural': '__count__ jours plus tôt',
        'day_in': 'en __count__ jour',
        'day_in_plural': 'en __count__ jours'
      }
    },
    th: {
      translation: {
        'now': 'เมื่อกี้',
        'second_ago': '__count__ วินาที ที่ผ่านมา',
        'second_ago_plural': '__count__ วินาที ที่ผ่านมา',
        'second_in': 'อีก __count__ วินาที',
        'second_in_plural': 'อีก __count__ วินาที',
        'minute_ago': '__count__ นาที ที่ผ่านมา',
        'minute_ago_plural': '__count__ นาที ที่ผ่านมา',
        'minute_in': 'อีก __count__ นาที',
        'minute_in_plural': 'อีก __count__ นาที',
        'hour_ago': '__count__ ชั่วโมง ที่ผ่านมา',
        'hour_ago_plural': '__count__ ชั่วโมง ที่ผ่านมา',
        'hour_in': 'อีก __count__ ชั่วโมง',
        'hour_in_plural': 'อีก __count__ ชั่วโมง',
        'day_ago': '__count__ วัน ที่ผ่านมา',
        'day_ago_plural': '__count__ วัน ที่ผ่านมา',
        'day_in': 'อีก __count__ วัน',
        'day_in_plural': 'อีก __count__ วัน'
      }
    },
    sv: {
      translation: {
        'now': 'just nu',
        'second_ago': '__count__ sekund sedan',
        'second_ago_plural': '__count__ sekunder sedan',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minut sedan',
        'minute_ago_plural': '__count__ minuter sedan',
        'minute_in': 'om __count__ minut',
        'minute_in_plural': 'om __count__ minuter',
        'hour_ago': '__count__ timme sedan',
        'hour_ago_plural': '__count__ timmar sedan',
        'hour_in': 'om __count__ timme',
        'hour_in_plural': 'om __count__ timmar',
        'day_ago': '__count__ dag sedan',
        'day_ago_plural': '__count__ dagar sedan',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dagar'
      }
    },
    da: {
      translation: {
        'now': 'lige nu',
        'second_ago': '__count__ sekunder siden',
        'second_ago_plural': '__count__ sekunder siden',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minut siden',
        'minute_ago_plural': '__count__ minutter siden',
        'minute_in': 'om __count__ minut',
        'minute_in_plural': 'om __count__ minutter',
        'hour_ago': '__count__ time siden',
        'hour_ago_plural': '__count__ timer siden',
        'hour_in': 'om __count__ time',
        'hour_in_plural': 'om __count__ timer',
        'day_ago': '__count__ dag siden',
        'day_ago_plural': '__count__ dage siden',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dage'
      }
    },
    no: {
      translation: {
        'now': 'akkurat nå',
        'second_ago': '__count__ sekund siden',
        'second_ago_plural': '__count__ sekunder siden',
        'second_in': 'om __count__ sekund',
        'second_in_plural': 'om __count__ sekunder',
        'minute_ago': '__count__ minutt siden',
        'minute_ago_plural': '__count__ minutter siden',
        'minute_in': 'om __count__ minutt',
        'minute_in_plural': 'om __count__ minutter',
        'hour_ago': '__count__ time siden',
        'hour_ago_plural': '__count__ timer siden',
        'hour_in': 'om __count__ time',
        'hour_in_plural': 'om __count__ timer',
        'day_ago': '__count__ dag siden',
        'day_ago_plural': '__count__ dager siden',
        'day_in': 'om __count__ dag',
        'day_in_plural': 'om __count__ dager'
      }
    },
    jp: {
      translation: {
        'now': 'たった今',
        'second_ago': '__count__ 秒前',
        'second_ago_plural': '__count__ 秒前',
        'second_in': 'あと __count__ 秒',
        'second_in_plural': 'あと __count__ 秒',
        'minute_ago': '__count__ 分前',
        'minute_ago_plural': '__count__ 分前',
        'minute_in': 'あと __count__ 分',
        'minute_in_plural': 'あと __count__ 分',
        'hour_ago': '__count__ 時間前',
        'hour_ago_plural': '__count__ 時間前',
        'hour_in': 'あと __count__ 時間',
        'hour_in_plural': 'あと __count__ 時間',
        'day_ago': '__count__ 日間前',
        'day_ago_plural': '__count__ 日間前',
        'day_in': 'あと __count__ 日間',
        'day_in_plural': 'あと __count__ 日間'
      }
    },
    pt: {
      translation: {
        'now': 'neste exato momento',
        'second_ago': '__count__ segundo atrás',
        'second_ago_plural': '__count__ segundos atrás',
        'second_in': 'em __count__ segundo',
        'second_in_plural': 'em __count__ segundos',
        'minute_ago': '__count__ minuto atrás',
        'minute_ago_plural': '__count__ minutos atrás',
        'minute_in': 'em __count__ minuto',
        'minute_in_plural': 'em __count__ minutos',
        'hour_ago': '__count__ hora atrás',
        'hour_ago_plural': '__count__ horas atrás',
        'hour_in': 'em __count__ hora',
        'hour_in_plural': 'em __count__ horas',
        'day_ago': '__count__ dia atrás',
        'day_ago_plural': '__count__ dias atrás',
        'day_in': 'em __count__ dia',
        'day_in_plural': 'em __count__ dias',
        'month_ago': '__count__ mês atrás',
        'month_ago_plural': '__count__ meses atrás',
        'month_in': 'em __count__ mês',
        'month_in_plural': 'em __count__ meses',
        'year_ago': '__count__ ano atrás',
        'year_ago_plural': '__count__ anos atrás',
        'year_in': 'em __count__ ano',
        'year_in_plural': 'em __count__ anos'
      }
    },
    zh: {
      translation: {
        'now': '刚才',
        'second_ago': '__count__ 秒钟前',
        'second_ago_plural': '__count__ 秒钟前',
        'second_in': '__count__ 秒内',
        'second_in_plural': '__count__ 秒内',
        'minute_ago': '__count__ 分钟前',
        'minute_ago_plural': '__count__ 分钟前',
        'minute_in': '__count__ 分钟内',
        'minute_in_plural': '__count__ 分钟内',
        'hour_ago': '__count__ 小时前',
        'hour_ago_plural': '__count__ 小时前',
        'hour_in': '__count__ 小时内',
        'hour_in_plural': '__count__ 小时内',
        'day_ago': '__count__ 天前',
        'day_ago_plural': '__count__ 天前',
        'day_in': '__count__ 天内',
        'day_in_plural': '__count__ 天内',
        'month_ago': '__count__ 月前',
        'month_ago_plural': '__count__ 月前',
        'month_in': '__count__ 月内',
        'month_in_plural': '__count__ 月内',
        'year_ago': '__count__ 年前',
        'year_ago_plural': '__count__ 年前',
        'year_in': '__count__ 年内',
        'year_in_plural': '__count__ 年内'
      }
    },
    'zh-CN': {
      translation: {
        'now': '刚才',
        'second_ago': '__count__ 秒钟前',
        'second_ago_plural': '__count__ 秒钟前',
        'second_in': '__count__ 秒内',
        'second_in_plural': '__count__ 秒内',
        'minute_ago': '__count__ 分钟前',
        'minute_ago_plural': '__count__ 分钟前',
        'minute_in': '__count__ 分钟内',
        'minute_in_plural': '__count__ 分钟内',
        'hour_ago': '__count__ 小时前',
        'hour_ago_plural': '__count__ 小时前',
        'hour_in': '__count__ 小时内',
        'hour_in_plural': '__count__ 小时内',
        'day_ago': '__count__ 天前',
        'day_ago_plural': '__count__ 天前',
        'day_in': '__count__ 天内',
        'day_in_plural': '__count__ 天内',
        'month_ago': '__count__ 月前',
        'month_ago_plural': '__count__ 月前',
        'month_in': '__count__ 月内',
        'month_in_plural': '__count__ 月内',
        'year_ago': '__count__ 年前',
        'year_ago_plural': '__count__ 年前',
        'year_in': '__count__ 年内',
        'year_in_plural': '__count__ 年内'
      }
    },
    'zh-HK': {
      translation: {
        'now': '剛才',
        'second_ago': '__count__ 秒鐘前',
        'second_ago_plural': '__count__ 秒鐘前',
        'second_in': '__count__ 秒內',
        'second_in_plural': '__count__ 秒內',
        'minute_ago': '__count__ 分鐘前',
        'minute_ago_plural': '__count__ 分鐘前',
        'minute_in': '__count__ 分鐘內',
        'minute_in_plural': '__count__ 分鐘內',
        'hour_ago': '__count__ 小時前',
        'hour_ago_plural': '__count__ 小時前',
        'hour_in': '__count__ 小時內',
        'hour_in_plural': '__count__ 小時內',
        'day_ago': '__count__ 天前',
        'day_ago_plural': '__count__ 天前',
        'day_in': '__count__ 天內',
        'day_in_plural': '__count__ 天內',
        'month_ago': '__count__ 月前',
        'month_ago_plural': '__count__ 月前',
        'month_in': '__count__ 月內',
        'month_in_plural': '__count__ 月內',
        'year_ago': '__count__ 年前',
        'year_ago_plural': '__count__ 年前',
        'year_in': '__count__ 年內',
        'year_in_plural': '__count__ 年內'
      }
    },
    'zh-TW': {
      translation: {
        'now': '剛才',
        'second_ago': '__count__ 秒鐘前',
        'second_ago_plural': '__count__ 秒鐘前',
        'second_in': '__count__ 秒內',
        'second_in_plural': '__count__ 秒內',
        'minute_ago': '__count__ 分鐘前',
        'minute_ago_plural': '__count__ 分鐘前',
        'minute_in': '__count__ 分鐘內',
        'minute_in_plural': '__count__ 分鐘內',
        'hour_ago': '__count__ 小時前',
        'hour_ago_plural': '__count__ 小時前',
        'hour_in': '__count__ 小時內',
        'hour_in_plural': '__count__ 小時內',
        'day_ago': '__count__ 天前',
        'day_ago_plural': '__count__ 天前',
        'day_in': '__count__ 天內',
        'day_in_plural': '__count__ 天內',
        'month_ago': '__count__ 月前',
        'month_ago_plural': '__count__ 月前',
        'month_in': '__count__ 月內',
        'month_in_plural': '__count__ 月內',
        'year_ago': '__count__ 年前',
        'year_ago_plural': '__count__ 年前',
        'year_in': '__count__ 年內',
        'year_in_plural': '__count__ 年內'
      }
    }
  };
});
define('aurelia-i18n/df',['exports', 'aurelia-logging', './i18n', 'aurelia-templating-resources', 'aurelia-binding', './utils'], function (exports, _aureliaLogging, _i18n, _aureliaTemplatingResources, _aureliaBinding, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DfBindingBehavior = exports.DfValueConverter = undefined;

  var LogManager = _interopRequireWildcard(_aureliaLogging);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  

  var DfValueConverter = exports.DfValueConverter = function () {
    DfValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };

    function DfValueConverter(i18n) {
      

      this.service = i18n;
    }

    DfValueConverter.prototype.toView = function toView(value, dfOrOptions, locale, df) {
      if (value === null || typeof value === 'undefined' || typeof value === 'string' && value.trim() === '') {
        return value;
      }

      if (dfOrOptions && typeof dfOrOptions.format === 'function') {
        return dfOrOptions.format(value);
      } else if (df) {
        var i18nLogger = LogManager.getLogger('i18n');
        i18nLogger.warn('This ValueConverter signature is depcrecated and will be removed in future releases. Please use the signature [dfOrOptions, locale]');
      } else {
        df = this.service.df(dfOrOptions, locale || this.service.getLocale());
      }

      if (typeof value === 'string' && isNaN(value) && !(0, _utils.isInteger)(value)) {
        value = new Date(value);
      }

      return df.format(value);
    };

    return DfValueConverter;
  }();

  var DfBindingBehavior = exports.DfBindingBehavior = function () {
    DfBindingBehavior.inject = function inject() {
      return [_aureliaTemplatingResources.SignalBindingBehavior];
    };

    function DfBindingBehavior(signalBindingBehavior) {
      

      this.signalBindingBehavior = signalBindingBehavior;
    }

    DfBindingBehavior.prototype.bind = function bind(binding, source) {
      this.signalBindingBehavior.bind(binding, source, 'aurelia-translation-signal');

      var sourceExpression = binding.sourceExpression;

      if (sourceExpression.rewritten) {
        return;
      }
      sourceExpression.rewritten = true;

      var expression = sourceExpression.expression;
      sourceExpression.expression = new _aureliaBinding.ValueConverter(expression, 'df', sourceExpression.args, [expression].concat(sourceExpression.args));
    };

    DfBindingBehavior.prototype.unbind = function unbind(binding, source) {
      this.signalBindingBehavior.unbind(binding, source);
    };

    return DfBindingBehavior;
  }();
});
define('aurelia-i18n/utils',['exports', 'aurelia-dependency-injection'], function (exports, _aureliaDependencyInjection) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LazyOptional = exports.assignObjectToKeys = exports.isInteger = exports.extend = undefined;

  

  var _dec, _class;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
  };

  var extend = exports.extend = function extend(destination, source) {
    for (var property in source) {
      destination[property] = source[property];
    }

    return destination;
  };

  var isInteger = exports.isInteger = Number.isInteger || function (value) {
    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
  };

  var assignObjectToKeys = exports.assignObjectToKeys = function assignObjectToKeys(root, obj) {
    if (obj === undefined || obj === null) {
      return obj;
    }

    var opts = {};

    Object.keys(obj).map(function (key) {
      if (_typeof(obj[key]) === 'object') {
        extend(opts, assignObjectToKeys(key, obj[key]));
      } else {
        opts[root !== '' ? root + '.' + key : key] = obj[key];
      }
    });

    return opts;
  };

  var LazyOptional = exports.LazyOptional = (_dec = (0, _aureliaDependencyInjection.resolver)(), _dec(_class = function () {
    function LazyOptional(key) {
      

      this.key = key;
    }

    LazyOptional.prototype.get = function get(container) {
      var _this = this;

      return function () {
        if (container.hasResolver(_this.key, false)) {
          return container.get(_this.key);
        }
        return null;
      };
    };

    LazyOptional.of = function of(key) {
      return new LazyOptional(key);
    };

    return LazyOptional;
  }()) || _class);
});
define('aurelia-i18n/nf',['exports', 'aurelia-logging', './i18n', 'aurelia-templating-resources', 'aurelia-binding'], function (exports, _aureliaLogging, _i18n, _aureliaTemplatingResources, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NfBindingBehavior = exports.NfValueConverter = undefined;

  var LogManager = _interopRequireWildcard(_aureliaLogging);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  

  var NfValueConverter = exports.NfValueConverter = function () {
    NfValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };

    function NfValueConverter(i18n) {
      

      this.service = i18n;
    }

    NfValueConverter.prototype.toView = function toView(value, nfOrOptions, locale, nf) {
      if (value === null || typeof value === 'undefined' || typeof value === 'string' && value.trim() === '') {
        return value;
      }

      if (nfOrOptions && typeof nfOrOptions.format === 'function') {
        return nfOrOptions.format(value);
      } else if (nf) {
        var i18nLogger = LogManager.getLogger('i18n');
        i18nLogger.warn('This ValueConverter signature is depcrecated and will be removed in future releases. Please use the signature [nfOrOptions, locale]');
      } else {
        nf = this.service.nf(nfOrOptions, locale || this.service.getLocale());
      }

      return nf.format(value);
    };

    return NfValueConverter;
  }();

  var NfBindingBehavior = exports.NfBindingBehavior = function () {
    NfBindingBehavior.inject = function inject() {
      return [_aureliaTemplatingResources.SignalBindingBehavior];
    };

    function NfBindingBehavior(signalBindingBehavior) {
      

      this.signalBindingBehavior = signalBindingBehavior;
    }

    NfBindingBehavior.prototype.bind = function bind(binding, source) {
      this.signalBindingBehavior.bind(binding, source, 'aurelia-translation-signal');

      var sourceExpression = binding.sourceExpression;

      if (sourceExpression.rewritten) {
        return;
      }
      sourceExpression.rewritten = true;

      var expression = sourceExpression.expression;
      sourceExpression.expression = new _aureliaBinding.ValueConverter(expression, 'nf', sourceExpression.args, [expression].concat(sourceExpression.args));
    };

    NfBindingBehavior.prototype.unbind = function unbind(binding, source) {
      this.signalBindingBehavior.unbind(binding, source);
    };

    return NfBindingBehavior;
  }();
});
define('aurelia-i18n/rt',['exports', './relativeTime', 'aurelia-templating-resources', 'aurelia-binding'], function (exports, _relativeTime, _aureliaTemplatingResources, _aureliaBinding) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RtBindingBehavior = exports.RtValueConverter = undefined;

  

  var RtValueConverter = exports.RtValueConverter = function () {
    RtValueConverter.inject = function inject() {
      return [_relativeTime.RelativeTime];
    };

    function RtValueConverter(relativeTime) {
      

      this.service = relativeTime;
    }

    RtValueConverter.prototype.toView = function toView(value) {
      if (value === null || typeof value === 'undefined' || typeof value === 'string' && value.trim() === '') {
        return value;
      }

      if (typeof value === 'string' && isNaN(value) && !Number.isInteger(value)) {
        value = new Date(value);
      }

      return this.service.getRelativeTime(value);
    };

    return RtValueConverter;
  }();

  var RtBindingBehavior = exports.RtBindingBehavior = function () {
    RtBindingBehavior.inject = function inject() {
      return [_aureliaTemplatingResources.SignalBindingBehavior];
    };

    function RtBindingBehavior(signalBindingBehavior) {
      

      this.signalBindingBehavior = signalBindingBehavior;
    }

    RtBindingBehavior.prototype.bind = function bind(binding, source) {
      this.signalBindingBehavior.bind(binding, source, 'aurelia-translation-signal');

      var sourceExpression = binding.sourceExpression;

      if (sourceExpression.rewritten) {
        return;
      }
      sourceExpression.rewritten = true;

      var expression = sourceExpression.expression;
      sourceExpression.expression = new _aureliaBinding.ValueConverter(expression, 'rt', sourceExpression.args, [expression].concat(sourceExpression.args));
    };

    RtBindingBehavior.prototype.unbind = function unbind(binding, source) {
      this.signalBindingBehavior.unbind(binding, source);
    };

    return RtBindingBehavior;
  }();
});
define('aurelia-i18n/t',['exports', './i18n', 'aurelia-event-aggregator', 'aurelia-metadata', 'aurelia-templating', 'aurelia-templating-resources', 'aurelia-binding', './utils'], function (exports, _i18n, _aureliaEventAggregator, _aureliaMetadata, _aureliaTemplating, _aureliaTemplatingResources, _aureliaBinding, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TBindingBehavior = exports.TCustomAttribute = exports.TParamsCustomAttribute = exports.TValueConverter = undefined;

  var _dec, _class, _class2, _temp, _dec2, _class3, _class4, _temp2, _class5, _temp3;

  

  var TValueConverter = exports.TValueConverter = function () {
    TValueConverter.inject = function inject() {
      return [_i18n.I18N];
    };

    function TValueConverter(i18n) {
      

      this.service = i18n;
    }

    TValueConverter.prototype.toView = function toView(value, options) {
      return this.service.tr(value, options);
    };

    return TValueConverter;
  }();

  var TParamsCustomAttribute = exports.TParamsCustomAttribute = (_dec = (0, _aureliaTemplating.customAttribute)('t-params'), _dec(_class = (_temp = _class2 = function () {
    TParamsCustomAttribute.configureAliases = function configureAliases(aliases) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, _aureliaTemplating.HtmlBehaviorResource, TParamsCustomAttribute);
      r.aliases = aliases;
    };

    function TParamsCustomAttribute(element) {
      

      this.element = element;
    }

    TParamsCustomAttribute.prototype.valueChanged = function valueChanged() {};

    return TParamsCustomAttribute;
  }(), _class2.inject = [Element], _temp)) || _class);
  var TCustomAttribute = exports.TCustomAttribute = (_dec2 = (0, _aureliaTemplating.customAttribute)('t'), _dec2(_class3 = (_temp2 = _class4 = function () {
    TCustomAttribute.configureAliases = function configureAliases(aliases) {
      var r = _aureliaMetadata.metadata.getOrCreateOwn(_aureliaMetadata.metadata.resource, _aureliaTemplating.HtmlBehaviorResource, TCustomAttribute);
      r.aliases = aliases;
    };

    function TCustomAttribute(element, i18n, ea, tparams) {
      

      this.element = element;
      this.service = i18n;
      this.ea = ea;
      this.lazyParams = tparams;
    }

    TCustomAttribute.prototype.bind = function bind() {
      var _this = this;

      this.params = this.lazyParams();

      if (this.params) {
        this.params.valueChanged = function (newParams, oldParams) {
          _this.paramsChanged(_this.value, newParams, oldParams);
        };
      }

      var p = this.params !== null ? this.params.value : undefined;
      this.subscription = this.ea.subscribe('i18n:locale:changed', function () {
        _this.service.updateValue(_this.element, _this.value, _this.params !== null ? _this.params.value : undefined);
      });

      this.service.updateValue(this.element, this.value, p);
    };

    TCustomAttribute.prototype.paramsChanged = function paramsChanged(newValue, newParams) {
      this.service.updateValue(this.element, newValue, newParams);
    };

    TCustomAttribute.prototype.valueChanged = function valueChanged(newValue) {
      var p = this.params !== null ? this.params.value : undefined;
      this.service.updateValue(this.element, newValue, p);
    };

    TCustomAttribute.prototype.unbind = function unbind() {
      if (this.subscription) {
        this.subscription.dispose();
      }
    };

    return TCustomAttribute;
  }(), _class4.inject = [Element, _i18n.I18N, _aureliaEventAggregator.EventAggregator, _utils.LazyOptional.of(TParamsCustomAttribute)], _temp2)) || _class3);
  var TBindingBehavior = exports.TBindingBehavior = (_temp3 = _class5 = function () {
    function TBindingBehavior(signalBindingBehavior) {
      

      this.signalBindingBehavior = signalBindingBehavior;
    }

    TBindingBehavior.prototype.bind = function bind(binding, source) {
      this.signalBindingBehavior.bind(binding, source, 'aurelia-translation-signal');

      var sourceExpression = binding.sourceExpression;

      if (sourceExpression.rewritten) {
        return;
      }
      sourceExpression.rewritten = true;

      var expression = sourceExpression.expression;
      sourceExpression.expression = new _aureliaBinding.ValueConverter(expression, 't', sourceExpression.args, [expression].concat(sourceExpression.args));
    };

    TBindingBehavior.prototype.unbind = function unbind(binding, source) {
      this.signalBindingBehavior.unbind(binding, source);
    };

    return TBindingBehavior;
  }(), _class5.inject = [_aureliaTemplatingResources.SignalBindingBehavior], _temp3);
});
define('aurelia-i18n/base-i18n',['exports', './i18n', 'aurelia-event-aggregator'], function (exports, _i18n, _aureliaEventAggregator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BaseI18N = undefined;

  

  var _class, _temp;

  var BaseI18N = exports.BaseI18N = (_temp = _class = function () {
    function BaseI18N(i18n, element, ea) {
      var _this = this;

      

      this.i18n = i18n;
      this.element = element;

      this.__i18nDisposer = ea.subscribe('i18n:locale:changed', function () {
        _this.i18n.updateTranslations(_this.element);
      });
    }

    BaseI18N.prototype.attached = function attached() {
      this.i18n.updateTranslations(this.element);
    };

    BaseI18N.prototype.detached = function detached() {
      this.__i18nDisposer.dispose();
    };

    return BaseI18N;
  }(), _class.inject = [_i18n.I18N, Element, _aureliaEventAggregator.EventAggregator], _temp);
});
define('aurelia-i18n/aurelia-i18n-loader',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  

  var _class, _temp;

  var Backend = exports.Backend = (_temp = _class = function () {
    Backend.with = function _with(loader) {
      this.loader = loader;
      return this;
    };

    function Backend(services) {
      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      

      this.init(services, options);
      this.type = 'backend';
    }

    Backend.prototype.init = function init(services) {
      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      this.services = services;
      this.options = defaults(options, this.options || {}, getDefaults());
    };

    Backend.prototype.readMulti = function readMulti(languages, namespaces, callback) {
      var loadPath = this.options.loadPath;

      if (typeof this.options.loadPath === 'function') {
        loadPath = this.options.loadPath(languages, namespaces);
      }

      var url = this.services.interpolator.interpolate(loadPath, { lng: languages.join('+'), ns: namespaces.join('+') });

      this.loadUrl(url, callback);
    };

    Backend.prototype.read = function read(language, namespace, callback) {
      var loadPath = this.options.loadPath;

      if (typeof this.options.loadPath === 'function') {
        loadPath = this.options.loadPath([language], [namespace]);
      }

      var url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace });

      this.loadUrl(url, callback);
    };

    Backend.prototype.loadUrl = function loadUrl(url, callback) {
      var _this = this;

      this.constructor.loader.loadText(url).then(function (response) {
        var ret = void 0;
        var err = void 0;
        try {
          ret = _this.options.parse(response, url);
        } catch (e) {
          err = 'failed parsing ' + url + ' to json';
        }
        if (err) return callback(err, false);
        callback(null, ret);
      }, function (response) {
        return callback('failed loading ' + url, false);
      });
    };

    Backend.prototype.create = function create(languages, namespace, key, fallbackValue) {};

    return Backend;
  }(), _class.loader = null, _temp);


  Backend.type = 'backend';
  exports.default = Backend;

  var arr = [];
  var each = arr.forEach;
  var slice = arr.slice;

  function getDefaults() {
    return {
      loadPath: '/locales/{{lng}}/{{ns}}.json',
      addPath: 'locales/add/{{lng}}/{{ns}}',
      allowMultiLoading: false,
      parse: JSON.parse
    };
  }

  function defaults(obj) {
    each.call(slice.call(arguments, 1), function (source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] === undefined) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  }
});
define('regenerator-runtime/runtime',['require','exports','module'],function (require, exports, module) {/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

});

define('aurelia-dialog/dialog-configuration',["require", "exports", "./renderer", "./dialog-settings", "./dialog-renderer", "aurelia-pal"], function (require, exports, renderer_1, dialog_settings_1, dialog_renderer_1, aurelia_pal_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var defaultRenderer = dialog_renderer_1.DialogRenderer;
    var resources = {
        'ux-dialog': aurelia_pal_1.PLATFORM.moduleName('./ux-dialog'),
        'ux-dialog-header': aurelia_pal_1.PLATFORM.moduleName('./ux-dialog-header'),
        'ux-dialog-body': aurelia_pal_1.PLATFORM.moduleName('./ux-dialog-body'),
        'ux-dialog-footer': aurelia_pal_1.PLATFORM.moduleName('./ux-dialog-footer'),
        'attach-focus': aurelia_pal_1.PLATFORM.moduleName('./attach-focus')
    };
    // tslint:disable-next-line:max-line-length
    var defaultCSSText = "ux-dialog-container,ux-dialog-overlay{position:fixed;top:0;right:0;bottom:0;left:0}ux-dialog-overlay{opacity:0}ux-dialog-overlay.active{opacity:1}ux-dialog-container{display:block;transition:opacity .2s linear;opacity:0;overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch}ux-dialog-container.active{opacity:1}ux-dialog-container>div{padding:30px}ux-dialog-container>div>div{display:block;min-width:300px;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;margin:auto}ux-dialog-container,ux-dialog-container>div,ux-dialog-container>div>div{outline:0}ux-dialog{display:table;box-shadow:0 5px 15px rgba(0,0,0,.5);border:1px solid rgba(0,0,0,.2);border-radius:5px;padding:3px;min-width:300px;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;margin:auto;border-image-source:initial;border-image-slice:initial;border-image-width:initial;border-image-outset:initial;border-image-repeat:initial;background:#fff}ux-dialog>ux-dialog-header{display:block;padding:16px;border-bottom:1px solid #e5e5e5}ux-dialog>ux-dialog-header>button{float:right;border:none;display:block;width:32px;height:32px;background:0 0;font-size:22px;line-height:16px;margin:-14px -16px 0 0;padding:0;cursor:pointer}ux-dialog>ux-dialog-body{display:block;padding:16px}ux-dialog>ux-dialog-footer{display:block;padding:6px;border-top:1px solid #e5e5e5;text-align:right}ux-dialog>ux-dialog-footer button{color:#333;background-color:#fff;padding:6px 12px;font-size:14px;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid #ccc;border-radius:4px;margin:5px 0 5px 5px}ux-dialog>ux-dialog-footer button:disabled{cursor:default;opacity:.45}ux-dialog>ux-dialog-footer button:hover:enabled{color:#333;background-color:#e6e6e6;border-color:#adadad}.ux-dialog-open{overflow:hidden}";
    /**
     * A configuration builder for the dialog plugin.
     */
    var DialogConfiguration = (function () {
        function DialogConfiguration(frameworkConfiguration, applySetter) {
            var _this = this;
            this.resources = [];
            this.fwConfig = frameworkConfiguration;
            this.settings = this.fwConfig.container.get(dialog_settings_1.DefaultDialogSettings);
            applySetter(function () { return _this._apply(); });
        }
        DialogConfiguration.prototype._apply = function () {
            var _this = this;
            this.fwConfig.transient(renderer_1.Renderer, this.renderer);
            this.resources.forEach(function (resourceName) { return _this.fwConfig.globalResources(resources[resourceName]); });
            if (this.cssText) {
                aurelia_pal_1.DOM.injectStyles(this.cssText);
            }
        };
        /**
         * Selects the Aurelia conventional defaults for the dialog plugin.
         * @return This instance.
         */
        DialogConfiguration.prototype.useDefaults = function () {
            return this.useRenderer(defaultRenderer)
                .useCSS(defaultCSSText)
                .useStandardResources();
        };
        /**
         * Exports the standard set of dialog behaviors to Aurelia's global resources.
         * @return This instance.
         */
        DialogConfiguration.prototype.useStandardResources = function () {
            return this.useResource('ux-dialog')
                .useResource('ux-dialog-header')
                .useResource('ux-dialog-body')
                .useResource('ux-dialog-footer')
                .useResource('attach-focus');
        };
        /**
         * Exports the chosen dialog element or view to Aurelia's global resources.
         * @param resourceName The name of the dialog resource to export.
         * @return This instance.
         */
        DialogConfiguration.prototype.useResource = function (resourceName) {
            this.resources.push(resourceName);
            return this;
        };
        /**
         * Configures the plugin to use a specific dialog renderer.
         * @param renderer A type that implements the Renderer interface.
         * @param settings Global settings for the renderer.
         * @return This instance.
         */
        DialogConfiguration.prototype.useRenderer = function (renderer, settings) {
            this.renderer = renderer;
            if (settings) {
                Object.assign(this.settings, settings);
            }
            return this;
        };
        /**
         * Configures the plugin to use specific css.
         * @param cssText The css to use in place of the default styles.
         * @return This instance.
         */
        DialogConfiguration.prototype.useCSS = function (cssText) {
            this.cssText = cssText;
            return this;
        };
        return DialogConfiguration;
    }());
    exports.DialogConfiguration = DialogConfiguration;
});

define('aurelia-dialog/renderer',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * An abstract base class for implementors of the basic Renderer API.
     */
    var Renderer = (function () {
        function Renderer() {
        }
        /**
         * Gets an anchor for the ViewSlot to insert a view into.
         * @returns A DOM element.
         */
        Renderer.prototype.getDialogContainer = function () {
            throw new Error('DialogRenderer must implement getDialogContainer().');
        };
        /**
         * Displays the dialog.
         * @returns Promise A promise that resolves when the dialog has been displayed.
         */
        Renderer.prototype.showDialog = function (dialogController) {
            throw new Error('DialogRenderer must implement showDialog().');
        };
        /**
         * Hides the dialog.
         * @returns Promise A promise that resolves when the dialog has been hidden.
         */
        Renderer.prototype.hideDialog = function (dialogController) {
            throw new Error('DialogRenderer must implement hideDialog().');
        };
        return Renderer;
    }());
    exports.Renderer = Renderer;
});

define('aurelia-dialog/dialog-settings',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * @internal
     */
    var DefaultDialogSettings = (function () {
        function DefaultDialogSettings() {
            this.lock = true;
            this.startingZIndex = 1000;
            this.centerHorizontalOnly = false;
            this.rejectOnCancel = false;
            this.ignoreTransitions = false;
        }
        return DefaultDialogSettings;
    }());
    exports.DefaultDialogSettings = DefaultDialogSettings;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/dialog-renderer',["require", "exports", "aurelia-pal", "aurelia-dependency-injection"], function (require, exports, aurelia_pal_1, aurelia_dependency_injection_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var containerTagName = 'ux-dialog-container';
    var overlayTagName = 'ux-dialog-overlay';
    exports.transitionEvent = (function () {
        var transition;
        return function () {
            if (transition) {
                return transition;
            }
            var el = aurelia_pal_1.DOM.createElement('fakeelement');
            var transitions = {
                transition: 'transitionend',
                OTransition: 'oTransitionEnd',
                MozTransition: 'transitionend',
                WebkitTransition: 'webkitTransitionEnd'
            };
            for (var t in transitions) {
                if (el.style[t] !== undefined) {
                    transition = transitions[t];
                    return transition;
                }
            }
            return '';
        };
    })();
    exports.hasTransition = (function () {
        var unprefixedName = 'transitionDuration';
        var el = aurelia_pal_1.DOM.createElement('fakeelement');
        var prefixedNames = ['webkitTransitionDuration', 'oTransitionDuration'];
        var transitionDurationName;
        if (unprefixedName in el.style) {
            transitionDurationName = unprefixedName;
        }
        else {
            transitionDurationName = prefixedNames.find(function (prefixed) { return (prefixed in el.style); });
        }
        return function (element) {
            return !!transitionDurationName && !!(aurelia_pal_1.DOM.getComputedStyle(element)[transitionDurationName]
                .split(',')
                .find(function (duration) { return !!parseFloat(duration); }));
        };
    })();
    var body = aurelia_pal_1.DOM.querySelectorAll('body')[0];
    function getActionKey(e) {
        if ((e.code || e.key) === 'Escape' || e.keyCode === 27) {
            return 'Escape';
        }
        if ((e.code || e.key) === 'Enter' || e.keyCode === 13) {
            return 'Enter';
        }
        return undefined;
    }
    var DialogRenderer = DialogRenderer_1 = (function () {
        function DialogRenderer() {
        }
        DialogRenderer.keyboardEventHandler = function (e) {
            var key = getActionKey(e);
            if (!key) {
                return;
            }
            var top = DialogRenderer_1.dialogControllers[DialogRenderer_1.dialogControllers.length - 1];
            if (!top || !top.settings.keyboard) {
                return;
            }
            var keyboard = top.settings.keyboard;
            if (key === 'Escape'
                && (keyboard === true || keyboard === key || (Array.isArray(keyboard) && keyboard.indexOf(key) > -1))) {
                top.cancel();
            }
            else if (key === 'Enter' && (keyboard === key || (Array.isArray(keyboard) && keyboard.indexOf(key) > -1))) {
                top.ok();
            }
        };
        DialogRenderer.trackController = function (dialogController) {
            if (!DialogRenderer_1.dialogControllers.length) {
                aurelia_pal_1.DOM.addEventListener('keyup', DialogRenderer_1.keyboardEventHandler, false);
            }
            DialogRenderer_1.dialogControllers.push(dialogController);
        };
        DialogRenderer.untrackController = function (dialogController) {
            var i = DialogRenderer_1.dialogControllers.indexOf(dialogController);
            if (i !== -1) {
                DialogRenderer_1.dialogControllers.splice(i, 1);
            }
            if (!DialogRenderer_1.dialogControllers.length) {
                aurelia_pal_1.DOM.removeEventListener('keyup', DialogRenderer_1.keyboardEventHandler, false);
            }
        };
        DialogRenderer.prototype.getOwnElements = function (parent, selector) {
            var elements = parent.querySelectorAll(selector);
            var own = [];
            for (var i = 0; i < elements.length; i++) {
                if (elements[i].parentElement === parent) {
                    own.push(elements[i]);
                }
            }
            return own;
        };
        DialogRenderer.prototype.attach = function (dialogController) {
            var spacingWrapper = aurelia_pal_1.DOM.createElement('div'); // TODO: check if redundant
            spacingWrapper.appendChild(this.anchor);
            this.dialogContainer = aurelia_pal_1.DOM.createElement(containerTagName);
            this.dialogContainer.appendChild(spacingWrapper);
            this.dialogOverlay = aurelia_pal_1.DOM.createElement(overlayTagName);
            var zIndex = typeof dialogController.settings.startingZIndex === 'number'
                ? dialogController.settings.startingZIndex + ''
                : null;
            this.dialogOverlay.style.zIndex = zIndex;
            this.dialogContainer.style.zIndex = zIndex;
            var lastContainer = this.getOwnElements(this.host, containerTagName).pop();
            if (lastContainer && lastContainer.parentElement) {
                this.host.insertBefore(this.dialogContainer, lastContainer.nextSibling);
                this.host.insertBefore(this.dialogOverlay, lastContainer.nextSibling);
            }
            else {
                this.host.insertBefore(this.dialogContainer, this.host.firstChild);
                this.host.insertBefore(this.dialogOverlay, this.host.firstChild);
            }
            dialogController.controller.attached();
            this.host.classList.add('ux-dialog-open');
        };
        DialogRenderer.prototype.detach = function (dialogController) {
            this.host.removeChild(this.dialogOverlay);
            this.host.removeChild(this.dialogContainer);
            dialogController.controller.detached();
            if (!DialogRenderer_1.dialogControllers.length) {
                this.host.classList.remove('ux-dialog-open');
            }
        };
        DialogRenderer.prototype.setAsActive = function () {
            this.dialogOverlay.classList.add('active');
            this.dialogContainer.classList.add('active');
        };
        DialogRenderer.prototype.setAsInactive = function () {
            this.dialogOverlay.classList.remove('active');
            this.dialogContainer.classList.remove('active');
        };
        DialogRenderer.prototype.setupClickHandling = function (dialogController) {
            this.stopPropagation = function (e) { e._aureliaDialogHostClicked = true; };
            this.closeDialogClick = function (e) {
                if (dialogController.settings.overlayDismiss && !e._aureliaDialogHostClicked) {
                    dialogController.cancel();
                }
            };
            this.dialogContainer.addEventListener('click', this.closeDialogClick);
            this.anchor.addEventListener('click', this.stopPropagation);
        };
        DialogRenderer.prototype.clearClickHandling = function () {
            this.dialogContainer.removeEventListener('click', this.closeDialogClick);
            this.anchor.removeEventListener('click', this.stopPropagation);
        };
        DialogRenderer.prototype.centerDialog = function () {
            var child = this.dialogContainer.children[0];
            var vh = Math.max(aurelia_pal_1.DOM.querySelectorAll('html')[0].clientHeight, window.innerHeight || 0);
            child.style.marginTop = Math.max((vh - child.offsetHeight) / 2, 30) + 'px';
            child.style.marginBottom = Math.max((vh - child.offsetHeight) / 2, 30) + 'px';
        };
        DialogRenderer.prototype.awaitTransition = function (setActiveInactive, ignore) {
            var _this = this;
            return new Promise(function (resolve) {
                var renderer = _this;
                var eventName = exports.transitionEvent();
                function onTransitionEnd(e) {
                    if (e.target !== renderer.dialogContainer) {
                        return;
                    }
                    renderer.dialogContainer.removeEventListener(eventName, onTransitionEnd);
                    resolve();
                }
                if (ignore || !exports.hasTransition(_this.dialogContainer)) {
                    resolve();
                }
                else {
                    _this.dialogContainer.addEventListener(eventName, onTransitionEnd);
                }
                setActiveInactive();
            });
        };
        DialogRenderer.prototype.getDialogContainer = function () {
            return this.anchor || (this.anchor = aurelia_pal_1.DOM.createElement('div'));
        };
        DialogRenderer.prototype.showDialog = function (dialogController) {
            var _this = this;
            if (dialogController.settings.host) {
                this.host = dialogController.settings.host;
            }
            else {
                this.host = body;
            }
            var settings = dialogController.settings;
            this.attach(dialogController);
            if (typeof settings.position === 'function') {
                settings.position(this.dialogContainer, this.dialogOverlay);
            }
            else if (!settings.centerHorizontalOnly) {
                this.centerDialog();
            }
            DialogRenderer_1.trackController(dialogController);
            this.setupClickHandling(dialogController);
            return this.awaitTransition(function () { return _this.setAsActive(); }, dialogController.settings.ignoreTransitions);
        };
        DialogRenderer.prototype.hideDialog = function (dialogController) {
            var _this = this;
            this.clearClickHandling();
            DialogRenderer_1.untrackController(dialogController);
            return this.awaitTransition(function () { return _this.setAsInactive(); }, dialogController.settings.ignoreTransitions)
                .then(function () { _this.detach(dialogController); });
        };
        return DialogRenderer;
    }());
    DialogRenderer.dialogControllers = [];
    DialogRenderer = DialogRenderer_1 = __decorate([
        aurelia_dependency_injection_1.transient()
    ], DialogRenderer);
    exports.DialogRenderer = DialogRenderer;
    var DialogRenderer_1;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/ux-dialog',["require", "exports", "aurelia-templating"], function (require, exports, aurelia_templating_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UxDialog = (function () {
        function UxDialog() {
        }
        return UxDialog;
    }());
    UxDialog = __decorate([
        aurelia_templating_1.customElement('ux-dialog'),
        aurelia_templating_1.inlineView("\n  <template>\n    <slot></slot>\n  </template>\n")
    ], UxDialog);
    exports.UxDialog = UxDialog;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/ux-dialog-header',["require", "exports", "aurelia-templating", "./dialog-controller"], function (require, exports, aurelia_templating_1, dialog_controller_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UxDialogHeader = (function () {
        function UxDialogHeader(controller) {
            this.controller = controller;
        }
        UxDialogHeader.prototype.bind = function () {
            if (typeof this.showCloseButton !== 'boolean') {
                this.showCloseButton = !this.controller.settings.lock;
            }
        };
        return UxDialogHeader;
    }());
    /**
     * @internal
     */
    UxDialogHeader.inject = [dialog_controller_1.DialogController];
    __decorate([
        aurelia_templating_1.bindable()
    ], UxDialogHeader.prototype, "showCloseButton", void 0);
    UxDialogHeader = __decorate([
        aurelia_templating_1.customElement('ux-dialog-header'),
        aurelia_templating_1.inlineView("\n  <template>\n    <button\n      type=\"button\"\n      class=\"dialog-close\"\n      aria-label=\"Close\"\n      if.bind=\"showCloseButton\"\n      click.trigger=\"controller.cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n\n    <div class=\"dialog-header-content\">\n      <slot></slot>\n    </div>\n  </template>\n")
    ], UxDialogHeader);
    exports.UxDialogHeader = UxDialogHeader;
});

define('aurelia-dialog/dialog-controller',["require", "exports", "./renderer", "./lifecycle", "./dialog-cancel-error"], function (require, exports, renderer_1, lifecycle_1, dialog_cancel_error_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * A controller object for a Dialog instance.
     */
    var DialogController = (function () {
        /**
         * Creates an instance of DialogController.
         */
        function DialogController(renderer, settings, resolve, reject) {
            this.resolve = resolve;
            this.reject = reject;
            this.settings = settings;
            this.renderer = renderer;
        }
        /**
         * @internal
         */
        DialogController.prototype.releaseResources = function () {
            var _this = this;
            return lifecycle_1.invokeLifecycle(this.controller.viewModel || {}, 'deactivate')
                .then(function () { return _this.renderer.hideDialog(_this); })
                .then(function () { _this.controller.unbind(); });
        };
        /**
         * @internal
         */
        DialogController.prototype.cancelOperation = function () {
            if (!this.settings.rejectOnCancel) {
                return { wasCancelled: true };
            }
            throw dialog_cancel_error_1.createDialogCancelError();
        };
        /**
         * Closes the dialog with a successful output.
         * @param output The returned success output.
         */
        DialogController.prototype.ok = function (output) {
            return this.close(true, output);
        };
        /**
         * Closes the dialog with a cancel output.
         * @param output The returned cancel output.
         */
        DialogController.prototype.cancel = function (output) {
            return this.close(false, output);
        };
        /**
         * Closes the dialog with an error result.
         * @param message An error message.
         * @returns Promise An empty promise object.
         */
        DialogController.prototype.error = function (message) {
            var _this = this;
            return this.releaseResources().then(function () { _this.reject(message); });
        };
        /**
         * Closes the dialog.
         * @param ok Whether or not the user input signified success.
         * @param output The specified output.
         * @returns Promise An empty promise object.
         */
        DialogController.prototype.close = function (ok, output) {
            var _this = this;
            if (this.closePromise) {
                return this.closePromise;
            }
            return this.closePromise = lifecycle_1.invokeLifecycle(this.controller.viewModel || {}, 'canDeactivate').catch(function (reason) {
                _this.closePromise = undefined;
                return Promise.reject(reason);
            }).then(function (canDeactivate) {
                if (!canDeactivate) {
                    _this.closePromise = undefined; // we are done, do not block consecutive calls
                    return _this.cancelOperation();
                }
                return _this.releaseResources().then(function () {
                    if (!_this.settings.rejectOnCancel || ok) {
                        _this.resolve({ wasCancelled: !ok, output: output });
                    }
                    else {
                        _this.reject(dialog_cancel_error_1.createDialogCancelError(output));
                    }
                    return { wasCancelled: false };
                }).catch(function (reason) {
                    _this.closePromise = undefined;
                    return Promise.reject(reason);
                });
            });
        };
        return DialogController;
    }());
    /**
     * @internal
     */
    DialogController.inject = [renderer_1.Renderer];
    exports.DialogController = DialogController;
});

define('aurelia-dialog/lifecycle',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Call a lifecycle method on a viewModel if it exists.
     * @function
     * @param instance The viewModel instance.
     * @param name The lifecycle method name.
     * @param model The model to pass to the lifecycle method.
     * @returns Promise The result of the lifecycle method.
     */
    function invokeLifecycle(instance, name, model) {
        if (typeof instance[name] === 'function') {
            return new Promise(function (resolve) {
                resolve(instance[name](model));
            }).then(function (result) {
                if (result !== null && result !== undefined) {
                    return result;
                }
                return true;
            });
        }
        return Promise.resolve(true);
    }
    exports.invokeLifecycle = invokeLifecycle;
});

define('aurelia-dialog/dialog-cancel-error',["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * @internal
     */
    function createDialogCancelError(output) {
        var error = new Error('Operation cancelled.');
        error.wasCancelled = true;
        error.output = output;
        return error;
    }
    exports.createDialogCancelError = createDialogCancelError;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/ux-dialog-body',["require", "exports", "aurelia-templating"], function (require, exports, aurelia_templating_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UxDialogBody = (function () {
        function UxDialogBody() {
        }
        return UxDialogBody;
    }());
    UxDialogBody = __decorate([
        aurelia_templating_1.customElement('ux-dialog-body'),
        aurelia_templating_1.inlineView("\n  <template>\n    <slot></slot>\n  </template>\n")
    ], UxDialogBody);
    exports.UxDialogBody = UxDialogBody;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/ux-dialog-footer',["require", "exports", "aurelia-templating", "./dialog-controller"], function (require, exports, aurelia_templating_1, dialog_controller_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * View-model for footer of Dialog.
     */
    var UxDialogFooter = UxDialogFooter_1 = (function () {
        function UxDialogFooter(controller) {
            this.controller = controller;
            this.buttons = [];
            this.useDefaultButtons = false;
        }
        UxDialogFooter.isCancelButton = function (value) {
            return value === 'Cancel';
        };
        UxDialogFooter.prototype.close = function (buttonValue) {
            if (UxDialogFooter_1.isCancelButton(buttonValue)) {
                this.controller.cancel(buttonValue);
            }
            else {
                this.controller.ok(buttonValue);
            }
        };
        UxDialogFooter.prototype.useDefaultButtonsChanged = function (newValue) {
            if (newValue) {
                this.buttons = ['Cancel', 'Ok'];
            }
        };
        return UxDialogFooter;
    }());
    /**
     * @internal
     */
    UxDialogFooter.inject = [dialog_controller_1.DialogController];
    __decorate([
        aurelia_templating_1.bindable
    ], UxDialogFooter.prototype, "buttons", void 0);
    __decorate([
        aurelia_templating_1.bindable
    ], UxDialogFooter.prototype, "useDefaultButtons", void 0);
    UxDialogFooter = UxDialogFooter_1 = __decorate([
        aurelia_templating_1.customElement('ux-dialog-footer'),
        aurelia_templating_1.inlineView("\n  <template>\n    <slot></slot>\n    <template if.bind=\"buttons.length > 0\">\n      <button type=\"button\"\n        class=\"btn btn-default\"\n        repeat.for=\"button of buttons\"\n        click.trigger=\"close(button)\">\n        ${button}\n      </button>\n    </template>\n  </template>\n")
    ], UxDialogFooter);
    exports.UxDialogFooter = UxDialogFooter;
    var UxDialogFooter_1;
});

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define('aurelia-dialog/attach-focus',["require", "exports", "aurelia-templating", "aurelia-pal"], function (require, exports, aurelia_templating_1, aurelia_pal_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AttachFocus = (function () {
        function AttachFocus(element) {
            this.element = element;
            this.value = true;
        }
        AttachFocus.prototype.attached = function () {
            if (this.value && this.value !== 'false') {
                this.element.focus();
            }
        };
        AttachFocus.prototype.valueChanged = function (newValue) {
            this.value = newValue;
        };
        return AttachFocus;
    }());
    /**
     * @internal
     */
    AttachFocus.inject = [aurelia_pal_1.DOM.Element];
    AttachFocus = __decorate([
        aurelia_templating_1.customAttribute('attach-focus')
    ], AttachFocus);
    exports.AttachFocus = AttachFocus;
});

define('aurelia-dialog/dialog-service',["require", "exports", "aurelia-dependency-injection", "aurelia-metadata", "aurelia-templating", "./dialog-settings", "./dialog-cancel-error", "./lifecycle", "./dialog-controller"], function (require, exports, aurelia_dependency_injection_1, aurelia_metadata_1, aurelia_templating_1, dialog_settings_1, dialog_cancel_error_1, lifecycle_1, dialog_controller_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /* tslint:enable:max-line-length */
    function whenClosed(onfulfilled, onrejected) {
        return this.then(function (r) { return r.wasCancelled ? r : r.closeResult; }).then(onfulfilled, onrejected);
    }
    function asDialogOpenPromise(promise) {
        promise.whenClosed = whenClosed;
        return promise;
    }
    /**
     * A service allowing for the creation of dialogs.
     */
    var DialogService = (function () {
        function DialogService(container, compositionEngine, defaultSettings) {
            /**
             * The current dialog controllers
             */
            this.controllers = [];
            /**
             * Is there an open dialog
             */
            this.hasOpenDialog = false;
            this.hasActiveDialog = false;
            this.container = container;
            this.compositionEngine = compositionEngine;
            this.defaultSettings = defaultSettings;
        }
        DialogService.prototype.validateSettings = function (settings) {
            if (!settings.viewModel && !settings.view) {
                throw new Error('Invalid Dialog Settings. You must provide "viewModel", "view" or both.');
            }
        };
        // tslint:disable-next-line:max-line-length
        DialogService.prototype.createCompositionContext = function (childContainer, host, settings) {
            return {
                container: childContainer.parent,
                childContainer: childContainer,
                bindingContext: null,
                viewResources: null,
                model: settings.model,
                view: settings.view,
                viewModel: settings.viewModel,
                viewSlot: new aurelia_templating_1.ViewSlot(host, true),
                host: host
            };
        };
        DialogService.prototype.ensureViewModel = function (compositionContext) {
            if (typeof compositionContext.viewModel === 'function') {
                compositionContext.viewModel = aurelia_metadata_1.Origin.get(compositionContext.viewModel).moduleId;
            }
            if (typeof compositionContext.viewModel === 'string') {
                return this.compositionEngine.ensureViewModel(compositionContext);
            }
            return Promise.resolve(compositionContext);
        };
        DialogService.prototype._cancelOperation = function (rejectOnCancel) {
            if (!rejectOnCancel) {
                return { wasCancelled: true };
            }
            throw dialog_cancel_error_1.createDialogCancelError();
        };
        // tslint:disable-next-line:max-line-length
        DialogService.prototype.composeAndShowDialog = function (compositionContext, dialogController) {
            var _this = this;
            if (!compositionContext.viewModel) {
                // provide access to the dialog controller for view only dialogs
                compositionContext.bindingContext = { controller: dialogController };
            }
            return this.compositionEngine.compose(compositionContext).then(function (controller) {
                dialogController.controller = controller;
                return dialogController.renderer.showDialog(dialogController).then(function () {
                    _this.controllers.push(dialogController);
                    _this.hasActiveDialog = _this.hasOpenDialog = !!_this.controllers.length;
                }, function (reason) {
                    if (controller.viewModel) {
                        lifecycle_1.invokeLifecycle(controller.viewModel, 'deactivate');
                    }
                    return Promise.reject(reason);
                });
            });
        };
        /**
         * @internal
         */
        DialogService.prototype.createSettings = function (settings) {
            settings = Object.assign({}, this.defaultSettings, settings);
            if (typeof settings.keyboard !== 'boolean' && !settings.keyboard) {
                settings.keyboard = !settings.lock;
            }
            if (typeof settings.overlayDismiss !== 'boolean') {
                settings.overlayDismiss = !settings.lock;
            }
            Object.defineProperty(settings, 'rejectOnCancel', {
                writable: false,
                configurable: true,
                enumerable: true
            });
            this.validateSettings(settings);
            return settings;
        };
        DialogService.prototype.open = function (settings) {
            var _this = this;
            if (settings === void 0) { settings = {}; }
            // tslint:enable:max-line-length
            settings = this.createSettings(settings);
            var childContainer = settings.childContainer || this.container.createChild();
            var resolveCloseResult;
            var rejectCloseResult;
            var closeResult = new Promise(function (resolve, reject) {
                resolveCloseResult = resolve;
                rejectCloseResult = reject;
            });
            var dialogController = childContainer.invoke(dialog_controller_1.DialogController, [settings, resolveCloseResult, rejectCloseResult]);
            childContainer.registerInstance(dialog_controller_1.DialogController, dialogController);
            closeResult.then(function () {
                removeController(_this, dialogController);
            }, function () {
                removeController(_this, dialogController);
            });
            var compositionContext = this.createCompositionContext(childContainer, dialogController.renderer.getDialogContainer(), dialogController.settings);
            var openResult = this.ensureViewModel(compositionContext).then(function (compositionContext) {
                if (!compositionContext.viewModel) {
                    return true;
                }
                return lifecycle_1.invokeLifecycle(compositionContext.viewModel, 'canActivate', dialogController.settings.model);
            }).then(function (canActivate) {
                if (!canActivate) {
                    return _this._cancelOperation(dialogController.settings.rejectOnCancel);
                }
                // if activation granted, compose and show
                return _this.composeAndShowDialog(compositionContext, dialogController)
                    .then(function () { return ({ controller: dialogController, closeResult: closeResult, wasCancelled: false }); });
            });
            return asDialogOpenPromise(openResult);
        };
        /**
         * Closes all open dialogs at the time of invocation.
         * @return Promise<DialogController[]> All controllers whose close operation was cancelled.
         */
        DialogService.prototype.closeAll = function () {
            return Promise.all(this.controllers.slice(0).map(function (controller) {
                if (!controller.settings.rejectOnCancel) {
                    return controller.cancel().then(function (result) {
                        if (result.wasCancelled) {
                            return controller;
                        }
                        return;
                    });
                }
                return controller.cancel().then(function () { return; }).catch(function (reason) {
                    if (reason.wasCancelled) {
                        return controller;
                    }
                    return Promise.reject(reason);
                });
            })).then(function (unclosedControllers) { return unclosedControllers.filter(function (unclosed) { return !!unclosed; }); });
        };
        return DialogService;
    }());
    /**
     * @internal
     */
    DialogService.inject = [aurelia_dependency_injection_1.Container, aurelia_templating_1.CompositionEngine, dialog_settings_1.DefaultDialogSettings];
    exports.DialogService = DialogService;
    function removeController(service, dialogController) {
        var i = service.controllers.indexOf(dialogController);
        if (i !== -1) {
            service.controllers.splice(i, 1);
            service.hasActiveDialog = service.hasOpenDialog = !!service.controllers.length;
        }
    }
});

/*!
 * Chart.js
 * http://chartjs.org/
 * Version: 2.6.0
 *
 * Copyright 2017 Nick Downie
 * Released under the MIT license
 * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define('node_modules/chart.js/dist/Chart.js',[],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
/* MIT license */
var colorNames = require(6);

module.exports = {
   getRgba: getRgba,
   getHsla: getHsla,
   getRgb: getRgb,
   getHsl: getHsl,
   getHwb: getHwb,
   getAlpha: getAlpha,

   hexString: hexString,
   rgbString: rgbString,
   rgbaString: rgbaString,
   percentString: percentString,
   percentaString: percentaString,
   hslString: hslString,
   hslaString: hslaString,
   hwbString: hwbString,
   keyword: keyword
}

function getRgba(string) {
   if (!string) {
      return;
   }
   var abbr =  /^#([a-fA-F0-9]{3})$/,
       hex =  /^#([a-fA-F0-9]{6})$/,
       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
       keyword = /(\w+)/;

   var rgb = [0, 0, 0],
       a = 1,
       match = string.match(abbr);
   if (match) {
      match = match[1];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i] + match[i], 16);
      }
   }
   else if (match = string.match(hex)) {
      match = match[1];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
      }
   }
   else if (match = string.match(rgba)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i + 1]);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(per)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(keyword)) {
      if (match[1] == "transparent") {
         return [0, 0, 0, 0];
      }
      rgb = colorNames[match[1]];
      if (!rgb) {
         return;
      }
   }

   for (var i = 0; i < rgb.length; i++) {
      rgb[i] = scale(rgb[i], 0, 255);
   }
   if (!a && a != 0) {
      a = 1;
   }
   else {
      a = scale(a, 0, 1);
   }
   rgb[3] = a;
   return rgb;
}

function getHsla(string) {
   if (!string) {
      return;
   }
   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hsl);
   if (match) {
      var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          s = scale(parseFloat(match[2]), 0, 100),
          l = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, s, l, a];
   }
}

function getHwb(string) {
   if (!string) {
      return;
   }
   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hwb);
   if (match) {
    var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          w = scale(parseFloat(match[2]), 0, 100),
          b = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, w, b, a];
   }
}

function getRgb(string) {
   var rgba = getRgba(string);
   return rgba && rgba.slice(0, 3);
}

function getHsl(string) {
  var hsla = getHsla(string);
  return hsla && hsla.slice(0, 3);
}

function getAlpha(string) {
   var vals = getRgba(string);
   if (vals) {
      return vals[3];
   }
   else if (vals = getHsla(string)) {
      return vals[3];
   }
   else if (vals = getHwb(string)) {
      return vals[3];
   }
}

// generators
function hexString(rgb) {
   return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])
              + hexDouble(rgb[2]);
}

function rgbString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return rgbaString(rgba, alpha);
   }
   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
}

function rgbaString(rgba, alpha) {
   if (alpha === undefined) {
      alpha = (rgba[3] !== undefined ? rgba[3] : 1);
   }
   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
           + ", " + alpha + ")";
}

function percentString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return percentaString(rgba, alpha);
   }
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);

   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
}

function percentaString(rgba, alpha) {
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);
   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
}

function hslString(hsla, alpha) {
   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
      return hslaString(hsla, alpha);
   }
   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
}

function hslaString(hsla, alpha) {
   if (alpha === undefined) {
      alpha = (hsla[3] !== undefined ? hsla[3] : 1);
   }
   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
           + alpha + ")";
}

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
function hwbString(hwb, alpha) {
   if (alpha === undefined) {
      alpha = (hwb[3] !== undefined ? hwb[3] : 1);
   }
   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
           + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
}

function keyword(rgb) {
  return reverseNames[rgb.slice(0, 3)];
}

// helpers
function scale(num, min, max) {
   return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
  var str = num.toString(16).toUpperCase();
  return (str.length < 2) ? "0" + str : str;
}


//create a list of reverse color names
var reverseNames = {};
for (var name in colorNames) {
   reverseNames[colorNames[name]] = name;
}

},{"6":6}],3:[function(require,module,exports){
/* MIT license */
var convert = require(5);
var string = require(2);

var Color = function (obj) {
	if (obj instanceof Color) {
		return obj;
	}
	if (!(this instanceof Color)) {
		return new Color(obj);
	}

	this.valid = false;
	this.values = {
		rgb: [0, 0, 0],
		hsl: [0, 0, 0],
		hsv: [0, 0, 0],
		hwb: [0, 0, 0],
		cmyk: [0, 0, 0, 0],
		alpha: 1
	};

	// parse Color() argument
	var vals;
	if (typeof obj === 'string') {
		vals = string.getRgba(obj);
		if (vals) {
			this.setValues('rgb', vals);
		} else if (vals = string.getHsla(obj)) {
			this.setValues('hsl', vals);
		} else if (vals = string.getHwb(obj)) {
			this.setValues('hwb', vals);
		}
	} else if (typeof obj === 'object') {
		vals = obj;
		if (vals.r !== undefined || vals.red !== undefined) {
			this.setValues('rgb', vals);
		} else if (vals.l !== undefined || vals.lightness !== undefined) {
			this.setValues('hsl', vals);
		} else if (vals.v !== undefined || vals.value !== undefined) {
			this.setValues('hsv', vals);
		} else if (vals.w !== undefined || vals.whiteness !== undefined) {
			this.setValues('hwb', vals);
		} else if (vals.c !== undefined || vals.cyan !== undefined) {
			this.setValues('cmyk', vals);
		}
	}
};

Color.prototype = {
	isValid: function () {
		return this.valid;
	},
	rgb: function () {
		return this.setSpace('rgb', arguments);
	},
	hsl: function () {
		return this.setSpace('hsl', arguments);
	},
	hsv: function () {
		return this.setSpace('hsv', arguments);
	},
	hwb: function () {
		return this.setSpace('hwb', arguments);
	},
	cmyk: function () {
		return this.setSpace('cmyk', arguments);
	},

	rgbArray: function () {
		return this.values.rgb;
	},
	hslArray: function () {
		return this.values.hsl;
	},
	hsvArray: function () {
		return this.values.hsv;
	},
	hwbArray: function () {
		var values = this.values;
		if (values.alpha !== 1) {
			return values.hwb.concat([values.alpha]);
		}
		return values.hwb;
	},
	cmykArray: function () {
		return this.values.cmyk;
	},
	rgbaArray: function () {
		var values = this.values;
		return values.rgb.concat([values.alpha]);
	},
	hslaArray: function () {
		var values = this.values;
		return values.hsl.concat([values.alpha]);
	},
	alpha: function (val) {
		if (val === undefined) {
			return this.values.alpha;
		}
		this.setValues('alpha', val);
		return this;
	},

	red: function (val) {
		return this.setChannel('rgb', 0, val);
	},
	green: function (val) {
		return this.setChannel('rgb', 1, val);
	},
	blue: function (val) {
		return this.setChannel('rgb', 2, val);
	},
	hue: function (val) {
		if (val) {
			val %= 360;
			val = val < 0 ? 360 + val : val;
		}
		return this.setChannel('hsl', 0, val);
	},
	saturation: function (val) {
		return this.setChannel('hsl', 1, val);
	},
	lightness: function (val) {
		return this.setChannel('hsl', 2, val);
	},
	saturationv: function (val) {
		return this.setChannel('hsv', 1, val);
	},
	whiteness: function (val) {
		return this.setChannel('hwb', 1, val);
	},
	blackness: function (val) {
		return this.setChannel('hwb', 2, val);
	},
	value: function (val) {
		return this.setChannel('hsv', 2, val);
	},
	cyan: function (val) {
		return this.setChannel('cmyk', 0, val);
	},
	magenta: function (val) {
		return this.setChannel('cmyk', 1, val);
	},
	yellow: function (val) {
		return this.setChannel('cmyk', 2, val);
	},
	black: function (val) {
		return this.setChannel('cmyk', 3, val);
	},

	hexString: function () {
		return string.hexString(this.values.rgb);
	},
	rgbString: function () {
		return string.rgbString(this.values.rgb, this.values.alpha);
	},
	rgbaString: function () {
		return string.rgbaString(this.values.rgb, this.values.alpha);
	},
	percentString: function () {
		return string.percentString(this.values.rgb, this.values.alpha);
	},
	hslString: function () {
		return string.hslString(this.values.hsl, this.values.alpha);
	},
	hslaString: function () {
		return string.hslaString(this.values.hsl, this.values.alpha);
	},
	hwbString: function () {
		return string.hwbString(this.values.hwb, this.values.alpha);
	},
	keyword: function () {
		return string.keyword(this.values.rgb, this.values.alpha);
	},

	rgbNumber: function () {
		var rgb = this.values.rgb;
		return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
	},

	luminosity: function () {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.values.rgb;
		var lum = [];
		for (var i = 0; i < rgb.length; i++) {
			var chan = rgb[i] / 255;
			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
		}
		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast: function (color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity();
		var lum2 = color2.luminosity();
		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}
		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level: function (color2) {
		var contrastRatio = this.contrast(color2);
		if (contrastRatio >= 7.1) {
			return 'AAA';
		}

		return (contrastRatio >= 4.5) ? 'AA' : '';
	},

	dark: function () {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.values.rgb;
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq < 128;
	},

	light: function () {
		return !this.dark();
	},

	negate: function () {
		var rgb = [];
		for (var i = 0; i < 3; i++) {
			rgb[i] = 255 - this.values.rgb[i];
		}
		this.setValues('rgb', rgb);
		return this;
	},

	lighten: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] += hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	darken: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] -= hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	saturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] += hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	desaturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] -= hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	whiten: function (ratio) {
		var hwb = this.values.hwb;
		hwb[1] += hwb[1] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	blacken: function (ratio) {
		var hwb = this.values.hwb;
		hwb[2] += hwb[2] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	greyscale: function () {
		var rgb = this.values.rgb;
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		this.setValues('rgb', [val, val, val]);
		return this;
	},

	clearer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha - (alpha * ratio));
		return this;
	},

	opaquer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha + (alpha * ratio));
		return this;
	},

	rotate: function (degrees) {
		var hsl = this.values.hsl;
		var hue = (hsl[0] + degrees) % 360;
		hsl[0] = hue < 0 ? 360 + hue : hue;
		this.setValues('hsl', hsl);
		return this;
	},

	/**
	 * Ported from sass implementation in C
	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
	 */
	mix: function (mixinColor, weight) {
		var color1 = this;
		var color2 = mixinColor;
		var p = weight === undefined ? 0.5 : weight;

		var w = 2 * p - 1;
		var a = color1.alpha() - color2.alpha();

		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
		var w2 = 1 - w1;

		return this
			.rgb(
				w1 * color1.red() + w2 * color2.red(),
				w1 * color1.green() + w2 * color2.green(),
				w1 * color1.blue() + w2 * color2.blue()
			)
			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
	},

	toJSON: function () {
		return this.rgb();
	},

	clone: function () {
		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
		// making the final build way to big to embed in Chart.js. So let's do it manually,
		// assuming that values to clone are 1 dimension arrays containing only numbers,
		// except 'alpha' which is a number.
		var result = new Color();
		var source = this.values;
		var target = result.values;
		var value, type;

		for (var prop in source) {
			if (source.hasOwnProperty(prop)) {
				value = source[prop];
				type = ({}).toString.call(value);
				if (type === '[object Array]') {
					target[prop] = value.slice(0);
				} else if (type === '[object Number]') {
					target[prop] = value;
				} else {
					console.error('unexpected color value:', value);
				}
			}
		}

		return result;
	}
};

Color.prototype.spaces = {
	rgb: ['red', 'green', 'blue'],
	hsl: ['hue', 'saturation', 'lightness'],
	hsv: ['hue', 'saturation', 'value'],
	hwb: ['hue', 'whiteness', 'blackness'],
	cmyk: ['cyan', 'magenta', 'yellow', 'black']
};

Color.prototype.maxes = {
	rgb: [255, 255, 255],
	hsl: [360, 100, 100],
	hsv: [360, 100, 100],
	hwb: [360, 100, 100],
	cmyk: [100, 100, 100, 100]
};

Color.prototype.getValues = function (space) {
	var values = this.values;
	var vals = {};

	for (var i = 0; i < space.length; i++) {
		vals[space.charAt(i)] = values[space][i];
	}

	if (values.alpha !== 1) {
		vals.a = values.alpha;
	}

	// {r: 255, g: 255, b: 255, a: 0.4}
	return vals;
};

Color.prototype.setValues = function (space, vals) {
	var values = this.values;
	var spaces = this.spaces;
	var maxes = this.maxes;
	var alpha = 1;
	var i;

	this.valid = true;

	if (space === 'alpha') {
		alpha = vals;
	} else if (vals.length) {
		// [10, 10, 10]
		values[space] = vals.slice(0, space.length);
		alpha = vals[space.length];
	} else if (vals[space.charAt(0)] !== undefined) {
		// {r: 10, g: 10, b: 10}
		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[space.charAt(i)];
		}

		alpha = vals.a;
	} else if (vals[spaces[space][0]] !== undefined) {
		// {red: 10, green: 10, blue: 10}
		var chans = spaces[space];

		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[chans[i]];
		}

		alpha = vals.alpha;
	}

	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

	if (space === 'alpha') {
		return false;
	}

	var capped;

	// cap values of the space prior converting all values
	for (i = 0; i < space.length; i++) {
		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
		values[space][i] = Math.round(capped);
	}

	// convert to all the other color spaces
	for (var sname in spaces) {
		if (sname !== space) {
			values[sname] = convert[space][sname](values[space]);
		}
	}

	return true;
};

Color.prototype.setSpace = function (space, args) {
	var vals = args[0];

	if (vals === undefined) {
		// color.rgb()
		return this.getValues(space);
	}

	// color.rgb(10, 10, 10)
	if (typeof vals === 'number') {
		vals = Array.prototype.slice.call(args);
	}

	this.setValues(space, vals);
	return this;
};

Color.prototype.setChannel = function (space, index, val) {
	var svalues = this.values[space];
	if (val === undefined) {
		// color.red()
		return svalues[index];
	} else if (val === svalues[index]) {
		// color.red(color.red())
		return this;
	}

	// color.red(100)
	svalues[index] = val;
	this.setValues(space, svalues);

	return this;
};

if (typeof window !== 'undefined') {
	window.Color = Color;
}

module.exports = Color;

},{"2":2,"5":5}],4:[function(require,module,exports){
/* MIT license */

module.exports = {
  rgb2hsl: rgb2hsl,
  rgb2hsv: rgb2hsv,
  rgb2hwb: rgb2hwb,
  rgb2cmyk: rgb2cmyk,
  rgb2keyword: rgb2keyword,
  rgb2xyz: rgb2xyz,
  rgb2lab: rgb2lab,
  rgb2lch: rgb2lch,

  hsl2rgb: hsl2rgb,
  hsl2hsv: hsl2hsv,
  hsl2hwb: hsl2hwb,
  hsl2cmyk: hsl2cmyk,
  hsl2keyword: hsl2keyword,

  hsv2rgb: hsv2rgb,
  hsv2hsl: hsv2hsl,
  hsv2hwb: hsv2hwb,
  hsv2cmyk: hsv2cmyk,
  hsv2keyword: hsv2keyword,

  hwb2rgb: hwb2rgb,
  hwb2hsl: hwb2hsl,
  hwb2hsv: hwb2hsv,
  hwb2cmyk: hwb2cmyk,
  hwb2keyword: hwb2keyword,

  cmyk2rgb: cmyk2rgb,
  cmyk2hsl: cmyk2hsl,
  cmyk2hsv: cmyk2hsv,
  cmyk2hwb: cmyk2hwb,
  cmyk2keyword: cmyk2keyword,

  keyword2rgb: keyword2rgb,
  keyword2hsl: keyword2hsl,
  keyword2hsv: keyword2hsv,
  keyword2hwb: keyword2hwb,
  keyword2cmyk: keyword2cmyk,
  keyword2lab: keyword2lab,
  keyword2xyz: keyword2xyz,

  xyz2rgb: xyz2rgb,
  xyz2lab: xyz2lab,
  xyz2lch: xyz2lch,

  lab2xyz: lab2xyz,
  lab2rgb: lab2rgb,
  lab2lch: lab2lch,

  lch2lab: lch2lab,
  lch2xyz: lch2xyz,
  lch2rgb: lch2rgb
}


function rgb2hsl(rgb) {
  var r = rgb[0]/255,
      g = rgb[1]/255,
      b = rgb[2]/255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, l;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g)/ delta;

  h = Math.min(h * 60, 360);

  if (h < 0)
    h += 360;

  l = (min + max) / 2;

  if (max == min)
    s = 0;
  else if (l <= 0.5)
    s = delta / (max + min);
  else
    s = delta / (2 - max - min);

  return [h, s * 100, l * 100];
}

function rgb2hsv(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, v;

  if (max == 0)
    s = 0;
  else
    s = (delta/max * 1000)/10;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g) / delta;

  h = Math.min(h * 60, 360);

  if (h < 0)
    h += 360;

  v = ((max / 255) * 1000) / 10;

  return [h, s, v];
}

function rgb2hwb(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      h = rgb2hsl(rgb)[0],
      w = 1/255 * Math.min(r, Math.min(g, b)),
      b = 1 - 1/255 * Math.max(r, Math.max(g, b));

  return [h, w * 100, b * 100];
}

function rgb2cmyk(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255,
      c, m, y, k;

  k = Math.min(1 - r, 1 - g, 1 - b);
  c = (1 - r - k) / (1 - k) || 0;
  m = (1 - g - k) / (1 - k) || 0;
  y = (1 - b - k) / (1 - k) || 0;
  return [c * 100, m * 100, y * 100, k * 100];
}

function rgb2keyword(rgb) {
  return reverseKeywords[JSON.stringify(rgb)];
}

function rgb2xyz(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255;

  // assume sRGB
  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

  return [x * 100, y *100, z * 100];
}

function rgb2lab(rgb) {
  var xyz = rgb2xyz(rgb),
        x = xyz[0],
        y = xyz[1],
        z = xyz[2],
        l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function rgb2lch(args) {
  return lab2lch(rgb2lab(args));
}

function hsl2rgb(hsl) {
  var h = hsl[0] / 360,
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      t1, t2, t3, rgb, val;

  if (s == 0) {
    val = l * 255;
    return [val, val, val];
  }

  if (l < 0.5)
    t2 = l * (1 + s);
  else
    t2 = l + s - l * s;
  t1 = 2 * l - t2;

  rgb = [0, 0, 0];
  for (var i = 0; i < 3; i++) {
    t3 = h + 1 / 3 * - (i - 1);
    t3 < 0 && t3++;
    t3 > 1 && t3--;

    if (6 * t3 < 1)
      val = t1 + (t2 - t1) * 6 * t3;
    else if (2 * t3 < 1)
      val = t2;
    else if (3 * t3 < 2)
      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
    else
      val = t1;

    rgb[i] = val * 255;
  }

  return rgb;
}

function hsl2hsv(hsl) {
  var h = hsl[0],
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      sv, v;

  if(l === 0) {
      // no need to do calc on black
      // also avoids divide by 0 error
      return [0, 0, 0];
  }

  l *= 2;
  s *= (l <= 1) ? l : 2 - l;
  v = (l + s) / 2;
  sv = (2 * s) / (l + s);
  return [h, sv * 100, v * 100];
}

function hsl2hwb(args) {
  return rgb2hwb(hsl2rgb(args));
}

function hsl2cmyk(args) {
  return rgb2cmyk(hsl2rgb(args));
}

function hsl2keyword(args) {
  return rgb2keyword(hsl2rgb(args));
}


function hsv2rgb(hsv) {
  var h = hsv[0] / 60,
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      hi = Math.floor(h) % 6;

  var f = h - Math.floor(h),
      p = 255 * v * (1 - s),
      q = 255 * v * (1 - (s * f)),
      t = 255 * v * (1 - (s * (1 - f))),
      v = 255 * v;

  switch(hi) {
    case 0:
      return [v, t, p];
    case 1:
      return [q, v, p];
    case 2:
      return [p, v, t];
    case 3:
      return [p, q, v];
    case 4:
      return [t, p, v];
    case 5:
      return [v, p, q];
  }
}

function hsv2hsl(hsv) {
  var h = hsv[0],
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      sl, l;

  l = (2 - s) * v;
  sl = s * v;
  sl /= (l <= 1) ? l : 2 - l;
  sl = sl || 0;
  l /= 2;
  return [h, sl * 100, l * 100];
}

function hsv2hwb(args) {
  return rgb2hwb(hsv2rgb(args))
}

function hsv2cmyk(args) {
  return rgb2cmyk(hsv2rgb(args));
}

function hsv2keyword(args) {
  return rgb2keyword(hsv2rgb(args));
}

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
function hwb2rgb(hwb) {
  var h = hwb[0] / 360,
      wh = hwb[1] / 100,
      bl = hwb[2] / 100,
      ratio = wh + bl,
      i, v, f, n;

  // wh + bl cant be > 1
  if (ratio > 1) {
    wh /= ratio;
    bl /= ratio;
  }

  i = Math.floor(6 * h);
  v = 1 - bl;
  f = 6 * h - i;
  if ((i & 0x01) != 0) {
    f = 1 - f;
  }
  n = wh + f * (v - wh);  // linear interpolation

  switch (i) {
    default:
    case 6:
    case 0: r = v; g = n; b = wh; break;
    case 1: r = n; g = v; b = wh; break;
    case 2: r = wh; g = v; b = n; break;
    case 3: r = wh; g = n; b = v; break;
    case 4: r = n; g = wh; b = v; break;
    case 5: r = v; g = wh; b = n; break;
  }

  return [r * 255, g * 255, b * 255];
}

function hwb2hsl(args) {
  return rgb2hsl(hwb2rgb(args));
}

function hwb2hsv(args) {
  return rgb2hsv(hwb2rgb(args));
}

function hwb2cmyk(args) {
  return rgb2cmyk(hwb2rgb(args));
}

function hwb2keyword(args) {
  return rgb2keyword(hwb2rgb(args));
}

function cmyk2rgb(cmyk) {
  var c = cmyk[0] / 100,
      m = cmyk[1] / 100,
      y = cmyk[2] / 100,
      k = cmyk[3] / 100,
      r, g, b;

  r = 1 - Math.min(1, c * (1 - k) + k);
  g = 1 - Math.min(1, m * (1 - k) + k);
  b = 1 - Math.min(1, y * (1 - k) + k);
  return [r * 255, g * 255, b * 255];
}

function cmyk2hsl(args) {
  return rgb2hsl(cmyk2rgb(args));
}

function cmyk2hsv(args) {
  return rgb2hsv(cmyk2rgb(args));
}

function cmyk2hwb(args) {
  return rgb2hwb(cmyk2rgb(args));
}

function cmyk2keyword(args) {
  return rgb2keyword(cmyk2rgb(args));
}


function xyz2rgb(xyz) {
  var x = xyz[0] / 100,
      y = xyz[1] / 100,
      z = xyz[2] / 100,
      r, g, b;

  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

  // assume sRGB
  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
    : r = (r * 12.92);

  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
    : g = (g * 12.92);

  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
    : b = (b * 12.92);

  r = Math.min(Math.max(0, r), 1);
  g = Math.min(Math.max(0, g), 1);
  b = Math.min(Math.max(0, b), 1);

  return [r * 255, g * 255, b * 255];
}

function xyz2lab(xyz) {
  var x = xyz[0],
      y = xyz[1],
      z = xyz[2],
      l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function xyz2lch(args) {
  return lab2lch(xyz2lab(args));
}

function lab2xyz(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      x, y, z, y2;

  if (l <= 8) {
    y = (l * 100) / 903.3;
    y2 = (7.787 * (y / 100)) + (16 / 116);
  } else {
    y = 100 * Math.pow((l + 16) / 116, 3);
    y2 = Math.pow(y / 100, 1/3);
  }

  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

  return [x, y, z];
}

function lab2lch(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      hr, h, c;

  hr = Math.atan2(b, a);
  h = hr * 360 / 2 / Math.PI;
  if (h < 0) {
    h += 360;
  }
  c = Math.sqrt(a * a + b * b);
  return [l, c, h];
}

function lab2rgb(args) {
  return xyz2rgb(lab2xyz(args));
}

function lch2lab(lch) {
  var l = lch[0],
      c = lch[1],
      h = lch[2],
      a, b, hr;

  hr = h / 360 * 2 * Math.PI;
  a = c * Math.cos(hr);
  b = c * Math.sin(hr);
  return [l, a, b];
}

function lch2xyz(args) {
  return lab2xyz(lch2lab(args));
}

function lch2rgb(args) {
  return lab2rgb(lch2lab(args));
}

function keyword2rgb(keyword) {
  return cssKeywords[keyword];
}

function keyword2hsl(args) {
  return rgb2hsl(keyword2rgb(args));
}

function keyword2hsv(args) {
  return rgb2hsv(keyword2rgb(args));
}

function keyword2hwb(args) {
  return rgb2hwb(keyword2rgb(args));
}

function keyword2cmyk(args) {
  return rgb2cmyk(keyword2rgb(args));
}

function keyword2lab(args) {
  return rgb2lab(keyword2rgb(args));
}

function keyword2xyz(args) {
  return rgb2xyz(keyword2rgb(args));
}

var cssKeywords = {
  aliceblue:  [240,248,255],
  antiquewhite: [250,235,215],
  aqua: [0,255,255],
  aquamarine: [127,255,212],
  azure:  [240,255,255],
  beige:  [245,245,220],
  bisque: [255,228,196],
  black:  [0,0,0],
  blanchedalmond: [255,235,205],
  blue: [0,0,255],
  blueviolet: [138,43,226],
  brown:  [165,42,42],
  burlywood:  [222,184,135],
  cadetblue:  [95,158,160],
  chartreuse: [127,255,0],
  chocolate:  [210,105,30],
  coral:  [255,127,80],
  cornflowerblue: [100,149,237],
  cornsilk: [255,248,220],
  crimson:  [220,20,60],
  cyan: [0,255,255],
  darkblue: [0,0,139],
  darkcyan: [0,139,139],
  darkgoldenrod:  [184,134,11],
  darkgray: [169,169,169],
  darkgreen:  [0,100,0],
  darkgrey: [169,169,169],
  darkkhaki:  [189,183,107],
  darkmagenta:  [139,0,139],
  darkolivegreen: [85,107,47],
  darkorange: [255,140,0],
  darkorchid: [153,50,204],
  darkred:  [139,0,0],
  darksalmon: [233,150,122],
  darkseagreen: [143,188,143],
  darkslateblue:  [72,61,139],
  darkslategray:  [47,79,79],
  darkslategrey:  [47,79,79],
  darkturquoise:  [0,206,209],
  darkviolet: [148,0,211],
  deeppink: [255,20,147],
  deepskyblue:  [0,191,255],
  dimgray:  [105,105,105],
  dimgrey:  [105,105,105],
  dodgerblue: [30,144,255],
  firebrick:  [178,34,34],
  floralwhite:  [255,250,240],
  forestgreen:  [34,139,34],
  fuchsia:  [255,0,255],
  gainsboro:  [220,220,220],
  ghostwhite: [248,248,255],
  gold: [255,215,0],
  goldenrod:  [218,165,32],
  gray: [128,128,128],
  green:  [0,128,0],
  greenyellow:  [173,255,47],
  grey: [128,128,128],
  honeydew: [240,255,240],
  hotpink:  [255,105,180],
  indianred:  [205,92,92],
  indigo: [75,0,130],
  ivory:  [255,255,240],
  khaki:  [240,230,140],
  lavender: [230,230,250],
  lavenderblush:  [255,240,245],
  lawngreen:  [124,252,0],
  lemonchiffon: [255,250,205],
  lightblue:  [173,216,230],
  lightcoral: [240,128,128],
  lightcyan:  [224,255,255],
  lightgoldenrodyellow: [250,250,210],
  lightgray:  [211,211,211],
  lightgreen: [144,238,144],
  lightgrey:  [211,211,211],
  lightpink:  [255,182,193],
  lightsalmon:  [255,160,122],
  lightseagreen:  [32,178,170],
  lightskyblue: [135,206,250],
  lightslategray: [119,136,153],
  lightslategrey: [119,136,153],
  lightsteelblue: [176,196,222],
  lightyellow:  [255,255,224],
  lime: [0,255,0],
  limegreen:  [50,205,50],
  linen:  [250,240,230],
  magenta:  [255,0,255],
  maroon: [128,0,0],
  mediumaquamarine: [102,205,170],
  mediumblue: [0,0,205],
  mediumorchid: [186,85,211],
  mediumpurple: [147,112,219],
  mediumseagreen: [60,179,113],
  mediumslateblue:  [123,104,238],
  mediumspringgreen:  [0,250,154],
  mediumturquoise:  [72,209,204],
  mediumvioletred:  [199,21,133],
  midnightblue: [25,25,112],
  mintcream:  [245,255,250],
  mistyrose:  [255,228,225],
  moccasin: [255,228,181],
  navajowhite:  [255,222,173],
  navy: [0,0,128],
  oldlace:  [253,245,230],
  olive:  [128,128,0],
  olivedrab:  [107,142,35],
  orange: [255,165,0],
  orangered:  [255,69,0],
  orchid: [218,112,214],
  palegoldenrod:  [238,232,170],
  palegreen:  [152,251,152],
  paleturquoise:  [175,238,238],
  palevioletred:  [219,112,147],
  papayawhip: [255,239,213],
  peachpuff:  [255,218,185],
  peru: [205,133,63],
  pink: [255,192,203],
  plum: [221,160,221],
  powderblue: [176,224,230],
  purple: [128,0,128],
  rebeccapurple: [102, 51, 153],
  red:  [255,0,0],
  rosybrown:  [188,143,143],
  royalblue:  [65,105,225],
  saddlebrown:  [139,69,19],
  salmon: [250,128,114],
  sandybrown: [244,164,96],
  seagreen: [46,139,87],
  seashell: [255,245,238],
  sienna: [160,82,45],
  silver: [192,192,192],
  skyblue:  [135,206,235],
  slateblue:  [106,90,205],
  slategray:  [112,128,144],
  slategrey:  [112,128,144],
  snow: [255,250,250],
  springgreen:  [0,255,127],
  steelblue:  [70,130,180],
  tan:  [210,180,140],
  teal: [0,128,128],
  thistle:  [216,191,216],
  tomato: [255,99,71],
  turquoise:  [64,224,208],
  violet: [238,130,238],
  wheat:  [245,222,179],
  white:  [255,255,255],
  whitesmoke: [245,245,245],
  yellow: [255,255,0],
  yellowgreen:  [154,205,50]
};

var reverseKeywords = {};
for (var key in cssKeywords) {
  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
}

},{}],5:[function(require,module,exports){
var conversions = require(4);

var convert = function() {
   return new Converter();
}

for (var func in conversions) {
  // export Raw versions
  convert[func + "Raw"] =  (function(func) {
    // accept array or plain args
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      return conversions[func](arg);
    }
  })(func);

  var pair = /(\w+)2(\w+)/.exec(func),
      from = pair[1],
      to = pair[2];

  // export rgb2hsl and ["rgb"]["hsl"]
  convert[from] = convert[from] || {};

  convert[from][to] = convert[func] = (function(func) { 
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      
      var val = conversions[func](arg);
      if (typeof val == "string" || val === undefined)
        return val; // keyword

      for (var i = 0; i < val.length; i++)
        val[i] = Math.round(val[i]);
      return val;
    }
  })(func);
}


/* Converter does lazy conversion and caching */
var Converter = function() {
   this.convs = {};
};

/* Either get the values for a space or
  set the values for a space, depending on args */
Converter.prototype.routeSpace = function(space, args) {
   var values = args[0];
   if (values === undefined) {
      // color.rgb()
      return this.getValues(space);
   }
   // color.rgb(10, 10, 10)
   if (typeof values == "number") {
      values = Array.prototype.slice.call(args);        
   }

   return this.setValues(space, values);
};
  
/* Set the values for a space, invalidating cache */
Converter.prototype.setValues = function(space, values) {
   this.space = space;
   this.convs = {};
   this.convs[space] = values;
   return this;
};

/* Get the values for a space. If there's already
  a conversion for the space, fetch it, otherwise
  compute it */
Converter.prototype.getValues = function(space) {
   var vals = this.convs[space];
   if (!vals) {
      var fspace = this.space,
          from = this.convs[fspace];
      vals = convert[fspace][space](from);

      this.convs[space] = vals;
   }
  return vals;
};

["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
   Converter.prototype[space] = function(vals) {
      return this.routeSpace(space, arguments);
   }
});

module.exports = convert;
},{"4":4}],6:[function(require,module,exports){
module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};
},{}],7:[function(require,module,exports){
/**
 * @namespace Chart
 */
var Chart = require(28)();

require(26)(Chart);
require(40)(Chart);
require(22)(Chart);
require(25)(Chart);
require(30)(Chart);
require(21)(Chart);
require(23)(Chart);
require(24)(Chart);
require(29)(Chart);
require(32)(Chart);
require(33)(Chart);
require(31)(Chart);
require(27)(Chart);
require(34)(Chart);

require(35)(Chart);
require(36)(Chart);
require(37)(Chart);
require(38)(Chart);

require(46)(Chart);
require(44)(Chart);
require(45)(Chart);
require(47)(Chart);
require(48)(Chart);
require(49)(Chart);

// Controllers must be loaded after elements
// See Chart.core.datasetController.dataElementType
require(15)(Chart);
require(16)(Chart);
require(17)(Chart);
require(18)(Chart);
require(19)(Chart);
require(20)(Chart);

require(8)(Chart);
require(9)(Chart);
require(10)(Chart);
require(11)(Chart);
require(12)(Chart);
require(13)(Chart);
require(14)(Chart);

// Loading built-it plugins
var plugins = [];

plugins.push(
    require(41)(Chart),
    require(42)(Chart),
    require(43)(Chart)
);

Chart.plugins.register(plugins);

module.exports = Chart;
if (typeof window !== 'undefined') {
	window.Chart = Chart;
}

},{"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18,"19":19,"20":20,"21":21,"22":22,"23":23,"24":24,"25":25,"26":26,"27":27,"28":28,"29":29,"30":30,"31":31,"32":32,"33":33,"34":34,"35":35,"36":36,"37":37,"38":38,"40":40,"41":41,"42":42,"43":43,"44":44,"45":45,"46":46,"47":47,"48":48,"49":49,"8":8,"9":9}],8:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Bar = function(context, config) {
		config.type = 'bar';

		return new Chart(context, config);
	};

};

},{}],9:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Bubble = function(context, config) {
		config.type = 'bubble';
		return new Chart(context, config);
	};

};

},{}],10:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Doughnut = function(context, config) {
		config.type = 'doughnut';

		return new Chart(context, config);
	};

};

},{}],11:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Line = function(context, config) {
		config.type = 'line';

		return new Chart(context, config);
	};

};

},{}],12:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.PolarArea = function(context, config) {
		config.type = 'polarArea';

		return new Chart(context, config);
	};

};

},{}],13:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	Chart.Radar = function(context, config) {
		config.type = 'radar';

		return new Chart(context, config);
	};

};

},{}],14:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var defaultConfig = {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				type: 'linear', // scatter should not use a category axis
				position: 'bottom',
				id: 'x-axis-1' // need an ID so datasets can reference the scale
			}],
			yAxes: [{
				type: 'linear',
				position: 'left',
				id: 'y-axis-1'
			}]
		},

		tooltips: {
			callbacks: {
				title: function() {
					// Title doesn't make sense for scatter since we format the data as a point
					return '';
				},
				label: function(tooltipItem) {
					return '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';
				}
			}
		}
	};

	// Register the default config for this type
	Chart.defaults.scatter = defaultConfig;

	// Scatter charts use line controllers
	Chart.controllers.scatter = Chart.controllers.line;

	Chart.Scatter = function(context, config) {
		config.type = 'scatter';
		return new Chart(context, config);
	};

};

},{}],15:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.bar = {
		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',

				// Specific to Bar Controller
				categoryPercentage: 0.8,
				barPercentage: 0.9,

				// grid line settings
				gridLines: {
					offsetGridLines: true
				}
			}],
			yAxes: [{
				type: 'linear'
			}]
		}
	};

	Chart.controllers.bar = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Rectangle,

		initialize: function() {
			var me = this;
			var meta;

			Chart.DatasetController.prototype.initialize.apply(me, arguments);

			meta = me.getMeta();
			meta.stack = me.getDataset().stack;
			meta.bar = true;
		},

		update: function(reset) {
			var me = this;
			var elements = me.getMeta().data;
			var i, ilen;

			me._ruler = me.getRuler();

			for (i = 0, ilen = elements.length; i < ilen; ++i) {
				me.updateElement(elements[i], i, reset);
			}
		},

		updateElement: function(rectangle, index, reset) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var dataset = me.getDataset();
			var custom = rectangle.custom || {};
			var rectangleOptions = chart.options.elements.rectangle;

			rectangle._xScale = me.getScaleForId(meta.xAxisID);
			rectangle._yScale = me.getScaleForId(meta.yAxisID);
			rectangle._datasetIndex = me.index;
			rectangle._index = index;

			rectangle._model = {
				datasetLabel: dataset.label,
				label: chart.data.labels[index],
				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
				borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
				borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
			};

			me.updateElementGeometry(rectangle, index, reset);

			rectangle.pivot();
		},

		/**
		 * @private
		 */
		updateElementGeometry: function(rectangle, index, reset) {
			var me = this;
			var model = rectangle._model;
			var vscale = me.getValueScale();
			var base = vscale.getBasePixel();
			var horizontal = vscale.isHorizontal();
			var ruler = me._ruler || me.getRuler();
			var vpixels = me.calculateBarValuePixels(me.index, index);
			var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);

			model.horizontal = horizontal;
			model.base = reset? base : vpixels.base;
			model.x = horizontal? reset? base : vpixels.head : ipixels.center;
			model.y = horizontal? ipixels.center : reset? base : vpixels.head;
			model.height = horizontal? ipixels.size : undefined;
			model.width = horizontal? undefined : ipixels.size;
		},

		/**
		 * @private
		 */
		getValueScaleId: function() {
			return this.getMeta().yAxisID;
		},

		/**
		 * @private
		 */
		getIndexScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		getValueScale: function() {
			return this.getScaleForId(this.getValueScaleId());
		},

		/**
		 * @private
		 */
		getIndexScale: function() {
			return this.getScaleForId(this.getIndexScaleId());
		},

		/**
		 * Returns the effective number of stacks based on groups and bar visibility.
		 * @private
		 */
		getStackCount: function(last) {
			var me = this;
			var chart = me.chart;
			var scale = me.getIndexScale();
			var stacked = scale.options.stacked;
			var ilen = last === undefined? chart.data.datasets.length : last + 1;
			var stacks = [];
			var i, meta;

			for (i = 0; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				if (meta.bar && chart.isDatasetVisible(i) &&
					(stacked === false ||
					(stacked === true && stacks.indexOf(meta.stack) === -1) ||
					(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {
					stacks.push(meta.stack);
				}
			}

			return stacks.length;
		},

		/**
		 * Returns the stack index for the given dataset based on groups and bar visibility.
		 * @private
		 */
		getStackIndex: function(datasetIndex) {
			return this.getStackCount(datasetIndex) - 1;
		},

		/**
		 * @private
		 */
		getRuler: function() {
			var me = this;
			var scale = me.getIndexScale();
			var options = scale.options;
			var stackCount = me.getStackCount();
			var fullSize = scale.isHorizontal()? scale.width : scale.height;
			var tickSize = fullSize / scale.ticks.length;
			var categorySize = tickSize * options.categoryPercentage;
			var fullBarSize = categorySize / stackCount;
			var barSize = fullBarSize * options.barPercentage;

			barSize = Math.min(
				helpers.getValueOrDefault(options.barThickness, barSize),
				helpers.getValueOrDefault(options.maxBarThickness, Infinity));

			return {
				stackCount: stackCount,
				tickSize: tickSize,
				categorySize: categorySize,
				categorySpacing: tickSize - categorySize,
				fullBarSize: fullBarSize,
				barSize: barSize,
				barSpacing: fullBarSize - barSize,
				scale: scale
			};
		},

		/**
		 * Note: pixel values are not clamped to the scale area.
		 * @private
		 */
		calculateBarValuePixels: function(datasetIndex, index) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var scale = me.getValueScale();
			var datasets = chart.data.datasets;
			var value = Number(datasets[datasetIndex].data[index]);
			var stacked = scale.options.stacked;
			var stack = meta.stack;
			var start = 0;
			var i, imeta, ivalue, base, head, size;

			if (stacked || (stacked === undefined && stack !== undefined)) {
				for (i = 0; i < datasetIndex; ++i) {
					imeta = chart.getDatasetMeta(i);

					if (imeta.bar &&
						imeta.stack === stack &&
						imeta.controller.getValueScaleId() === scale.id &&
						chart.isDatasetVisible(i)) {

						ivalue = Number(datasets[i].data[index]);
						if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {
							start += ivalue;
						}
					}
				}
			}

			base = scale.getPixelForValue(start);
			head = scale.getPixelForValue(start + value);
			size = (head - base) / 2;

			return {
				size: size,
				base: base,
				head: head,
				center: head + size / 2
			};
		},

		/**
		 * @private
		 */
		calculateBarIndexPixels: function(datasetIndex, index, ruler) {
			var me = this;
			var scale = ruler.scale;
			var isCombo = me.chart.isCombo;
			var stackIndex = me.getStackIndex(datasetIndex);
			var base = scale.getPixelForValue(null, index, datasetIndex, isCombo);
			var size = ruler.barSize;

			base -= isCombo? ruler.tickSize / 2 : 0;
			base += ruler.fullBarSize * stackIndex;
			base += ruler.categorySpacing / 2;
			base += ruler.barSpacing / 2;

			return {
				size: size,
				base: base,
				head: base + size,
				center: base + size / 2
			};
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var elements = me.getMeta().data;
			var dataset = me.getDataset();
			var ilen = elements.length;
			var i = 0;
			var d;

			helpers.canvas.clipArea(chart.ctx, chart.chartArea);

			for (; i<ilen; ++i) {
				d = dataset.data[i];
				if (d !== null && d !== undefined && !isNaN(d)) {
					elements[i].draw();
				}
			}

			helpers.canvas.unclipArea(chart.ctx);
		},

		setHoverStyle: function(rectangle) {
			var dataset = this.chart.data.datasets[rectangle._datasetIndex];
			var index = rectangle._index;
			var custom = rectangle.custom || {};
			var model = rectangle._model;

			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(rectangle) {
			var dataset = this.chart.data.datasets[rectangle._datasetIndex];
			var index = rectangle._index;
			var custom = rectangle.custom || {};
			var model = rectangle._model;
			var rectangleElementOptions = this.chart.options.elements.rectangle;

			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);
		}
	});


	// including horizontalBar in the bar file, instead of a file of its own
	// it extends bar (like pie extends doughnut)
	Chart.defaults.horizontalBar = {
		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'linear',
				position: 'bottom'
			}],
			yAxes: [{
				position: 'left',
				type: 'category',

				// Specific to Horizontal Bar Controller
				categoryPercentage: 0.8,
				barPercentage: 0.9,

				// grid line settings
				gridLines: {
					offsetGridLines: true
				}
			}]
		},
		elements: {
			rectangle: {
				borderSkipped: 'left'
			}
		},
		tooltips: {
			callbacks: {
				title: function(tooltipItems, data) {
					// Pick first xLabel for now
					var title = '';

					if (tooltipItems.length > 0) {
						if (tooltipItems[0].yLabel) {
							title = tooltipItems[0].yLabel;
						} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {
							title = data.labels[tooltipItems[0].index];
						}
					}

					return title;
				},
				label: function(tooltipItem, data) {
					var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';
					return datasetLabel + ': ' + tooltipItem.xLabel;
				}
			}
		}
	};

	Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
		/**
		 * @private
		 */
		getValueScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		getIndexScaleId: function() {
			return this.getMeta().yAxisID;
		}
	});
};

},{}],16:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.bubble = {
		hover: {
			mode: 'single'
		},

		scales: {
			xAxes: [{
				type: 'linear', // bubble should probably use a linear scale by default
				position: 'bottom',
				id: 'x-axis-0' // need an ID so datasets can reference the scale
			}],
			yAxes: [{
				type: 'linear',
				position: 'left',
				id: 'y-axis-0'
			}]
		},

		tooltips: {
			callbacks: {
				title: function() {
					// Title doesn't make sense for scatter since we format the data as a point
					return '';
				},
				label: function(tooltipItem, data) {
					var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';
					var dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
					return datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';
				}
			}
		}
	};

	Chart.controllers.bubble = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var points = meta.data;

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			});
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);

			var custom = point.custom || {};
			var dataset = me.getDataset();
			var data = dataset.data[index];
			var pointElementOptions = me.chart.options.elements.point;
			var dsIndex = me.index;

			helpers.extend(point, {
				// Utility
				_xScale: xScale,
				_yScale: yScale,
				_datasetIndex: dsIndex,
				_index: index,

				// Desired view properties
				_model: {
					x: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),
					y: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),
					// Appearance
					radius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),

					// Tooltip
					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)
				}
			});

			// Trick to reset the styles of the point
			Chart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);

			var model = point._model;
			model.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));

			point.pivot();
		},

		getRadius: function(value) {
			return value.r || this.chart.options.elements.point.radius;
		},

		setHoverStyle: function(point) {
			var me = this;
			Chart.DatasetController.prototype.setHoverStyle.call(me, point);

			// Radius
			var dataset = me.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;
			model.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);
		},

		removeHoverStyle: function(point) {
			var me = this;
			Chart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);

			var dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];
			var custom = point.custom || {};
			var model = point._model;

			model.radius = custom.radius ? custom.radius : me.getRadius(dataVal);
		}
	});
};

},{}],17:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		defaults = Chart.defaults;

	defaults.doughnut = {
		animation: {
			// Boolean - Whether we animate the rotation of the Doughnut
			animateRotate: true,
			// Boolean - Whether we animate scaling the Doughnut from the centre
			animateScale: false
		},
		aspectRatio: 1,
		hover: {
			mode: 'single'
		},
		legendCallback: function(chart) {
			var text = [];
			text.push('<ul class="' + chart.id + '-legend">');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i < datasets[0].data.length; ++i) {
					text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('</li>');
				}
			}

			text.push('</ul>');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length && data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc && arc.custom || {};
							var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
							var arcOpts = chart.options.elements.arc;
							var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
							var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
							var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					// toggle visibility of index if exists
					if (meta.data[index]) {
						meta.data[index].hidden = !meta.data[index].hidden;
					}
				}

				chart.update();
			}
		},

		// The percentage of the chart that we cut out of the middle.
		cutoutPercentage: 50,

		// The rotation of the chart, where the first data arc begins.
		rotation: Math.PI * -0.5,

		// The total circumference of the chart.
		circumference: Math.PI * 2.0,

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(tooltipItem, data) {
					var dataLabel = data.labels[tooltipItem.index];
					var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

					if (helpers.isArray(dataLabel)) {
						// show value on first line of multiline label
						// need to clone because we are changing the value
						dataLabel = dataLabel.slice();
						dataLabel[0] += value;
					} else {
						dataLabel += value;
					}

					return dataLabel;
				}
			}
		}
	};

	defaults.pie = helpers.clone(defaults.doughnut);
	helpers.extend(defaults.pie, {
		cutoutPercentage: 0
	});


	Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Arc,

		linkScales: helpers.noop,

		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
		getRingIndex: function(datasetIndex) {
			var ringIndex = 0;

			for (var j = 0; j < datasetIndex; ++j) {
				if (this.chart.isDatasetVisible(j)) {
					++ringIndex;
				}
			}

			return ringIndex;
		},

		update: function(reset) {
			var me = this;
			var chart = me.chart,
				chartArea = chart.chartArea,
				opts = chart.options,
				arcOpts = opts.elements.arc,
				availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,
				availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,
				minSize = Math.min(availableWidth, availableHeight),
				offset = {
					x: 0,
					y: 0
				},
				meta = me.getMeta(),
				cutoutPercentage = opts.cutoutPercentage,
				circumference = opts.circumference;

			// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
			if (circumference < Math.PI * 2.0) {
				var startAngle = opts.rotation % (Math.PI * 2.0);
				startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
				var endAngle = startAngle + circumference;
				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
				var contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
				var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
				var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);
				var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
				var cutout = cutoutPercentage / 100.0;
				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};
				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};
				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
			}

			chart.borderWidth = me.getMaxBorderWidth(meta.data);
			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
			chart.offsetX = offset.x * chart.outerRadius;
			chart.offsetY = offset.y * chart.outerRadius;

			meta.total = me.calculateTotal();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));
			me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart,
				chartArea = chart.chartArea,
				opts = chart.options,
				animationOpts = opts.animation,
				centerX = (chartArea.left + chartArea.right) / 2,
				centerY = (chartArea.top + chartArea.bottom) / 2,
				startAngle = opts.rotation, // non reset case handled later
				endAngle = opts.rotation, // non reset case handled later
				dataset = me.getDataset(),
				circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),
				innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,
				outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,
				valueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,

				// Desired view properties
				_model: {
					x: centerX + chart.offsetX,
					y: centerY + chart.offsetY,
					startAngle: startAngle,
					endAngle: endAngle,
					circumference: circumference,
					outerRadius: outerRadius,
					innerRadius: innerRadius,
					label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
				}
			});

			var model = arc._model;
			// Resets the visual styles
			this.removeHoverStyle(arc);

			// Set correct angles if not resetting
			if (!reset || !animationOpts.animateRotate) {
				if (index === 0) {
					model.startAngle = opts.rotation;
				} else {
					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
				}

				model.endAngle = model.startAngle + model.circumference;
			}

			arc.pivot();
		},

		removeHoverStyle: function(arc) {
			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
		},

		calculateTotal: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var total = 0;
			var value;

			helpers.each(meta.data, function(element, index) {
				value = dataset.data[index];
				if (!isNaN(value) && !element.hidden) {
					total += Math.abs(value);
				}
			});

			/* if (total === 0) {
				total = NaN;
			}*/

			return total;
		},

		calculateCircumference: function(value) {
			var total = this.getMeta().total;
			if (total > 0 && !isNaN(value)) {
				return (Math.PI * 2.0) * (value / total);
			}
			return 0;
		},

		// gets the max border or hover width to properly scale pie charts
		getMaxBorderWidth: function(elements) {
			var max = 0,
				index = this.index,
				length = elements.length,
				borderWidth,
				hoverWidth;

			for (var i = 0; i < length; i++) {
				borderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;
				hoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;

				max = borderWidth > max ? borderWidth : max;
				max = hoverWidth > max ? hoverWidth : max;
			}
			return max;
		}
	});
};

},{}],18:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.line = {
		showLines: true,
		spanGaps: false,

		hover: {
			mode: 'label'
		},

		scales: {
			xAxes: [{
				type: 'category',
				id: 'x-axis-0'
			}],
			yAxes: [{
				type: 'linear',
				id: 'y-axis-0'
			}]
		}
	};

	function lineEnabled(dataset, options) {
		return helpers.getValueOrDefault(dataset.showLine, options.showLines);
	}

	Chart.controllers.line = Chart.DatasetController.extend({

		datasetElementType: Chart.elements.Line,

		dataElementType: Chart.elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data || [];
			var options = me.chart.options;
			var lineElementOptions = options.elements.line;
			var scale = me.getScaleForId(meta.yAxisID);
			var i, ilen, custom;
			var dataset = me.getDataset();
			var showLine = lineEnabled(dataset, options);

			// Update Line
			if (showLine) {
				custom = line.custom || {};

				// Compatibility: If the properties are defined with only the old name, use those values
				if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
					dataset.lineTension = dataset.tension;
				}

				// Utility
				line._scale = scale;
				line._datasetIndex = me.index;
				// Data
				line._children = points;
				// Model
				line._model = {
					// Appearance
					// The default behavior of lines is to break at null values, according
					// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
					// This option gives lines the ability to span gaps
					spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					steppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
					cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),
				};

				line.pivot();
			}

			// Update Points
			for (i=0, ilen=points.length; i<ilen; ++i) {
				me.updateElement(points[i], i, reset);
			}

			if (showLine && line._model.tension !== 0) {
				me.updateBezierControlPoints();
			}

			// Now pivot the point for animation
			for (i=0, ilen=points.length; i<ilen; ++i) {
				points[i].pivot();
			}
		},

		getPointBackgroundColor: function(point, index) {
			var backgroundColor = this.chart.options.elements.point.backgroundColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.backgroundColor) {
				backgroundColor = custom.backgroundColor;
			} else if (dataset.pointBackgroundColor) {
				backgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
			} else if (dataset.backgroundColor) {
				backgroundColor = dataset.backgroundColor;
			}

			return backgroundColor;
		},

		getPointBorderColor: function(point, index) {
			var borderColor = this.chart.options.elements.point.borderColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.borderColor) {
				borderColor = custom.borderColor;
			} else if (dataset.pointBorderColor) {
				borderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
			} else if (dataset.borderColor) {
				borderColor = dataset.borderColor;
			}

			return borderColor;
		},

		getPointBorderWidth: function(point, index) {
			var borderWidth = this.chart.options.elements.point.borderWidth;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (!isNaN(custom.borderWidth)) {
				borderWidth = custom.borderWidth;
			} else if (!isNaN(dataset.pointBorderWidth)) {
				borderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
			} else if (!isNaN(dataset.borderWidth)) {
				borderWidth = dataset.borderWidth;
			}

			return borderWidth;
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var datasetIndex = me.index;
			var value = dataset.data[index];
			var yScale = me.getScaleForId(meta.yAxisID);
			var xScale = me.getScaleForId(meta.xAxisID);
			var pointOptions = me.chart.options.elements.point;
			var x, y;
			var labels = me.chart.data.labels || [];
			var includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}
			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
				dataset.pointHitRadius = dataset.hitRadius;
			}

			x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);
			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

			// Utility
			point._xScale = xScale;
			point._yScale = yScale;
			point._datasetIndex = datasetIndex;
			point._index = index;

			// Desired view properties
			point._model = {
				x: x,
				y: y,
				skip: custom.skip || isNaN(x) || isNaN(y),
				// Appearance
				radius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
				pointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
				backgroundColor: me.getPointBackgroundColor(point, index),
				borderColor: me.getPointBorderColor(point, index),
				borderWidth: me.getPointBorderWidth(point, index),
				tension: meta.dataset._model ? meta.dataset._model.tension : 0,
				steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
				// Tooltip
				hitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
			};
		},

		calculatePointY: function(value, index, datasetIndex) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var sumPos = 0;
			var sumNeg = 0;
			var i, ds, dsMeta;

			if (yScale.options.stacked) {
				for (i = 0; i < datasetIndex; i++) {
					ds = chart.data.datasets[i];
					dsMeta = chart.getDatasetMeta(i);
					if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
						if (stackedRightValue < 0) {
							sumNeg += stackedRightValue || 0;
						} else {
							sumPos += stackedRightValue || 0;
						}
					}
				}

				var rightValue = Number(yScale.getRightValue(value));
				if (rightValue < 0) {
					return yScale.getPixelForValue(sumNeg + rightValue);
				}
				return yScale.getPixelForValue(sumPos + rightValue);
			}

			return yScale.getPixelForValue(value);
		},

		updateBezierControlPoints: function() {
			var me = this;
			var meta = me.getMeta();
			var area = me.chart.chartArea;
			var points = (meta.data || []);
			var i, ilen, point, model, controlPoints;

			// Only consider points that are drawn in case the spanGaps option is used
			if (meta.dataset._model.spanGaps) {
				points = points.filter(function(pt) {
					return !pt._model.skip;
				});
			}

			function capControlPoint(pt, min, max) {
				return Math.max(Math.min(pt, max), min);
			}

			if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
				helpers.splineCurveMonotone(points);
			} else {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					point = points[i];
					model = point._model;
					controlPoints = helpers.splineCurve(
						helpers.previousItem(points, i)._model,
						model,
						helpers.nextItem(points, i)._model,
						meta.dataset._model.tension
					);
					model.controlPointPreviousX = controlPoints.previous.x;
					model.controlPointPreviousY = controlPoints.previous.y;
					model.controlPointNextX = controlPoints.next.x;
					model.controlPointNextY = controlPoints.next.y;
				}
			}

			if (me.chart.options.elements.line.capBezierPoints) {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					model = points[i]._model;
					model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
					model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
					model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
					model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
				}
			}
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var points = meta.data || [];
			var area = chart.chartArea;
			var ilen = points.length;
			var i = 0;

			Chart.canvasHelpers.clipArea(chart.ctx, area);

			if (lineEnabled(me.getDataset(), chart.options)) {
				meta.dataset.draw();
			}

			Chart.canvasHelpers.unclipArea(chart.ctx);

			// Draw the points
			for (; i<ilen; ++i) {
				points[i].draw(area);
			}
		},

		setHoverStyle: function(point) {
			// Point
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;

			model.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
			model.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(point) {
			var me = this;
			var dataset = me.chart.data.datasets[point._datasetIndex];
			var index = point._index;
			var custom = point.custom || {};
			var model = point._model;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}

			model.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);
			model.backgroundColor = me.getPointBackgroundColor(point, index);
			model.borderColor = me.getPointBorderColor(point, index);
			model.borderWidth = me.getPointBorderWidth(point, index);
		}
	});
};

},{}],19:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.polarArea = {

		scale: {
			type: 'radialLinear',
			angleLines: {
				display: false
			},
			gridLines: {
				circular: true
			},
			pointLabels: {
				display: false
			},
			ticks: {
				beginAtZero: true
			}
		},

		// Boolean - Whether to animate the rotation of the chart
		animation: {
			animateRotate: true,
			animateScale: true
		},

		startAngle: -0.5 * Math.PI,
		aspectRatio: 1,
		legendCallback: function(chart) {
			var text = [];
			text.push('<ul class="' + chart.id + '-legend">');

			var data = chart.data;
			var datasets = data.datasets;
			var labels = data.labels;

			if (datasets.length) {
				for (var i = 0; i < datasets[0].data.length; ++i) {
					text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
					if (labels[i]) {
						text.push(labels[i]);
					}
					text.push('</li>');
				}
			}

			text.push('</ul>');
			return text.join('');
		},
		legend: {
			labels: {
				generateLabels: function(chart) {
					var data = chart.data;
					if (data.labels.length && data.datasets.length) {
						return data.labels.map(function(label, i) {
							var meta = chart.getDatasetMeta(0);
							var ds = data.datasets[0];
							var arc = meta.data[i];
							var custom = arc.custom || {};
							var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
							var arcOpts = chart.options.elements.arc;
							var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
							var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
							var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

							return {
								text: label,
								fillStyle: fill,
								strokeStyle: stroke,
								lineWidth: bw,
								hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

								// Extra data used for toggling the correct item
								index: i
							};
						});
					}
					return [];
				}
			},

			onClick: function(e, legendItem) {
				var index = legendItem.index;
				var chart = this.chart;
				var i, ilen, meta;

				for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
					meta = chart.getDatasetMeta(i);
					meta.data[index].hidden = !meta.data[index].hidden;
				}

				chart.update();
			}
		},

		// Need to override these to give a nice default
		tooltips: {
			callbacks: {
				title: function() {
					return '';
				},
				label: function(tooltipItem, data) {
					return data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;
				}
			}
		}
	};

	Chart.controllers.polarArea = Chart.DatasetController.extend({

		dataElementType: Chart.elements.Arc,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var meta = me.getMeta();
			var opts = chart.options;
			var arcOpts = opts.elements.arc;
			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
			chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
			me.innerRadius = me.outerRadius - chart.radiusLength;

			meta.count = me.countVisibleElements();

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var opts = chart.options;
			var animationOpts = opts.animation;
			var scale = chart.scale;
			var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
			var labels = chart.data.labels;

			var circumference = me.calculateCircumference(dataset.data[index]);
			var centerX = scale.xCenter;
			var centerY = scale.yCenter;

			// If there is NaN data before us, we need to calculate the starting angle correctly.
			// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data
			var visibleCount = 0;
			var meta = me.getMeta();
			for (var i = 0; i < index; ++i) {
				if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {
					++visibleCount;
				}
			}

			// var negHalfPI = -0.5 * Math.PI;
			var datasetStartAngle = opts.startAngle;
			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
			var startAngle = datasetStartAngle + (circumference * visibleCount);
			var endAngle = startAngle + (arc.hidden ? 0 : circumference);

			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: centerX,
					y: centerY,
					innerRadius: 0,
					outerRadius: reset ? resetRadius : distance,
					startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
					endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
					label: getValueAtIndexOrDefault(labels, index, labels[index])
				}
			});

			// Apply border and fill style
			me.removeHoverStyle(arc);

			arc.pivot();
		},

		removeHoverStyle: function(arc) {
			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
		},

		countVisibleElements: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var count = 0;

			helpers.each(meta.data, function(element, index) {
				if (!isNaN(dataset.data[index]) && !element.hidden) {
					count++;
				}
			});

			return count;
		},

		calculateCircumference: function(value) {
			var count = this.getMeta().count;
			if (count > 0 && !isNaN(value)) {
				return (2 * Math.PI) / count;
			}
			return 0;
		}
	});
};

},{}],20:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.radar = {
		aspectRatio: 1,
		scale: {
			type: 'radialLinear'
		},
		elements: {
			line: {
				tension: 0 // no bezier in radar
			}
		}
	};

	Chart.controllers.radar = Chart.DatasetController.extend({

		datasetElementType: Chart.elements.Line,

		dataElementType: Chart.elements.Point,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data;
			var custom = line.custom || {};
			var dataset = me.getDataset();
			var lineElementOptions = me.chart.options.elements.line;
			var scale = me.chart.scale;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
				dataset.lineTension = dataset.tension;
			}

			helpers.extend(meta.dataset, {
				// Utility
				_datasetIndex: me.index,
				_scale: scale,
				// Data
				_children: points,
				_loop: true,
				// Model
				_model: {
					// Appearance
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
				}
			});

			meta.dataset.pivot();

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			}, me);

			// Update bezier control points
			me.updateBezierControlPoints();
		},
		updateElement: function(point, index, reset) {
			var me = this;
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var scale = me.chart.scale;
			var pointElementOptions = me.chart.options.elements.point;
			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}
			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
				dataset.pointHitRadius = dataset.hitRadius;
			}

			helpers.extend(point, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
					y: reset ? scale.yCenter : pointPosition.y,

					// Appearance
					tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
					radius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
					borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
					pointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),

					// Tooltip
					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
				}
			});

			point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));
		},
		updateBezierControlPoints: function() {
			var chartArea = this.chart.chartArea;
			var meta = this.getMeta();

			helpers.each(meta.data, function(point, index) {
				var model = point._model;
				var controlPoints = helpers.splineCurve(
					helpers.previousItem(meta.data, index, true)._model,
					model,
					helpers.nextItem(meta.data, index, true)._model,
					model.tension
				);

				// Prevent the bezier going outside of the bounds of the graph
				model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
				model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);

				model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
				model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);

				// Now pivot the point for animation
				point.pivot();
			});
		},

		setHoverStyle: function(point) {
			// Point
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var custom = point.custom || {};
			var index = point._index;
			var model = point._model;

			model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
		},

		removeHoverStyle: function(point) {
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var custom = point.custom || {};
			var index = point._index;
			var model = point._model;
			var pointElementOptions = this.chart.options.elements.point;

			model.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);
			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);
		}
	});
};

},{}],21:[function(require,module,exports){
/* global window: false */
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.global.animation = {
		duration: 1000,
		easing: 'easeOutQuart',
		onProgress: helpers.noop,
		onComplete: helpers.noop
	};

	Chart.Animation = Chart.Element.extend({
		chart: null, // the animation associated chart instance
		currentStep: 0, // the current animation step
		numSteps: 60, // default number of steps
		easing: '', // the easing to use for this animation
		render: null, // render function used by the animation service

		onAnimationProgress: null, // user specified callback to fire on each step of the animation
		onAnimationComplete: null, // user specified callback to fire when the animation finishes
	});

	Chart.animationService = {
		frameDuration: 17,
		animations: [],
		dropFrames: 0,
		request: null,

		/**
		 * @param {Chart} chart - The chart to animate.
		 * @param {Chart.Animation} animation - The animation that we will animate.
		 * @param {Number} duration - The animation duration in ms.
		 * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
		 */
		addAnimation: function(chart, animation, duration, lazy) {
			var animations = this.animations;
			var i, ilen;

			animation.chart = chart;

			if (!lazy) {
				chart.animating = true;
			}

			for (i=0, ilen=animations.length; i < ilen; ++i) {
				if (animations[i].chart === chart) {
					animations[i] = animation;
					return;
				}
			}

			animations.push(animation);

			// If there are no animations queued, manually kickstart a digest, for lack of a better word
			if (animations.length === 1) {
				this.requestAnimationFrame();
			}
		},

		cancelAnimation: function(chart) {
			var index = helpers.findIndex(this.animations, function(animation) {
				return animation.chart === chart;
			});

			if (index !== -1) {
				this.animations.splice(index, 1);
				chart.animating = false;
			}
		},

		requestAnimationFrame: function() {
			var me = this;
			if (me.request === null) {
				// Skip animation frame requests until the active one is executed.
				// This can happen when processing mouse events, e.g. 'mousemove'
				// and 'mouseout' events will trigger multiple renders.
				me.request = helpers.requestAnimFrame.call(window, function() {
					me.request = null;
					me.startDigest();
				});
			}
		},

		/**
		 * @private
		 */
		startDigest: function() {
			var me = this;
			var startTime = Date.now();
			var framesToDrop = 0;

			if (me.dropFrames > 1) {
				framesToDrop = Math.floor(me.dropFrames);
				me.dropFrames = me.dropFrames % 1;
			}

			me.advance(1 + framesToDrop);

			var endTime = Date.now();

			me.dropFrames += (endTime - startTime) / me.frameDuration;

			// Do we have more stuff to animate?
			if (me.animations.length > 0) {
				me.requestAnimationFrame();
			}
		},

		/**
		 * @private
		 */
		advance: function(count) {
			var animations = this.animations;
			var animation, chart;
			var i = 0;

			while (i < animations.length) {
				animation = animations[i];
				chart = animation.chart;

				animation.currentStep = (animation.currentStep || 0) + count;
				animation.currentStep = Math.min(animation.currentStep, animation.numSteps);

				helpers.callback(animation.render, [chart, animation], chart);
				helpers.callback(animation.onAnimationProgress, [animation], chart);

				if (animation.currentStep >= animation.numSteps) {
					helpers.callback(animation.onAnimationComplete, [animation], chart);
					chart.animating = false;
					animations.splice(i, 1);
				} else {
					++i;
				}
			}
		}
	};

	/**
	 * Provided for backward compatibility, use Chart.Animation instead
	 * @prop Chart.Animation#animationObject
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 */
	Object.defineProperty(Chart.Animation.prototype, 'animationObject', {
		get: function() {
			return this;
		}
	});

	/**
	 * Provided for backward compatibility, use Chart.Animation#chart instead
	 * @prop Chart.Animation#chartInstance
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 */
	Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {
		get: function() {
			return this.chart;
		},
		set: function(value) {
			this.chart = value;
		}
	});

};

},{}],22:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {
	// Global Chart canvas helpers object for drawing items to canvas
	var helpers = Chart.canvasHelpers = {};

	helpers.drawPoint = function(ctx, pointStyle, radius, x, y) {
		var type, edgeLength, xOffset, yOffset, height, size;

		if (typeof pointStyle === 'object') {
			type = pointStyle.toString();
			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
				ctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2, pointStyle.width, pointStyle.height);
				return;
			}
		}

		if (isNaN(radius) || radius <= 0) {
			return;
		}

		switch (pointStyle) {
		// Default includes circle
		default:
			ctx.beginPath();
			ctx.arc(x, y, radius, 0, Math.PI * 2);
			ctx.closePath();
			ctx.fill();
			break;
		case 'triangle':
			ctx.beginPath();
			edgeLength = 3 * radius / Math.sqrt(3);
			height = edgeLength * Math.sqrt(3) / 2;
			ctx.moveTo(x - edgeLength / 2, y + height / 3);
			ctx.lineTo(x + edgeLength / 2, y + height / 3);
			ctx.lineTo(x, y - 2 * height / 3);
			ctx.closePath();
			ctx.fill();
			break;
		case 'rect':
			size = 1 / Math.SQRT2 * radius;
			ctx.beginPath();
			ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
			ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
			break;
		case 'rectRounded':
			var offset = radius / Math.SQRT2;
			var leftX = x - offset;
			var topY = y - offset;
			var sideSize = Math.SQRT2 * radius;
			Chart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);
			ctx.fill();
			break;
		case 'rectRot':
			size = 1 / Math.SQRT2 * radius;
			ctx.beginPath();
			ctx.moveTo(x - size, y);
			ctx.lineTo(x, y + size);
			ctx.lineTo(x + size, y);
			ctx.lineTo(x, y - size);
			ctx.closePath();
			ctx.fill();
			break;
		case 'cross':
			ctx.beginPath();
			ctx.moveTo(x, y + radius);
			ctx.lineTo(x, y - radius);
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		case 'crossRot':
			ctx.beginPath();
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x - xOffset, y + yOffset);
			ctx.lineTo(x + xOffset, y - yOffset);
			ctx.closePath();
			break;
		case 'star':
			ctx.beginPath();
			ctx.moveTo(x, y + radius);
			ctx.lineTo(x, y - radius);
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x - xOffset, y + yOffset);
			ctx.lineTo(x + xOffset, y - yOffset);
			ctx.closePath();
			break;
		case 'line':
			ctx.beginPath();
			ctx.moveTo(x - radius, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		case 'dash':
			ctx.beginPath();
			ctx.moveTo(x, y);
			ctx.lineTo(x + radius, y);
			ctx.closePath();
			break;
		}

		ctx.stroke();
	};

	helpers.clipArea = function(ctx, clipArea) {
		ctx.save();
		ctx.beginPath();
		ctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);
		ctx.clip();
	};

	helpers.unclipArea = function(ctx) {
		ctx.restore();
	};

	helpers.lineTo = function(ctx, previous, target, flip) {
		if (target.steppedLine) {
			if (target.steppedLine === 'after') {
				ctx.lineTo(previous.x, target.y);
			} else {
				ctx.lineTo(target.x, previous.y);
			}
			ctx.lineTo(target.x, target.y);
			return;
		}

		if (!target.tension) {
			ctx.lineTo(target.x, target.y);
			return;
		}

		ctx.bezierCurveTo(
			flip? previous.controlPointPreviousX : previous.controlPointNextX,
			flip? previous.controlPointPreviousY : previous.controlPointNextY,
			flip? target.controlPointNextX : target.controlPointPreviousX,
			flip? target.controlPointNextY : target.controlPointPreviousY,
			target.x,
			target.y);
	};

	Chart.helpers.canvas = helpers;
};

},{}],23:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var plugins = Chart.plugins;
	var platform = Chart.platform;

	// Create a dictionary of chart types, to allow for extension of existing types
	Chart.types = {};

	// Store a reference to each instance - allowing us to globally resize chart instances on window resize.
	// Destroy method on the chart will remove the instance of the chart from this reference.
	Chart.instances = {};

	// Controllers available for dataset visualization eg. bar, line, slice, etc.
	Chart.controllers = {};

	/**
	 * Initializes the given config with global and chart default values.
	 */
	function initConfig(config) {
		config = config || {};

		// Do NOT use configMerge() for the data object because this method merges arrays
		// and so would change references to labels and datasets, preventing data updates.
		var data = config.data = config.data || {};
		data.datasets = data.datasets || [];
		data.labels = data.labels || [];

		config.options = helpers.configMerge(
			Chart.defaults.global,
			Chart.defaults[config.type],
			config.options || {});

		return config;
	}

	/**
	 * Updates the config of the chart
	 * @param chart {Chart} chart to update the options for
	 */
	function updateConfig(chart) {
		var newOptions = chart.options;

		// Update Scale(s) with options
		if (newOptions.scale) {
			chart.scale.options = newOptions.scale;
		} else if (newOptions.scales) {
			newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {
				chart.scales[scaleOptions.id].options = scaleOptions;
			});
		}

		// Tooltip
		chart.tooltip._options = newOptions.tooltips;
	}

	function positionIsHorizontal(position) {
		return position === 'top' || position === 'bottom';
	}

	helpers.extend(Chart.prototype, /** @lends Chart */ {
		/**
		 * @private
		 */
		construct: function(item, config) {
			var me = this;

			config = initConfig(config);

			var context = platform.acquireContext(item, config);
			var canvas = context && context.canvas;
			var height = canvas && canvas.height;
			var width = canvas && canvas.width;

			me.id = helpers.uid();
			me.ctx = context;
			me.canvas = canvas;
			me.config = config;
			me.width = width;
			me.height = height;
			me.aspectRatio = height? width / height : null;
			me.options = config.options;
			me._bufferedRender = false;

			/**
			 * Provided for backward compatibility, Chart and Chart.Controller have been merged,
			 * the "instance" still need to be defined since it might be called from plugins.
			 * @prop Chart#chart
			 * @deprecated since version 2.6.0
			 * @todo remove at version 3
			 * @private
			 */
			me.chart = me;
			me.controller = me;  // chart.chart.controller #inception

			// Add the chart instance to the global namespace
			Chart.instances[me.id] = me;

			// Define alias to the config data: `chart.data === chart.config.data`
			Object.defineProperty(me, 'data', {
				get: function() {
					return me.config.data;
				},
				set: function(value) {
					me.config.data = value;
				}
			});

			if (!context || !canvas) {
				// The given item is not a compatible context2d element, let's return before finalizing
				// the chart initialization but after setting basic chart / controller properties that
				// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
				// https://github.com/chartjs/Chart.js/issues/2807
				console.error("Failed to create chart: can't acquire context from the given item");
				return;
			}

			me.initialize();
			me.update();
		},

		/**
		 * @private
		 */
		initialize: function() {
			var me = this;

			// Before init plugin notification
			plugins.notify(me, 'beforeInit');

			helpers.retinaScale(me);

			me.bindEvents();

			if (me.options.responsive) {
				// Initial resize before chart draws (must be silent to preserve initial animations).
				me.resize(true);
			}

			// Make sure scales have IDs and are built before we build any controllers.
			me.ensureScalesHaveIDs();
			me.buildScales();
			me.initToolTip();

			// After init plugin notification
			plugins.notify(me, 'afterInit');

			return me;
		},

		clear: function() {
			helpers.clear(this);
			return this;
		},

		stop: function() {
			// Stops any current animation loop occurring
			Chart.animationService.cancelAnimation(this);
			return this;
		},

		resize: function(silent) {
			var me = this;
			var options = me.options;
			var canvas = me.canvas;
			var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

			// the canvas render width and height will be casted to integers so make sure that
			// the canvas display style uses the same integer values to avoid blurring effect.
			var newWidth = Math.floor(helpers.getMaximumWidth(canvas));
			var newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));

			if (me.width === newWidth && me.height === newHeight) {
				return;
			}

			canvas.width = me.width = newWidth;
			canvas.height = me.height = newHeight;
			canvas.style.width = newWidth + 'px';
			canvas.style.height = newHeight + 'px';

			helpers.retinaScale(me);

			if (!silent) {
				// Notify any plugins about the resize
				var newSize = {width: newWidth, height: newHeight};
				plugins.notify(me, 'resize', [newSize]);

				// Notify of resize
				if (me.options.onResize) {
					me.options.onResize(me, newSize);
				}

				me.stop();
				me.update(me.options.responsiveAnimationDuration);
			}
		},

		ensureScalesHaveIDs: function() {
			var options = this.options;
			var scalesOptions = options.scales || {};
			var scaleOptions = options.scale;

			helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {
				xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
			});

			helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {
				yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
			});

			if (scaleOptions) {
				scaleOptions.id = scaleOptions.id || 'scale';
			}
		},

		/**
		 * Builds a map of scale ID to scale object for future lookup.
		 */
		buildScales: function() {
			var me = this;
			var options = me.options;
			var scales = me.scales = {};
			var items = [];

			if (options.scales) {
				items = items.concat(
					(options.scales.xAxes || []).map(function(xAxisOptions) {
						return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
					}),
					(options.scales.yAxes || []).map(function(yAxisOptions) {
						return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
					})
				);
			}

			if (options.scale) {
				items.push({
					options: options.scale,
					dtype: 'radialLinear',
					isDefault: true,
					dposition: 'chartArea'
				});
			}

			helpers.each(items, function(item) {
				var scaleOptions = item.options;
				var scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);
				var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);
				if (!scaleClass) {
					return;
				}

				if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
					scaleOptions.position = item.dposition;
				}

				var scale = new scaleClass({
					id: scaleOptions.id,
					options: scaleOptions,
					ctx: me.ctx,
					chart: me
				});

				scales[scale.id] = scale;

				// TODO(SB): I think we should be able to remove this custom case (options.scale)
				// and consider it as a regular scale part of the "scales"" map only! This would
				// make the logic easier and remove some useless? custom code.
				if (item.isDefault) {
					me.scale = scale;
				}
			});

			Chart.scaleService.addScalesToLayout(this);
		},

		buildOrUpdateControllers: function() {
			var me = this;
			var types = [];
			var newControllers = [];

			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				var meta = me.getDatasetMeta(datasetIndex);
				if (!meta.type) {
					meta.type = dataset.type || me.config.type;
				}

				types.push(meta.type);

				if (meta.controller) {
					meta.controller.updateIndex(datasetIndex);
				} else {
					var ControllerClass = Chart.controllers[meta.type];
					if (ControllerClass === undefined) {
						throw new Error('"' + meta.type + '" is not a chart type.');
					}

					meta.controller = new ControllerClass(me, datasetIndex);
					newControllers.push(meta.controller);
				}
			}, me);

			if (types.length > 1) {
				for (var i = 1; i < types.length; i++) {
					if (types[i] !== types[i - 1]) {
						me.isCombo = true;
						break;
					}
				}
			}

			return newControllers;
		},

		/**
		 * Reset the elements of all datasets
		 * @private
		 */
		resetElements: function() {
			var me = this;
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.reset();
			}, me);
		},

		/**
		* Resets the chart back to it's state before the initial animation
		*/
		reset: function() {
			this.resetElements();
			this.tooltip.initialize();
		},

		update: function(animationDuration, lazy) {
			var me = this;

			updateConfig(me);

			if (plugins.notify(me, 'beforeUpdate') === false) {
				return;
			}

			// In case the entire data object changed
			me.tooltip._data = me.data;

			// Make sure dataset controllers are updated and new controllers are reset
			var newControllers = me.buildOrUpdateControllers();

			// Make sure all dataset controllers have correct meta data counts
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
			}, me);

			me.updateLayout();

			// Can only reset the new controllers after the scales have been updated
			helpers.each(newControllers, function(controller) {
				controller.reset();
			});

			me.updateDatasets();

			// Do this before render so that any plugins that need final scale updates can use it
			plugins.notify(me, 'afterUpdate');

			if (me._bufferedRender) {
				me._bufferedRequest = {
					lazy: lazy,
					duration: animationDuration
				};
			} else {
				me.render(animationDuration, lazy);
			}
		},

		/**
		 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
		 * hook, in which case, plugins will not be called on `afterLayout`.
		 * @private
		 */
		updateLayout: function() {
			var me = this;

			if (plugins.notify(me, 'beforeLayout') === false) {
				return;
			}

			Chart.layoutService.update(this, this.width, this.height);

			/**
			 * Provided for backward compatibility, use `afterLayout` instead.
			 * @method IPlugin#afterScaleUpdate
			 * @deprecated since version 2.5.0
			 * @todo remove at version 3
			 * @private
			 */
			plugins.notify(me, 'afterScaleUpdate');
			plugins.notify(me, 'afterLayout');
		},

		/**
		 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
		 * @private
		 */
		updateDatasets: function() {
			var me = this;

			if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {
				return;
			}

			for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				me.updateDataset(i);
			}

			plugins.notify(me, 'afterDatasetsUpdate');
		},

		/**
		 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
		 * @private
		 */
		updateDataset: function(index) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index
			};

			if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
				return;
			}

			meta.controller.update();

			plugins.notify(me, 'afterDatasetUpdate', [args]);
		},

		render: function(duration, lazy) {
			var me = this;

			if (plugins.notify(me, 'beforeRender') === false) {
				return;
			}

			var animationOptions = me.options.animation;
			var onComplete = function(animation) {
				plugins.notify(me, 'afterRender');
				helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);
			};

			if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {
				var animation = new Chart.Animation({
					numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps
					easing: animationOptions.easing,

					render: function(chart, animationObject) {
						var easingFunction = helpers.easingEffects[animationObject.easing];
						var currentStep = animationObject.currentStep;
						var stepDecimal = currentStep / animationObject.numSteps;

						chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
					},

					onAnimationProgress: animationOptions.onProgress,
					onAnimationComplete: onComplete
				});

				Chart.animationService.addAnimation(me, animation, duration, lazy);
			} else {
				me.draw();

				// See https://github.com/chartjs/Chart.js/issues/3781
				onComplete(new Chart.Animation({numSteps: 0, chart: me}));
			}

			return me;
		},

		draw: function(easingValue) {
			var me = this;

			me.clear();

			if (easingValue === undefined || easingValue === null) {
				easingValue = 1;
			}

			me.transition(easingValue);

			if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
				return;
			}

			// Draw all the scales
			helpers.each(me.boxes, function(box) {
				box.draw(me.chartArea);
			}, me);

			if (me.scale) {
				me.scale.draw();
			}

			me.drawDatasets(easingValue);

			// Finally draw the tooltip
			me.tooltip.draw();

			plugins.notify(me, 'afterDraw', [easingValue]);
		},

		/**
		 * @private
		 */
		transition: function(easingValue) {
			var me = this;

			for (var i=0, ilen=(me.data.datasets || []).length; i<ilen; ++i) {
				if (me.isDatasetVisible(i)) {
					me.getDatasetMeta(i).controller.transition(easingValue);
				}
			}

			me.tooltip.transition(easingValue);
		},

		/**
		 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
		 * @private
		 */
		drawDatasets: function(easingValue) {
			var me = this;

			if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
				return;
			}

			// Draw datasets reversed to support proper line stacking
			for (var i=(me.data.datasets || []).length - 1; i >= 0; --i) {
				if (me.isDatasetVisible(i)) {
					me.drawDataset(i, easingValue);
				}
			}

			plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
		},

		/**
		 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
		 * @private
		 */
		drawDataset: function(index, easingValue) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index,
				easingValue: easingValue
			};

			if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
				return;
			}

			meta.controller.draw(easingValue);

			plugins.notify(me, 'afterDatasetDraw', [args]);
		},

		// Get the single element that was clicked on
		// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
		getElementAtEvent: function(e) {
			return Chart.Interaction.modes.single(this, e);
		},

		getElementsAtEvent: function(e) {
			return Chart.Interaction.modes.label(this, e, {intersect: true});
		},

		getElementsAtXAxis: function(e) {
			return Chart.Interaction.modes['x-axis'](this, e, {intersect: true});
		},

		getElementsAtEventForMode: function(e, mode, options) {
			var method = Chart.Interaction.modes[mode];
			if (typeof method === 'function') {
				return method(this, e, options);
			}

			return [];
		},

		getDatasetAtEvent: function(e) {
			return Chart.Interaction.modes.dataset(this, e, {intersect: true});
		},

		getDatasetMeta: function(datasetIndex) {
			var me = this;
			var dataset = me.data.datasets[datasetIndex];
			if (!dataset._meta) {
				dataset._meta = {};
			}

			var meta = dataset._meta[me.id];
			if (!meta) {
				meta = dataset._meta[me.id] = {
					type: null,
					data: [],
					dataset: null,
					controller: null,
					hidden: null,			// See isDatasetVisible() comment
					xAxisID: null,
					yAxisID: null
				};
			}

			return meta;
		},

		getVisibleDatasetCount: function() {
			var count = 0;
			for (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {
				if (this.isDatasetVisible(i)) {
					count++;
				}
			}
			return count;
		},

		isDatasetVisible: function(datasetIndex) {
			var meta = this.getDatasetMeta(datasetIndex);

			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
			return typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
		},

		generateLegend: function() {
			return this.options.legendCallback(this);
		},

		destroy: function() {
			var me = this;
			var canvas = me.canvas;
			var meta, i, ilen;

			me.stop();

			// dataset controllers need to cleanup associated data
			for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				meta = me.getDatasetMeta(i);
				if (meta.controller) {
					meta.controller.destroy();
					meta.controller = null;
				}
			}

			if (canvas) {
				me.unbindEvents();
				helpers.clear(me);
				platform.releaseContext(me.ctx);
				me.canvas = null;
				me.ctx = null;
			}

			plugins.notify(me, 'destroy');

			delete Chart.instances[me.id];
		},

		toBase64Image: function() {
			return this.canvas.toDataURL.apply(this.canvas, arguments);
		},

		initToolTip: function() {
			var me = this;
			me.tooltip = new Chart.Tooltip({
				_chart: me,
				_chartInstance: me,            // deprecated, backward compatibility
				_data: me.data,
				_options: me.options.tooltips
			}, me);
			me.tooltip.initialize();
		},

		/**
		 * @private
		 */
		bindEvents: function() {
			var me = this;
			var listeners = me._listeners = {};
			var listener = function() {
				me.eventHandler.apply(me, arguments);
			};

			helpers.each(me.options.events, function(type) {
				platform.addEventListener(me, type, listener);
				listeners[type] = listener;
			});

			// Responsiveness is currently based on the use of an iframe, however this method causes
			// performance issues and could be troublesome when used with ad blockers. So make sure
			// that the user is still able to create a chart without iframe when responsive is false.
			// See https://github.com/chartjs/Chart.js/issues/2210
			if (me.options.responsive) {
				listener = function() {
					me.resize();
				};

				platform.addEventListener(me, 'resize', listener);
				listeners.resize = listener;
			}
		},

		/**
		 * @private
		 */
		unbindEvents: function() {
			var me = this;
			var listeners = me._listeners;
			if (!listeners) {
				return;
			}

			delete me._listeners;
			helpers.each(listeners, function(listener, type) {
				platform.removeEventListener(me, type, listener);
			});
		},

		updateHoverStyle: function(elements, mode, enabled) {
			var method = enabled? 'setHoverStyle' : 'removeHoverStyle';
			var element, i, ilen;

			for (i=0, ilen=elements.length; i<ilen; ++i) {
				element = elements[i];
				if (element) {
					this.getDatasetMeta(element._datasetIndex).controller[method](element);
				}
			}
		},

		/**
		 * @private
		 */
		eventHandler: function(e) {
			var me = this;
			var tooltip = me.tooltip;

			if (plugins.notify(me, 'beforeEvent', [e]) === false) {
				return;
			}

			// Buffer any update calls so that renders do not occur
			me._bufferedRender = true;
			me._bufferedRequest = null;

			var changed = me.handleEvent(e);
			changed |= tooltip && tooltip.handleEvent(e);

			plugins.notify(me, 'afterEvent', [e]);

			var bufferedRequest = me._bufferedRequest;
			if (bufferedRequest) {
				// If we have an update that was triggered, we need to do a normal render
				me.render(bufferedRequest.duration, bufferedRequest.lazy);
			} else if (changed && !me.animating) {
				// If entering, leaving, or changing elements, animate the change via pivot
				me.stop();

				// We only need to render at this point. Updating will cause scales to be
				// recomputed generating flicker & using more memory than necessary.
				me.render(me.options.hover.animationDuration, true);
			}

			me._bufferedRender = false;
			me._bufferedRequest = null;

			return me;
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event the event to handle
		 * @return {Boolean} true if the chart needs to re-render
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me.options || {};
			var hoverOptions = options.hover;
			var changed = false;

			me.lastActive = me.lastActive || [];

			// Find Active Elements for hover and tooltips
			if (e.type === 'mouseout') {
				me.active = [];
			} else {
				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
			}

			// On Hover hook
			if (hoverOptions.onHover) {
				// Need to call with native event here to not break backwards compatibility
				hoverOptions.onHover.call(me, e.native, me.active);
			}

			if (e.type === 'mouseup' || e.type === 'click') {
				if (options.onClick) {
					// Use e.native here for backwards compatibility
					options.onClick.call(me, e.native, me.active);
				}
			}

			// Remove styling for last active (even if it may still be active)
			if (me.lastActive.length) {
				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
			}

			// Built in hover styling
			if (me.active.length && hoverOptions.mode) {
				me.updateHoverStyle(me.active, hoverOptions.mode, true);
			}

			changed = !helpers.arrayEquals(me.active, me.lastActive);

			// Remember Last Actives
			me.lastActive = me.active;

			return changed;
		}
	});

	/**
	 * Provided for backward compatibility, use Chart instead.
	 * @class Chart.Controller
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 * @private
	 */
	Chart.Controller = Chart;
};

},{}],24:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

	/**
	 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
	 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
	 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
	 */
	function listenArrayEvents(array, listener) {
		if (array._chartjs) {
			array._chartjs.listeners.push(listener);
			return;
		}

		Object.defineProperty(array, '_chartjs', {
			configurable: true,
			enumerable: false,
			value: {
				listeners: [listener]
			}
		});

		arrayEvents.forEach(function(key) {
			var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
			var base = array[key];

			Object.defineProperty(array, key, {
				configurable: true,
				enumerable: false,
				value: function() {
					var args = Array.prototype.slice.call(arguments);
					var res = base.apply(this, args);

					helpers.each(array._chartjs.listeners, function(object) {
						if (typeof object[method] === 'function') {
							object[method].apply(object, args);
						}
					});

					return res;
				}
			});
		});
	}

	/**
	 * Removes the given array event listener and cleanup extra attached properties (such as
	 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
	 */
	function unlistenArrayEvents(array, listener) {
		var stub = array._chartjs;
		if (!stub) {
			return;
		}

		var listeners = stub.listeners;
		var index = listeners.indexOf(listener);
		if (index !== -1) {
			listeners.splice(index, 1);
		}

		if (listeners.length > 0) {
			return;
		}

		arrayEvents.forEach(function(key) {
			delete array[key];
		});

		delete array._chartjs;
	}

	// Base class for all dataset controllers (line, bar, etc)
	Chart.DatasetController = function(chart, datasetIndex) {
		this.initialize(chart, datasetIndex);
	};

	helpers.extend(Chart.DatasetController.prototype, {

		/**
		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
		 * @type {Chart.core.element}
		 */
		datasetElementType: null,

		/**
		 * Element type used to generate a meta data (e.g. Chart.element.Point).
		 * @type {Chart.core.element}
		 */
		dataElementType: null,

		initialize: function(chart, datasetIndex) {
			var me = this;
			me.chart = chart;
			me.index = datasetIndex;
			me.linkScales();
			me.addElements();
		},

		updateIndex: function(datasetIndex) {
			this.index = datasetIndex;
		},

		linkScales: function() {
			var me = this;
			var meta = me.getMeta();
			var dataset = me.getDataset();

			if (meta.xAxisID === null) {
				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
			}
			if (meta.yAxisID === null) {
				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
			}
		},

		getDataset: function() {
			return this.chart.data.datasets[this.index];
		},

		getMeta: function() {
			return this.chart.getDatasetMeta(this.index);
		},

		getScaleForId: function(scaleID) {
			return this.chart.scales[scaleID];
		},

		reset: function() {
			this.update(true);
		},

		/**
		 * @private
		 */
		destroy: function() {
			if (this._data) {
				unlistenArrayEvents(this._data, this);
			}
		},

		createMetaDataset: function() {
			var me = this;
			var type = me.datasetElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index
			});
		},

		createMetaData: function(index) {
			var me = this;
			var type = me.dataElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index,
				_index: index
			});
		},

		addElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data || [];
			var metaData = meta.data;
			var i, ilen;

			for (i=0, ilen=data.length; i<ilen; ++i) {
				metaData[i] = metaData[i] || me.createMetaData(i);
			}

			meta.dataset = meta.dataset || me.createMetaDataset();
		},

		addElementAndReset: function(index) {
			var element = this.createMetaData(index);
			this.getMeta().data.splice(index, 0, element);
			this.updateElement(element, index, true);
		},

		buildOrUpdateElements: function() {
			var me = this;
			var dataset = me.getDataset();
			var data = dataset.data || (dataset.data = []);

			// In order to correctly handle data addition/deletion animation (an thus simulate
			// real-time charts), we need to monitor these data modifications and synchronize
			// the internal meta data accordingly.
			if (me._data !== data) {
				if (me._data) {
					// This case happens when the user replaced the data array instance.
					unlistenArrayEvents(me._data, me);
				}

				listenArrayEvents(data, me);
				me._data = data;
			}

			// Re-sync meta data in case the user replaced the data array or if we missed
			// any updates and so make sure that we handle number of datapoints changing.
			me.resyncElements();
		},

		update: helpers.noop,

		transition: function(easingValue) {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			for (; i<ilen; ++i) {
				elements[i].transition(easingValue);
			}

			if (meta.dataset) {
				meta.dataset.transition(easingValue);
			}
		},

		draw: function() {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			if (meta.dataset) {
				meta.dataset.draw();
			}

			for (; i<ilen; ++i) {
				elements[i].draw();
			}
		},

		removeHoverStyle: function(element, elementOpts) {
			var dataset = this.chart.data.datasets[element._datasetIndex],
				index = element._index,
				custom = element.custom || {},
				valueOrDefault = helpers.getValueAtIndexOrDefault,
				model = element._model;

			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);
		},

		setHoverStyle: function(element) {
			var dataset = this.chart.data.datasets[element._datasetIndex],
				index = element._index,
				custom = element.custom || {},
				valueOrDefault = helpers.getValueAtIndexOrDefault,
				getHoverColor = helpers.getHoverColor,
				model = element._model;

			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
		},

		/**
		 * @private
		 */
		resyncElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data;
			var numMeta = meta.data.length;
			var numData = data.length;

			if (numData < numMeta) {
				meta.data.splice(numData, numMeta - numData);
			} else if (numData > numMeta) {
				me.insertElements(numMeta, numData - numMeta);
			}
		},

		/**
		 * @private
		 */
		insertElements: function(start, count) {
			for (var i=0; i<count; ++i) {
				this.addElementAndReset(start + i);
			}
		},

		/**
		 * @private
		 */
		onDataPush: function() {
			this.insertElements(this.getDataset().data.length-1, arguments.length);
		},

		/**
		 * @private
		 */
		onDataPop: function() {
			this.getMeta().data.pop();
		},

		/**
		 * @private
		 */
		onDataShift: function() {
			this.getMeta().data.shift();
		},

		/**
		 * @private
		 */
		onDataSplice: function(start, count) {
			this.getMeta().data.splice(start, count);
			this.insertElements(start, arguments.length - 2);
		},

		/**
		 * @private
		 */
		onDataUnshift: function() {
			this.insertElements(0, arguments.length);
		}
	});

	Chart.DatasetController.extend = helpers.inherits;
};

},{}],25:[function(require,module,exports){
'use strict';

var color = require(3);

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	function interpolate(start, view, model, ease) {
		var keys = Object.keys(model);
		var i, ilen, key, actual, origin, target, type, c0, c1;

		for (i=0, ilen=keys.length; i<ilen; ++i) {
			key = keys[i];

			target = model[key];

			// if a value is added to the model after pivot() has been called, the view
			// doesn't contain it, so let's initialize the view to the target value.
			if (!view.hasOwnProperty(key)) {
				view[key] = target;
			}

			actual = view[key];

			if (actual === target || key[0] === '_') {
				continue;
			}

			if (!start.hasOwnProperty(key)) {
				start[key] = actual;
			}

			origin = start[key];

			type = typeof(target);

			if (type === typeof(origin)) {
				if (type === 'string') {
					c0 = color(origin);
					if (c0.valid) {
						c1 = color(target);
						if (c1.valid) {
							view[key] = c1.mix(c0, ease).rgbString();
							continue;
						}
					}
				} else if (type === 'number' && isFinite(origin) && isFinite(target)) {
					view[key] = origin + (target - origin) * ease;
					continue;
				}
			}

			view[key] = target;
		}
	}

	Chart.elements = {};

	Chart.Element = function(configuration) {
		helpers.extend(this, configuration);
		this.initialize.apply(this, arguments);
	};

	helpers.extend(Chart.Element.prototype, {

		initialize: function() {
			this.hidden = false;
		},

		pivot: function() {
			var me = this;
			if (!me._view) {
				me._view = helpers.clone(me._model);
			}
			me._start = {};
			return me;
		},

		transition: function(ease) {
			var me = this;
			var model = me._model;
			var start = me._start;
			var view = me._view;

			// No animation -> No Transition
			if (!model || ease === 1) {
				me._view = model;
				me._start = null;
				return me;
			}

			if (!view) {
				view = me._view = {};
			}

			if (!start) {
				start = me._start = {};
			}

			interpolate(start, view, model, ease);

			return me;
		},

		tooltipPosition: function() {
			return {
				x: this._model.x,
				y: this._model.y
			};
		},

		hasValue: function() {
			return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);
		}
	});

	Chart.Element.extend = helpers.inherits;
};

},{"3":3}],26:[function(require,module,exports){
/* global window: false */
/* global document: false */
'use strict';

var color = require(3);

module.exports = function(Chart) {
	// Global Chart helpers object for utility methods and classes
	var helpers = Chart.helpers = {};

	// -- Basic js utility methods
	helpers.each = function(loopable, callback, self, reverse) {
		// Check to see if null or undefined firstly.
		var i, len;
		if (helpers.isArray(loopable)) {
			len = loopable.length;
			if (reverse) {
				for (i = len - 1; i >= 0; i--) {
					callback.call(self, loopable[i], i);
				}
			} else {
				for (i = 0; i < len; i++) {
					callback.call(self, loopable[i], i);
				}
			}
		} else if (typeof loopable === 'object') {
			var keys = Object.keys(loopable);
			len = keys.length;
			for (i = 0; i < len; i++) {
				callback.call(self, loopable[keys[i]], keys[i]);
			}
		}
	};
	helpers.clone = function(obj) {
		var objClone = {};
		helpers.each(obj, function(value, key) {
			if (helpers.isArray(value)) {
				objClone[key] = value.slice(0);
			} else if (typeof value === 'object' && value !== null) {
				objClone[key] = helpers.clone(value);
			} else {
				objClone[key] = value;
			}
		});
		return objClone;
	};
	helpers.extend = function(base) {
		var setFn = function(value, key) {
			base[key] = value;
		};
		for (var i = 1, ilen = arguments.length; i < ilen; i++) {
			helpers.each(arguments[i], setFn);
		}
		return base;
	};
	// Need a special merge function to chart configs since they are now grouped
	helpers.configMerge = function(_base) {
		var base = helpers.clone(_base);
		helpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {
			helpers.each(extension, function(value, key) {
				var baseHasProperty = base.hasOwnProperty(key);
				var baseVal = baseHasProperty ? base[key] : {};

				if (key === 'scales') {
					// Scale config merging is complex. Add our own function here for that
					base[key] = helpers.scaleMerge(baseVal, value);
				} else if (key === 'scale') {
					// Used in polar area & radar charts since there is only one scale
					base[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);
				} else if (baseHasProperty
						&& typeof baseVal === 'object'
						&& !helpers.isArray(baseVal)
						&& baseVal !== null
						&& typeof value === 'object'
						&& !helpers.isArray(value)) {
					// If we are overwriting an object with an object, do a merge of the properties.
					base[key] = helpers.configMerge(baseVal, value);
				} else {
					// can just overwrite the value in this case
					base[key] = value;
				}
			});
		});

		return base;
	};
	helpers.scaleMerge = function(_base, extension) {
		var base = helpers.clone(_base);

		helpers.each(extension, function(value, key) {
			if (key === 'xAxes' || key === 'yAxes') {
				// These properties are arrays of items
				if (base.hasOwnProperty(key)) {
					helpers.each(value, function(valueObj, index) {
						var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');
						var axisDefaults = Chart.scaleService.getScaleDefaults(axisType);
						if (index >= base[key].length || !base[key][index].type) {
							base[key].push(helpers.configMerge(axisDefaults, valueObj));
						} else if (valueObj.type && valueObj.type !== base[key][index].type) {
							// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults
							base[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);
						} else {
							// Type is the same
							base[key][index] = helpers.configMerge(base[key][index], valueObj);
						}
					});
				} else {
					base[key] = [];
					helpers.each(value, function(valueObj) {
						var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');
						base[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));
					});
				}
			} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {
				// If we are overwriting an object with an object, do a merge of the properties.
				base[key] = helpers.configMerge(base[key], value);

			} else {
				// can just overwrite the value in this case
				base[key] = value;
			}
		});

		return base;
	};
	helpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {
		if (value === undefined || value === null) {
			return defaultValue;
		}

		if (helpers.isArray(value)) {
			return index < value.length ? value[index] : defaultValue;
		}

		return value;
	};
	helpers.getValueOrDefault = function(value, defaultValue) {
		return value === undefined ? defaultValue : value;
	};
	helpers.indexOf = Array.prototype.indexOf?
		function(array, item) {
			return array.indexOf(item);
		}:
		function(array, item) {
			for (var i = 0, ilen = array.length; i < ilen; ++i) {
				if (array[i] === item) {
					return i;
				}
			}
			return -1;
		};
	helpers.where = function(collection, filterCallback) {
		if (helpers.isArray(collection) && Array.prototype.filter) {
			return collection.filter(filterCallback);
		}
		var filtered = [];

		helpers.each(collection, function(item) {
			if (filterCallback(item)) {
				filtered.push(item);
			}
		});

		return filtered;
	};
	helpers.findIndex = Array.prototype.findIndex?
		function(array, callback, scope) {
			return array.findIndex(callback, scope);
		} :
		function(array, callback, scope) {
			scope = scope === undefined? array : scope;
			for (var i = 0, ilen = array.length; i < ilen; ++i) {
				if (callback.call(scope, array[i], i, array)) {
					return i;
				}
			}
			return -1;
		};
	helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to start of the array
		if (startIndex === undefined || startIndex === null) {
			startIndex = -1;
		}
		for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to end of the array
		if (startIndex === undefined || startIndex === null) {
			startIndex = arrayToSearch.length;
		}
		for (var i = startIndex - 1; i >= 0; i--) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers.inherits = function(extensions) {
		// Basic javascript inheritance based on the model created in Backbone.js
		var me = this;
		var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
			return me.apply(this, arguments);
		};

		var Surrogate = function() {
			this.constructor = ChartElement;
		};
		Surrogate.prototype = me.prototype;
		ChartElement.prototype = new Surrogate();

		ChartElement.extend = helpers.inherits;

		if (extensions) {
			helpers.extend(ChartElement.prototype, extensions);
		}

		ChartElement.__super__ = me.prototype;

		return ChartElement;
	};
	helpers.noop = function() {};
	helpers.uid = (function() {
		var id = 0;
		return function() {
			return id++;
		};
	}());
	// -- Math methods
	helpers.isNumber = function(n) {
		return !isNaN(parseFloat(n)) && isFinite(n);
	};
	helpers.almostEquals = function(x, y, epsilon) {
		return Math.abs(x - y) < epsilon;
	};
	helpers.almostWhole = function(x, epsilon) {
		var rounded = Math.round(x);
		return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));
	};
	helpers.max = function(array) {
		return array.reduce(function(max, value) {
			if (!isNaN(value)) {
				return Math.max(max, value);
			}
			return max;
		}, Number.NEGATIVE_INFINITY);
	};
	helpers.min = function(array) {
		return array.reduce(function(min, value) {
			if (!isNaN(value)) {
				return Math.min(min, value);
			}
			return min;
		}, Number.POSITIVE_INFINITY);
	};
	helpers.sign = Math.sign?
		function(x) {
			return Math.sign(x);
		} :
		function(x) {
			x = +x; // convert to a number
			if (x === 0 || isNaN(x)) {
				return x;
			}
			return x > 0 ? 1 : -1;
		};
	helpers.log10 = Math.log10?
		function(x) {
			return Math.log10(x);
		} :
		function(x) {
			return Math.log(x) / Math.LN10;
		};
	helpers.toRadians = function(degrees) {
		return degrees * (Math.PI / 180);
	};
	helpers.toDegrees = function(radians) {
		return radians * (180 / Math.PI);
	};
	// Gets the angle from vertical upright to the point about a centre.
	helpers.getAngleFromPoint = function(centrePoint, anglePoint) {
		var distanceFromXCenter = anglePoint.x - centrePoint.x,
			distanceFromYCenter = anglePoint.y - centrePoint.y,
			radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

		if (angle < (-0.5 * Math.PI)) {
			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
		}

		return {
			angle: angle,
			distance: radialDistanceFromCenter
		};
	};
	helpers.distanceBetweenPoints = function(pt1, pt2) {
		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
	};
	helpers.aliasPixel = function(pixelWidth) {
		return (pixelWidth % 2 === 0) ? 0 : 0.5;
	};
	helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
		// Props to Rob Spencer at scaled innovation for his post on splining between points
		// http://scaledinnovation.com/analytics/splines/aboutSplines.html

		// This function must also respect "skipped" points

		var previous = firstPoint.skip ? middlePoint : firstPoint,
			current = middlePoint,
			next = afterPoint.skip ? middlePoint : afterPoint;

		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

		var s01 = d01 / (d01 + d12);
		var s12 = d12 / (d01 + d12);

		// If all points are the same, s01 & s02 will be inf
		s01 = isNaN(s01) ? 0 : s01;
		s12 = isNaN(s12) ? 0 : s12;

		var fa = t * s01; // scaling factor for triangle Ta
		var fb = t * s12;

		return {
			previous: {
				x: current.x - fa * (next.x - previous.x),
				y: current.y - fa * (next.y - previous.y)
			},
			next: {
				x: current.x + fb * (next.x - previous.x),
				y: current.y + fb * (next.y - previous.y)
			}
		};
	};
	helpers.EPSILON = Number.EPSILON || 1e-14;
	helpers.splineCurveMonotone = function(points) {
		// This function calculates Bézier control points in a similar way than |splineCurve|,
		// but preserves monotonicity of the provided data and ensures no local extremums are added
		// between the dataset discrete points due to the interpolation.
		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

		var pointsWithTangents = (points || []).map(function(point) {
			return {
				model: point._model,
				deltaK: 0,
				mK: 0
			};
		});

		// Calculate slopes (deltaK) and initialize tangents (mK)
		var pointsLen = pointsWithTangents.length;
		var i, pointBefore, pointCurrent, pointAfter;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointAfter && !pointAfter.model.skip) {
				var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

				// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
				pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
			}

			if (!pointBefore || pointBefore.model.skip) {
				pointCurrent.mK = pointCurrent.deltaK;
			} else if (!pointAfter || pointAfter.model.skip) {
				pointCurrent.mK = pointBefore.deltaK;
			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
				pointCurrent.mK = 0;
			} else {
				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
			}
		}

		// Adjust tangents to ensure monotonic properties
		var alphaK, betaK, tauK, squaredMagnitude;
		for (i = 0; i < pointsLen - 1; ++i) {
			pointCurrent = pointsWithTangents[i];
			pointAfter = pointsWithTangents[i + 1];
			if (pointCurrent.model.skip || pointAfter.model.skip) {
				continue;
			}

			if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
				pointCurrent.mK = pointAfter.mK = 0;
				continue;
			}

			alphaK = pointCurrent.mK / pointCurrent.deltaK;
			betaK = pointAfter.mK / pointCurrent.deltaK;
			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
			if (squaredMagnitude <= 9) {
				continue;
			}

			tauK = 3 / Math.sqrt(squaredMagnitude);
			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
		}

		// Compute control points
		var deltaX;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointBefore && !pointBefore.model.skip) {
				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
			}
			if (pointAfter && !pointAfter.model.skip) {
				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
			}
		}
	};
	helpers.nextItem = function(collection, index, loop) {
		if (loop) {
			return index >= collection.length - 1 ? collection[0] : collection[index + 1];
		}
		return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
	};
	helpers.previousItem = function(collection, index, loop) {
		if (loop) {
			return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
		}
		return index <= 0 ? collection[0] : collection[index - 1];
	};
	// Implementation of the nice number algorithm used in determining where axis labels will go
	helpers.niceNum = function(range, round) {
		var exponent = Math.floor(helpers.log10(range));
		var fraction = range / Math.pow(10, exponent);
		var niceFraction;

		if (round) {
			if (fraction < 1.5) {
				niceFraction = 1;
			} else if (fraction < 3) {
				niceFraction = 2;
			} else if (fraction < 7) {
				niceFraction = 5;
			} else {
				niceFraction = 10;
			}
		} else if (fraction <= 1.0) {
			niceFraction = 1;
		} else if (fraction <= 2) {
			niceFraction = 2;
		} else if (fraction <= 5) {
			niceFraction = 5;
		} else {
			niceFraction = 10;
		}

		return niceFraction * Math.pow(10, exponent);
	};
	// Easing functions adapted from Robert Penner's easing equations
	// http://www.robertpenner.com/easing/
	var easingEffects = helpers.easingEffects = {
		linear: function(t) {
			return t;
		},
		easeInQuad: function(t) {
			return t * t;
		},
		easeOutQuad: function(t) {
			return -1 * t * (t - 2);
		},
		easeInOutQuad: function(t) {
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * t * t;
			}
			return -1 / 2 * ((--t) * (t - 2) - 1);
		},
		easeInCubic: function(t) {
			return t * t * t;
		},
		easeOutCubic: function(t) {
			return 1 * ((t = t / 1 - 1) * t * t + 1);
		},
		easeInOutCubic: function(t) {
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * t * t * t;
			}
			return 1 / 2 * ((t -= 2) * t * t + 2);
		},
		easeInQuart: function(t) {
			return t * t * t * t;
		},
		easeOutQuart: function(t) {
			return -1 * ((t = t / 1 - 1) * t * t * t - 1);
		},
		easeInOutQuart: function(t) {
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * t * t * t * t;
			}
			return -1 / 2 * ((t -= 2) * t * t * t - 2);
		},
		easeInQuint: function(t) {
			return 1 * (t /= 1) * t * t * t * t;
		},
		easeOutQuint: function(t) {
			return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);
		},
		easeInOutQuint: function(t) {
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * t * t * t * t * t;
			}
			return 1 / 2 * ((t -= 2) * t * t * t * t + 2);
		},
		easeInSine: function(t) {
			return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;
		},
		easeOutSine: function(t) {
			return 1 * Math.sin(t / 1 * (Math.PI / 2));
		},
		easeInOutSine: function(t) {
			return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);
		},
		easeInExpo: function(t) {
			return (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));
		},
		easeOutExpo: function(t) {
			return (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);
		},
		easeInOutExpo: function(t) {
			if (t === 0) {
				return 0;
			}
			if (t === 1) {
				return 1;
			}
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * Math.pow(2, 10 * (t - 1));
			}
			return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);
		},
		easeInCirc: function(t) {
			if (t >= 1) {
				return t;
			}
			return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);
		},
		easeOutCirc: function(t) {
			return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);
		},
		easeInOutCirc: function(t) {
			if ((t /= 1 / 2) < 1) {
				return -1 / 2 * (Math.sqrt(1 - t * t) - 1);
			}
			return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);
		},
		easeInElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1) === 1) {
				return 1;
			}
			if (!p) {
				p = 1 * 0.3;
			}
			if (a < Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));
		},
		easeOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1) === 1) {
				return 1;
			}
			if (!p) {
				p = 1 * 0.3;
			}
			if (a < Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;
		},
		easeInOutElastic: function(t) {
			var s = 1.70158;
			var p = 0;
			var a = 1;
			if (t === 0) {
				return 0;
			}
			if ((t /= 1 / 2) === 2) {
				return 1;
			}
			if (!p) {
				p = 1 * (0.3 * 1.5);
			}
			if (a < Math.abs(1)) {
				a = 1;
				s = p / 4;
			} else {
				s = p / (2 * Math.PI) * Math.asin(1 / a);
			}
			if (t < 1) {
				return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));
			}
			return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;
		},
		easeInBack: function(t) {
			var s = 1.70158;
			return 1 * (t /= 1) * t * ((s + 1) * t - s);
		},
		easeOutBack: function(t) {
			var s = 1.70158;
			return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);
		},
		easeInOutBack: function(t) {
			var s = 1.70158;
			if ((t /= 1 / 2) < 1) {
				return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));
			}
			return 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
		},
		easeInBounce: function(t) {
			return 1 - easingEffects.easeOutBounce(1 - t);
		},
		easeOutBounce: function(t) {
			if ((t /= 1) < (1 / 2.75)) {
				return 1 * (7.5625 * t * t);
			} else if (t < (2 / 2.75)) {
				return 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);
			} else if (t < (2.5 / 2.75)) {
				return 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);
			}
			return 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);
		},
		easeInOutBounce: function(t) {
			if (t < 1 / 2) {
				return easingEffects.easeInBounce(t * 2) * 0.5;
			}
			return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;
		}
	};
	// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	helpers.requestAnimFrame = (function() {
		if (typeof window === 'undefined') {
			return function(callback) {
				callback();
			};
		}
		return window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			function(callback) {
				return window.setTimeout(callback, 1000 / 60);
			};
	}());
	// -- DOM methods
	helpers.getRelativePosition = function(evt, chart) {
		var mouseX, mouseY;
		var e = evt.originalEvent || evt,
			canvas = evt.currentTarget || evt.srcElement,
			boundingRect = canvas.getBoundingClientRect();

		var touches = e.touches;
		if (touches && touches.length > 0) {
			mouseX = touches[0].clientX;
			mouseY = touches[0].clientY;

		} else {
			mouseX = e.clientX;
			mouseY = e.clientY;
		}

		// Scale mouse coordinates into canvas coordinates
		// by following the pattern laid out by 'jerryj' in the comments of
		// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
		var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));
		var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
		var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));
		var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));
		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

		return {
			x: mouseX,
			y: mouseY
		};

	};
	helpers.addEvent = function(node, eventType, method) {
		if (node.addEventListener) {
			node.addEventListener(eventType, method);
		} else if (node.attachEvent) {
			node.attachEvent('on' + eventType, method);
		} else {
			node['on' + eventType] = method;
		}
	};
	helpers.removeEvent = function(node, eventType, handler) {
		if (node.removeEventListener) {
			node.removeEventListener(eventType, handler, false);
		} else if (node.detachEvent) {
			node.detachEvent('on' + eventType, handler);
		} else {
			node['on' + eventType] = helpers.noop;
		}
	};

	// Private helper function to convert max-width/max-height values that may be percentages into a number
	function parseMaxStyle(styleValue, node, parentProperty) {
		var valueInPixels;
		if (typeof(styleValue) === 'string') {
			valueInPixels = parseInt(styleValue, 10);

			if (styleValue.indexOf('%') !== -1) {
				// percentage * size in dimension
				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
			}
		} else {
			valueInPixels = styleValue;
		}

		return valueInPixels;
	}

	/**
	 * Returns if the given value contains an effective constraint.
	 * @private
	 */
	function isConstrainedValue(value) {
		return value !== undefined && value !== null && value !== 'none';
	}

	// Private helper to get a constraint dimension
	// @param domNode : the node to check the constraint on
	// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
	// @param percentageProperty : property of parent to use when calculating width as a percentage
	// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
	function getConstraintDimension(domNode, maxStyle, percentageProperty) {
		var view = document.defaultView;
		var parentNode = domNode.parentNode;
		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
		var hasCNode = isConstrainedValue(constrainedNode);
		var hasCContainer = isConstrainedValue(constrainedContainer);
		var infinity = Number.POSITIVE_INFINITY;

		if (hasCNode || hasCContainer) {
			return Math.min(
				hasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
				hasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
		}

		return 'none';
	}
	// returns Number or undefined if no constraint
	helpers.getConstraintWidth = function(domNode) {
		return getConstraintDimension(domNode, 'max-width', 'clientWidth');
	};
	// returns Number or undefined if no constraint
	helpers.getConstraintHeight = function(domNode) {
		return getConstraintDimension(domNode, 'max-height', 'clientHeight');
	};
	helpers.getMaximumWidth = function(domNode) {
		var container = domNode.parentNode;
		var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);
		var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);
		var w = container.clientWidth - paddingLeft - paddingRight;
		var cw = helpers.getConstraintWidth(domNode);
		return isNaN(cw)? w : Math.min(w, cw);
	};
	helpers.getMaximumHeight = function(domNode) {
		var container = domNode.parentNode;
		var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);
		var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);
		var h = container.clientHeight - paddingTop - paddingBottom;
		var ch = helpers.getConstraintHeight(domNode);
		return isNaN(ch)? h : Math.min(h, ch);
	};
	helpers.getStyle = function(el, property) {
		return el.currentStyle ?
			el.currentStyle[property] :
			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
	};
	helpers.retinaScale = function(chart) {
		var pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;
		if (pixelRatio === 1) {
			return;
		}

		var canvas = chart.canvas;
		var height = chart.height;
		var width = chart.width;

		canvas.height = height * pixelRatio;
		canvas.width = width * pixelRatio;
		chart.ctx.scale(pixelRatio, pixelRatio);

		// If no style has been set on the canvas, the render size is used as display size,
		// making the chart visually bigger, so let's enforce it to the "correct" values.
		// See https://github.com/chartjs/Chart.js/issues/3575
		canvas.style.height = height + 'px';
		canvas.style.width = width + 'px';
	};
	// -- Canvas methods
	helpers.clear = function(chart) {
		chart.ctx.clearRect(0, 0, chart.width, chart.height);
	};
	helpers.fontString = function(pixelSize, fontStyle, fontFamily) {
		return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
	};
	helpers.longestText = function(ctx, font, arrayOfThings, cache) {
		cache = cache || {};
		var data = cache.data = cache.data || {};
		var gc = cache.garbageCollect = cache.garbageCollect || [];

		if (cache.font !== font) {
			data = cache.data = {};
			gc = cache.garbageCollect = [];
			cache.font = font;
		}

		ctx.font = font;
		var longest = 0;
		helpers.each(arrayOfThings, function(thing) {
			// Undefined strings and arrays should not be measured
			if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {
				longest = helpers.measureText(ctx, data, gc, longest, thing);
			} else if (helpers.isArray(thing)) {
				// if it is an array lets measure each element
				// to do maybe simplify this function a bit so we can do this more recursively?
				helpers.each(thing, function(nestedThing) {
					// Undefined strings and arrays should not be measured
					if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {
						longest = helpers.measureText(ctx, data, gc, longest, nestedThing);
					}
				});
			}
		});

		var gcLen = gc.length / 2;
		if (gcLen > arrayOfThings.length) {
			for (var i = 0; i < gcLen; i++) {
				delete data[gc[i]];
			}
			gc.splice(0, gcLen);
		}
		return longest;
	};
	helpers.measureText = function(ctx, data, gc, longest, string) {
		var textWidth = data[string];
		if (!textWidth) {
			textWidth = data[string] = ctx.measureText(string).width;
			gc.push(string);
		}
		if (textWidth > longest) {
			longest = textWidth;
		}
		return longest;
	};
	helpers.numberOfLabelLines = function(arrayOfThings) {
		var numberOfLines = 1;
		helpers.each(arrayOfThings, function(thing) {
			if (helpers.isArray(thing)) {
				if (thing.length > numberOfLines) {
					numberOfLines = thing.length;
				}
			}
		});
		return numberOfLines;
	};
	helpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {
		ctx.beginPath();
		ctx.moveTo(x + radius, y);
		ctx.lineTo(x + width - radius, y);
		ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
		ctx.lineTo(x + width, y + height - radius);
		ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
		ctx.lineTo(x + radius, y + height);
		ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
		ctx.lineTo(x, y + radius);
		ctx.quadraticCurveTo(x, y, x + radius, y);
		ctx.closePath();
	};

	helpers.color = !color?
		function(value) {
			console.error('Color.js not found!');
			return value;
		} :
		function(value) {
			/* global CanvasGradient */
			if (value instanceof CanvasGradient) {
				value = Chart.defaults.global.defaultColor;
			}

			return color(value);
		};

	helpers.isArray = Array.isArray?
		function(obj) {
			return Array.isArray(obj);
		} :
		function(obj) {
			return Object.prototype.toString.call(obj) === '[object Array]';
		};
	// ! @see http://stackoverflow.com/a/14853974
	helpers.arrayEquals = function(a0, a1) {
		var i, ilen, v0, v1;

		if (!a0 || !a1 || a0.length !== a1.length) {
			return false;
		}

		for (i = 0, ilen=a0.length; i < ilen; ++i) {
			v0 = a0[i];
			v1 = a1[i];

			if (v0 instanceof Array && v1 instanceof Array) {
				if (!helpers.arrayEquals(v0, v1)) {
					return false;
				}
			} else if (v0 !== v1) {
				// NOTE: two different object instances will never be equal: {x:20} != {x:20}
				return false;
			}
		}

		return true;
	};
	helpers.callback = function(fn, args, thisArg) {
		if (fn && typeof fn.call === 'function') {
			fn.apply(thisArg, args);
		}
	};
	helpers.getHoverColor = function(colorValue) {
		/* global CanvasPattern */
		return (colorValue instanceof CanvasPattern) ?
			colorValue :
			helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
	};

	/**
	 * Provided for backward compatibility, use Chart.helpers#callback instead.
	 * @function Chart.helpers#callCallback
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 */
	helpers.callCallback = helpers.callback;
};

},{"3":3}],27:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {
	var helpers = Chart.helpers;

	/**
	 * Helper function to get relative position for an event
	 * @param {Event|IEvent} event - The event to get the position for
	 * @param {Chart} chart - The chart
	 * @returns {Point} the event position
	 */
	function getRelativePosition(e, chart) {
		if (e.native) {
			return {
				x: e.x,
				y: e.y
			};
		}

		return helpers.getRelativePosition(e, chart);
	}

	/**
	 * Helper function to traverse all of the visible elements in the chart
	 * @param chart {chart} the chart
	 * @param handler {Function} the callback to execute for each visible item
	 */
	function parseVisibleItems(chart, handler) {
		var datasets = chart.data.datasets;
		var meta, i, j, ilen, jlen;

		for (i = 0, ilen = datasets.length; i < ilen; ++i) {
			if (!chart.isDatasetVisible(i)) {
				continue;
			}

			meta = chart.getDatasetMeta(i);
			for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
				var element = meta.data[j];
				if (!element._view.skip) {
					handler(element);
				}
			}
		}
	}

	/**
	 * Helper function to get the items that intersect the event position
	 * @param items {ChartElement[]} elements to filter
	 * @param position {Point} the point to be nearest to
	 * @return {ChartElement[]} the nearest items
	 */
	function getIntersectItems(chart, position) {
		var elements = [];

		parseVisibleItems(chart, function(element) {
			if (element.inRange(position.x, position.y)) {
				elements.push(element);
			}
		});

		return elements;
	}

	/**
	 * Helper function to get the items nearest to the event position considering all visible items in teh chart
	 * @param chart {Chart} the chart to look at elements from
	 * @param position {Point} the point to be nearest to
	 * @param intersect {Boolean} if true, only consider items that intersect the position
	 * @param distanceMetric {Function} Optional function to provide the distance between
	 * @return {ChartElement[]} the nearest items
	 */
	function getNearestItems(chart, position, intersect, distanceMetric) {
		var minDistance = Number.POSITIVE_INFINITY;
		var nearestItems = [];

		if (!distanceMetric) {
			distanceMetric = helpers.distanceBetweenPoints;
		}

		parseVisibleItems(chart, function(element) {
			if (intersect && !element.inRange(position.x, position.y)) {
				return;
			}

			var center = element.getCenterPoint();
			var distance = distanceMetric(position, center);

			if (distance < minDistance) {
				nearestItems = [element];
				minDistance = distance;
			} else if (distance === minDistance) {
				// Can have multiple items at the same distance in which case we sort by size
				nearestItems.push(element);
			}
		});

		return nearestItems;
	}

	function indexMode(chart, e, options) {
		var position = getRelativePosition(e, chart);
		var distanceMetric = function(pt1, pt2) {
			return Math.abs(pt1.x - pt2.x);
		};
		var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
		var elements = [];

		if (!items.length) {
			return [];
		}

		chart.data.datasets.forEach(function(dataset, datasetIndex) {
			if (chart.isDatasetVisible(datasetIndex)) {
				var meta = chart.getDatasetMeta(datasetIndex),
					element = meta.data[items[0]._index];

				// don't count items that are skipped (null data)
				if (element && !element._view.skip) {
					elements.push(element);
				}
			}
		});

		return elements;
	}

	/**
	 * @interface IInteractionOptions
	 */
	/**
	 * If true, only consider items that intersect the point
	 * @name IInterfaceOptions#boolean
	 * @type Boolean
	 */

	/**
	 * Contains interaction related functions
	 * @namespace Chart.Interaction
	 */
	Chart.Interaction = {
		// Helper function for different modes
		modes: {
			single: function(chart, e) {
				var position = getRelativePosition(e, chart);
				var elements = [];

				parseVisibleItems(chart, function(element) {
					if (element.inRange(position.x, position.y)) {
						elements.push(element);
						return elements;
					}
				});

				return elements.slice(0, 1);
			},

			/**
			 * @function Chart.Interaction.modes.label
			 * @deprecated since version 2.4.0
	 		 * @todo remove at version 3
			 * @private
			 */
			label: indexMode,

			/**
			 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
			 * @function Chart.Interaction.modes.index
			 * @since v2.4.0
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			index: indexMode,

			/**
			 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
			 * If the options.intersect is false, we find the nearest item and return the items in that dataset
			 * @function Chart.Interaction.modes.dataset
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use during interaction
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			dataset: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);

				if (items.length > 0) {
					items = chart.getDatasetMeta(items[0]._datasetIndex).data;
				}

				return items;
			},

			/**
			 * @function Chart.Interaction.modes.x-axis
			 * @deprecated since version 2.4.0. Use index mode and intersect == true
			 * @todo remove at version 3
			 * @private
			 */
			'x-axis': function(chart, e) {
				return indexMode(chart, e, true);
			},

			/**
			 * Point mode returns all elements that hit test based on the event position
			 * of the event
			 * @function Chart.Interaction.modes.intersect
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			point: function(chart, e) {
				var position = getRelativePosition(e, chart);
				return getIntersectItems(chart, position);
			},

			/**
			 * nearest mode returns the element closest to the point
			 * @function Chart.Interaction.modes.intersect
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			nearest: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var nearestItems = getNearestItems(chart, position, options.intersect);

				// We have multiple items at the same distance from the event. Now sort by smallest
				if (nearestItems.length > 1) {
					nearestItems.sort(function(a, b) {
						var sizeA = a.getArea();
						var sizeB = b.getArea();
						var ret = sizeA - sizeB;

						if (ret === 0) {
							// if equal sort by dataset index
							ret = a._datasetIndex - b._datasetIndex;
						}

						return ret;
					});
				}

				// Return only 1 item
				return nearestItems.slice(0, 1);
			},

			/**
			 * x mode returns the elements that hit-test at the current x coordinate
			 * @function Chart.Interaction.modes.x
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			x: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inXRange(position.x)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect && !intersectsItem) {
					items = [];
				}
				return items;
			},

			/**
			 * y mode returns the elements that hit-test at the current y coordinate
			 * @function Chart.Interaction.modes.y
			 * @param chart {chart} the chart we are returning items from
			 * @param e {Event} the event we are find things at
			 * @param options {IInteractionOptions} options to use
			 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
			 */
			y: function(chart, e, options) {
				var position = getRelativePosition(e, chart);
				var items = [];
				var intersectsItem = false;

				parseVisibleItems(chart, function(element) {
					if (element.inYRange(position.y)) {
						items.push(element);
					}

					if (element.inRange(position.x, position.y)) {
						intersectsItem = true;
					}
				});

				// If we want to trigger on an intersect and we don't have any items
				// that intersect the position, return nothing
				if (options.intersect && !intersectsItem) {
					items = [];
				}
				return items;
			}
		}
	};
};

},{}],28:[function(require,module,exports){
'use strict';

module.exports = function() {

	// Occupy the global variable of Chart, and create a simple base class
	var Chart = function(item, config) {
		this.construct(item, config);
		return this;
	};

	// Globally expose the defaults to allow for user updating/changing
	Chart.defaults = {
		global: {
			responsive: true,
			responsiveAnimationDuration: 0,
			maintainAspectRatio: true,
			events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
			hover: {
				onHover: null,
				mode: 'nearest',
				intersect: true,
				animationDuration: 400
			},
			onClick: null,
			defaultColor: 'rgba(0,0,0,0.1)',
			defaultFontColor: '#666',
			defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
			defaultFontSize: 12,
			defaultFontStyle: 'normal',
			showLines: true,

			// Element defaults defined in element extensions
			elements: {},

			// Legend callback string
			legendCallback: function(chart) {
				var text = [];
				text.push('<ul class="' + chart.id + '-legend">');
				for (var i = 0; i < chart.data.datasets.length; i++) {
					text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
					if (chart.data.datasets[i].label) {
						text.push(chart.data.datasets[i].label);
					}
					text.push('</li>');
				}
				text.push('</ul>');

				return text.join('');
			}
		}
	};

	Chart.Chart = Chart;

	return Chart;
};

},{}],29:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	function filterByPosition(array, position) {
		return helpers.where(array, function(v) {
			return v.position === position;
		});
	}

	function sortByWeight(array, reverse) {
		array.forEach(function(v, i) {
			v._tmpIndex_ = i;
			return v;
		});
		array.sort(function(a, b) {
			var v0 = reverse ? b : a;
			var v1 = reverse ? a : b;
			return v0.weight === v1.weight ?
				v0._tmpIndex_ - v1._tmpIndex_ :
				v0.weight - v1.weight;
		});
		array.forEach(function(v) {
			delete v._tmpIndex_;
		});
	}

	/**
	 * @interface ILayoutItem
	 * @prop {String} position - The position of the item in the chart layout. Possible values are
	 * 'left', 'top', 'right', 'bottom', and 'chartArea'
	 * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area
	 * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
	 * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
	 * @prop {Function} update - Takes two parameters: width and height. Returns size of item
	 * @prop {Function} getPadding -  Returns an object with padding on the edges
	 * @prop {Number} width - Width of item. Must be valid after update()
	 * @prop {Number} height - Height of item. Must be valid after update()
	 * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update
	 * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update
	 * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update
	 * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
	 */

	// The layout service is very self explanatory.  It's responsible for the layout within a chart.
	// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
	// It is this service's responsibility of carrying out that layout.
	Chart.layoutService = {
		defaults: {},

		/**
		 * Register a box to a chart.
		 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
		 * @param {Chart} chart - the chart to use
		 * @param {ILayoutItem} item - the item to add to be layed out
		 */
		addBox: function(chart, item) {
			if (!chart.boxes) {
				chart.boxes = [];
			}

			// initialize item with default values
			item.fullWidth = item.fullWidth || false;
			item.position = item.position || 'top';
			item.weight = item.weight || 0;

			chart.boxes.push(item);
		},

		/**
		 * Remove a layoutItem from a chart
		 * @param {Chart} chart - the chart to remove the box from
		 * @param {Object} layoutItem - the item to remove from the layout
		 */
		removeBox: function(chart, layoutItem) {
			var index = chart.boxes? chart.boxes.indexOf(layoutItem) : -1;
			if (index !== -1) {
				chart.boxes.splice(index, 1);
			}
		},

		/**
		 * Sets (or updates) options on the given `item`.
		 * @param {Chart} chart - the chart in which the item lives (or will be added to)
		 * @param {Object} item - the item to configure with the given options
		 * @param {Object} options - the new item options.
		 */
		configure: function(chart, item, options) {
			var props = ['fullWidth', 'position', 'weight'];
			var ilen = props.length;
			var i = 0;
			var prop;

			for (; i<ilen; ++i) {
				prop = props[i];
				if (options.hasOwnProperty(prop)) {
					item[prop] = options[prop];
				}
			}
		},

		/**
		 * Fits boxes of the given chart into the given size by having each box measure itself
		 * then running a fitting algorithm
		 * @param {Chart} chart - the chart
		 * @param {Number} width - the width to fit into
		 * @param {Number} height - the height to fit into
		 */
		update: function(chart, width, height) {
			if (!chart) {
				return;
			}

			var layoutOptions = chart.options.layout;
			var padding = layoutOptions ? layoutOptions.padding : null;

			var leftPadding = 0;
			var rightPadding = 0;
			var topPadding = 0;
			var bottomPadding = 0;

			if (!isNaN(padding)) {
				// options.layout.padding is a number. assign to all
				leftPadding = padding;
				rightPadding = padding;
				topPadding = padding;
				bottomPadding = padding;
			} else {
				leftPadding = padding.left || 0;
				rightPadding = padding.right || 0;
				topPadding = padding.top || 0;
				bottomPadding = padding.bottom || 0;
			}

			var leftBoxes = filterByPosition(chart.boxes, 'left');
			var rightBoxes = filterByPosition(chart.boxes, 'right');
			var topBoxes = filterByPosition(chart.boxes, 'top');
			var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
			var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');

			// Sort boxes by weight. A higher weight is further away from the chart area
			sortByWeight(leftBoxes, true);
			sortByWeight(rightBoxes, false);
			sortByWeight(topBoxes, true);
			sortByWeight(bottomBoxes, false);

			// Essentially we now have any number of boxes on each of the 4 sides.
			// Our canvas looks like the following.
			// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
			// B1 is the bottom axis
			// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
			// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
			// an error will be thrown.
			//
			// |----------------------------------------------------|
			// |                  T1 (Full Width)                   |
			// |----------------------------------------------------|
			// |    |    |                 T2                  |    |
			// |    |----|-------------------------------------|----|
			// |    |    | C1 |                           | C2 |    |
			// |    |    |----|                           |----|    |
			// |    |    |                                     |    |
			// | L1 | L2 |           ChartArea (C0)            | R1 |
			// |    |    |                                     |    |
			// |    |    |----|                           |----|    |
			// |    |    | C3 |                           | C4 |    |
			// |    |----|-------------------------------------|----|
			// |    |    |                 B1                  |    |
			// |----------------------------------------------------|
			// |                  B2 (Full Width)                   |
			// |----------------------------------------------------|
			//
			// What we do to find the best sizing, we do the following
			// 1. Determine the minimum size of the chart area.
			// 2. Split the remaining width equally between each vertical axis
			// 3. Split the remaining height equally between each horizontal axis
			// 4. Give each layout the maximum size it can be. The layout will return it's minimum size
			// 5. Adjust the sizes of each axis based on it's minimum reported size.
			// 6. Refit each axis
			// 7. Position each axis in the final location
			// 8. Tell the chart the final location of the chart area
			// 9. Tell any axes that overlay the chart area the positions of the chart area

			// Step 1
			var chartWidth = width - leftPadding - rightPadding;
			var chartHeight = height - topPadding - bottomPadding;
			var chartAreaWidth = chartWidth / 2; // min 50%
			var chartAreaHeight = chartHeight / 2; // min 50%

			// Step 2
			var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

			// Step 3
			var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);

			// Step 4
			var maxChartAreaWidth = chartWidth;
			var maxChartAreaHeight = chartHeight;
			var minBoxSizes = [];

			function getMinimumBoxSize(box) {
				var minSize;
				var isHorizontal = box.isHorizontal();

				if (isHorizontal) {
					minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
					maxChartAreaHeight -= minSize.height;
				} else {
					minSize = box.update(verticalBoxWidth, chartAreaHeight);
					maxChartAreaWidth -= minSize.width;
				}

				minBoxSizes.push({
					horizontal: isHorizontal,
					minSize: minSize,
					box: box,
				});
			}

			helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);

			// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)
			var maxHorizontalLeftPadding = 0;
			var maxHorizontalRightPadding = 0;
			var maxVerticalTopPadding = 0;
			var maxVerticalBottomPadding = 0;

			helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {
				if (horizontalBox.getPadding) {
					var boxPadding = horizontalBox.getPadding();
					maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
					maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);
				}
			});

			helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {
				if (verticalBox.getPadding) {
					var boxPadding = verticalBox.getPadding();
					maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
					maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);
				}
			});

			// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
			// be if the axes are drawn at their minimum sizes.
			// Steps 5 & 6
			var totalLeftBoxesWidth = leftPadding;
			var totalRightBoxesWidth = rightPadding;
			var totalTopBoxesHeight = topPadding;
			var totalBottomBoxesHeight = bottomPadding;

			// Function to fit a box
			function fitBox(box) {
				var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {
					return minBox.box === box;
				});

				if (minBoxSize) {
					if (box.isHorizontal()) {
						var scaleMargin = {
							left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
							right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
							top: 0,
							bottom: 0
						};

						// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
						// on the margin. Sometimes they need to increase in size slightly
						box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
					} else {
						box.update(minBoxSize.minSize.width, maxChartAreaHeight);
					}
				}
			}

			// Update, and calculate the left and right margins for the horizontal boxes
			helpers.each(leftBoxes.concat(rightBoxes), fitBox);

			helpers.each(leftBoxes, function(box) {
				totalLeftBoxesWidth += box.width;
			});

			helpers.each(rightBoxes, function(box) {
				totalRightBoxesWidth += box.width;
			});

			// Set the Left and Right margins for the horizontal boxes
			helpers.each(topBoxes.concat(bottomBoxes), fitBox);

			// Figure out how much margin is on the top and bottom of the vertical boxes
			helpers.each(topBoxes, function(box) {
				totalTopBoxesHeight += box.height;
			});

			helpers.each(bottomBoxes, function(box) {
				totalBottomBoxesHeight += box.height;
			});

			function finalFitVerticalBox(box) {
				var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {
					return minSize.box === box;
				});

				var scaleMargin = {
					left: 0,
					right: 0,
					top: totalTopBoxesHeight,
					bottom: totalBottomBoxesHeight
				};

				if (minBoxSize) {
					box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
				}
			}

			// Let the left layout know the final margin
			helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

			// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
			totalLeftBoxesWidth = leftPadding;
			totalRightBoxesWidth = rightPadding;
			totalTopBoxesHeight = topPadding;
			totalBottomBoxesHeight = bottomPadding;

			helpers.each(leftBoxes, function(box) {
				totalLeftBoxesWidth += box.width;
			});

			helpers.each(rightBoxes, function(box) {
				totalRightBoxesWidth += box.width;
			});

			helpers.each(topBoxes, function(box) {
				totalTopBoxesHeight += box.height;
			});
			helpers.each(bottomBoxes, function(box) {
				totalBottomBoxesHeight += box.height;
			});

			// We may be adding some padding to account for rotated x axis labels
			var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
			totalLeftBoxesWidth += leftPaddingAddition;
			totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);

			var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
			totalTopBoxesHeight += topPaddingAddition;
			totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);

			// Figure out if our chart area changed. This would occur if the dataset layout label rotation
			// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
			// without calling `fit` again
			var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
			var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

			if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
				helpers.each(leftBoxes, function(box) {
					box.height = newMaxChartAreaHeight;
				});

				helpers.each(rightBoxes, function(box) {
					box.height = newMaxChartAreaHeight;
				});

				helpers.each(topBoxes, function(box) {
					if (!box.fullWidth) {
						box.width = newMaxChartAreaWidth;
					}
				});

				helpers.each(bottomBoxes, function(box) {
					if (!box.fullWidth) {
						box.width = newMaxChartAreaWidth;
					}
				});

				maxChartAreaHeight = newMaxChartAreaHeight;
				maxChartAreaWidth = newMaxChartAreaWidth;
			}

			// Step 7 - Position the boxes
			var left = leftPadding + leftPaddingAddition;
			var top = topPadding + topPaddingAddition;

			function placeBox(box) {
				if (box.isHorizontal()) {
					box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
					box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
					box.top = top;
					box.bottom = top + box.height;

					// Move to next point
					top = box.bottom;

				} else {

					box.left = left;
					box.right = left + box.width;
					box.top = totalTopBoxesHeight;
					box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

					// Move to next point
					left = box.right;
				}
			}

			helpers.each(leftBoxes.concat(topBoxes), placeBox);

			// Account for chart width and height
			left += maxChartAreaWidth;
			top += maxChartAreaHeight;

			helpers.each(rightBoxes, placeBox);
			helpers.each(bottomBoxes, placeBox);

			// Step 8
			chart.chartArea = {
				left: totalLeftBoxesWidth,
				top: totalTopBoxesHeight,
				right: totalLeftBoxesWidth + maxChartAreaWidth,
				bottom: totalTopBoxesHeight + maxChartAreaHeight
			};

			// Step 9
			helpers.each(chartAreaBoxes, function(box) {
				box.left = chart.chartArea.left;
				box.top = chart.chartArea.top;
				box.right = chart.chartArea.right;
				box.bottom = chart.chartArea.bottom;

				box.update(maxChartAreaWidth, maxChartAreaHeight);
			});
		}
	};
};

},{}],30:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.global.plugins = {};

	/**
	 * The plugin service singleton
	 * @namespace Chart.plugins
	 * @since 2.1.0
	 */
	Chart.plugins = {
		/**
		 * Globally registered plugins.
		 * @private
		 */
		_plugins: [],

		/**
		 * This identifier is used to invalidate the descriptors cache attached to each chart
		 * when a global plugin is registered or unregistered. In this case, the cache ID is
		 * incremented and descriptors are regenerated during following API calls.
		 * @private
		 */
		_cacheId: 0,

		/**
		 * Registers the given plugin(s) if not already registered.
		 * @param {Array|Object} plugins plugin instance(s).
		 */
		register: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				if (p.indexOf(plugin) === -1) {
					p.push(plugin);
				}
			});

			this._cacheId++;
		},

		/**
		 * Unregisters the given plugin(s) only if registered.
		 * @param {Array|Object} plugins plugin instance(s).
		 */
		unregister: function(plugins) {
			var p = this._plugins;
			([]).concat(plugins).forEach(function(plugin) {
				var idx = p.indexOf(plugin);
				if (idx !== -1) {
					p.splice(idx, 1);
				}
			});

			this._cacheId++;
		},

		/**
		 * Remove all registered plugins.
		 * @since 2.1.5
		 */
		clear: function() {
			this._plugins = [];
			this._cacheId++;
		},

		/**
		 * Returns the number of registered plugins?
		 * @returns {Number}
		 * @since 2.1.5
		 */
		count: function() {
			return this._plugins.length;
		},

		/**
		 * Returns all registered plugin instances.
		 * @returns {Array} array of plugin objects.
		 * @since 2.1.5
		 */
		getAll: function() {
			return this._plugins;
		},

		/**
		 * Calls enabled plugins for `chart` on the specified hook and with the given args.
		 * This method immediately returns as soon as a plugin explicitly returns false. The
		 * returned value can be used, for instance, to interrupt the current action.
		 * @param {Object} chart - The chart instance for which plugins should be called.
		 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
		 * @param {Array} [args] - Extra arguments to apply to the hook call.
		 * @returns {Boolean} false if any of the plugins return false, else returns true.
		 */
		notify: function(chart, hook, args) {
			var descriptors = this.descriptors(chart);
			var ilen = descriptors.length;
			var i, descriptor, plugin, params, method;

			for (i=0; i<ilen; ++i) {
				descriptor = descriptors[i];
				plugin = descriptor.plugin;
				method = plugin[hook];
				if (typeof method === 'function') {
					params = [chart].concat(args || []);
					params.push(descriptor.options);
					if (method.apply(plugin, params) === false) {
						return false;
					}
				}
			}

			return true;
		},

		/**
		 * Returns descriptors of enabled plugins for the given chart.
		 * @returns {Array} [{ plugin, options }]
		 * @private
		 */
		descriptors: function(chart) {
			var cache = chart._plugins || (chart._plugins = {});
			if (cache.id === this._cacheId) {
				return cache.descriptors;
			}

			var plugins = [];
			var descriptors = [];
			var config = (chart && chart.config) || {};
			var defaults = Chart.defaults.global.plugins;
			var options = (config.options && config.options.plugins) || {};

			this._plugins.concat(config.plugins || []).forEach(function(plugin) {
				var idx = plugins.indexOf(plugin);
				if (idx !== -1) {
					return;
				}

				var id = plugin.id;
				var opts = options[id];
				if (opts === false) {
					return;
				}

				if (opts === true) {
					opts = helpers.clone(defaults[id]);
				}

				plugins.push(plugin);
				descriptors.push({
					plugin: plugin,
					options: opts || {}
				});
			});

			cache.descriptors = descriptors;
			cache.id = this._cacheId;
			return descriptors;
		}
	};

	/**
	 * Plugin extension hooks.
	 * @interface IPlugin
	 * @since 2.1.0
	 */
	/**
	 * @method IPlugin#beforeInit
	 * @desc Called before initializing `chart`.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#afterInit
	 * @desc Called after `chart` has been initialized and before the first update.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeUpdate
	 * @desc Called before updating `chart`. If any plugin returns `false`, the update
	 * is cancelled (and thus subsequent render(s)) until another `update` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart update.
	 */
	/**
	 * @method IPlugin#afterUpdate
	 * @desc Called after `chart` has been updated and before rendering. Note that this
	 * hook will not be called if the chart update has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeDatasetsUpdate
 	 * @desc Called before updating the `chart` datasets. If any plugin returns `false`,
	 * the datasets update is cancelled until another `update` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} false to cancel the datasets update.
	 * @since version 2.1.5
	 */
	/**
	 * @method IPlugin#afterDatasetsUpdate
	 * @desc Called after the `chart` datasets have been updated. Note that this hook
	 * will not be called if the datasets update has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 * @since version 2.1.5
	 */
	/**
	 * @method IPlugin#beforeDatasetUpdate
 	 * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin
	 * returns `false`, the datasets update is cancelled until another `update` is triggered.
	 * @param {Chart} chart - The chart instance.
	 * @param {Object} args - The call arguments.
	 * @param {Object} args.index - The dataset index.
	 * @param {Number} args.meta - The dataset metadata.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart datasets drawing.
	 */
	/**
	 * @method IPlugin#afterDatasetUpdate
 	 * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note
	 * that this hook will not be called if the datasets update has been previously cancelled.
	 * @param {Chart} chart - The chart instance.
	 * @param {Object} args - The call arguments.
	 * @param {Object} args.index - The dataset index.
	 * @param {Number} args.meta - The dataset metadata.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeLayout
	 * @desc Called before laying out `chart`. If any plugin returns `false`,
	 * the layout update is cancelled until another `update` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart layout.
	 */
	/**
	 * @method IPlugin#afterLayout
	 * @desc Called after the `chart` has been layed out. Note that this hook will not
	 * be called if the layout update has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeRender
	 * @desc Called before rendering `chart`. If any plugin returns `false`,
	 * the rendering is cancelled until another `render` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart rendering.
	 */
	/**
	 * @method IPlugin#afterRender
	 * @desc Called after the `chart` has been fully rendered (and animation completed). Note
	 * that this hook will not be called if the rendering has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeDraw
	 * @desc Called before drawing `chart` at every animation frame specified by the given
	 * easing value. If any plugin returns `false`, the frame drawing is cancelled until
	 * another `render` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart drawing.
	 */
	/**
	 * @method IPlugin#afterDraw
	 * @desc Called after the `chart` has been drawn for the specific easing value. Note
	 * that this hook will not be called if the drawing has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeDatasetsDraw
 	 * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,
	 * the datasets drawing is cancelled until another `render` is triggered.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart datasets drawing.
	 */
	/**
	 * @method IPlugin#afterDatasetsDraw
	 * @desc Called after the `chart` datasets have been drawn. Note that this hook
	 * will not be called if the datasets drawing has been previously cancelled.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeDatasetDraw
 	 * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets
	 * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing
	 * is cancelled until another `render` is triggered.
	 * @param {Chart} chart - The chart instance.
	 * @param {Object} args - The call arguments.
	 * @param {Object} args.index - The dataset index.
	 * @param {Number} args.meta - The dataset metadata.
	 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 * @returns {Boolean} `false` to cancel the chart datasets drawing.
	 */
	/**
	 * @method IPlugin#afterDatasetDraw
 	 * @desc Called after the `chart` datasets at the given `args.index` have been drawn
	 * (datasets are drawn in the reverse order). Note that this hook will not be called
	 * if the datasets drawing has been previously cancelled.
	 * @param {Chart} chart - The chart instance.
	 * @param {Object} args - The call arguments.
	 * @param {Object} args.index - The dataset index.
	 * @param {Number} args.meta - The dataset metadata.
	 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#beforeEvent
 	 * @desc Called before processing the specified `event`. If any plugin returns `false`,
	 * the event will be discarded.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {IEvent} event - The event object.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#afterEvent
	 * @desc Called after the `event` has been consumed. Note that this hook
	 * will not be called if the `event` has been previously discarded.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {IEvent} event - The event object.
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#resize
	 * @desc Called after the chart as been resized.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Number} size - The new canvas display size (eq. canvas.style width & height).
	 * @param {Object} options - The plugin options.
	 */
	/**
	 * @method IPlugin#destroy
	 * @desc Called after the chart as been destroyed.
	 * @param {Chart.Controller} chart - The chart instance.
	 * @param {Object} options - The plugin options.
	 */

	/**
	 * Provided for backward compatibility, use Chart.plugins instead
	 * @namespace Chart.pluginService
	 * @deprecated since version 2.1.5
	 * @todo remove at version 3
	 * @private
	 */
	Chart.pluginService = Chart.plugins;

	/**
	 * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
	 * effect, instead simply create/register plugins via plain JavaScript objects.
	 * @interface Chart.PluginBase
	 * @deprecated since version 2.5.0
	 * @todo remove at version 3
	 * @private
	 */
	Chart.PluginBase = Chart.Element.extend({});
};

},{}],31:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.defaults.scale = {
		display: true,
		position: 'left',

		// grid line settings
		gridLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1,
			drawBorder: true,
			drawOnChartArea: true,
			drawTicks: true,
			tickMarkLength: 10,
			zeroLineWidth: 1,
			zeroLineColor: 'rgba(0,0,0,0.25)',
			zeroLineBorderDash: [],
			zeroLineBorderDashOffset: 0.0,
			offsetGridLines: false,
			borderDash: [],
			borderDashOffset: 0.0
		},

		// scale label
		scaleLabel: {
			// actual label
			labelString: '',

			// display property
			display: false
		},

		// label settings
		ticks: {
			beginAtZero: false,
			minRotation: 0,
			maxRotation: 50,
			mirror: false,
			padding: 0,
			reverse: false,
			display: true,
			autoSkip: true,
			autoSkipPadding: 0,
			labelOffset: 0,
			// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
			callback: Chart.Ticks.formatters.values
		}
	};

	function computeTextSize(context, tick, font) {
		return helpers.isArray(tick) ?
			helpers.longestText(context, font, tick) :
			context.measureText(tick).width;
	}

	function parseFontOptions(options) {
		var getValueOrDefault = helpers.getValueOrDefault;
		var globalDefaults = Chart.defaults.global;
		var size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
		var style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
		var family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);

		return {
			size: size,
			style: style,
			family: family,
			font: helpers.fontString(size, style, family)
		};
	}

	Chart.Scale = Chart.Element.extend({
		/**
		 * Get the padding needed for the scale
		 * @method getPadding
		 * @private
		 * @returns {Padding} the necessary padding
		 */
		getPadding: function() {
			var me = this;
			return {
				left: me.paddingLeft || 0,
				top: me.paddingTop || 0,
				right: me.paddingRight || 0,
				bottom: me.paddingBottom || 0
			};
		},

		// These methods are ordered by lifecyle. Utilities then follow.
		// Any function defined here is inherited by all scale types.
		// Any function can be extended by the scale type

		beforeUpdate: function() {
			helpers.callback(this.options.beforeUpdate, [this]);
		},
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = helpers.extend({
				left: 0,
				right: 0,
				top: 0,
				bottom: 0
			}, margins);
			me.longestTextCache = me.longestTextCache || {};

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();

			// Data min/max
			me.beforeDataLimits();
			me.determineDataLimits();
			me.afterDataLimits();

			// Ticks
			me.beforeBuildTicks();
			me.buildTicks();
			me.afterBuildTicks();

			me.beforeTickToLabelConversion();
			me.convertTicksToLabels();
			me.afterTickToLabelConversion();

			// Tick Rotation
			me.beforeCalculateTickRotation();
			me.calculateTickRotation();
			me.afterCalculateTickRotation();
			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: function() {
			helpers.callback(this.options.afterUpdate, [this]);
		},

		//

		beforeSetDimensions: function() {
			helpers.callback(this.options.beforeSetDimensions, [this]);
		},
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;
		},
		afterSetDimensions: function() {
			helpers.callback(this.options.afterSetDimensions, [this]);
		},

		// Data limits
		beforeDataLimits: function() {
			helpers.callback(this.options.beforeDataLimits, [this]);
		},
		determineDataLimits: helpers.noop,
		afterDataLimits: function() {
			helpers.callback(this.options.afterDataLimits, [this]);
		},

		//
		beforeBuildTicks: function() {
			helpers.callback(this.options.beforeBuildTicks, [this]);
		},
		buildTicks: helpers.noop,
		afterBuildTicks: function() {
			helpers.callback(this.options.afterBuildTicks, [this]);
		},

		beforeTickToLabelConversion: function() {
			helpers.callback(this.options.beforeTickToLabelConversion, [this]);
		},
		convertTicksToLabels: function() {
			var me = this;
			// Convert ticks to strings
			var tickOpts = me.options.ticks;
			me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);
		},
		afterTickToLabelConversion: function() {
			helpers.callback(this.options.afterTickToLabelConversion, [this]);
		},

		//

		beforeCalculateTickRotation: function() {
			helpers.callback(this.options.beforeCalculateTickRotation, [this]);
		},
		calculateTickRotation: function() {
			var me = this;
			var context = me.ctx;
			var tickOpts = me.options.ticks;

			// Get the width of each grid by calculating the difference
			// between x offsets between 0 and 1.
			var tickFont = parseFontOptions(tickOpts);
			context.font = tickFont.font;

			var labelRotation = tickOpts.minRotation || 0;

			if (me.options.display && me.isHorizontal()) {
				var originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);
				var labelWidth = originalLabelWidth;
				var cosRotation;
				var sinRotation;

				// Allow 3 pixels x2 padding either side for label readability
				var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

				// Max label rotation can be set or default to 90 - also act as a loop counter
				while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
					var angleRadians = helpers.toRadians(labelRotation);
					cosRotation = Math.cos(angleRadians);
					sinRotation = Math.sin(angleRadians);

					if (sinRotation * originalLabelWidth > me.maxHeight) {
						// go back one step
						labelRotation--;
						break;
					}

					labelRotation++;
					labelWidth = cosRotation * originalLabelWidth;
				}
			}

			me.labelRotation = labelRotation;
		},
		afterCalculateTickRotation: function() {
			helpers.callback(this.options.afterCalculateTickRotation, [this]);
		},

		//

		beforeFit: function() {
			helpers.callback(this.options.beforeFit, [this]);
		},
		fit: function() {
			var me = this;
			// Reset
			var minSize = me.minSize = {
				width: 0,
				height: 0
			};

			var opts = me.options;
			var tickOpts = opts.ticks;
			var scaleLabelOpts = opts.scaleLabel;
			var gridLineOpts = opts.gridLines;
			var display = opts.display;
			var isHorizontal = me.isHorizontal();

			var tickFont = parseFontOptions(tickOpts);
			var scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;
			var tickMarkLength = opts.gridLines.tickMarkLength;

			// Width
			if (isHorizontal) {
				// subtract the margins to line up with the chartArea if we are a full width scale
				minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
			} else {
				minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
			}

			// height
			if (isHorizontal) {
				minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
			} else {
				minSize.height = me.maxHeight; // fill all the height
			}

			// Are we showing a title for the scale?
			if (scaleLabelOpts.display && display) {
				if (isHorizontal) {
					minSize.height += scaleLabelFontSize;
				} else {
					minSize.width += scaleLabelFontSize;
				}
			}

			// Don't bother fitting the ticks if we are not showing them
			if (tickOpts.display && display) {
				var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);
				var tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);
				var lineSpace = tickFont.size * 0.5;

				if (isHorizontal) {
					// A horizontal axis is more constrained by the height.
					me.longestLabelWidth = largestTextWidth;

					var angleRadians = helpers.toRadians(me.labelRotation);
					var cosRotation = Math.cos(angleRadians);
					var sinRotation = Math.sin(angleRadians);

					// TODO - improve this calculation
					var labelHeight = (sinRotation * largestTextWidth)
						+ (tickFont.size * tallestLabelHeightInLines)
						+ (lineSpace * tallestLabelHeightInLines);

					minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);
					me.ctx.font = tickFont.font;

					var firstTick = me.ticks[0];
					var firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);

					var lastTick = me.ticks[me.ticks.length - 1];
					var lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);

					// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated
					// by the font height
					if (me.labelRotation !== 0) {
						me.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges
						me.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;
					} else {
						me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
						me.paddingRight = lastLabelWidth / 2 + 3;
					}
				} else {
					// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first
					// Account for padding

					if (tickOpts.mirror) {
						largestTextWidth = 0;
					} else {
						largestTextWidth += me.options.ticks.padding;
					}
					minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);
					me.paddingTop = tickFont.size / 2;
					me.paddingBottom = tickFont.size / 2;
				}
			}

			me.handleMargins();

			me.width = minSize.width;
			me.height = minSize.height;
		},

		/**
		 * Handle margins and padding interactions
		 * @private
		 */
		handleMargins: function() {
			var me = this;
			if (me.margins) {
				me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
				me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
				me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
				me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
			}
		},

		afterFit: function() {
			helpers.callback(this.options.afterFit, [this]);
		},

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},
		isFullWidth: function() {
			return (this.options.fullWidth);
		},

		// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
		getRightValue: function(rawValue) {
			// Null and undefined values first
			if (rawValue === null || typeof(rawValue) === 'undefined') {
				return NaN;
			}
			// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
			if (typeof(rawValue) === 'number' && !isFinite(rawValue)) {
				return NaN;
			}
			// If it is in fact an object, dive in one more level
			if (typeof(rawValue) === 'object') {
				if ((rawValue instanceof Date) || (rawValue.isValid)) {
					return rawValue;
				}
				return this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);
			}

			// Value is good, return it
			return rawValue;
		},

		// Used to get the value to display in the tooltip for the data at the given index
		// function getLabelForIndex(index, datasetIndex)
		getLabelForIndex: helpers.noop,

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: helpers.noop,

		// Used to get the data value from a given pixel. This is the inverse of getPixelForValue
		getValueForPixel: helpers.noop,

		// Used for tick location, should
		getPixelForTick: function(index, includeOffset) {
			var me = this;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);
				var pixel = (tickWidth * index) + me.paddingLeft;

				if (includeOffset) {
					pixel += tickWidth / 2;
				}

				var finalVal = me.left + Math.round(pixel);
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
			return me.top + (index * (innerHeight / (me.ticks.length - 1)));
		},

		// Utility for getting the pixel location of a percentage of scale
		getPixelForDecimal: function(decimal /* , includeOffset*/) {
			var me = this;
			if (me.isHorizontal()) {
				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
				var valueOffset = (innerWidth * decimal) + me.paddingLeft;

				var finalVal = me.left + Math.round(valueOffset);
				finalVal += me.isFullWidth() ? me.margins.left : 0;
				return finalVal;
			}
			return me.top + (decimal * me.height);
		},

		getBasePixel: function() {
			return this.getPixelForValue(this.getBaseValue());
		},

		getBaseValue: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.beginAtZero ? 0:
				min < 0 && max < 0? max :
				min > 0 && max > 0? min :
				0;
		},

		// Actually draw the scale on the canvas
		// @param {rectangle} chartArea : the area of the chart to draw full grid lines on
		draw: function(chartArea) {
			var me = this;
			var options = me.options;
			if (!options.display) {
				return;
			}

			var context = me.ctx;
			var globalDefaults = Chart.defaults.global;
			var optionTicks = options.ticks;
			var gridLines = options.gridLines;
			var scaleLabel = options.scaleLabel;

			var isRotated = me.labelRotation !== 0;
			var skipRatio;
			var useAutoskipper = optionTicks.autoSkip;
			var isHorizontal = me.isHorizontal();

			// figure out the maximum number of gridlines to show
			var maxTicks;
			if (optionTicks.maxTicksLimit) {
				maxTicks = optionTicks.maxTicksLimit;
			}

			var tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
			var tickFont = parseFontOptions(optionTicks);

			var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;

			var scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
			var scaleLabelFont = parseFontOptions(scaleLabel);

			var labelRotationRadians = helpers.toRadians(me.labelRotation);
			var cosRotation = Math.cos(labelRotationRadians);
			var longestRotatedLabel = me.longestLabelWidth * cosRotation;

			// Make sure we draw text in the correct color and font
			context.fillStyle = tickFontColor;

			var itemsToDraw = [];

			if (isHorizontal) {
				skipRatio = false;

				if ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {
					skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));
				}

				// if they defined a max number of optionTicks,
				// increase skipRatio until that number is met
				if (maxTicks && me.ticks.length > maxTicks) {
					while (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {
						if (!skipRatio) {
							skipRatio = 1;
						}
						skipRatio += 1;
					}
				}

				if (!useAutoskipper) {
					skipRatio = false;
				}
			}


			var xTickStart = options.position === 'right' ? me.left : me.right - tl;
			var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
			var yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;
			var yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;

			helpers.each(me.ticks, function(label, index) {
				// If the callback returned a null or undefined value, do not draw this line
				if (label === undefined || label === null) {
					return;
				}

				var isLastTick = me.ticks.length === index + 1;

				// Since we always show the last tick,we need may need to hide the last shown one before
				var shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);
				if (shouldSkip && !isLastTick || (label === undefined || label === null)) {
					return;
				}

				var lineWidth, lineColor, borderDash, borderDashOffset;
				if (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {
					// Draw the first index specially
					lineWidth = gridLines.zeroLineWidth;
					lineColor = gridLines.zeroLineColor;
					borderDash = gridLines.zeroLineBorderDash;
					borderDashOffset = gridLines.zeroLineBorderDashOffset;
				} else {
					lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);
					lineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);
					borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
					borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);
				}

				// Common properties
				var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
				var textAlign = 'middle';
				var textBaseline = 'middle';

				if (isHorizontal) {

					if (options.position === 'bottom') {
						// bottom
						textBaseline = !isRotated? 'top':'middle';
						textAlign = !isRotated? 'center': 'right';
						labelY = me.top + tl;
					} else {
						// top
						textBaseline = !isRotated? 'bottom':'middle';
						textAlign = !isRotated? 'center': 'left';
						labelY = me.bottom - tl;
					}

					var xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines
					labelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)

					tx1 = tx2 = x1 = x2 = xLineValue;
					ty1 = yTickStart;
					ty2 = yTickEnd;
					y1 = chartArea.top;
					y2 = chartArea.bottom;
				} else {
					var isLeft = options.position === 'left';
					var tickPadding = optionTicks.padding;
					var labelXOffset;

					if (optionTicks.mirror) {
						textAlign = isLeft ? 'left' : 'right';
						labelXOffset = tickPadding;
					} else {
						textAlign = isLeft ? 'right' : 'left';
						labelXOffset = tl + tickPadding;
					}

					labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;

					var yLineValue = me.getPixelForTick(index); // xvalues for grid lines
					yLineValue += helpers.aliasPixel(lineWidth);
					labelY = me.getPixelForTick(index, gridLines.offsetGridLines);

					tx1 = xTickStart;
					tx2 = xTickEnd;
					x1 = chartArea.left;
					x2 = chartArea.right;
					ty1 = ty2 = y1 = y2 = yLineValue;
				}

				itemsToDraw.push({
					tx1: tx1,
					ty1: ty1,
					tx2: tx2,
					ty2: ty2,
					x1: x1,
					y1: y1,
					x2: x2,
					y2: y2,
					labelX: labelX,
					labelY: labelY,
					glWidth: lineWidth,
					glColor: lineColor,
					glBorderDash: borderDash,
					glBorderDashOffset: borderDashOffset,
					rotation: -1 * labelRotationRadians,
					label: label,
					textBaseline: textBaseline,
					textAlign: textAlign
				});
			});

			// Draw all of the tick labels, tick marks, and grid lines at the correct places
			helpers.each(itemsToDraw, function(itemToDraw) {
				if (gridLines.display) {
					context.save();
					context.lineWidth = itemToDraw.glWidth;
					context.strokeStyle = itemToDraw.glColor;
					if (context.setLineDash) {
						context.setLineDash(itemToDraw.glBorderDash);
						context.lineDashOffset = itemToDraw.glBorderDashOffset;
					}

					context.beginPath();

					if (gridLines.drawTicks) {
						context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
						context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
					}

					if (gridLines.drawOnChartArea) {
						context.moveTo(itemToDraw.x1, itemToDraw.y1);
						context.lineTo(itemToDraw.x2, itemToDraw.y2);
					}

					context.stroke();
					context.restore();
				}

				if (optionTicks.display) {
					context.save();
					context.translate(itemToDraw.labelX, itemToDraw.labelY);
					context.rotate(itemToDraw.rotation);
					context.font = tickFont.font;
					context.textBaseline = itemToDraw.textBaseline;
					context.textAlign = itemToDraw.textAlign;

					var label = itemToDraw.label;
					if (helpers.isArray(label)) {
						for (var i = 0, y = 0; i < label.length; ++i) {
							// We just make sure the multiline element is a string here..
							context.fillText('' + label[i], 0, y);
							// apply same lineSpacing as calculated @ L#320
							y += (tickFont.size * 1.5);
						}
					} else {
						context.fillText(label, 0, 0);
					}
					context.restore();
				}
			});

			if (scaleLabel.display) {
				// Draw the scale label
				var scaleLabelX;
				var scaleLabelY;
				var rotation = 0;

				if (isHorizontal) {
					scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
					scaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);
				} else {
					var isLeft = options.position === 'left';
					scaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);
					scaleLabelY = me.top + ((me.bottom - me.top) / 2);
					rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
				}

				context.save();
				context.translate(scaleLabelX, scaleLabelY);
				context.rotate(rotation);
				context.textAlign = 'center';
				context.textBaseline = 'middle';
				context.fillStyle = scaleLabelFontColor; // render in correct colour
				context.font = scaleLabelFont.font;
				context.fillText(scaleLabel.labelString, 0, 0);
				context.restore();
			}

			if (gridLines.drawBorder) {
				// Draw the line at the edge of the axis
				context.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);
				context.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);
				var x1 = me.left,
					x2 = me.right,
					y1 = me.top,
					y2 = me.bottom;

				var aliasPixel = helpers.aliasPixel(context.lineWidth);
				if (isHorizontal) {
					y1 = y2 = options.position === 'top' ? me.bottom : me.top;
					y1 += aliasPixel;
					y2 += aliasPixel;
				} else {
					x1 = x2 = options.position === 'left' ? me.right : me.left;
					x1 += aliasPixel;
					x2 += aliasPixel;
				}

				context.beginPath();
				context.moveTo(x1, y1);
				context.lineTo(x2, y2);
				context.stroke();
			}
		}
	});
};

},{}],32:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	Chart.scaleService = {
		// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
		// use the new chart options to grab the correct scale
		constructors: {},
		// Use a registration function so that we can move to an ES6 map when we no longer need to support
		// old browsers

		// Scale config defaults
		defaults: {},
		registerScaleType: function(type, scaleConstructor, defaults) {
			this.constructors[type] = scaleConstructor;
			this.defaults[type] = helpers.clone(defaults);
		},
		getScaleConstructor: function(type) {
			return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
		},
		getScaleDefaults: function(type) {
			// Return the scale defaults merged with the global settings so that we always use the latest ones
			return this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};
		},
		updateScaleDefaults: function(type, additions) {
			var defaults = this.defaults;
			if (defaults.hasOwnProperty(type)) {
				defaults[type] = helpers.extend(defaults[type], additions);
			}
		},
		addScalesToLayout: function(chart) {
			// Adds each scale to the chart.boxes array to be sized accordingly
			helpers.each(chart.scales, function(scale) {
				// Set ILayoutItem parameters for backwards compatibility
				scale.fullWidth = scale.options.fullWidth;
				scale.position = scale.options.position;
				scale.weight = scale.options.weight;
				Chart.layoutService.addBox(chart, scale);
			});
		}
	};
};

},{}],33:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	/**
	 * Namespace to hold static tick generation functions
	 * @namespace Chart.Ticks
	 */
	Chart.Ticks = {
		/**
		 * Namespace to hold generators for different types of ticks
		 * @namespace Chart.Ticks.generators
		 */
		generators: {
			/**
			 * Interface for the options provided to the numeric tick generator
			 * @interface INumericTickGenerationOptions
			 */
			/**
			 * The maximum number of ticks to display
			 * @name INumericTickGenerationOptions#maxTicks
			 * @type Number
			 */
			/**
			 * The distance between each tick.
			 * @name INumericTickGenerationOptions#stepSize
			 * @type Number
			 * @optional
			 */
			/**
			 * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum
			 * @name INumericTickGenerationOptions#min
			 * @type Number
			 * @optional
			 */
			/**
			 * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum
			 * @name INumericTickGenerationOptions#max
			 * @type Number
			 * @optional
			 */

			/**
			 * Generate a set of linear ticks
			 * @method Chart.Ticks.generators.linear
			 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
			 * @param dataRange {IRange} the range of the data
			 * @returns {Array<Number>} array of tick values
			 */
			linear: function(generationOptions, dataRange) {
				var ticks = [];
				// To get a "nice" value for the tick spacing, we will use the appropriately named
				// "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
				// for details.

				var spacing;
				if (generationOptions.stepSize && generationOptions.stepSize > 0) {
					spacing = generationOptions.stepSize;
				} else {
					var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
					spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);
				}
				var niceMin = Math.floor(dataRange.min / spacing) * spacing;
				var niceMax = Math.ceil(dataRange.max / spacing) * spacing;

				// If min, max and stepSize is set and they make an evenly spaced scale use it.
				if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {
					// If very close to our whole number, use it.
					if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {
						niceMin = generationOptions.min;
						niceMax = generationOptions.max;
					}
				}

				var numSpaces = (niceMax - niceMin) / spacing;
				// If very close to our rounded value, use it.
				if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
					numSpaces = Math.round(numSpaces);
				} else {
					numSpaces = Math.ceil(numSpaces);
				}

				// Put the values into the ticks array
				ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
				for (var j = 1; j < numSpaces; ++j) {
					ticks.push(niceMin + (j * spacing));
				}
				ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);

				return ticks;
			},

			/**
			 * Generate a set of logarithmic ticks
			 * @method Chart.Ticks.generators.logarithmic
			 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
			 * @param dataRange {IRange} the range of the data
			 * @returns {Array<Number>} array of tick values
			 */
			logarithmic: function(generationOptions, dataRange) {
				var ticks = [];
				var getValueOrDefault = helpers.getValueOrDefault;

				// Figure out what the max number of ticks we can support it is based on the size of
				// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
				// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
				// the graph
				var tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));

				var endExp = Math.floor(helpers.log10(dataRange.max));
				var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
				var exp;
				var significand;

				if (tickVal === 0) {
					exp = Math.floor(helpers.log10(dataRange.minNotZero));
					significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

					ticks.push(tickVal);
					tickVal = significand * Math.pow(10, exp);
				} else {
					exp = Math.floor(helpers.log10(tickVal));
					significand = Math.floor(tickVal / Math.pow(10, exp));
				}

				do {
					ticks.push(tickVal);

					++significand;
					if (significand === 10) {
						significand = 1;
						++exp;
					}

					tickVal = significand * Math.pow(10, exp);
				} while (exp < endExp || (exp === endExp && significand < endSignificand));

				var lastTick = getValueOrDefault(generationOptions.max, tickVal);
				ticks.push(lastTick);

				return ticks;
			}
		},

		/**
		 * Namespace to hold formatters for different types of ticks
		 * @namespace Chart.Ticks.formatters
		 */
		formatters: {
			/**
			 * Formatter for value labels
			 * @method Chart.Ticks.formatters.values
			 * @param value the value to display
			 * @return {String|Array} the label to display
			 */
			values: function(value) {
				return helpers.isArray(value) ? value : '' + value;
			},

			/**
			 * Formatter for linear numeric ticks
			 * @method Chart.Ticks.formatters.linear
			 * @param tickValue {Number} the value to be formatted
			 * @param index {Number} the position of the tickValue parameter in the ticks array
			 * @param ticks {Array<Number>} the list of ticks being converted
			 * @return {String} string representation of the tickValue parameter
			 */
			linear: function(tickValue, index, ticks) {
				// If we have lots of ticks, don't use the ones
				var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

				// If we have a number like 2.5 as the delta, figure out how many decimal places we need
				if (Math.abs(delta) > 1) {
					if (tickValue !== Math.floor(tickValue)) {
						// not an integer
						delta = tickValue - Math.floor(tickValue);
					}
				}

				var logDelta = helpers.log10(Math.abs(delta));
				var tickString = '';

				if (tickValue !== 0) {
					var numDecimal = -1 * Math.floor(logDelta);
					numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
					tickString = tickValue.toFixed(numDecimal);
				} else {
					tickString = '0'; // never show decimal places for 0
				}

				return tickString;
			},

			logarithmic: function(tickValue, index, ticks) {
				var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));

				if (tickValue === 0) {
					return '0';
				} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
					return tickValue.toExponential();
				}
				return '';
			}
		}
	};
};

},{}],34:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	/**
 	 * Helper method to merge the opacity into a color
 	 */
	function mergeOpacity(colorString, opacity) {
		var color = helpers.color(colorString);
		return color.alpha(opacity * color.alpha()).rgbaString();
	}

	Chart.defaults.global.tooltips = {
		enabled: true,
		custom: null,
		mode: 'nearest',
		position: 'average',
		intersect: true,
		backgroundColor: 'rgba(0,0,0,0.8)',
		titleFontStyle: 'bold',
		titleSpacing: 2,
		titleMarginBottom: 6,
		titleFontColor: '#fff',
		titleAlign: 'left',
		bodySpacing: 2,
		bodyFontColor: '#fff',
		bodyAlign: 'left',
		footerFontStyle: 'bold',
		footerSpacing: 2,
		footerMarginTop: 6,
		footerFontColor: '#fff',
		footerAlign: 'left',
		yPadding: 6,
		xPadding: 6,
		caretPadding: 2,
		caretSize: 5,
		cornerRadius: 6,
		multiKeyBackground: '#fff',
		displayColors: true,
		borderColor: 'rgba(0,0,0,0)',
		borderWidth: 0,
		callbacks: {
			// Args are: (tooltipItems, data)
			beforeTitle: helpers.noop,
			title: function(tooltipItems, data) {
				// Pick first xLabel for now
				var title = '';
				var labels = data.labels;
				var labelCount = labels ? labels.length : 0;

				if (tooltipItems.length > 0) {
					var item = tooltipItems[0];

					if (item.xLabel) {
						title = item.xLabel;
					} else if (labelCount > 0 && item.index < labelCount) {
						title = labels[item.index];
					}
				}

				return title;
			},
			afterTitle: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeBody: helpers.noop,

			// Args are: (tooltipItem, data)
			beforeLabel: helpers.noop,
			label: function(tooltipItem, data) {
				var label = data.datasets[tooltipItem.datasetIndex].label || '';

				if (label) {
					label += ': ';
				}
				label += tooltipItem.yLabel;
				return label;
			},
			labelColor: function(tooltipItem, chart) {
				var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
				var activeElement = meta.data[tooltipItem.index];
				var view = activeElement._view;
				return {
					borderColor: view.borderColor,
					backgroundColor: view.backgroundColor
				};
			},
			afterLabel: helpers.noop,

			// Args are: (tooltipItems, data)
			afterBody: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeFooter: helpers.noop,
			footer: helpers.noop,
			afterFooter: helpers.noop
		}
	};

	// Helper to push or concat based on if the 2nd parameter is an array or not
	function pushOrConcat(base, toPush) {
		if (toPush) {
			if (helpers.isArray(toPush)) {
				// base = base.concat(toPush);
				Array.prototype.push.apply(base, toPush);
			} else {
				base.push(toPush);
			}
		}

		return base;
	}

	// Private helper to create a tooltip item model
	// @param element : the chart element (point, arc, bar) to create the tooltip item for
	// @return : new tooltip item
	function createTooltipItem(element) {
		var xScale = element._xScale;
		var yScale = element._yScale || element._scale; // handle radar || polarArea charts
		var index = element._index,
			datasetIndex = element._datasetIndex;

		return {
			xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
			yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
			index: index,
			datasetIndex: datasetIndex,
			x: element._model.x,
			y: element._model.y
		};
	}

	/**
	 * Helper to get the reset model for the tooltip
	 * @param tooltipOpts {Object} the tooltip options
	 */
	function getBaseModel(tooltipOpts) {
		var globalDefaults = Chart.defaults.global;
		var getValueOrDefault = helpers.getValueOrDefault;

		return {
			// Positioning
			xPadding: tooltipOpts.xPadding,
			yPadding: tooltipOpts.yPadding,
			xAlign: tooltipOpts.xAlign,
			yAlign: tooltipOpts.yAlign,

			// Body
			bodyFontColor: tooltipOpts.bodyFontColor,
			_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
			_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
			_bodyAlign: tooltipOpts.bodyAlign,
			bodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
			bodySpacing: tooltipOpts.bodySpacing,

			// Title
			titleFontColor: tooltipOpts.titleFontColor,
			_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
			_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
			titleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
			_titleAlign: tooltipOpts.titleAlign,
			titleSpacing: tooltipOpts.titleSpacing,
			titleMarginBottom: tooltipOpts.titleMarginBottom,

			// Footer
			footerFontColor: tooltipOpts.footerFontColor,
			_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
			_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
			footerFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
			_footerAlign: tooltipOpts.footerAlign,
			footerSpacing: tooltipOpts.footerSpacing,
			footerMarginTop: tooltipOpts.footerMarginTop,

			// Appearance
			caretSize: tooltipOpts.caretSize,
			cornerRadius: tooltipOpts.cornerRadius,
			backgroundColor: tooltipOpts.backgroundColor,
			opacity: 0,
			legendColorBackground: tooltipOpts.multiKeyBackground,
			displayColors: tooltipOpts.displayColors,
			borderColor: tooltipOpts.borderColor,
			borderWidth: tooltipOpts.borderWidth
		};
	}

	/**
	 * Get the size of the tooltip
	 */
	function getTooltipSize(tooltip, model) {
		var ctx = tooltip._chart.ctx;

		var height = model.yPadding * 2; // Tooltip Padding
		var width = 0;

		// Count of all lines in the body
		var body = model.body;
		var combinedBodyLength = body.reduce(function(count, bodyItem) {
			return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
		}, 0);
		combinedBodyLength += model.beforeBody.length + model.afterBody.length;

		var titleLineCount = model.title.length;
		var footerLineCount = model.footer.length;
		var titleFontSize = model.titleFontSize,
			bodyFontSize = model.bodyFontSize,
			footerFontSize = model.footerFontSize;

		height += titleLineCount * titleFontSize; // Title Lines
		height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
		height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
		height += combinedBodyLength * bodyFontSize; // Body Lines
		height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
		height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
		height += footerLineCount * (footerFontSize); // Footer Lines
		height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

		// Title width
		var widthPadding = 0;
		var maxLineWidth = function(line) {
			width = Math.max(width, ctx.measureText(line).width + widthPadding);
		};

		ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
		helpers.each(model.title, maxLineWidth);

		// Body width
		ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
		helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

		// Body lines may include some extra width due to the color box
		widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
		helpers.each(body, function(bodyItem) {
			helpers.each(bodyItem.before, maxLineWidth);
			helpers.each(bodyItem.lines, maxLineWidth);
			helpers.each(bodyItem.after, maxLineWidth);
		});

		// Reset back to 0
		widthPadding = 0;

		// Footer width
		ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
		helpers.each(model.footer, maxLineWidth);

		// Add padding
		width += 2 * model.xPadding;

		return {
			width: width,
			height: height
		};
	}

	/**
	 * Helper to get the alignment of a tooltip given the size
	 */
	function determineAlignment(tooltip, size) {
		var model = tooltip._model;
		var chart = tooltip._chart;
		var chartArea = tooltip._chart.chartArea;
		var xAlign = 'center';
		var yAlign = 'center';

		if (model.y < size.height) {
			yAlign = 'top';
		} else if (model.y > (chart.height - size.height)) {
			yAlign = 'bottom';
		}

		var lf, rf; // functions to determine left, right alignment
		var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
		var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
		var midX = (chartArea.left + chartArea.right) / 2;
		var midY = (chartArea.top + chartArea.bottom) / 2;

		if (yAlign === 'center') {
			lf = function(x) {
				return x <= midX;
			};
			rf = function(x) {
				return x > midX;
			};
		} else {
			lf = function(x) {
				return x <= (size.width / 2);
			};
			rf = function(x) {
				return x >= (chart.width - (size.width / 2));
			};
		}

		olf = function(x) {
			return x + size.width > chart.width;
		};
		orf = function(x) {
			return x - size.width < 0;
		};
		yf = function(y) {
			return y <= midY ? 'top' : 'bottom';
		};

		if (lf(model.x)) {
			xAlign = 'left';

			// Is tooltip too wide and goes over the right side of the chart.?
			if (olf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		} else if (rf(model.x)) {
			xAlign = 'right';

			// Is tooltip too wide and goes outside left edge of canvas?
			if (orf(model.x)) {
				xAlign = 'center';
				yAlign = yf(model.y);
			}
		}

		var opts = tooltip._options;
		return {
			xAlign: opts.xAlign ? opts.xAlign : xAlign,
			yAlign: opts.yAlign ? opts.yAlign : yAlign
		};
	}

	/**
	 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
	 */
	function getBackgroundPoint(vm, size, alignment) {
		// Background Position
		var x = vm.x;
		var y = vm.y;

		var caretSize = vm.caretSize,
			caretPadding = vm.caretPadding,
			cornerRadius = vm.cornerRadius,
			xAlign = alignment.xAlign,
			yAlign = alignment.yAlign,
			paddingAndSize = caretSize + caretPadding,
			radiusAndPadding = cornerRadius + caretPadding;

		if (xAlign === 'right') {
			x -= size.width;
		} else if (xAlign === 'center') {
			x -= (size.width / 2);
		}

		if (yAlign === 'top') {
			y += paddingAndSize;
		} else if (yAlign === 'bottom') {
			y -= size.height + paddingAndSize;
		} else {
			y -= (size.height / 2);
		}

		if (yAlign === 'center') {
			if (xAlign === 'left') {
				x += paddingAndSize;
			} else if (xAlign === 'right') {
				x -= paddingAndSize;
			}
		} else if (xAlign === 'left') {
			x -= radiusAndPadding;
		} else if (xAlign === 'right') {
			x += radiusAndPadding;
		}

		return {
			x: x,
			y: y
		};
	}

	Chart.Tooltip = Chart.Element.extend({
		initialize: function() {
			this._model = getBaseModel(this._options);
		},

		// Get the title
		// Args are: (tooltipItem, data)
		getTitle: function() {
			var me = this;
			var opts = me._options;
			var callbacks = opts.callbacks;

			var beforeTitle = callbacks.beforeTitle.apply(me, arguments),
				title = callbacks.title.apply(me, arguments),
				afterTitle = callbacks.afterTitle.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, beforeTitle);
			lines = pushOrConcat(lines, title);
			lines = pushOrConcat(lines, afterTitle);

			return lines;
		},

		// Args are: (tooltipItem, data)
		getBeforeBody: function() {
			var lines = this._options.callbacks.beforeBody.apply(this, arguments);
			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
		},

		// Args are: (tooltipItem, data)
		getBody: function(tooltipItems, data) {
			var me = this;
			var callbacks = me._options.callbacks;
			var bodyItems = [];

			helpers.each(tooltipItems, function(tooltipItem) {
				var bodyItem = {
					before: [],
					lines: [],
					after: []
				};
				pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));
				pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
				pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));

				bodyItems.push(bodyItem);
			});

			return bodyItems;
		},

		// Args are: (tooltipItem, data)
		getAfterBody: function() {
			var lines = this._options.callbacks.afterBody.apply(this, arguments);
			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
		},

		// Get the footer and beforeFooter and afterFooter lines
		// Args are: (tooltipItem, data)
		getFooter: function() {
			var me = this;
			var callbacks = me._options.callbacks;

			var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
			var footer = callbacks.footer.apply(me, arguments);
			var afterFooter = callbacks.afterFooter.apply(me, arguments);

			var lines = [];
			lines = pushOrConcat(lines, beforeFooter);
			lines = pushOrConcat(lines, footer);
			lines = pushOrConcat(lines, afterFooter);

			return lines;
		},

		update: function(changed) {
			var me = this;
			var opts = me._options;

			// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
			// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
			// which breaks any animations.
			var existingModel = me._model;
			var model = me._model = getBaseModel(opts);
			var active = me._active;

			var data = me._data;

			// In the case where active.length === 0 we need to keep these at existing values for good animations
			var alignment = {
				xAlign: existingModel.xAlign,
				yAlign: existingModel.yAlign
			};
			var backgroundPoint = {
				x: existingModel.x,
				y: existingModel.y
			};
			var tooltipSize = {
				width: existingModel.width,
				height: existingModel.height
			};
			var tooltipPosition = {
				x: existingModel.caretX,
				y: existingModel.caretY
			};

			var i, len;

			if (active.length) {
				model.opacity = 1;

				var labelColors = [];
				tooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);

				var tooltipItems = [];
				for (i = 0, len = active.length; i < len; ++i) {
					tooltipItems.push(createTooltipItem(active[i]));
				}

				// If the user provided a filter function, use it to modify the tooltip items
				if (opts.filter) {
					tooltipItems = tooltipItems.filter(function(a) {
						return opts.filter(a, data);
					});
				}

				// If the user provided a sorting function, use it to modify the tooltip items
				if (opts.itemSort) {
					tooltipItems = tooltipItems.sort(function(a, b) {
						return opts.itemSort(a, b, data);
					});
				}

				// Determine colors for boxes
				helpers.each(tooltipItems, function(tooltipItem) {
					labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
				});

				// Build the Text Lines
				model.title = me.getTitle(tooltipItems, data);
				model.beforeBody = me.getBeforeBody(tooltipItems, data);
				model.body = me.getBody(tooltipItems, data);
				model.afterBody = me.getAfterBody(tooltipItems, data);
				model.footer = me.getFooter(tooltipItems, data);

				// Initial positioning and colors
				model.x = Math.round(tooltipPosition.x);
				model.y = Math.round(tooltipPosition.y);
				model.caretPadding = opts.caretPadding;
				model.labelColors = labelColors;

				// data points
				model.dataPoints = tooltipItems;

				// We need to determine alignment of the tooltip
				tooltipSize = getTooltipSize(this, model);
				alignment = determineAlignment(this, tooltipSize);
				// Final Size and Position
				backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);
			} else {
				model.opacity = 0;
			}

			model.xAlign = alignment.xAlign;
			model.yAlign = alignment.yAlign;
			model.x = backgroundPoint.x;
			model.y = backgroundPoint.y;
			model.width = tooltipSize.width;
			model.height = tooltipSize.height;

			// Point where the caret on the tooltip points to
			model.caretX = tooltipPosition.x;
			model.caretY = tooltipPosition.y;

			me._model = model;

			if (changed && opts.custom) {
				opts.custom.call(me, model);
			}

			return me;
		},
		drawCaret: function(tooltipPoint, size) {
			var ctx = this._chart.ctx;
			var vm = this._view;
			var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

			ctx.lineTo(caretPosition.x1, caretPosition.y1);
			ctx.lineTo(caretPosition.x2, caretPosition.y2);
			ctx.lineTo(caretPosition.x3, caretPosition.y3);
		},
		getCaretPosition: function(tooltipPoint, size, vm) {
			var x1, x2, x3;
			var y1, y2, y3;
			var caretSize = vm.caretSize;
			var cornerRadius = vm.cornerRadius;
			var xAlign = vm.xAlign,
				yAlign = vm.yAlign;
			var ptX = tooltipPoint.x,
				ptY = tooltipPoint.y;
			var width = size.width,
				height = size.height;

			if (yAlign === 'center') {
				y2 = ptY + (height / 2);

				if (xAlign === 'left') {
					x1 = ptX;
					x2 = x1 - caretSize;
					x3 = x1;

					y1 = y2 + caretSize;
					y3 = y2 - caretSize;
				} else {
					x1 = ptX + width;
					x2 = x1 + caretSize;
					x3 = x1;

					y1 = y2 - caretSize;
					y3 = y2 + caretSize;
				}
			} else {
				if (xAlign === 'left') {
					x2 = ptX + cornerRadius + (caretSize);
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				} else if (xAlign === 'right') {
					x2 = ptX + width - cornerRadius - caretSize;
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				} else {
					x2 = ptX + (width / 2);
					x1 = x2 - caretSize;
					x3 = x2 + caretSize;
				}
				if (yAlign === 'top') {
					y1 = ptY;
					y2 = y1 - caretSize;
					y3 = y1;
				} else {
					y1 = ptY + height;
					y2 = y1 + caretSize;
					y3 = y1;
					// invert drawing order
					var tmp = x3;
					x3 = x1;
					x1 = tmp;
				}
			}
			return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
		},
		drawTitle: function(pt, vm, ctx, opacity) {
			var title = vm.title;

			if (title.length) {
				ctx.textAlign = vm._titleAlign;
				ctx.textBaseline = 'top';

				var titleFontSize = vm.titleFontSize,
					titleSpacing = vm.titleSpacing;

				ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
				ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

				var i, len;
				for (i = 0, len = title.length; i < len; ++i) {
					ctx.fillText(title[i], pt.x, pt.y);
					pt.y += titleFontSize + titleSpacing; // Line Height and spacing

					if (i + 1 === title.length) {
						pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
					}
				}
			}
		},
		drawBody: function(pt, vm, ctx, opacity) {
			var bodyFontSize = vm.bodyFontSize;
			var bodySpacing = vm.bodySpacing;
			var body = vm.body;

			ctx.textAlign = vm._bodyAlign;
			ctx.textBaseline = 'top';

			var textColor = mergeOpacity(vm.bodyFontColor, opacity);
			ctx.fillStyle = textColor;
			ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

			// Before Body
			var xLinePadding = 0;
			var fillLineOfText = function(line) {
				ctx.fillText(line, pt.x + xLinePadding, pt.y);
				pt.y += bodyFontSize + bodySpacing;
			};

			// Before body lines
			helpers.each(vm.beforeBody, fillLineOfText);

			var drawColorBoxes = vm.displayColors;
			xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;

			// Draw body lines now
			helpers.each(body, function(bodyItem, i) {
				helpers.each(bodyItem.before, fillLineOfText);

				helpers.each(bodyItem.lines, function(line) {
					// Draw Legend-like boxes if needed
					if (drawColorBoxes) {
						// Fill a white rect so that colours merge nicely if the opacity is < 1
						ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
						ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

						// Border
						ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
						ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

						// Inner square
						ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
						ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);

						ctx.fillStyle = textColor;
					}

					fillLineOfText(line);
				});

				helpers.each(bodyItem.after, fillLineOfText);
			});

			// Reset back to 0 for after body
			xLinePadding = 0;

			// After body lines
			helpers.each(vm.afterBody, fillLineOfText);
			pt.y -= bodySpacing; // Remove last body spacing
		},
		drawFooter: function(pt, vm, ctx, opacity) {
			var footer = vm.footer;

			if (footer.length) {
				pt.y += vm.footerMarginTop;

				ctx.textAlign = vm._footerAlign;
				ctx.textBaseline = 'top';

				ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
				ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

				helpers.each(footer, function(line) {
					ctx.fillText(line, pt.x, pt.y);
					pt.y += vm.footerFontSize + vm.footerSpacing;
				});
			}
		},
		drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
			ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
			ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
			ctx.lineWidth = vm.borderWidth;
			var xAlign = vm.xAlign;
			var yAlign = vm.yAlign;
			var x = pt.x;
			var y = pt.y;
			var width = tooltipSize.width;
			var height = tooltipSize.height;
			var radius = vm.cornerRadius;

			ctx.beginPath();
			ctx.moveTo(x + radius, y);
			if (yAlign === 'top') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + width - radius, y);
			ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
			if (yAlign === 'center' && xAlign === 'right') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + width, y + height - radius);
			ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
			if (yAlign === 'bottom') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x + radius, y + height);
			ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
			if (yAlign === 'center' && xAlign === 'left') {
				this.drawCaret(pt, tooltipSize);
			}
			ctx.lineTo(x, y + radius);
			ctx.quadraticCurveTo(x, y, x + radius, y);
			ctx.closePath();

			ctx.fill();

			if (vm.borderWidth > 0) {
				ctx.stroke();
			}
		},
		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;

			if (vm.opacity === 0) {
				return;
			}

			var tooltipSize = {
				width: vm.width,
				height: vm.height
			};
			var pt = {
				x: vm.x,
				y: vm.y
			};

			// IE11/Edge does not like very small opacities, so snap to 0
			var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

			// Truthy/falsey value for empty tooltip
			var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

			if (this._options.enabled && hasTooltipContent) {
				// Draw Background
				this.drawBackground(pt, vm, ctx, tooltipSize, opacity);

				// Draw Title, Body, and Footer
				pt.x += vm.xPadding;
				pt.y += vm.yPadding;

				// Titles
				this.drawTitle(pt, vm, ctx, opacity);

				// Body
				this.drawBody(pt, vm, ctx, opacity);

				// Footer
				this.drawFooter(pt, vm, ctx, opacity);
			}
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event - The event to handle
		 * @returns {Boolean} true if the tooltip changed
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me._options;
			var changed = false;

			me._lastActive = me._lastActive || [];

			// Find Active Elements for tooltips
			if (e.type === 'mouseout') {
				me._active = [];
			} else {
				me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
			}

			// Remember Last Actives
			changed = !helpers.arrayEquals(me._active, me._lastActive);

			// If tooltip didn't change, do not handle the target event
			if (!changed) {
				return false;
			}

			me._lastActive = me._active;

			if (options.enabled || options.custom) {
				me._eventPosition = {
					x: e.x,
					y: e.y
				};

				var model = me._model;
				me.update(true);
				me.pivot();

				// See if our tooltip position changed
				changed |= (model.x !== me._model.x) || (model.y !== me._model.y);
			}

			return changed;
		}
	});

	/**
	 * @namespace Chart.Tooltip.positioners
	 */
	Chart.Tooltip.positioners = {
		/**
		 * Average mode places the tooltip at the average position of the elements shown
		 * @function Chart.Tooltip.positioners.average
		 * @param elements {ChartElement[]} the elements being displayed in the tooltip
		 * @returns {Point} tooltip position
		 */
		average: function(elements) {
			if (!elements.length) {
				return false;
			}

			var i, len;
			var x = 0;
			var y = 0;
			var count = 0;

			for (i = 0, len = elements.length; i < len; ++i) {
				var el = elements[i];
				if (el && el.hasValue()) {
					var pos = el.tooltipPosition();
					x += pos.x;
					y += pos.y;
					++count;
				}
			}

			return {
				x: Math.round(x / count),
				y: Math.round(y / count)
			};
		},

		/**
		 * Gets the tooltip position nearest of the item nearest to the event position
		 * @function Chart.Tooltip.positioners.nearest
		 * @param elements {Chart.Element[]} the tooltip elements
		 * @param eventPosition {Point} the position of the event in canvas coordinates
		 * @returns {Point} the tooltip position
		 */
		nearest: function(elements, eventPosition) {
			var x = eventPosition.x;
			var y = eventPosition.y;

			var nearestElement;
			var minDistance = Number.POSITIVE_INFINITY;
			var i, len;
			for (i = 0, len = elements.length; i < len; ++i) {
				var el = elements[i];
				if (el && el.hasValue()) {
					var center = el.getCenterPoint();
					var d = helpers.distanceBetweenPoints(eventPosition, center);

					if (d < minDistance) {
						minDistance = d;
						nearestElement = el;
					}
				}
			}

			if (nearestElement) {
				var tp = nearestElement.tooltipPosition();
				x = tp.x;
				y = tp.y;
			}

			return {
				x: x,
				y: y
			};
		}
	};
};

},{}],35:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		globalOpts = Chart.defaults.global;

	globalOpts.elements.arc = {
		backgroundColor: globalOpts.defaultColor,
		borderColor: '#fff',
		borderWidth: 2
	};

	Chart.elements.Arc = Chart.Element.extend({
		inLabelRange: function(mouseX) {
			var vm = this._view;

			if (vm) {
				return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
			}
			return false;
		},
		inRange: function(chartX, chartY) {
			var vm = this._view;

			if (vm) {
				var pointRelativePosition = helpers.getAngleFromPoint(vm, {
						x: chartX,
						y: chartY
					}),
					angle = pointRelativePosition.angle,
					distance = pointRelativePosition.distance;

				// Sanitise angle range
				var startAngle = vm.startAngle;
				var endAngle = vm.endAngle;
				while (endAngle < startAngle) {
					endAngle += 2.0 * Math.PI;
				}
				while (angle > endAngle) {
					angle -= 2.0 * Math.PI;
				}
				while (angle < startAngle) {
					angle += 2.0 * Math.PI;
				}

				// Check if within the range of the open/close angle
				var betweenAngles = (angle >= startAngle && angle <= endAngle),
					withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

				return (betweenAngles && withinRadius);
			}
			return false;
		},
		getCenterPoint: function() {
			var vm = this._view;
			var halfAngle = (vm.startAngle + vm.endAngle) / 2;
			var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
			return {
				x: vm.x + Math.cos(halfAngle) * halfRadius,
				y: vm.y + Math.sin(halfAngle) * halfRadius
			};
		},
		getArea: function() {
			var vm = this._view;
			return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
		},
		tooltipPosition: function() {
			var vm = this._view;

			var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),
				rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;
			return {
				x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
				y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
			};
		},
		draw: function() {

			var ctx = this._chart.ctx,
				vm = this._view,
				sA = vm.startAngle,
				eA = vm.endAngle;

			ctx.beginPath();

			ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
			ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

			ctx.closePath();
			ctx.strokeStyle = vm.borderColor;
			ctx.lineWidth = vm.borderWidth;

			ctx.fillStyle = vm.backgroundColor;

			ctx.fill();
			ctx.lineJoin = 'bevel';

			if (vm.borderWidth) {
				ctx.stroke();
			}
		}
	});
};

},{}],36:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var globalDefaults = Chart.defaults.global;

	Chart.defaults.global.elements.line = {
		tension: 0.4,
		backgroundColor: globalDefaults.defaultColor,
		borderWidth: 3,
		borderColor: globalDefaults.defaultColor,
		borderCapStyle: 'butt',
		borderDash: [],
		borderDashOffset: 0.0,
		borderJoinStyle: 'miter',
		capBezierPoints: true,
		fill: true, // do we fill in the area between the line and its base axis
	};

	Chart.elements.Line = Chart.Element.extend({
		draw: function() {
			var me = this;
			var vm = me._view;
			var ctx = me._chart.ctx;
			var spanGaps = vm.spanGaps;
			var points = me._children.slice(); // clone array
			var globalOptionLineElements = globalDefaults.elements.line;
			var lastDrawnIndex = -1;
			var index, current, previous, currentVM;

			// If we are looping, adding the first point again
			if (me._loop && points.length) {
				points.push(points[0]);
			}

			ctx.save();

			// Stroke Line Options
			ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

			// IE 9 and 10 do not support line dash
			if (ctx.setLineDash) {
				ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
			}

			ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
			ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
			ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
			ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

			// Stroke Line
			ctx.beginPath();
			lastDrawnIndex = -1;

			for (index = 0; index < points.length; ++index) {
				current = points[index];
				previous = helpers.previousItem(points, index);
				currentVM = current._view;

				// First point moves to it's starting position no matter what
				if (index === 0) {
					if (!currentVM.skip) {
						ctx.moveTo(currentVM.x, currentVM.y);
						lastDrawnIndex = index;
					}
				} else {
					previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

					if (!currentVM.skip) {
						if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
							// There was a gap and this is the first point after the gap
							ctx.moveTo(currentVM.x, currentVM.y);
						} else {
							// Line to next point
							helpers.canvas.lineTo(ctx, previous._view, current._view);
						}
						lastDrawnIndex = index;
					}
				}
			}

			ctx.stroke();
			ctx.restore();
		}
	});
};

},{}],37:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		globalOpts = Chart.defaults.global,
		defaultColor = globalOpts.defaultColor;

	globalOpts.elements.point = {
		radius: 3,
		pointStyle: 'circle',
		backgroundColor: defaultColor,
		borderWidth: 1,
		borderColor: defaultColor,
		// Hover
		hitRadius: 1,
		hoverRadius: 4,
		hoverBorderWidth: 1
	};

	function xRange(mouseX) {
		var vm = this._view;
		return vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;
	}

	function yRange(mouseY) {
		var vm = this._view;
		return vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;
	}

	Chart.elements.Point = Chart.Element.extend({
		inRange: function(mouseX, mouseY) {
			var vm = this._view;
			return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
		},

		inLabelRange: xRange,
		inXRange: xRange,
		inYRange: yRange,

		getCenterPoint: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		},
		getArea: function() {
			return Math.PI * Math.pow(this._view.radius, 2);
		},
		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y,
				padding: vm.radius + vm.borderWidth
			};
		},
		draw: function(chartArea) {
			var vm = this._view;
			var model = this._model;
			var ctx = this._chart.ctx;
			var pointStyle = vm.pointStyle;
			var radius = vm.radius;
			var x = vm.x;
			var y = vm.y;
			var color = Chart.helpers.color;
			var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)
			var ratio = 0;

			if (vm.skip) {
				return;
			}

			ctx.strokeStyle = vm.borderColor || defaultColor;
			ctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);
			ctx.fillStyle = vm.backgroundColor || defaultColor;

			// Cliping for Points.
			// going out from inner charArea?
			if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {
				// Point fade out
				if (model.x < chartArea.left) {
					ratio = (x - model.x) / (chartArea.left - model.x);
				} else if (chartArea.right*errMargin < model.x) {
					ratio = (model.x - x) / (model.x - chartArea.right);
				} else if (model.y < chartArea.top) {
					ratio = (y - model.y) / (chartArea.top - model.y);
				} else if (chartArea.bottom*errMargin < model.y) {
					ratio = (model.y - y) / (model.y - chartArea.bottom);
				}
				ratio = Math.round(ratio*100) / 100;
				ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();
				ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();
			}

			Chart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);
		}
	});
};

},{}],38:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var globalOpts = Chart.defaults.global;

	globalOpts.elements.rectangle = {
		backgroundColor: globalOpts.defaultColor,
		borderWidth: 0,
		borderColor: globalOpts.defaultColor,
		borderSkipped: 'bottom'
	};

	function isVertical(bar) {
		return bar._view.width !== undefined;
	}

	/**
	 * Helper function to get the bounds of the bar regardless of the orientation
	 * @private
	 * @param bar {Chart.Element.Rectangle} the bar
	 * @return {Bounds} bounds of the bar
	 */
	function getBarBounds(bar) {
		var vm = bar._view;
		var x1, x2, y1, y2;

		if (isVertical(bar)) {
			// vertical
			var halfWidth = vm.width / 2;
			x1 = vm.x - halfWidth;
			x2 = vm.x + halfWidth;
			y1 = Math.min(vm.y, vm.base);
			y2 = Math.max(vm.y, vm.base);
		} else {
			// horizontal bar
			var halfHeight = vm.height / 2;
			x1 = Math.min(vm.x, vm.base);
			x2 = Math.max(vm.x, vm.base);
			y1 = vm.y - halfHeight;
			y2 = vm.y + halfHeight;
		}

		return {
			left: x1,
			top: y1,
			right: x2,
			bottom: y2
		};
	}

	Chart.elements.Rectangle = Chart.Element.extend({
		draw: function() {
			var ctx = this._chart.ctx;
			var vm = this._view;
			var left, right, top, bottom, signX, signY, borderSkipped;
			var borderWidth = vm.borderWidth;

			if (!vm.horizontal) {
				// bar
				left = vm.x - vm.width / 2;
				right = vm.x + vm.width / 2;
				top = vm.y;
				bottom = vm.base;
				signX = 1;
				signY = bottom > top? 1: -1;
				borderSkipped = vm.borderSkipped || 'bottom';
			} else {
				// horizontal bar
				left = vm.base;
				right = vm.x;
				top = vm.y - vm.height / 2;
				bottom = vm.y + vm.height / 2;
				signX = right > left? 1: -1;
				signY = 1;
				borderSkipped = vm.borderSkipped || 'left';
			}

			// Canvas doesn't allow us to stroke inside the width so we can
			// adjust the sizes to fit if we're setting a stroke on the line
			if (borderWidth) {
				// borderWidth shold be less than bar width and bar height.
				var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
				borderWidth = borderWidth > barSize? barSize: borderWidth;
				var halfStroke = borderWidth / 2;
				// Adjust borderWidth when bar top position is near vm.base(zero).
				var borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);
				var borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);
				var borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);
				var borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);
				// not become a vertical line?
				if (borderLeft !== borderRight) {
					top = borderTop;
					bottom = borderBottom;
				}
				// not become a horizontal line?
				if (borderTop !== borderBottom) {
					left = borderLeft;
					right = borderRight;
				}
			}

			ctx.beginPath();
			ctx.fillStyle = vm.backgroundColor;
			ctx.strokeStyle = vm.borderColor;
			ctx.lineWidth = borderWidth;

			// Corner points, from bottom-left to bottom-right clockwise
			// | 1 2 |
			// | 0 3 |
			var corners = [
				[left, bottom],
				[left, top],
				[right, top],
				[right, bottom]
			];

			// Find first (starting) corner with fallback to 'bottom'
			var borders = ['bottom', 'left', 'top', 'right'];
			var startCorner = borders.indexOf(borderSkipped, 0);
			if (startCorner === -1) {
				startCorner = 0;
			}

			function cornerAt(index) {
				return corners[(startCorner + index) % 4];
			}

			// Draw rectangle from 'startCorner'
			var corner = cornerAt(0);
			ctx.moveTo(corner[0], corner[1]);

			for (var i = 1; i < 4; i++) {
				corner = cornerAt(i);
				ctx.lineTo(corner[0], corner[1]);
			}

			ctx.fill();
			if (borderWidth) {
				ctx.stroke();
			}
		},
		height: function() {
			var vm = this._view;
			return vm.base - vm.y;
		},
		inRange: function(mouseX, mouseY) {
			var inRange = false;

			if (this._view) {
				var bounds = getBarBounds(this);
				inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;
			}

			return inRange;
		},
		inLabelRange: function(mouseX, mouseY) {
			var me = this;
			if (!me._view) {
				return false;
			}

			var inRange = false;
			var bounds = getBarBounds(me);

			if (isVertical(me)) {
				inRange = mouseX >= bounds.left && mouseX <= bounds.right;
			} else {
				inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;
			}

			return inRange;
		},
		inXRange: function(mouseX) {
			var bounds = getBarBounds(this);
			return mouseX >= bounds.left && mouseX <= bounds.right;
		},
		inYRange: function(mouseY) {
			var bounds = getBarBounds(this);
			return mouseY >= bounds.top && mouseY <= bounds.bottom;
		},
		getCenterPoint: function() {
			var vm = this._view;
			var x, y;
			if (isVertical(this)) {
				x = vm.x;
				y = (vm.y + vm.base) / 2;
			} else {
				x = (vm.x + vm.base) / 2;
				y = vm.y;
			}

			return {x: x, y: y};
		},
		getArea: function() {
			var vm = this._view;
			return vm.width * Math.abs(vm.y - vm.base);
		},
		tooltipPosition: function() {
			var vm = this._view;
			return {
				x: vm.x,
				y: vm.y
			};
		}
	});

};

},{}],39:[function(require,module,exports){
'use strict';

// Chart.Platform implementation for targeting a web browser
module.exports = function(Chart) {
	var helpers = Chart.helpers;

	// DOM event types -> Chart.js event types.
	// Note: only events with different types are mapped.
	// https://developer.mozilla.org/en-US/docs/Web/Events
	var eventTypeMap = {
		// Touch events
		touchstart: 'mousedown',
		touchmove: 'mousemove',
		touchend: 'mouseup',

		// Pointer events
		pointerenter: 'mouseenter',
		pointerdown: 'mousedown',
		pointermove: 'mousemove',
		pointerup: 'mouseup',
		pointerleave: 'mouseout',
		pointerout: 'mouseout'
	};

	/**
	 * The "used" size is the final value of a dimension property after all calculations have
	 * been performed. This method uses the computed style of `element` but returns undefined
	 * if the computed style is not expressed in pixels. That can happen in some cases where
	 * `element` has a size relative to its parent and this last one is not yet displayed,
	 * for example because of `display: none` on a parent node.
	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
	 * @returns {Number} Size in pixels or undefined if unknown.
	 */
	function readUsedSize(element, property) {
		var value = helpers.getStyle(element, property);
		var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
		return matches? Number(matches[1]) : undefined;
	}

	/**
	 * Initializes the canvas style and render size without modifying the canvas display size,
	 * since responsiveness is handled by the controller.resize() method. The config is used
	 * to determine the aspect ratio to apply in case no explicit height has been specified.
	 */
	function initCanvas(canvas, config) {
		var style = canvas.style;

		// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
		// returns null or '' if no explicit value has been set to the canvas attribute.
		var renderHeight = canvas.getAttribute('height');
		var renderWidth = canvas.getAttribute('width');

		// Chart.js modifies some canvas values that we want to restore on destroy
		canvas._chartjs = {
			initial: {
				height: renderHeight,
				width: renderWidth,
				style: {
					display: style.display,
					height: style.height,
					width: style.width
				}
			}
		};

		// Force canvas to display as block to avoid extra space caused by inline
		// elements, which would interfere with the responsive resize process.
		// https://github.com/chartjs/Chart.js/issues/2538
		style.display = style.display || 'block';

		if (renderWidth === null || renderWidth === '') {
			var displayWidth = readUsedSize(canvas, 'width');
			if (displayWidth !== undefined) {
				canvas.width = displayWidth;
			}
		}

		if (renderHeight === null || renderHeight === '') {
			if (canvas.style.height === '') {
				// If no explicit render height and style height, let's apply the aspect ratio,
				// which one can be specified by the user but also by charts as default option
				// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
				canvas.height = canvas.width / (config.options.aspectRatio || 2);
			} else {
				var displayHeight = readUsedSize(canvas, 'height');
				if (displayWidth !== undefined) {
					canvas.height = displayHeight;
				}
			}
		}

		return canvas;
	}

	function createEvent(type, chart, x, y, nativeEvent) {
		return {
			type: type,
			chart: chart,
			native: nativeEvent || null,
			x: x !== undefined? x : null,
			y: y !== undefined? y : null,
		};
	}

	function fromNativeEvent(event, chart) {
		var type = eventTypeMap[event.type] || event.type;
		var pos = helpers.getRelativePosition(event, chart);
		return createEvent(type, chart, pos.x, pos.y, event);
	}

	function createResizer(handler) {
		var iframe = document.createElement('iframe');
		iframe.className = 'chartjs-hidden-iframe';
		iframe.style.cssText =
			'display:block;'+
			'overflow:hidden;'+
			'border:0;'+
			'margin:0;'+
			'top:0;'+
			'left:0;'+
			'bottom:0;'+
			'right:0;'+
			'height:100%;'+
			'width:100%;'+
			'position:absolute;'+
			'pointer-events:none;'+
			'z-index:-1;';

		// Prevent the iframe to gain focus on tab.
		// https://github.com/chartjs/Chart.js/issues/3090
		iframe.tabIndex = -1;

		// If the iframe is re-attached to the DOM, the resize listener is removed because the
		// content is reloaded, so make sure to install the handler after the iframe is loaded.
		// https://github.com/chartjs/Chart.js/issues/3521
		helpers.addEvent(iframe, 'load', function() {
			helpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);

			// The iframe size might have changed while loading, which can also
			// happen if the size has been changed while detached from the DOM.
			handler();
		});

		return iframe;
	}

	function addResizeListener(node, listener, chart) {
		var stub = node._chartjs = {
			ticking: false
		};

		// Throttle the callback notification until the next animation frame.
		var notify = function() {
			if (!stub.ticking) {
				stub.ticking = true;
				helpers.requestAnimFrame.call(window, function() {
					if (stub.resizer) {
						stub.ticking = false;
						return listener(createEvent('resize', chart));
					}
				});
			}
		};

		// Let's keep track of this added iframe and thus avoid DOM query when removing it.
		stub.resizer = createResizer(notify);

		node.insertBefore(stub.resizer, node.firstChild);
	}

	function removeResizeListener(node) {
		if (!node || !node._chartjs) {
			return;
		}

		var resizer = node._chartjs.resizer;
		if (resizer) {
			resizer.parentNode.removeChild(resizer);
			node._chartjs.resizer = null;
		}

		delete node._chartjs;
	}

	return {
		acquireContext: function(item, config) {
			if (typeof item === 'string') {
				item = document.getElementById(item);
			} else if (item.length) {
				// Support for array based queries (such as jQuery)
				item = item[0];
			}

			if (item && item.canvas) {
				// Support for any object associated to a canvas (including a context2d)
				item = item.canvas;
			}

			// To prevent canvas fingerprinting, some add-ons undefine the getContext
			// method, for example: https://github.com/kkapsner/CanvasBlocker
			// https://github.com/chartjs/Chart.js/issues/2807
			var context = item && item.getContext && item.getContext('2d');

			// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
			// inside an iframe or when running in a protected environment. We could guess the
			// types from their toString() value but let's keep things flexible and assume it's
			// a sufficient condition if the item has a context2D which has item as `canvas`.
			// https://github.com/chartjs/Chart.js/issues/3887
			// https://github.com/chartjs/Chart.js/issues/4102
			// https://github.com/chartjs/Chart.js/issues/4152
			if (context && context.canvas === item) {
				initCanvas(item, config);
				return context;
			}

			return null;
		},

		releaseContext: function(context) {
			var canvas = context.canvas;
			if (!canvas._chartjs) {
				return;
			}

			var initial = canvas._chartjs.initial;
			['height', 'width'].forEach(function(prop) {
				var value = initial[prop];
				if (value === undefined || value === null) {
					canvas.removeAttribute(prop);
				} else {
					canvas.setAttribute(prop, value);
				}
			});

			helpers.each(initial.style || {}, function(value, key) {
				canvas.style[key] = value;
			});

			// The canvas render size might have been changed (and thus the state stack discarded),
			// we can't use save() and restore() to restore the initial state. So make sure that at
			// least the canvas context is reset to the default state by setting the canvas width.
			// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
			canvas.width = canvas.width;

			delete canvas._chartjs;
		},

		addEventListener: function(chart, type, listener) {
			var canvas = chart.canvas;
			if (type === 'resize') {
				// Note: the resize event is not supported on all browsers.
				addResizeListener(canvas.parentNode, listener, chart);
				return;
			}

			var stub = listener._chartjs || (listener._chartjs = {});
			var proxies = stub.proxies || (stub.proxies = {});
			var proxy = proxies[chart.id + '_' + type] = function(event) {
				listener(fromNativeEvent(event, chart));
			};

			helpers.addEvent(canvas, type, proxy);
		},

		removeEventListener: function(chart, type, listener) {
			var canvas = chart.canvas;
			if (type === 'resize') {
				// Note: the resize event is not supported on all browsers.
				removeResizeListener(canvas.parentNode, listener);
				return;
			}

			var stub = listener._chartjs || {};
			var proxies = stub.proxies || {};
			var proxy = proxies[chart.id + '_' + type];
			if (!proxy) {
				return;
			}

			helpers.removeEvent(canvas, type, proxy);
		}
	};
};

},{}],40:[function(require,module,exports){
'use strict';

// By default, select the browser (DOM) platform.
// @TODO Make possible to select another platform at build time.
var implementation = require(39);

module.exports = function(Chart) {
	/**
	 * @namespace Chart.platform
	 * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
	 * @since 2.4.0
	 */
	Chart.platform = {
		/**
		 * Called at chart construction time, returns a context2d instance implementing
		 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
		 * @param {*} item - The native item from which to acquire context (platform specific)
		 * @param {Object} options - The chart options
		 * @returns {CanvasRenderingContext2D} context2d instance
		 */
		acquireContext: function() {},

		/**
		 * Called at chart destruction time, releases any resources associated to the context
		 * previously returned by the acquireContext() method.
		 * @param {CanvasRenderingContext2D} context - The context2d instance
		 * @returns {Boolean} true if the method succeeded, else false
		 */
		releaseContext: function() {},

		/**
		 * Registers the specified listener on the given chart.
		 * @param {Chart} chart - Chart from which to listen for event
		 * @param {String} type - The ({@link IEvent}) type to listen for
		 * @param {Function} listener - Receives a notification (an object that implements
		 * the {@link IEvent} interface) when an event of the specified type occurs.
		 */
		addEventListener: function() {},

		/**
		 * Removes the specified listener previously registered with addEventListener.
		 * @param {Chart} chart -Chart from which to remove the listener
		 * @param {String} type - The ({@link IEvent}) type to remove
		 * @param {Function} listener - The listener function to remove from the event target.
		 */
		removeEventListener: function() {}
	};

	/**
	 * @interface IPlatform
	 * Allows abstracting platform dependencies away from the chart
	 * @borrows Chart.platform.acquireContext as acquireContext
	 * @borrows Chart.platform.releaseContext as releaseContext
	 * @borrows Chart.platform.addEventListener as addEventListener
	 * @borrows Chart.platform.removeEventListener as removeEventListener
	 */

	/**
	 * @interface IEvent
	 * @prop {String} type - The event type name, possible values are:
	 * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',
	 * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'
	 * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')
	 * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)
	 * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)
	 */

	Chart.helpers.extend(Chart.platform, implementation(Chart));
};

},{"39":39}],41:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {
	/**
	 * Plugin based on discussion from the following Chart.js issues:
	 * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569
	 * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897
	 */
	Chart.defaults.global.plugins.filler = {
		propagate: true
	};

	var defaults = Chart.defaults;
	var helpers = Chart.helpers;
	var mappers = {
		dataset: function(source) {
			var index = source.fill;
			var chart = source.chart;
			var meta = chart.getDatasetMeta(index);
			var visible = meta && chart.isDatasetVisible(index);
			var points = (visible && meta.dataset._children) || [];

			return !points.length? null : function(point, i) {
				return points[i]._view || null;
			};
		},

		boundary: function(source) {
			var boundary = source.boundary;
			var x = boundary? boundary.x : null;
			var y = boundary? boundary.y : null;

			return function(point) {
				return {
					x: x === null? point.x : x,
					y: y === null? point.y : y,
				};
			};
		}
	};

	// @todo if (fill[0] === '#')
	function decodeFill(el, index, count) {
		var model = el._model || {};
		var fill = model.fill;
		var target;

		if (fill === undefined) {
			fill = !!model.backgroundColor;
		}

		if (fill === false || fill === null) {
			return false;
		}

		if (fill === true) {
			return 'origin';
		}

		target = parseFloat(fill, 10);
		if (isFinite(target) && Math.floor(target) === target) {
			if (fill[0] === '-' || fill[0] === '+') {
				target = index + target;
			}

			if (target === index || target < 0 || target >= count) {
				return false;
			}

			return target;
		}

		switch (fill) {
		// compatibility
		case 'bottom':
			return 'start';
		case 'top':
			return 'end';
		case 'zero':
			return 'origin';
		// supported boundaries
		case 'origin':
		case 'start':
		case 'end':
			return fill;
		// invalid fill values
		default:
			return false;
		}
	}

	function computeBoundary(source) {
		var model = source.el._model || {};
		var scale = source.el._scale || {};
		var fill = source.fill;
		var target = null;
		var horizontal;

		if (isFinite(fill)) {
			return null;
		}

		// Backward compatibility: until v3, we still need to support boundary values set on
		// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
		// controllers might still use it (e.g. the Smith chart).

		if (fill === 'start') {
			target = model.scaleBottom === undefined? scale.bottom : model.scaleBottom;
		} else if (fill === 'end') {
			target = model.scaleTop === undefined? scale.top : model.scaleTop;
		} else if (model.scaleZero !== undefined) {
			target = model.scaleZero;
		} else if (scale.getBasePosition) {
			target = scale.getBasePosition();
		} else if (scale.getBasePixel) {
			target = scale.getBasePixel();
		}

		if (target !== undefined && target !== null) {
			if (target.x !== undefined && target.y !== undefined) {
				return target;
			}

			if (typeof target === 'number' && isFinite(target)) {
				horizontal = scale.isHorizontal();
				return {
					x: horizontal? target : null,
					y: horizontal? null : target
				};
			}
		}

		return null;
	}

	function resolveTarget(sources, index, propagate) {
		var source = sources[index];
		var fill = source.fill;
		var visited = [index];
		var target;

		if (!propagate) {
			return fill;
		}

		while (fill !== false && visited.indexOf(fill) === -1) {
			if (!isFinite(fill)) {
				return fill;
			}

			target = sources[fill];
			if (!target) {
				return false;
			}

			if (target.visible) {
				return fill;
			}

			visited.push(fill);
			fill = target.fill;
		}

		return false;
	}

	function createMapper(source) {
		var fill = source.fill;
		var type = 'dataset';

		if (fill === false) {
			return null;
		}

		if (!isFinite(fill)) {
			type = 'boundary';
		}

		return mappers[type](source);
	}

	function isDrawable(point) {
		return point && !point.skip;
	}

	function drawArea(ctx, curve0, curve1, len0, len1) {
		var i;

		if (!len0 || !len1) {
			return;
		}

		// building first area curve (normal)
		ctx.moveTo(curve0[0].x, curve0[0].y);
		for (i=1; i<len0; ++i) {
			helpers.canvas.lineTo(ctx, curve0[i-1], curve0[i]);
		}

		// joining the two area curves
		ctx.lineTo(curve1[len1-1].x, curve1[len1-1].y);

		// building opposite area curve (reverse)
		for (i=len1-1; i>0; --i) {
			helpers.canvas.lineTo(ctx, curve1[i], curve1[i-1], true);
		}
	}

	function doFill(ctx, points, mapper, view, color, loop) {
		var count = points.length;
		var span = view.spanGaps;
		var curve0 = [];
		var curve1 = [];
		var len0 = 0;
		var len1 = 0;
		var i, ilen, index, p0, p1, d0, d1;

		ctx.beginPath();

		for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {
			index = i%count;
			p0 = points[index]._view;
			p1 = mapper(p0, index, view);
			d0 = isDrawable(p0);
			d1 = isDrawable(p1);

			if (d0 && d1) {
				len0 = curve0.push(p0);
				len1 = curve1.push(p1);
			} else if (len0 && len1) {
				if (!span) {
					drawArea(ctx, curve0, curve1, len0, len1);
					len0 = len1 = 0;
					curve0 = [];
					curve1 = [];
				} else {
					if (d0) {
						curve0.push(p0);
					}
					if (d1) {
						curve1.push(p1);
					}
				}
			}
		}

		drawArea(ctx, curve0, curve1, len0, len1);

		ctx.closePath();
		ctx.fillStyle = color;
		ctx.fill();
	}

	return {
		id: 'filler',

		afterDatasetsUpdate: function(chart, options) {
			var count = (chart.data.datasets || []).length;
			var propagate = options.propagate;
			var sources = [];
			var meta, i, el, source;

			for (i = 0; i < count; ++i) {
				meta = chart.getDatasetMeta(i);
				el = meta.dataset;
				source = null;

				if (el && el._model && el instanceof Chart.elements.Line) {
					source = {
						visible: chart.isDatasetVisible(i),
						fill: decodeFill(el, i, count),
						chart: chart,
						el: el
					};
				}

				meta.$filler = source;
				sources.push(source);
			}

			for (i=0; i<count; ++i) {
				source = sources[i];
				if (!source) {
					continue;
				}

				source.fill = resolveTarget(sources, i, propagate);
				source.boundary = computeBoundary(source);
				source.mapper = createMapper(source);
			}
		},

		beforeDatasetDraw: function(chart, args) {
			var meta = args.meta.$filler;
			if (!meta) {
				return;
			}

			var el = meta.el;
			var view = el._view;
			var points = el._children || [];
			var mapper = meta.mapper;
			var color = view.backgroundColor || defaults.global.defaultColor;

			if (mapper && color && points.length) {
				doFill(chart.ctx, points, mapper, view, color, el._loop);
			}
		}
	};
};

},{}],42:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var layout = Chart.layoutService;
	var noop = helpers.noop;

	Chart.defaults.global.legend = {
		display: true,
		position: 'top',
		fullWidth: true,
		reverse: false,
		weight: 1000,

		// a callback that will handle
		onClick: function(e, legendItem) {
			var index = legendItem.datasetIndex;
			var ci = this.chart;
			var meta = ci.getDatasetMeta(index);

			// See controller.isDatasetVisible comment
			meta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;

			// We hid a dataset ... rerender the chart
			ci.update();
		},

		onHover: null,

		labels: {
			boxWidth: 40,
			padding: 10,
			// Generates labels shown in the legend
			// Valid properties to return:
			// text : text to display
			// fillStyle : fill of coloured box
			// strokeStyle: stroke of coloured box
			// hidden : if this legend item refers to a hidden item
			// lineCap : cap style for line
			// lineDash
			// lineDashOffset :
			// lineJoin :
			// lineWidth :
			generateLabels: function(chart) {
				var data = chart.data;
				return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
					return {
						text: dataset.label,
						fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
						hidden: !chart.isDatasetVisible(i),
						lineCap: dataset.borderCapStyle,
						lineDash: dataset.borderDash,
						lineDashOffset: dataset.borderDashOffset,
						lineJoin: dataset.borderJoinStyle,
						lineWidth: dataset.borderWidth,
						strokeStyle: dataset.borderColor,
						pointStyle: dataset.pointStyle,

						// Below is extra data used for toggling the datasets
						datasetIndex: i
					};
				}, this) : [];
			}
		}
	};

	/**
	 * Helper function to get the box width based on the usePointStyle option
	 * @param labelopts {Object} the label options on the legend
	 * @param fontSize {Number} the label font size
	 * @return {Number} width of the color box area
	 */
	function getBoxWidth(labelOpts, fontSize) {
		return labelOpts.usePointStyle ?
			fontSize * Math.SQRT2 :
			labelOpts.boxWidth;
	}

	Chart.Legend = Chart.Element.extend({

		initialize: function(config) {
			helpers.extend(this, config);

			// Contains hit boxes for each dataset (in dataset order)
			this.legendHitBoxes = [];

			// Are we in doughnut mode which has a different data type
			this.doughnutMode = false;
		},

		// These methods are ordered by lifecycle. Utilities then follow.
		// Any function defined here is inherited by all legend types.
		// Any function can be extended by the legend type

		beforeUpdate: noop,
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;
		},
		afterUpdate: noop,

		//

		beforeSetDimensions: noop,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop,

		//

		beforeBuildLabels: noop,
		buildLabels: function() {
			var me = this;
			var labelOpts = me.options.labels;
			var legendItems = labelOpts.generateLabels.call(me, me.chart);

			if (labelOpts.filter) {
				legendItems = legendItems.filter(function(item) {
					return labelOpts.filter(item, me.chart.data);
				});
			}

			if (me.options.reverse) {
				legendItems.reverse();
			}

			me.legendItems = legendItems;
		},
		afterBuildLabels: noop,

		//

		beforeFit: noop,
		fit: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var display = opts.display;

			var ctx = me.ctx;

			var globalDefault = Chart.defaults.global,
				itemOrDefault = helpers.getValueOrDefault,
				fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),
				fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),
				fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),
				labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

			// Reset hit boxes
			var hitboxes = me.legendHitBoxes = [];

			var minSize = me.minSize;
			var isHorizontal = me.isHorizontal();

			if (isHorizontal) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = display ? 10 : 0;
			} else {
				minSize.width = display ? 10 : 0;
				minSize.height = me.maxHeight; // fill all the height
			}

			// Increase sizes here
			if (display) {
				ctx.font = labelFont;

				if (isHorizontal) {
					// Labels

					// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
					var lineWidths = me.lineWidths = [0];
					var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;

					ctx.textAlign = 'left';
					ctx.textBaseline = 'top';

					helpers.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
							totalHeight += fontSize + (labelOpts.padding);
							lineWidths[lineWidths.length] = me.left;
						}

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: width,
							height: fontSize
						};

						lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
					});

					minSize.height += totalHeight;

				} else {
					var vPadding = labelOpts.padding;
					var columnWidths = me.columnWidths = [];
					var totalWidth = labelOpts.padding;
					var currentColWidth = 0;
					var currentColHeight = 0;
					var itemHeight = fontSize + vPadding;

					helpers.each(me.legendItems, function(legendItem, i) {
						var boxWidth = getBoxWidth(labelOpts, fontSize);
						var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

						// If too tall, go to new column
						if (currentColHeight + itemHeight > minSize.height) {
							totalWidth += currentColWidth + labelOpts.padding;
							columnWidths.push(currentColWidth); // previous column width

							currentColWidth = 0;
							currentColHeight = 0;
						}

						// Get max width
						currentColWidth = Math.max(currentColWidth, itemWidth);
						currentColHeight += itemHeight;

						// Store the hitbox width and height here. Final position will be updated in `draw`
						hitboxes[i] = {
							left: 0,
							top: 0,
							width: itemWidth,
							height: fontSize
						};
					});

					totalWidth += currentColWidth;
					columnWidths.push(currentColWidth);
					minSize.width += totalWidth;
				}
			}

			me.width = minSize.width;
			me.height = minSize.height;
		},
		afterFit: noop,

		// Shared Methods
		isHorizontal: function() {
			return this.options.position === 'top' || this.options.position === 'bottom';
		},

		// Actually draw the legend on the canvas
		draw: function() {
			var me = this;
			var opts = me.options;
			var labelOpts = opts.labels;
			var globalDefault = Chart.defaults.global,
				lineDefault = globalDefault.elements.line,
				legendWidth = me.width,
				lineWidths = me.lineWidths;

			if (opts.display) {
				var ctx = me.ctx,
					cursor,
					itemOrDefault = helpers.getValueOrDefault,
					fontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),
					fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),
					fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),
					fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),
					labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

				// Canvas setup
				ctx.textAlign = 'left';
				ctx.textBaseline = 'top';
				ctx.lineWidth = 0.5;
				ctx.strokeStyle = fontColor; // for strikethrough effect
				ctx.fillStyle = fontColor; // render in correct colour
				ctx.font = labelFont;

				var boxWidth = getBoxWidth(labelOpts, fontSize),
					hitboxes = me.legendHitBoxes;

				// current position
				var drawLegendBox = function(x, y, legendItem) {
					if (isNaN(boxWidth) || boxWidth <= 0) {
						return;
					}

					// Set the ctx for the box
					ctx.save();

					ctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
					ctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
					ctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
					ctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
					ctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
					ctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
					var isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);

					if (ctx.setLineDash) {
						// IE 9 and 10 do not support line dash
						ctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));
					}

					if (opts.labels && opts.labels.usePointStyle) {
						// Recalculate x and y for drawPoint() because its expecting
						// x and y to be center of figure (instead of top left)
						var radius = fontSize * Math.SQRT2 / 2;
						var offSet = radius / Math.SQRT2;
						var centerX = x + offSet;
						var centerY = y + offSet;

						// Draw pointStyle as legend symbol
						Chart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
					} else {
						// Draw box as legend symbol
						if (!isLineWidthZero) {
							ctx.strokeRect(x, y, boxWidth, fontSize);
						}
						ctx.fillRect(x, y, boxWidth, fontSize);
					}

					ctx.restore();
				};
				var fillText = function(x, y, legendItem, textWidth) {
					ctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);

					if (legendItem.hidden) {
						// Strikethrough the text if hidden
						ctx.beginPath();
						ctx.lineWidth = 2;
						ctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));
						ctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));
						ctx.stroke();
					}
				};

				// Horizontal
				var isHorizontal = me.isHorizontal();
				if (isHorizontal) {
					cursor = {
						x: me.left + ((legendWidth - lineWidths[0]) / 2),
						y: me.top + labelOpts.padding,
						line: 0
					};
				} else {
					cursor = {
						x: me.left + labelOpts.padding,
						y: me.top + labelOpts.padding,
						line: 0
					};
				}

				var itemHeight = fontSize + labelOpts.padding;
				helpers.each(me.legendItems, function(legendItem, i) {
					var textWidth = ctx.measureText(legendItem.text).width,
						width = boxWidth + (fontSize / 2) + textWidth,
						x = cursor.x,
						y = cursor.y;

					if (isHorizontal) {
						if (x + width >= legendWidth) {
							y = cursor.y += itemHeight;
							cursor.line++;
							x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);
						}
					} else if (y + itemHeight > me.bottom) {
						x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
						y = cursor.y = me.top + labelOpts.padding;
						cursor.line++;
					}

					drawLegendBox(x, y, legendItem);

					hitboxes[i].left = x;
					hitboxes[i].top = y;

					// Fill the actual label
					fillText(x, y, legendItem, textWidth);

					if (isHorizontal) {
						cursor.x += width + (labelOpts.padding);
					} else {
						cursor.y += itemHeight;
					}

				});
			}
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event - The event to handle
		 * @return {Boolean} true if a change occured
		 */
		handleEvent: function(e) {
			var me = this;
			var opts = me.options;
			var type = e.type === 'mouseup' ? 'click' : e.type;
			var changed = false;

			if (type === 'mousemove') {
				if (!opts.onHover) {
					return;
				}
			} else if (type === 'click') {
				if (!opts.onClick) {
					return;
				}
			} else {
				return;
			}

			// Chart event already has relative position in it
			var x = e.x,
				y = e.y;

			if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
				// See if we are touching one of the dataset boxes
				var lh = me.legendHitBoxes;
				for (var i = 0; i < lh.length; ++i) {
					var hitBox = lh[i];

					if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
						// Touching an element
						if (type === 'click') {
							// use e.native for backwards compatibility
							opts.onClick.call(me, e.native, me.legendItems[i]);
							changed = true;
							break;
						} else if (type === 'mousemove') {
							// use e.native for backwards compatibility
							opts.onHover.call(me, e.native, me.legendItems[i]);
							changed = true;
							break;
						}
					}
				}
			}

			return changed;
		}
	});

	function createNewLegendAndAttach(chart, legendOpts) {
		var legend = new Chart.Legend({
			ctx: chart.ctx,
			options: legendOpts,
			chart: chart
		});

		layout.configure(chart, legend, legendOpts);
		layout.addBox(chart, legend);
		chart.legend = legend;
	}

	return {
		id: 'legend',

		beforeInit: function(chart) {
			var legendOpts = chart.options.legend;

			if (legendOpts) {
				createNewLegendAndAttach(chart, legendOpts);
			}
		},

		beforeUpdate: function(chart) {
			var legendOpts = chart.options.legend;
			var legend = chart.legend;

			if (legendOpts) {
				legendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);

				if (legend) {
					layout.configure(chart, legend, legendOpts);
					legend.options = legendOpts;
				} else {
					createNewLegendAndAttach(chart, legendOpts);
				}
			} else if (legend) {
				layout.removeBox(chart, legend);
				delete chart.legend;
			}
		},

		afterEvent: function(chart, e) {
			var legend = chart.legend;
			if (legend) {
				legend.handleEvent(e);
			}
		}
	};
};

},{}],43:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var layout = Chart.layoutService;
	var noop = helpers.noop;

	Chart.defaults.global.title = {
		display: false,
		position: 'top',
		fullWidth: true,
		weight: 2000,        // by default greater than legend (1000) to be above
		fontStyle: 'bold',
		padding: 10,

		// actual title
		text: ''
	};

	Chart.Title = Chart.Element.extend({
		initialize: function(config) {
			var me = this;
			helpers.extend(me, config);

			// Contains hit boxes for each dataset (in dataset order)
			me.legendHitBoxes = [];
		},

		// These methods are ordered by lifecycle. Utilities then follow.

		beforeUpdate: noop,
		update: function(maxWidth, maxHeight, margins) {
			var me = this;

			// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
			me.beforeUpdate();

			// Absorb the master measurements
			me.maxWidth = maxWidth;
			me.maxHeight = maxHeight;
			me.margins = margins;

			// Dimensions
			me.beforeSetDimensions();
			me.setDimensions();
			me.afterSetDimensions();
			// Labels
			me.beforeBuildLabels();
			me.buildLabels();
			me.afterBuildLabels();

			// Fit
			me.beforeFit();
			me.fit();
			me.afterFit();
			//
			me.afterUpdate();

			return me.minSize;

		},
		afterUpdate: noop,

		//

		beforeSetDimensions: noop,
		setDimensions: function() {
			var me = this;
			// Set the unconstrained dimension before label rotation
			if (me.isHorizontal()) {
				// Reset position before calculating rotation
				me.width = me.maxWidth;
				me.left = 0;
				me.right = me.width;
			} else {
				me.height = me.maxHeight;

				// Reset position before calculating rotation
				me.top = 0;
				me.bottom = me.height;
			}

			// Reset padding
			me.paddingLeft = 0;
			me.paddingTop = 0;
			me.paddingRight = 0;
			me.paddingBottom = 0;

			// Reset minSize
			me.minSize = {
				width: 0,
				height: 0
			};
		},
		afterSetDimensions: noop,

		//

		beforeBuildLabels: noop,
		buildLabels: noop,
		afterBuildLabels: noop,

		//

		beforeFit: noop,
		fit: function() {
			var me = this,
				valueOrDefault = helpers.getValueOrDefault,
				opts = me.options,
				globalDefaults = Chart.defaults.global,
				display = opts.display,
				fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),
				minSize = me.minSize;

			if (me.isHorizontal()) {
				minSize.width = me.maxWidth; // fill all the width
				minSize.height = display ? fontSize + (opts.padding * 2) : 0;
			} else {
				minSize.width = display ? fontSize + (opts.padding * 2) : 0;
				minSize.height = me.maxHeight; // fill all the height
			}

			me.width = minSize.width;
			me.height = minSize.height;

		},
		afterFit: noop,

		// Shared Methods
		isHorizontal: function() {
			var pos = this.options.position;
			return pos === 'top' || pos === 'bottom';
		},

		// Actually draw the title block on the canvas
		draw: function() {
			var me = this,
				ctx = me.ctx,
				valueOrDefault = helpers.getValueOrDefault,
				opts = me.options,
				globalDefaults = Chart.defaults.global;

			if (opts.display) {
				var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),
					fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),
					fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),
					titleFont = helpers.fontString(fontSize, fontStyle, fontFamily),
					rotation = 0,
					titleX,
					titleY,
					top = me.top,
					left = me.left,
					bottom = me.bottom,
					right = me.right,
					maxWidth;

				ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour
				ctx.font = titleFont;

				// Horizontal
				if (me.isHorizontal()) {
					titleX = left + ((right - left) / 2); // midpoint of the width
					titleY = top + ((bottom - top) / 2); // midpoint of the height
					maxWidth = right - left;
				} else {
					titleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);
					titleY = top + ((bottom - top) / 2);
					maxWidth = bottom - top;
					rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
				}

				ctx.save();
				ctx.translate(titleX, titleY);
				ctx.rotate(rotation);
				ctx.textAlign = 'center';
				ctx.textBaseline = 'middle';
				ctx.fillText(opts.text, 0, 0, maxWidth);
				ctx.restore();
			}
		}
	});

	function createNewTitleBlockAndAttach(chart, titleOpts) {
		var title = new Chart.Title({
			ctx: chart.ctx,
			options: titleOpts,
			chart: chart
		});

		layout.configure(chart, title, titleOpts);
		layout.addBox(chart, title);
		chart.titleBlock = title;
	}

	return {
		id: 'title',

		beforeInit: function(chart) {
			var titleOpts = chart.options.title;

			if (titleOpts) {
				createNewTitleBlockAndAttach(chart, titleOpts);
			}
		},

		beforeUpdate: function(chart) {
			var titleOpts = chart.options.title;
			var titleBlock = chart.titleBlock;

			if (titleOpts) {
				titleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);

				if (titleBlock) {
					layout.configure(chart, titleBlock, titleOpts);
					titleBlock.options = titleOpts;
				} else {
					createNewTitleBlockAndAttach(chart, titleOpts);
				}
			} else if (titleBlock) {
				Chart.layoutService.removeBox(chart, titleBlock);
				delete chart.titleBlock;
			}
		}
	};
};

},{}],44:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	// Default config for a category scale
	var defaultConfig = {
		position: 'bottom'
	};

	var DatasetScale = Chart.Scale.extend({
		/**
		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
		* else fall back to data.labels
		* @private
		*/
		getLabels: function() {
			var data = this.chart.data;
			return (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
		},

		determineDataLimits: function() {
			var me = this;
			var labels = me.getLabels();
			me.minIndex = 0;
			me.maxIndex = labels.length - 1;
			var findIndex;

			if (me.options.ticks.min !== undefined) {
				// user specified min value
				findIndex = helpers.indexOf(labels, me.options.ticks.min);
				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
			}

			if (me.options.ticks.max !== undefined) {
				// user specified max value
				findIndex = helpers.indexOf(labels, me.options.ticks.max);
				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
			}

			me.min = labels[me.minIndex];
			me.max = labels[me.maxIndex];
		},

		buildTicks: function() {
			var me = this;
			var labels = me.getLabels();
			// If we are viewing some subset of labels, slice the original array
			me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var data = me.chart.data;
			var isHorizontal = me.isHorizontal();

			if (data.yLabels && !isHorizontal) {
				return me.getRightValue(data.datasets[datasetIndex].data[index]);
			}
			return me.ticks[index - me.minIndex];
		},

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: function(value, index, datasetIndex, includeOffset) {
			var me = this;
			// 1 is added because we need the length but we have the indexes
			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);

			// If value is a data object, then index is the index in the data array,
			// not the index of the scale. We need to change that.
			var valueCategory;
			if (value !== undefined && value !== null) {
				valueCategory = me.isHorizontal() ? value.x : value.y;
			}
			if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
				var labels = me.getLabels();
				value = valueCategory || value;
				var idx = labels.indexOf(value);
				index = idx !== -1 ? idx : index;
			}

			if (me.isHorizontal()) {
				var valueWidth = me.width / offsetAmt;
				var widthOffset = (valueWidth * (index - me.minIndex));

				if (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {
					widthOffset += (valueWidth / 2);
				}

				return me.left + Math.round(widthOffset);
			}
			var valueHeight = me.height / offsetAmt;
			var heightOffset = (valueHeight * (index - me.minIndex));

			if (me.options.gridLines.offsetGridLines && includeOffset) {
				heightOffset += (valueHeight / 2);
			}

			return me.top + Math.round(heightOffset);
		},
		getPixelForTick: function(index, includeOffset) {
			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var value;
			var offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);
			var horz = me.isHorizontal();
			var valueDimension = (horz ? me.width : me.height) / offsetAmt;

			pixel -= horz ? me.left : me.top;

			if (me.options.gridLines.offsetGridLines) {
				pixel -= (valueDimension / 2);
			}

			if (pixel <= 0) {
				value = 0;
			} else {
				value = Math.round(pixel / valueDimension);
			}

			return value;
		},
		getBasePixel: function() {
			return this.bottom;
		}
	});

	Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);

};

},{}],45:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var defaultConfig = {
		position: 'left',
		ticks: {
			callback: Chart.Ticks.formatters.linear
		}
	};

	var LinearScale = Chart.LinearScaleBase.extend({

		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();
			var DEFAULT_MIN = 0;
			var DEFAULT_MAX = 1;

			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// First Calculate the range
			me.min = null;
			me.max = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (valuesPerStack[key] === undefined) {
						valuesPerStack[key] = {
							positiveValues: [],
							negativeValues: []
						};
					}

					// Store these per type
					var positiveValues = valuesPerStack[key].positiveValues;
					var negativeValues = valuesPerStack[key].negativeValues;

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							positiveValues[index] = positiveValues[index] || 0;
							negativeValues[index] = negativeValues[index] || 0;

							if (opts.relativePoints) {
								positiveValues[index] = 100;
							} else if (value < 0) {
								negativeValues[index] += value;
							} else {
								positiveValues[index] += value;
							}
						});
					}
				});

				helpers.each(valuesPerStack, function(valuesForType) {
					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
					var minVal = helpers.min(values);
					var maxVal = helpers.max(values);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}
						});
					}
				});
			}

			me.min = isFinite(me.min) ? me.min : DEFAULT_MIN;
			me.max = isFinite(me.max) ? me.max : DEFAULT_MAX;

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			this.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var maxTicks;
			var me = this;
			var tickOpts = me.options.ticks;

			if (me.isHorizontal()) {
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
			} else {
				// The factor of 2 used to scale the font size has been experimentally determined.
				var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
			}

			return maxTicks;
		},
		// Called after the ticks are built. We need
		handleDirectionalChanges: function() {
			if (!this.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				this.ticks.reverse();
			}
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		// Utils
		getPixelForValue: function(value) {
			// This must be called after fit has been run so that
			// this.left, this.top, this.right, and this.bottom have been defined
			var me = this;
			var start = me.start;

			var rightValue = +me.getRightValue(value);
			var pixel;
			var range = me.end - start;

			if (me.isHorizontal()) {
				pixel = me.left + (me.width / range * (rightValue - start));
				return Math.round(pixel);
			}

			pixel = me.bottom - (me.height / range * (rightValue - start));
			return Math.round(pixel);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var innerDimension = isHorizontal ? me.width : me.height;
			var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
			return me.start + ((me.end - me.start) * offset);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticksAsNumbers[index]);
		}
	});
	Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);

};

},{}],46:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers,
		noop = helpers.noop;

	Chart.LinearScaleBase = Chart.Scale.extend({
		handleTickRangeOptions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
			// do nothing since that would make the chart weird. If the user really wants a weird chart
			// axis, they can manually override it
			if (tickOpts.beginAtZero) {
				var minSign = helpers.sign(me.min);
				var maxSign = helpers.sign(me.max);

				if (minSign < 0 && maxSign < 0) {
					// move the top up to 0
					me.max = 0;
				} else if (minSign > 0 && maxSign > 0) {
					// move the bottom down to 0
					me.min = 0;
				}
			}

			if (tickOpts.min !== undefined) {
				me.min = tickOpts.min;
			} else if (tickOpts.suggestedMin !== undefined) {
				if (me.min === null) {
					me.min = tickOpts.suggestedMin;
				} else {
					me.min = Math.min(me.min, tickOpts.suggestedMin);
				}
			}

			if (tickOpts.max !== undefined) {
				me.max = tickOpts.max;
			} else if (tickOpts.suggestedMax !== undefined) {
				if (me.max === null) {
					me.max = tickOpts.suggestedMax;
				} else {
					me.max = Math.max(me.max, tickOpts.suggestedMax);
				}
			}

			if (me.min === me.max) {
				me.max++;

				if (!tickOpts.beginAtZero) {
					me.min--;
				}
			}
		},
		getTickLimit: noop,
		handleDirectionalChanges: noop,

		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// Figure out what the max number of ticks we can support it is based on the size of
			// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
			// the graph. Make sure we always have at least 2 ticks
			var maxTicks = me.getTickLimit();
			maxTicks = Math.max(2, maxTicks);

			var numericGeneratorOptions = {
				maxTicks: maxTicks,
				min: tickOpts.min,
				max: tickOpts.max,
				stepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
			};
			var ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);

			me.handleDirectionalChanges();

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},
		convertTicksToLabels: function() {
			var me = this;
			me.ticksAsNumbers = me.ticks.slice();
			me.zeroLineIndex = me.ticks.indexOf(0);

			Chart.Scale.prototype.convertTicksToLabels.call(me);
		}
	});
};

},{}],47:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;

	var defaultConfig = {
		position: 'left',

		// label settings
		ticks: {
			callback: Chart.Ticks.formatters.logarithmic
		}
	};

	var LogarithmicScale = Chart.Scale.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var getValueOrDefault = helpers.getValueOrDefault;
			var isHorizontal = me.isHorizontal();
			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// Calculate Range
			me.min = null;
			me.max = null;
			me.minNotZero = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						if (valuesPerStack[key] === undefined) {
							valuesPerStack[key] = [];
						}

						helpers.each(dataset.data, function(rawValue, index) {
							var values = valuesPerStack[key];
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							values[index] = values[index] || 0;

							if (opts.relativePoints) {
								values[index] = 100;
							} else {
								// Don't need to split positive and negative since the log scale can't handle a 0 crossing
								values[index] += value;
							}
						});
					}
				});

				helpers.each(valuesPerStack, function(valuesForType) {
					var minVal = helpers.min(valuesForType);
					var maxVal = helpers.max(valuesForType);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}

							if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
								me.minNotZero = value;
							}
						});
					}
				});
			}

			me.min = getValueOrDefault(tickOpts.min, me.min);
			me.max = getValueOrDefault(tickOpts.max, me.max);

			if (me.min === me.max) {
				if (me.min !== 0 && me.min !== null) {
					me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
					me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
				} else {
					me.min = 1;
					me.max = 10;
				}
			}
		},
		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			var generationOptions = {
				min: tickOpts.min,
				max: tickOpts.max
			};
			var ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);

			if (!me.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				ticks.reverse();
			}

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},
		convertTicksToLabels: function() {
			this.tickValues = this.ticks.slice();

			Chart.Scale.prototype.convertTicksToLabels.call(this);
		},
		// Get the correct tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.tickValues[index]);
		},
		getPixelForValue: function(value) {
			var me = this;
			var innerDimension;
			var pixel;

			var start = me.start;
			var newVal = +me.getRightValue(value);
			var range;
			var opts = me.options;
			var tickOpts = opts.ticks;

			if (me.isHorizontal()) {
				range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0
				if (newVal === 0) {
					pixel = me.left;
				} else {
					innerDimension = me.width;
					pixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
				}
			} else {
				// Bottom - top since pixels increase downward on a screen
				innerDimension = me.height;
				if (start === 0 && !tickOpts.reverse) {
					range = helpers.log10(me.end) - helpers.log10(me.minNotZero);
					if (newVal === start) {
						pixel = me.bottom;
					} else if (newVal === me.minNotZero) {
						pixel = me.bottom - innerDimension * 0.02;
					} else {
						pixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));
					}
				} else if (me.end === 0 && tickOpts.reverse) {
					range = helpers.log10(me.start) - helpers.log10(me.minNotZero);
					if (newVal === me.end) {
						pixel = me.top;
					} else if (newVal === me.minNotZero) {
						pixel = me.top + innerDimension * 0.02;
					} else {
						pixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));
					}
				} else if (newVal === 0) {
					pixel = tickOpts.reverse ? me.top : me.bottom;
				} else {
					range = helpers.log10(me.end) - helpers.log10(start);
					innerDimension = me.height;
					pixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
				}
			}
			return pixel;
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var range = helpers.log10(me.end) - helpers.log10(me.start);
			var value, innerDimension;

			if (me.isHorizontal()) {
				innerDimension = me.width;
				value = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);
			} else {  // todo: if start === 0
				innerDimension = me.height;
				value = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;
			}
			return value;
		}
	});
	Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);

};

},{}],48:[function(require,module,exports){
'use strict';

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var globalDefaults = Chart.defaults.global;

	var defaultConfig = {
		display: true,

		// Boolean - Whether to animate scaling the chart from the centre
		animate: true,
		position: 'chartArea',

		angleLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1
		},

		gridLines: {
			circular: false
		},

		// label settings
		ticks: {
			// Boolean - Show a backdrop to the scale label
			showLabelBackdrop: true,

			// String - The colour of the label backdrop
			backdropColor: 'rgba(255,255,255,0.75)',

			// Number - The backdrop padding above & below the label in pixels
			backdropPaddingY: 2,

			// Number - The backdrop padding to the side of the label in pixels
			backdropPaddingX: 2,

			callback: Chart.Ticks.formatters.linear
		},

		pointLabels: {
			// Boolean - if true, show point labels
			display: true,

			// Number - Point label font size in pixels
			fontSize: 10,

			// Function - Used to convert point labels
			callback: function(label) {
				return label;
			}
		}
	};

	function getValueCount(scale) {
		var opts = scale.options;
		return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
	}

	function getPointLabelFontOptions(scale) {
		var pointLabelOptions = scale.options.pointLabels;
		var fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
		var fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
		var fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
		var font = helpers.fontString(fontSize, fontStyle, fontFamily);

		return {
			size: fontSize,
			style: fontStyle,
			family: fontFamily,
			font: font
		};
	}

	function measureLabelSize(ctx, fontSize, label) {
		if (helpers.isArray(label)) {
			return {
				w: helpers.longestText(ctx, ctx.font, label),
				h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)
			};
		}

		return {
			w: ctx.measureText(label).width,
			h: fontSize
		};
	}

	function determineLimits(angle, pos, size, min, max) {
		if (angle === min || angle === max) {
			return {
				start: pos - (size / 2),
				end: pos + (size / 2)
			};
		} else if (angle < min || angle > max) {
			return {
				start: pos - size - 5,
				end: pos
			};
		}

		return {
			start: pos,
			end: pos + size + 5
		};
	}

	/**
	 * Helper function to fit a radial linear scale with point labels
	 */
	function fitWithPointLabels(scale) {
		/*
		 * Right, this is really confusing and there is a lot of maths going on here
		 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
		 *
		 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
		 *
		 * Solution:
		 *
		 * We assume the radius of the polygon is half the size of the canvas at first
		 * at each index we check if the text overlaps.
		 *
		 * Where it does, we store that angle and that index.
		 *
		 * After finding the largest index and angle we calculate how much we need to remove
		 * from the shape radius to move the point inwards by that x.
		 *
		 * We average the left and right distances to get the maximum shape radius that can fit in the box
		 * along with labels.
		 *
		 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
		 * on each side, removing that from the size, halving it and adding the left x protrusion width.
		 *
		 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
		 * and position it in the most space efficient manner
		 *
		 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
		 */

		var plFont = getPointLabelFontOptions(scale);

		// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
		// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
		var furthestLimits = {
			r: scale.width,
			l: 0,
			t: scale.height,
			b: 0
		};
		var furthestAngles = {};
		var i;
		var textSize;
		var pointPosition;

		scale.ctx.font = plFont.font;
		scale._pointLabelSizes = [];

		var valueCount = getValueCount(scale);
		for (i = 0; i < valueCount; i++) {
			pointPosition = scale.getPointPosition(i, largestPossibleRadius);
			textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');
			scale._pointLabelSizes[i] = textSize;

			// Add quarter circle to make degree 0 mean top of circle
			var angleRadians = scale.getIndexAngle(i);
			var angle = helpers.toDegrees(angleRadians) % 360;
			var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
			var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

			if (hLimits.start < furthestLimits.l) {
				furthestLimits.l = hLimits.start;
				furthestAngles.l = angleRadians;
			}

			if (hLimits.end > furthestLimits.r) {
				furthestLimits.r = hLimits.end;
				furthestAngles.r = angleRadians;
			}

			if (vLimits.start < furthestLimits.t) {
				furthestLimits.t = vLimits.start;
				furthestAngles.t = angleRadians;
			}

			if (vLimits.end > furthestLimits.b) {
				furthestLimits.b = vLimits.end;
				furthestAngles.b = angleRadians;
			}
		}

		scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);
	}

	/**
	 * Helper function to fit a radial linear scale with no point labels
	 */
	function fit(scale) {
		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
		scale.drawingArea = Math.round(largestPossibleRadius);
		scale.setCenterPoint(0, 0, 0, 0);
	}

	function getTextAlignForAngle(angle) {
		if (angle === 0 || angle === 180) {
			return 'center';
		} else if (angle < 180) {
			return 'left';
		}

		return 'right';
	}

	function fillText(ctx, text, position, fontSize) {
		if (helpers.isArray(text)) {
			var y = position.y;
			var spacing = 1.5 * fontSize;

			for (var i = 0; i < text.length; ++i) {
				ctx.fillText(text[i], position.x, y);
				y+= spacing;
			}
		} else {
			ctx.fillText(text, position.x, position.y);
		}
	}

	function adjustPointPositionForLabelHeight(angle, textSize, position) {
		if (angle === 90 || angle === 270) {
			position.y -= (textSize.h / 2);
		} else if (angle > 270 || angle < 90) {
			position.y -= textSize.h;
		}
	}

	function drawPointLabels(scale) {
		var ctx = scale.ctx;
		var getValueOrDefault = helpers.getValueOrDefault;
		var opts = scale.options;
		var angleLineOpts = opts.angleLines;
		var pointLabelOpts = opts.pointLabels;

		ctx.lineWidth = angleLineOpts.lineWidth;
		ctx.strokeStyle = angleLineOpts.color;

		var outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);

		// Point Label Font
		var plFont = getPointLabelFontOptions(scale);

		ctx.textBaseline = 'top';

		for (var i = getValueCount(scale) - 1; i >= 0; i--) {
			if (angleLineOpts.display) {
				var outerPosition = scale.getPointPosition(i, outerDistance);
				ctx.beginPath();
				ctx.moveTo(scale.xCenter, scale.yCenter);
				ctx.lineTo(outerPosition.x, outerPosition.y);
				ctx.stroke();
				ctx.closePath();
			}

			if (pointLabelOpts.display) {
				// Extra 3px out for some label spacing
				var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);

				// Keep this in loop since we may support array properties here
				var pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);
				ctx.font = plFont.font;
				ctx.fillStyle = pointLabelFontColor;

				var angleRadians = scale.getIndexAngle(i);
				var angle = helpers.toDegrees(angleRadians);
				ctx.textAlign = getTextAlignForAngle(angle);
				adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
				fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);
			}
		}
	}

	function drawRadiusLine(scale, gridLineOpts, radius, index) {
		var ctx = scale.ctx;
		ctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);
		ctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

		if (scale.options.gridLines.circular) {
			// Draw circular arcs between the points
			ctx.beginPath();
			ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
			ctx.closePath();
			ctx.stroke();
		} else {
			// Draw straight lines connecting each index
			var valueCount = getValueCount(scale);

			if (valueCount === 0) {
				return;
			}

			ctx.beginPath();
			var pointPosition = scale.getPointPosition(0, radius);
			ctx.moveTo(pointPosition.x, pointPosition.y);

			for (var i = 1; i < valueCount; i++) {
				pointPosition = scale.getPointPosition(i, radius);
				ctx.lineTo(pointPosition.x, pointPosition.y);
			}

			ctx.closePath();
			ctx.stroke();
		}
	}

	function numberOrZero(param) {
		return helpers.isNumber(param) ? param : 0;
	}

	var LinearRadialScale = Chart.LinearScaleBase.extend({
		setDimensions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			// Set the unconstrained dimension before label rotation
			me.width = me.maxWidth;
			me.height = me.maxHeight;
			me.xCenter = Math.round(me.width / 2);
			me.yCenter = Math.round(me.height / 2);

			var minSize = helpers.min([me.height, me.width]);
			var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);
		},
		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			var min = Number.POSITIVE_INFINITY;
			var max = Number.NEGATIVE_INFINITY;

			helpers.each(chart.data.datasets, function(dataset, datasetIndex) {
				if (chart.isDatasetVisible(datasetIndex)) {
					var meta = chart.getDatasetMeta(datasetIndex);

					helpers.each(dataset.data, function(rawValue, index) {
						var value = +me.getRightValue(rawValue);
						if (isNaN(value) || meta.data[index].hidden) {
							return;
						}

						min = Math.min(value, min);
						max = Math.max(value, max);
					});
				}
			});

			me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
			me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			me.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var tickOpts = this.options.ticks;
			var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
		},
		convertTicksToLabels: function() {
			var me = this;
			Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

			// Point labels
			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		fit: function() {
			if (this.options.pointLabels.display) {
				fitWithPointLabels(this);
			} else {
				fit(this);
			}
		},
		/**
		 * Set radius reductions and determine new radius and center point
		 * @private
		 */
		setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
			var me = this;
			var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
			var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
			var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
			var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);

			radiusReductionLeft = numberOrZero(radiusReductionLeft);
			radiusReductionRight = numberOrZero(radiusReductionRight);
			radiusReductionTop = numberOrZero(radiusReductionTop);
			radiusReductionBottom = numberOrZero(radiusReductionBottom);

			me.drawingArea = Math.min(
				Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
				Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
			me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
		},
		setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
			var me = this;
			var maxRight = me.width - rightMovement - me.drawingArea,
				maxLeft = leftMovement + me.drawingArea,
				maxTop = topMovement + me.drawingArea,
				maxBottom = me.height - bottomMovement - me.drawingArea;

			me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);
			me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);
		},

		getIndexAngle: function(index) {
			var angleMultiplier = (Math.PI * 2) / getValueCount(this);
			var startAngle = this.chart.options && this.chart.options.startAngle ?
				this.chart.options.startAngle :
				0;

			var startAngleRadians = startAngle * Math.PI * 2 / 360;

			// Start from the top instead of right, so remove a quarter of the circle
			return index * angleMultiplier + startAngleRadians;
		},
		getDistanceFromCenterForValue: function(value) {
			var me = this;

			if (value === null) {
				return 0; // null always in center
			}

			// Take into account half font size + the yPadding of the top value
			var scalingFactor = me.drawingArea / (me.max - me.min);
			if (me.options.reverse) {
				return (me.max - value) * scalingFactor;
			}
			return (value - me.min) * scalingFactor;
		},
		getPointPosition: function(index, distanceFromCenter) {
			var me = this;
			var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
			return {
				x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
				y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
			};
		},
		getPointPositionForValue: function(index, value) {
			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
		},

		getBasePosition: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.getPointPositionForValue(0,
				me.beginAtZero? 0:
				min < 0 && max < 0? max :
				min > 0 && max > 0? min :
				0);
		},

		draw: function() {
			var me = this;
			var opts = me.options;
			var gridLineOpts = opts.gridLines;
			var tickOpts = opts.ticks;
			var getValueOrDefault = helpers.getValueOrDefault;

			if (opts.display) {
				var ctx = me.ctx;

				// Tick Font
				var tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
				var tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
				var tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
				var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);

				helpers.each(me.ticks, function(label, index) {
					// Don't draw a centre value (if it is minimum)
					if (index > 0 || opts.reverse) {
						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);
						var yHeight = me.yCenter - yCenterOffset;

						// Draw circular lines around the scale
						if (gridLineOpts.display && index !== 0) {
							drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
						}

						if (tickOpts.display) {
							var tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
							ctx.font = tickLabelFont;

							if (tickOpts.showLabelBackdrop) {
								var labelWidth = ctx.measureText(label).width;
								ctx.fillStyle = tickOpts.backdropColor;
								ctx.fillRect(
									me.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,
									yHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,
									labelWidth + tickOpts.backdropPaddingX * 2,
									tickFontSize + tickOpts.backdropPaddingY * 2
								);
							}

							ctx.textAlign = 'center';
							ctx.textBaseline = 'middle';
							ctx.fillStyle = tickFontColor;
							ctx.fillText(label, me.xCenter, yHeight);
						}
					}
				});

				if (opts.angleLines.display || opts.pointLabels.display) {
					drawPointLabels(me);
				}
			}
		}
	});
	Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);

};

},{}],49:[function(require,module,exports){
/* global window: false */
'use strict';

var moment = require(1);
moment = typeof(moment) === 'function' ? moment : window.moment;

module.exports = function(Chart) {

	var helpers = Chart.helpers;
	var interval = {
		millisecond: {
			size: 1,
			steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
		},
		second: {
			size: 1000,
			steps: [1, 2, 5, 10, 30]
		},
		minute: {
			size: 60000,
			steps: [1, 2, 5, 10, 30]
		},
		hour: {
			size: 3600000,
			steps: [1, 2, 3, 6, 12]
		},
		day: {
			size: 86400000,
			steps: [1, 2, 5]
		},
		week: {
			size: 604800000,
			maxStep: 4
		},
		month: {
			size: 2.628e9,
			maxStep: 3
		},
		quarter: {
			size: 7.884e9,
			maxStep: 4
		},
		year: {
			size: 3.154e10,
			maxStep: false
		}
	};

	var defaultConfig = {
		position: 'bottom',

		time: {
			parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
			unit: false, // false == automatic or override with week, month, year, etc.
			round: false, // none, or override with week, month, year, etc.
			displayFormat: false, // DEPRECATED
			isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
			minUnit: 'millisecond',

			// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
			displayFormats: {
				millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
				second: 'h:mm:ss a', // 11:20:01 AM
				minute: 'h:mm:ss a', // 11:20:01 AM
				hour: 'MMM D, hA', // Sept 4, 5PM
				day: 'll', // Sep 4 2015
				week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
				month: 'MMM YYYY', // Sept 2015
				quarter: '[Q]Q - YYYY', // Q3
				year: 'YYYY' // 2015
			},
		},
		ticks: {
			autoSkip: false
		}
	};

	/**
	 * Helper function to parse time to a moment object
	 * @param axis {TimeAxis} the time axis
	 * @param label {Date|string|number|Moment} The thing to parse
	 * @return {Moment} parsed time
	 */
	function parseTime(axis, label) {
		var timeOpts = axis.options.time;
		if (typeof timeOpts.parser === 'string') {
			return moment(label, timeOpts.parser);
		}
		if (typeof timeOpts.parser === 'function') {
			return timeOpts.parser(label);
		}
		if (typeof label.getMonth === 'function' || typeof label === 'number') {
			// Date objects
			return moment(label);
		}
		if (label.isValid && label.isValid()) {
			// Moment support
			return label;
		}
		var format = timeOpts.format;
		if (typeof format !== 'string' && format.call) {
			// Custom parsing (return an instance of moment)
			console.warn('options.time.format is deprecated and replaced by options.time.parser.');
			return format(label);
		}
		// Moment format parsing
		return moment(label, format);
	}

	/**
	 * Figure out which is the best unit for the scale
	 * @param minUnit {String} minimum unit to use
	 * @param min {Number} scale minimum
	 * @param max {Number} scale maximum
	 * @return {String} the unit to use
	 */
	function determineUnit(minUnit, min, max, maxTicks) {
		var units = Object.keys(interval);
		var unit;
		var numUnits = units.length;

		for (var i = units.indexOf(minUnit); i < numUnits; i++) {
			unit = units[i];
			var unitDetails = interval[unit];
			var steps = (unitDetails.steps && unitDetails.steps[unitDetails.steps.length - 1]) || unitDetails.maxStep;
			if (steps === undefined || Math.ceil((max - min) / (steps * unitDetails.size)) <= maxTicks) {
				break;
			}
		}

		return unit;
	}

	/**
	 * Determines how we scale the unit
	 * @param min {Number} the scale minimum
	 * @param max {Number} the scale maximum
	 * @param unit {String} the unit determined by the {@see determineUnit} method
	 * @return {Number} the axis step size as a multiple of unit
	 */
	function determineStepSize(min, max, unit, maxTicks) {
		// Using our unit, figoure out what we need to scale as
		var unitDefinition = interval[unit];
		var unitSizeInMilliSeconds = unitDefinition.size;
		var sizeInUnits = Math.ceil((max - min) / unitSizeInMilliSeconds);
		var multiplier = 1;
		var range = max - min;

		if (unitDefinition.steps) {
			// Have an array of steps
			var numSteps = unitDefinition.steps.length;
			for (var i = 0; i < numSteps && sizeInUnits > maxTicks; i++) {
				multiplier = unitDefinition.steps[i];
				sizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));
			}
		} else {
			while (sizeInUnits > maxTicks && maxTicks > 0) {
				++multiplier;
				sizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));
			}
		}

		return multiplier;
	}

	/**
	 * Helper for generating axis labels.
	 * @param options {ITimeGeneratorOptions} the options for generation
	 * @param dataRange {IRange} the data range
	 * @param niceRange {IRange} the pretty range to display
	 * @return {Number[]} ticks
	 */
	function generateTicks(options, dataRange, niceRange) {
		var ticks = [];
		if (options.maxTicks) {
			var stepSize = options.stepSize;
			ticks.push(options.min !== undefined ? options.min : niceRange.min);
			var cur = moment(niceRange.min);
			while (cur.add(stepSize, options.unit).valueOf() < niceRange.max) {
				ticks.push(cur.valueOf());
			}
			var realMax = options.max || niceRange.max;
			if (ticks[ticks.length - 1] !== realMax) {
				ticks.push(realMax);
			}
		}
		return ticks;
	}

	/**
	 * @function Chart.Ticks.generators.time
	 * @param options {ITimeGeneratorOptions} the options for generation
	 * @param dataRange {IRange} the data range
	 * @return {Number[]} ticks
	 */
	Chart.Ticks.generators.time = function(options, dataRange) {
		var niceMin;
		var niceMax;
		var isoWeekday = options.isoWeekday;
		if (options.unit === 'week' && isoWeekday !== false) {
			niceMin = moment(dataRange.min).startOf('isoWeek').isoWeekday(isoWeekday).valueOf();
			niceMax = moment(dataRange.max).startOf('isoWeek').isoWeekday(isoWeekday);
			if (dataRange.max - niceMax > 0) {
				niceMax.add(1, 'week');
			}
			niceMax = niceMax.valueOf();
		} else {
			niceMin = moment(dataRange.min).startOf(options.unit).valueOf();
			niceMax = moment(dataRange.max).startOf(options.unit);
			if (dataRange.max - niceMax > 0) {
				niceMax.add(1, options.unit);
			}
			niceMax = niceMax.valueOf();
		}
		return generateTicks(options, dataRange, {
			min: niceMin,
			max: niceMax
		});
	};

	var TimeScale = Chart.Scale.extend({
		initialize: function() {
			if (!moment) {
				throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
			}

			Chart.Scale.prototype.initialize.call(this);
		},
		determineDataLimits: function() {
			var me = this;
			var timeOpts = me.options.time;

			// We store the data range as unix millisecond timestamps so dataMin and dataMax will always be integers.
			var dataMin = Number.MAX_SAFE_INTEGER;
			var dataMax = Number.MIN_SAFE_INTEGER;

			var chartData = me.chart.data;
			var parsedData = {
				labels: [],
				datasets: []
			};

			var timestamp;

			helpers.each(chartData.labels, function(label, labelIndex) {
				var labelMoment = parseTime(me, label);

				if (labelMoment.isValid()) {
					// We need to round the time
					if (timeOpts.round) {
						labelMoment.startOf(timeOpts.round);
					}

					timestamp = labelMoment.valueOf();
					dataMin = Math.min(timestamp, dataMin);
					dataMax = Math.max(timestamp, dataMax);

					// Store this value for later
					parsedData.labels[labelIndex] = timestamp;
				}
			});

			helpers.each(chartData.datasets, function(dataset, datasetIndex) {
				var timestamps = [];

				if (typeof dataset.data[0] === 'object' && dataset.data[0] !== null && me.chart.isDatasetVisible(datasetIndex)) {
					// We have potential point data, so we need to parse this
					helpers.each(dataset.data, function(value, dataIndex) {
						var dataMoment = parseTime(me, me.getRightValue(value));

						if (dataMoment.isValid()) {
							if (timeOpts.round) {
								dataMoment.startOf(timeOpts.round);
							}

							timestamp = dataMoment.valueOf();
							dataMin = Math.min(timestamp, dataMin);
							dataMax = Math.max(timestamp, dataMax);
							timestamps[dataIndex] = timestamp;
						}
					});
				} else {
					// We have no x coordinates, so use the ones from the labels
					timestamps = parsedData.labels.slice();
				}

				parsedData.datasets[datasetIndex] = timestamps;
			});

			me.dataMin = dataMin;
			me.dataMax = dataMax;
			me._parsedData = parsedData;
		},
		buildTicks: function() {
			var me = this;
			var timeOpts = me.options.time;

			var minTimestamp;
			var maxTimestamp;
			var dataMin = me.dataMin;
			var dataMax = me.dataMax;

			if (timeOpts.min) {
				var minMoment = parseTime(me, timeOpts.min);
				if (timeOpts.round) {
					minMoment.round(timeOpts.round);
				}
				minTimestamp = minMoment.valueOf();
			}

			if (timeOpts.max) {
				maxTimestamp = parseTime(me, timeOpts.max).valueOf();
			}

			var maxTicks = me.getLabelCapacity(minTimestamp || dataMin);
			var unit = timeOpts.unit || determineUnit(timeOpts.minUnit, minTimestamp || dataMin, maxTimestamp || dataMax, maxTicks);
			me.displayFormat = timeOpts.displayFormats[unit];

			var stepSize = timeOpts.stepSize || determineStepSize(minTimestamp || dataMin, maxTimestamp || dataMax, unit, maxTicks);
			me.ticks = Chart.Ticks.generators.time({
				maxTicks: maxTicks,
				min: minTimestamp,
				max: maxTimestamp,
				stepSize: stepSize,
				unit: unit,
				isoWeekday: timeOpts.isoWeekday
			}, {
				min: dataMin,
				max: dataMax
			});

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(me.ticks);
			me.min = helpers.min(me.ticks);
		},
		// Get tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';
			var value = me.chart.data.datasets[datasetIndex].data[index];

			if (value !== null && typeof value === 'object') {
				label = me.getRightValue(value);
			}

			// Format nicely
			if (me.options.time.tooltipFormat) {
				label = parseTime(me, label).format(me.options.time.tooltipFormat);
			}

			return label;
		},
		// Function to format an individual tick mark
		tickFormatFunction: function(tick, index, ticks) {
			var formattedTick = tick.format(this.displayFormat);
			var tickOpts = this.options.ticks;
			var callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);

			if (callback) {
				return callback(formattedTick, index, ticks);
			}
			return formattedTick;
		},
		convertTicksToLabels: function() {
			var me = this;
			me.ticksAsTimestamps = me.ticks;
			me.ticks = me.ticks.map(function(tick) {
				return moment(tick);
			}).map(me.tickFormatFunction, me);
		},
		getPixelForOffset: function(offset) {
			var me = this;
			var epochWidth = me.max - me.min;
			var decimal = epochWidth ? (offset - me.min) / epochWidth : 0;

			if (me.isHorizontal()) {
				var valueOffset = (me.width * decimal);
				return me.left + Math.round(valueOffset);
			}

			var heightOffset = (me.height * decimal);
			return me.top + Math.round(heightOffset);
		},
		getPixelForValue: function(value, index, datasetIndex) {
			var me = this;
			var offset = null;
			if (index !== undefined && datasetIndex !== undefined) {
				offset = me._parsedData.datasets[datasetIndex][index];
			}

			if (offset === null) {
				if (!value || !value.isValid) {
					// not already a moment object
					value = parseTime(me, me.getRightValue(value));
				}

				if (value && value.isValid && value.isValid()) {
					offset = value.valueOf();
				}
			}

			if (offset !== null) {
				return me.getPixelForOffset(offset);
			}
		},
		getPixelForTick: function(index) {
			return this.getPixelForOffset(this.ticksAsTimestamps[index]);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var innerDimension = me.isHorizontal() ? me.width : me.height;
			var offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;
			return moment(me.min + (offset * (me.max - me.min)));
		},
		// Crude approximation of what the label width might be
		getLabelWidth: function(label) {
			var me = this;
			var ticks = me.options.ticks;

			var tickLabelWidth = me.ctx.measureText(label).width;
			var cosRotation = Math.cos(helpers.toRadians(ticks.maxRotation));
			var sinRotation = Math.sin(helpers.toRadians(ticks.maxRotation));
			var tickFontSize = helpers.getValueOrDefault(ticks.fontSize, Chart.defaults.global.defaultFontSize);
			return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
		},
		getLabelCapacity: function(exampleTime) {
			var me = this;

			me.displayFormat = me.options.time.displayFormats.millisecond;	// Pick the longest format for guestimation
			var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, []);
			var tickLabelWidth = me.getLabelWidth(exampleLabel);

			var innerWidth = me.isHorizontal() ? me.width : me.height;
			var labelCapacity = innerWidth / tickLabelWidth;
			return labelCapacity;
		}
	});
	Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);

};

},{"1":1}]},{},[7])(7)
});
define('resources/value-converters/filter-sessions',['exports'], function (exports) {
	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var filterSessionsValueConverter = exports.filterSessionsValueConverter = function () {
		function filterSessionsValueConverter() {
			_classCallCheck(this, filterSessionsValueConverter);
		}

		filterSessionsValueConverter.prototype.toView = function toView(array, filter, keep) {
			if (array && filter) {
				var activePresent = false;
				var requestPresent = false;
				array.forEach(function (item) {
					if (item.sessionStatus === 'Active') activePresent = true;
					if (item.sessionStatus === 'Requests') requestPresent = true;
				});
				if (activePresent && requestPresent) {
					return array.filter(function (item) {
						return item['sessionStatus'] === keep;
					});
				}
			}
			return array;
		};

		return filterSessionsValueConverter;
	}();
});
define('text!app.html', ['module'], function(module) { module.exports = "<template>\n   <require from=\"resources/css/styles.css\"></require>\n   <require from=\"humane-js/themes/flatty.css\"></require>\n   <nav-bar></nav-bar>\n  <div class=\"page-host\">\n    <loading-indicator progress.bind=\"data.progress\" loading.bind=\"router.isNavigating || data.isRequesting\"></loading-indicator>\n    <router-view></router-view>\n</div>\n</template>\n"; });
define('text!resources/css/fullcalendar.css', ['module'], function(module) { module.exports = "/*!\n * FullCalendar v3.4.0 Stylesheet\n * Docs & License: https://fullcalendar.io/\n * (c) 2017 Adam Shaw\n */\n\n\n.fc {\n\tdirection: ltr;\n\ttext-align: left;\n}\n\n.fc-rtl {\n\ttext-align: right;\n}\n\nbody .fc { /* extra precedence to overcome jqui */\n\tfont-size: 1em;\n}\n\n\n/* Colors\n--------------------------------------------------------------------------------------------------*/\n\n.fc-unthemed th,\n.fc-unthemed td,\n.fc-unthemed thead,\n.fc-unthemed tbody,\n.fc-unthemed .fc-divider,\n.fc-unthemed .fc-row,\n.fc-unthemed .fc-content, /* for gutter border */\n.fc-unthemed .fc-popover,\n.fc-unthemed .fc-list-view,\n.fc-unthemed .fc-list-heading td {\n\tborder-color: #ddd;\n}\n\n.fc-unthemed .fc-popover {\n\tbackground-color: #fff;\n}\n\n.fc-unthemed .fc-divider,\n.fc-unthemed .fc-popover .fc-header,\n.fc-unthemed .fc-list-heading td {\n\tbackground: #eee;\n}\n\n.fc-unthemed .fc-popover .fc-header .fc-close {\n\tcolor: #666;\n}\n\n.fc-unthemed td.fc-today {\n\tbackground: #fcf8e3;\n}\n\n.fc-highlight { /* when user is selecting cells */\n\tbackground: #bce8f1;\n\topacity: .3;\n}\n\n.fc-bgevent { /* default look for background events */\n\tbackground: rgb(143, 223, 130);\n\topacity: .3;\n}\n\n.fc-nonbusiness { /* default look for non-business-hours areas */\n\t/* will inherit .fc-bgevent's styles */\n\tbackground: #d7d7d7;\n}\n\n.fc-unthemed .fc-disabled-day {\n\tbackground: #d7d7d7;\n\topacity: .3;\n}\n\n.ui-widget .fc-disabled-day { /* themed */\n\tbackground-image: none;\n}\n\n\n/* Icons (inline elements with styled text that mock arrow icons)\n--------------------------------------------------------------------------------------------------*/\n\n.fc-icon {\n\tdisplay: inline-block;\n\theight: 1em;\n\tline-height: 1em;\n\tfont-size: 1em;\n\ttext-align: center;\n\toverflow: hidden;\n\tfont-family: \"Courier New\", Courier, monospace;\n\n\t/* don't allow browser text-selection */\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-khtml-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\t}\n\n/*\nAcceptable font-family overrides for individual icons:\n\t\"Arial\", sans-serif\n\t\"Times New Roman\", serif\n\nNOTE: use percentage font sizes or else old IE chokes\n*/\n\n.fc-icon:after {\n\tposition: relative;\n}\n\n.fc-icon-left-single-arrow:after {\n\tcontent: \"\\02039\";\n\tfont-weight: bold;\n\tfont-size: 200%;\n\ttop: -7%;\n}\n\n.fc-icon-right-single-arrow:after {\n\tcontent: \"\\0203A\";\n\tfont-weight: bold;\n\tfont-size: 200%;\n\ttop: -7%;\n}\n\n.fc-icon-left-double-arrow:after {\n\tcontent: \"\\000AB\";\n\tfont-size: 160%;\n\ttop: -7%;\n}\n\n.fc-icon-right-double-arrow:after {\n\tcontent: \"\\000BB\";\n\tfont-size: 160%;\n\ttop: -7%;\n}\n\n.fc-icon-left-triangle:after {\n\tcontent: \"\\25C4\";\n\tfont-size: 125%;\n\ttop: 3%;\n}\n\n.fc-icon-right-triangle:after {\n\tcontent: \"\\25BA\";\n\tfont-size: 125%;\n\ttop: 3%;\n}\n\n.fc-icon-down-triangle:after {\n\tcontent: \"\\25BC\";\n\tfont-size: 125%;\n\ttop: 2%;\n}\n\n.fc-icon-x:after {\n\tcontent: \"\\000D7\";\n\tfont-size: 200%;\n\ttop: 6%;\n}\n\n\n/* Buttons (styled <button> tags, normalized to work cross-browser)\n--------------------------------------------------------------------------------------------------*/\n\n.fc button {\n\t/* force height to include the border and padding */\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tbox-sizing: border-box;\n\n\t/* dimensions */\n\tmargin: 0;\n\theight: 2.1em;\n\tpadding: 0 .6em;\n\n\t/* text & cursor */\n\tfont-size: 1em; /* normalize */\n\twhite-space: nowrap;\n\tcursor: pointer;\n}\n\n/* Firefox has an annoying inner border */\n.fc button::-moz-focus-inner { margin: 0; padding: 0; }\n\t\n.fc-state-default { /* non-theme */\n\tborder: 1px solid;\n}\n\n.fc-state-default.fc-corner-left { /* non-theme */\n\tborder-top-left-radius: 4px;\n\tborder-bottom-left-radius: 4px;\n}\n\n.fc-state-default.fc-corner-right { /* non-theme */\n\tborder-top-right-radius: 4px;\n\tborder-bottom-right-radius: 4px;\n}\n\n/* icons in buttons */\n\n.fc button .fc-icon { /* non-theme */\n\tposition: relative;\n\ttop: -0.05em; /* seems to be a good adjustment across browsers */\n\tmargin: 0 .2em;\n\tvertical-align: middle;\n}\n\t\n/*\n  button states\n  borrowed from twitter bootstrap (http://twitter.github.com/bootstrap/)\n*/\n\n.fc-state-default {\n\tbackground-color: #f5f5f5;\n\tbackground-image: -moz-linear-gradient(top, #ffffff, #e6e6e6);\n\tbackground-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6));\n\tbackground-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6);\n\tbackground-image: -o-linear-gradient(top, #ffffff, #e6e6e6);\n\tbackground-image: linear-gradient(to bottom, #ffffff, #e6e6e6);\n\tbackground-repeat: repeat-x;\n\tborder-color: #e6e6e6 #e6e6e6 #bfbfbf;\n\tborder-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);\n\tcolor: #333;\n\ttext-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);\n\tbox-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.fc-state-hover,\n.fc-state-down,\n.fc-state-active,\n.fc-state-disabled {\n\tcolor: #333333;\n\tbackground-color: #e6e6e6;\n}\n\n.fc-state-hover {\n\tcolor: #333333;\n\ttext-decoration: none;\n\tbackground-position: 0 -15px;\n\t-webkit-transition: background-position 0.1s linear;\n\t   -moz-transition: background-position 0.1s linear;\n\t     -o-transition: background-position 0.1s linear;\n\t        transition: background-position 0.1s linear;\n}\n\n.fc-state-down,\n.fc-state-active {\n\tbackground-color: #cccccc;\n\tbackground-image: none;\n\tbox-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.fc-state-disabled {\n\tcursor: default;\n\tbackground-image: none;\n\topacity: 0.65;\n\tbox-shadow: none;\n}\n\n\n/* Buttons Groups\n--------------------------------------------------------------------------------------------------*/\n\n.fc-button-group {\n\tdisplay: inline-block;\n}\n\n/*\nevery button that is not first in a button group should scootch over one pixel and cover the\nprevious button's border...\n*/\n\n.fc .fc-button-group > * { /* extra precedence b/c buttons have margin set to zero */\n\tfloat: left;\n\tmargin: 0 0 0 -1px;\n}\n\n.fc .fc-button-group > :first-child { /* same */\n\tmargin-left: 0;\n}\n\n\n/* Popover\n--------------------------------------------------------------------------------------------------*/\n\n.fc-popover {\n\tposition: absolute;\n\tbox-shadow: 0 2px 6px rgba(0,0,0,.15);\n}\n\n.fc-popover .fc-header { /* TODO: be more consistent with fc-head/fc-body */\n\tpadding: 2px 4px;\n}\n\n.fc-popover .fc-header .fc-title {\n\tmargin: 0 2px;\n}\n\n.fc-popover .fc-header .fc-close {\n\tcursor: pointer;\n}\n\n.fc-ltr .fc-popover .fc-header .fc-title,\n.fc-rtl .fc-popover .fc-header .fc-close {\n\tfloat: left;\n}\n\n.fc-rtl .fc-popover .fc-header .fc-title,\n.fc-ltr .fc-popover .fc-header .fc-close {\n\tfloat: right;\n}\n\n/* unthemed */\n\n.fc-unthemed .fc-popover {\n\tborder-width: 1px;\n\tborder-style: solid;\n}\n\n.fc-unthemed .fc-popover .fc-header .fc-close {\n\tfont-size: .9em;\n\tmargin-top: 2px;\n}\n\n/* jqui themed */\n\n.fc-popover > .ui-widget-header + .ui-widget-content {\n\tborder-top: 0; /* where they meet, let the header have the border */\n}\n\n\n/* Misc Reusable Components\n--------------------------------------------------------------------------------------------------*/\n\n.fc-divider {\n\tborder-style: solid;\n\tborder-width: 1px;\n}\n\nhr.fc-divider {\n\theight: 0;\n\tmargin: 0;\n\tpadding: 0 0 2px; /* height is unreliable across browsers, so use padding */\n\tborder-width: 1px 0;\n}\n\n.fc-clear {\n\tclear: both;\n}\n\n.fc-bg,\n.fc-bgevent-skeleton,\n.fc-highlight-skeleton,\n.fc-helper-skeleton {\n\t/* these element should always cling to top-left/right corners */\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n}\n\n.fc-bg {\n\tbottom: 0; /* strech bg to bottom edge */\n}\n\n.fc-bg table {\n\theight: 100%; /* strech bg to bottom edge */\n}\n\n\n/* Tables\n--------------------------------------------------------------------------------------------------*/\n\n.fc table {\n\twidth: 100%;\n\tbox-sizing: border-box; /* fix scrollbar issue in firefox */\n\ttable-layout: fixed;\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n\tfont-size: 1em; /* normalize cross-browser */\n}\n\n.fc th {\n\ttext-align: center;\n}\n\n.fc th,\n.fc td {\n\tborder-style: solid;\n\tborder-width: 1px;\n\tpadding: 0;\n\tvertical-align: top;\n}\n\n.fc td.fc-today {\n\tborder-style: double; /* overcome neighboring borders */\n}\n\n\n/* Internal Nav Links\n--------------------------------------------------------------------------------------------------*/\n\na[data-goto] {\n\tcursor: pointer;\n}\n\na[data-goto]:hover {\n\ttext-decoration: underline;\n}\n\n\n/* Fake Table Rows\n--------------------------------------------------------------------------------------------------*/\n\n.fc .fc-row { /* extra precedence to overcome themes w/ .ui-widget-content forcing a 1px border */\n\t/* no visible border by default. but make available if need be (scrollbar width compensation) */\n\tborder-style: solid;\n\tborder-width: 0;\n}\n\n.fc-row table {\n\t/* don't put left/right border on anything within a fake row.\n\t   the outer tbody will worry about this */\n\tborder-left: 0 hidden transparent;\n\tborder-right: 0 hidden transparent;\n\n\t/* no bottom borders on rows */\n\tborder-bottom: 0 hidden transparent; \n}\n\n.fc-row:first-child table {\n\tborder-top: 0 hidden transparent; /* no top border on first row */\n}\n\n\n/* Day Row (used within the header and the DayGrid)\n--------------------------------------------------------------------------------------------------*/\n\n.fc-row {\n\tposition: relative;\n}\n\n.fc-row .fc-bg {\n\tz-index: 1;\n}\n\n/* highlighting cells & background event skeleton */\n\n.fc-row .fc-bgevent-skeleton,\n.fc-row .fc-highlight-skeleton {\n\tbottom: 0; /* stretch skeleton to bottom of row */\n}\n\n.fc-row .fc-bgevent-skeleton table,\n.fc-row .fc-highlight-skeleton table {\n\theight: 100%; /* stretch skeleton to bottom of row */\n}\n\n.fc-row .fc-highlight-skeleton td,\n.fc-row .fc-bgevent-skeleton td {\n\tborder-color: transparent;\n}\n\n.fc-row .fc-bgevent-skeleton {\n\tz-index: 2;\n\n}\n\n.fc-row .fc-highlight-skeleton {\n\tz-index: 3;\n}\n\n/*\nrow content (which contains day/week numbers and events) as well as \"helper\" (which contains\ntemporary rendered events).\n*/\n\n.fc-row .fc-content-skeleton {\n\tposition: relative;\n\tz-index: 4;\n\tpadding-bottom: 2px; /* matches the space above the events */\n}\n\n.fc-row .fc-helper-skeleton {\n\tz-index: 5;\n}\n\n.fc-row .fc-content-skeleton td,\n.fc-row .fc-helper-skeleton td {\n\t/* see-through to the background below */\n\tbackground: none; /* in case <td>s are globally styled */\n\tborder-color: transparent;\n\n\t/* don't put a border between events and/or the day number */\n\tborder-bottom: 0;\n}\n\n.fc-row .fc-content-skeleton tbody td, /* cells with events inside (so NOT the day number cell) */\n.fc-row .fc-helper-skeleton tbody td {\n\t/* don't put a border between event cells */\n\tborder-top: 0;\n}\n\n\n/* Scrolling Container\n--------------------------------------------------------------------------------------------------*/\n\n.fc-scroller {\n\t-webkit-overflow-scrolling: touch;\n}\n\n/* TODO: move to agenda/basic */\n.fc-scroller > .fc-day-grid,\n.fc-scroller > .fc-time-grid {\n\tposition: relative; /* re-scope all positions */\n\twidth: 100%; /* hack to force re-sizing this inner element when scrollbars appear/disappear */\n}\n\n\n/* Global Event Styles\n--------------------------------------------------------------------------------------------------*/\n\n.fc-event {\n\tposition: relative; /* for resize handle and other inner positioning */\n\tdisplay: block; /* make the <a> tag block */\n\tfont-size: .85em;\n\tline-height: 1.3;\n\tborder-radius: 3px;\n\tborder: 1px solid #3a87ad; /* default BORDER color */\n\tfont-weight: normal; /* undo jqui's ui-widget-header bold */\n}\n\n.fc-event,\n.fc-event-dot {\n\tbackground-color: #3a87ad; /* default BACKGROUND color */\n}\n\n/* overpower some of bootstrap's and jqui's styles on <a> tags */\n.fc-event,\n.fc-event:hover,\n.ui-widget .fc-event {\n\tcolor: #fff; /* default TEXT color */\n\ttext-decoration: none; /* if <a> has an href */\n}\n\n.fc-event[href],\n.fc-event.fc-draggable {\n\tcursor: pointer; /* give events with links and draggable events a hand mouse pointer */\n}\n\n.fc-not-allowed, /* causes a \"warning\" cursor. applied on body */\n.fc-not-allowed .fc-event { /* to override an event's custom cursor */\n\tcursor: not-allowed;\n}\n\n.fc-event .fc-bg { /* the generic .fc-bg already does position */\n\tz-index: 1;\n\tbackground: #fff;\n\topacity: .25;\n}\n\n.fc-event .fc-content {\n\tposition: relative;\n\tz-index: 2;\n}\n\n/* resizer (cursor AND touch devices) */\n\n.fc-event .fc-resizer {\n\tposition: absolute;\n\tz-index: 4;\n}\n\n/* resizer (touch devices) */\n\n.fc-event .fc-resizer {\n\tdisplay: none;\n}\n\n.fc-event.fc-allow-mouse-resize .fc-resizer,\n.fc-event.fc-selected .fc-resizer {\n\t/* only show when hovering or selected (with touch) */\n\tdisplay: block;\n}\n\n/* hit area */\n\n.fc-event.fc-selected .fc-resizer:before {\n\t/* 40x40 touch area */\n\tcontent: \"\";\n\tposition: absolute;\n\tz-index: 9999; /* user of this util can scope within a lower z-index */\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 40px;\n\theight: 40px;\n\tmargin-left: -20px;\n\tmargin-top: -20px;\n}\n\n\n/* Event Selection (only for touch devices)\n--------------------------------------------------------------------------------------------------*/\n\n.fc-event.fc-selected {\n\tz-index: 9999 !important; /* overcomes inline z-index */\n\tbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.fc-event.fc-selected.fc-dragging {\n\tbox-shadow: 0 2px 7px rgba(0, 0, 0, 0.3);\n}\n\n\n/* Horizontal Events\n--------------------------------------------------------------------------------------------------*/\n\n/* bigger touch area when selected */\n.fc-h-event.fc-selected:before {\n\tcontent: \"\";\n\tposition: absolute;\n\tz-index: 3; /* below resizers */\n\ttop: -10px;\n\tbottom: -10px;\n\tleft: 0;\n\tright: 0;\n}\n\n/* events that are continuing to/from another week. kill rounded corners and butt up against edge */\n\n.fc-ltr .fc-h-event.fc-not-start,\n.fc-rtl .fc-h-event.fc-not-end {\n\tmargin-left: 0;\n\tborder-left-width: 0;\n\tpadding-left: 1px; /* replace the border with padding */\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n\n.fc-ltr .fc-h-event.fc-not-end,\n.fc-rtl .fc-h-event.fc-not-start {\n\tmargin-right: 0;\n\tborder-right-width: 0;\n\tpadding-right: 1px; /* replace the border with padding */\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n}\n\n/* resizer (cursor AND touch devices) */\n\n/* left resizer  */\n.fc-ltr .fc-h-event .fc-start-resizer,\n.fc-rtl .fc-h-event .fc-end-resizer {\n\tcursor: w-resize;\n\tleft: -1px; /* overcome border */\n}\n\n/* right resizer */\n.fc-ltr .fc-h-event .fc-end-resizer,\n.fc-rtl .fc-h-event .fc-start-resizer {\n\tcursor: e-resize;\n\tright: -1px; /* overcome border */\n}\n\n/* resizer (mouse devices) */\n\n.fc-h-event.fc-allow-mouse-resize .fc-resizer {\n\twidth: 7px;\n\ttop: -1px; /* overcome top border */\n\tbottom: -1px; /* overcome bottom border */\n}\n\n/* resizer (touch devices) */\n\n.fc-h-event.fc-selected .fc-resizer {\n\t/* 8x8 little dot */\n\tborder-radius: 4px;\n\tborder-width: 1px;\n\twidth: 6px;\n\theight: 6px;\n\tborder-style: solid;\n\tborder-color: inherit;\n\tbackground: #fff;\n\t/* vertically center */\n\ttop: 50%;\n\tmargin-top: -4px;\n}\n\n/* left resizer  */\n.fc-ltr .fc-h-event.fc-selected .fc-start-resizer,\n.fc-rtl .fc-h-event.fc-selected .fc-end-resizer {\n\tmargin-left: -4px; /* centers the 8x8 dot on the left edge */\n}\n\n/* right resizer */\n.fc-ltr .fc-h-event.fc-selected .fc-end-resizer,\n.fc-rtl .fc-h-event.fc-selected .fc-start-resizer {\n\tmargin-right: -4px; /* centers the 8x8 dot on the right edge */\n}\n\n\n/* DayGrid events\n----------------------------------------------------------------------------------------------------\nWe use the full \"fc-day-grid-event\" class instead of using descendants because the event won't\nbe a descendant of the grid when it is being dragged.\n*/\n\n.fc-day-grid-event {\n\tmargin: 1px 2px 0; /* spacing between events and edges */\n\tpadding: 0 1px;\n}\n\ntr:first-child > td > .fc-day-grid-event {\n\tmargin-top: 2px; /* a little bit more space before the first event */\n}\n\n.fc-day-grid-event.fc-selected:after {\n\tcontent: \"\";\n\tposition: absolute;\n\tz-index: 1; /* same z-index as fc-bg, behind text */\n\t/* overcome the borders */\n\ttop: -1px;\n\tright: -1px;\n\tbottom: -1px;\n\tleft: -1px;\n\t/* darkening effect */\n\tbackground: #000;\n\topacity: .25;\n}\n\n.fc-day-grid-event .fc-content { /* force events to be one-line tall */\n\twhite-space: nowrap;\n\toverflow: hidden;\n}\n\n.fc-day-grid-event .fc-time {\n\tfont-weight: bold;\n}\n\n/* resizer (cursor devices) */\n\n/* left resizer  */\n.fc-ltr .fc-day-grid-event.fc-allow-mouse-resize .fc-start-resizer,\n.fc-rtl .fc-day-grid-event.fc-allow-mouse-resize .fc-end-resizer {\n\tmargin-left: -2px; /* to the day cell's edge */\n}\n\n/* right resizer */\n.fc-ltr .fc-day-grid-event.fc-allow-mouse-resize .fc-end-resizer,\n.fc-rtl .fc-day-grid-event.fc-allow-mouse-resize .fc-start-resizer {\n\tmargin-right: -2px; /* to the day cell's edge */\n}\n\n\n/* Event Limiting\n--------------------------------------------------------------------------------------------------*/\n\n/* \"more\" link that represents hidden events */\n\na.fc-more {\n\tmargin: 1px 3px;\n\tfont-size: .85em;\n\tcursor: pointer;\n\ttext-decoration: none;\n}\n\na.fc-more:hover {\n\ttext-decoration: underline;\n}\n\n.fc-limited { /* rows and cells that are hidden because of a \"more\" link */\n\tdisplay: none;\n}\n\n/* popover that appears when \"more\" link is clicked */\n\n.fc-day-grid .fc-row {\n\tz-index: 1; /* make the \"more\" popover one higher than this */\n}\n\n.fc-more-popover {\n\tz-index: 2;\n\twidth: 220px;\n}\n\n.fc-more-popover .fc-event-container {\n\tpadding: 10px;\n}\n\n\n/* Now Indicator\n--------------------------------------------------------------------------------------------------*/\n\n.fc-now-indicator {\n\tposition: absolute;\n\tborder: 0 solid red;\n}\n\n\n/* Utilities\n--------------------------------------------------------------------------------------------------*/\n\n.fc-unselectable {\n\t-webkit-user-select: none;\n\t -khtml-user-select: none;\n\t   -moz-user-select: none;\n\t    -ms-user-select: none;\n\t        user-select: none;\n\t-webkit-touch-callout: none;\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n\n\n/* Toolbar\n--------------------------------------------------------------------------------------------------*/\n\n.fc-toolbar {\n\ttext-align: center;\n}\n\n.fc-toolbar.fc-header-toolbar {\n\tmargin-bottom: 1em;\n}\n\n.fc-toolbar.fc-footer-toolbar {\n\tmargin-top: 1em;\n}\n\n.fc-toolbar .fc-left {\n\tfloat: left;\n}\n\n.fc-toolbar .fc-right {\n\tfloat: right;\n}\n\n.fc-toolbar .fc-center {\n\tdisplay: inline-block;\n}\n\n/* the things within each left/right/center section */\n.fc .fc-toolbar > * > * { /* extra precedence to override button border margins */\n\tfloat: left;\n\tmargin-left: .75em;\n}\n\n/* the first thing within each left/center/right section */\n.fc .fc-toolbar > * > :first-child { /* extra precedence to override button border margins */\n\tmargin-left: 0;\n}\n\t\n/* title text */\n\n.fc-toolbar h2 {\n\tmargin: 0;\n}\n\n/* button layering (for border precedence) */\n\n.fc-toolbar button {\n\tposition: relative;\n}\n\n.fc-toolbar .fc-state-hover,\n.fc-toolbar .ui-state-hover {\n\tz-index: 2;\n}\n\t\n.fc-toolbar .fc-state-down {\n\tz-index: 3;\n}\n\n.fc-toolbar .fc-state-active,\n.fc-toolbar .ui-state-active {\n\tz-index: 4;\n}\n\n.fc-toolbar button:focus {\n\tz-index: 5;\n}\n\n\n/* View Structure\n--------------------------------------------------------------------------------------------------*/\n\n/* undo twitter bootstrap's box-sizing rules. normalizes positioning techniques */\n/* don't do this for the toolbar because we'll want bootstrap to style those buttons as some pt */\n.fc-view-container *,\n.fc-view-container *:before,\n.fc-view-container *:after {\n\t-webkit-box-sizing: content-box;\n\t   -moz-box-sizing: content-box;\n\t        box-sizing: content-box;\n}\n\n.fc-view, /* scope positioning and z-index's for everything within the view */\n.fc-view > table { /* so dragged elements can be above the view's main element */\n\tposition: relative;\n\tz-index: 1;\n}\n\n\n\n/* BasicView\n--------------------------------------------------------------------------------------------------*/\n\n/* day row structure */\n\n.fc-basicWeek-view .fc-content-skeleton,\n.fc-basicDay-view .fc-content-skeleton {\n\t/* there may be week numbers in these views, so no padding-top */\n\tpadding-bottom: 1em; /* ensure a space at bottom of cell for user selecting/clicking */\n}\n\n.fc-basic-view .fc-body .fc-row {\n\tmin-height: 4em; /* ensure that all rows are at least this tall */\n}\n\n/* a \"rigid\" row will take up a constant amount of height because content-skeleton is absolute */\n\n.fc-row.fc-rigid {\n\toverflow: hidden;\n}\n\n.fc-row.fc-rigid .fc-content-skeleton {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n}\n\n/* week and day number styling */\n\n.fc-day-top.fc-other-month {\n\topacity: 0.3;\n}\n\n.fc-basic-view .fc-week-number,\n.fc-basic-view .fc-day-number {\n\tpadding: 2px;\n}\n\n.fc-basic-view th.fc-week-number,\n.fc-basic-view th.fc-day-number {\n\tpadding: 0 2px; /* column headers can't have as much v space */\n}\n\n.fc-ltr .fc-basic-view .fc-day-top .fc-day-number { float: right; }\n.fc-rtl .fc-basic-view .fc-day-top .fc-day-number { float: left; }\n\n.fc-ltr .fc-basic-view .fc-day-top .fc-week-number { float: left; border-radius: 0 0 3px 0; }\n.fc-rtl .fc-basic-view .fc-day-top .fc-week-number { float: right; border-radius: 0 0 0 3px; }\n\n.fc-basic-view .fc-day-top .fc-week-number {\n\tmin-width: 1.5em;\n\ttext-align: center;\n\tbackground-color: #f2f2f2;\n\tcolor: #808080;\n}\n\n/* when week/day number have own column */\n\n.fc-basic-view td.fc-week-number {\n\ttext-align: center;\n}\n\n.fc-basic-view td.fc-week-number > * {\n\t/* work around the way we do column resizing and ensure a minimum width */\n\tdisplay: inline-block;\n\tmin-width: 1.25em;\n}\n\n\n/* AgendaView all-day area\n--------------------------------------------------------------------------------------------------*/\n\n.fc-agenda-view .fc-day-grid {\n\tposition: relative;\n\tz-index: 2; /* so the \"more..\" popover will be over the time grid */\n}\n\n.fc-agenda-view .fc-day-grid .fc-row {\n\tmin-height: 3em; /* all-day section will never get shorter than this */\n}\n\n.fc-agenda-view .fc-day-grid .fc-row .fc-content-skeleton {\n\tpadding-bottom: 1em; /* give space underneath events for clicking/selecting days */\n}\n\n\n/* TimeGrid axis running down the side (for both the all-day area and the slot area)\n--------------------------------------------------------------------------------------------------*/\n\n.fc .fc-axis { /* .fc to overcome default cell styles */\n\tvertical-align: middle;\n\tpadding: 0 4px;\n\twhite-space: nowrap;\n}\n\n.fc-ltr .fc-axis {\n\ttext-align: right;\n}\n\n.fc-rtl .fc-axis {\n\ttext-align: left;\n}\n\n.ui-widget td.fc-axis {\n\tfont-weight: normal; /* overcome jqui theme making it bold */\n}\n\n\n/* TimeGrid Structure\n--------------------------------------------------------------------------------------------------*/\n\n.fc-time-grid-container, /* so scroll container's z-index is below all-day */\n.fc-time-grid { /* so slats/bg/content/etc positions get scoped within here */\n\tposition: relative;\n\tz-index: 1;\n}\n\n.fc-time-grid {\n\tmin-height: 100%; /* so if height setting is 'auto', .fc-bg stretches to fill height */\n}\n\n.fc-time-grid table { /* don't put outer borders on slats/bg/content/etc */\n\tborder: 0 hidden transparent;\n}\n\n.fc-time-grid > .fc-bg {\n\tz-index: 1;\n}\n\n.fc-time-grid .fc-slats,\n.fc-time-grid > hr { /* the <hr> AgendaView injects when grid is shorter than scroller */\n\tposition: relative;\n\tz-index: 2;\n}\n\n.fc-time-grid .fc-content-col {\n\tposition: relative; /* because now-indicator lives directly inside */\n}\n\n.fc-time-grid .fc-content-skeleton {\n\tposition: absolute;\n\tz-index: 3;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n}\n\n/* divs within a cell within the fc-content-skeleton */\n\n.fc-time-grid .fc-business-container {\n\tposition: relative;\n\tz-index: 1;\n}\n\n.fc-time-grid .fc-bgevent-container {\n\tposition: relative;\n\tz-index: 2;\n}\n\n.fc-time-grid .fc-highlight-container {\n\tposition: relative;\n\tz-index: 3;\n}\n\n.fc-time-grid .fc-event-container {\n\tposition: relative;\n\tz-index: 4;\n}\n\n.fc-time-grid .fc-now-indicator-line {\n\tz-index: 5;\n}\n\n.fc-time-grid .fc-helper-container { /* also is fc-event-container */\n\tposition: relative;\n\tz-index: 6;\n}\n\n\n/* TimeGrid Slats (lines that run horizontally)\n--------------------------------------------------------------------------------------------------*/\n\n.fc-time-grid .fc-slats td {\n\theight: 1.5em;\n\tborder-bottom: 0; /* each cell is responsible for its top border */\n}\n\n.fc-time-grid .fc-slats .fc-minor td {\n\tborder-top-style: dotted;\n}\n\n.fc-time-grid .fc-slats .ui-widget-content { /* for jqui theme */\n\tbackground: none; /* see through to fc-bg */\n}\n\n\n/* TimeGrid Highlighting Slots\n--------------------------------------------------------------------------------------------------*/\n\n.fc-time-grid .fc-highlight-container { /* a div within a cell within the fc-highlight-skeleton */\n\tposition: relative; /* scopes the left/right of the fc-highlight to be in the column */\n}\n\n.fc-time-grid .fc-highlight {\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\t/* top and bottom will be in by JS */\n}\n\n\n/* TimeGrid Event Containment\n--------------------------------------------------------------------------------------------------*/\n\n.fc-ltr .fc-time-grid .fc-event-container { /* space on the sides of events for LTR (default) */\n\tmargin: 0 2.5% 0 2px;\n}\n\n.fc-rtl .fc-time-grid .fc-event-container { /* space on the sides of events for RTL */\n\tmargin: 0 2px 0 2.5%;\n}\n\n.fc-time-grid .fc-event,\n.fc-time-grid .fc-bgevent {\n\tposition: absolute;\n\tz-index: 1; /* scope inner z-index's */\n}\n\n.fc-time-grid .fc-bgevent {\n\t/* background events always span full width */\n\tleft: 0;\n\tright: 0;\n}\n\n\n/* Generic Vertical Event\n--------------------------------------------------------------------------------------------------*/\n\n.fc-v-event.fc-not-start { /* events that are continuing from another day */\n\t/* replace space made by the top border with padding */\n\tborder-top-width: 0;\n\tpadding-top: 1px;\n\n\t/* remove top rounded corners */\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n}\n\n.fc-v-event.fc-not-end {\n\t/* replace space made by the top border with padding */\n\tborder-bottom-width: 0;\n\tpadding-bottom: 1px;\n\n\t/* remove bottom rounded corners */\n\tborder-bottom-left-radius: 0;\n\tborder-bottom-right-radius: 0;\n}\n\n\n/* TimeGrid Event Styling\n----------------------------------------------------------------------------------------------------\nWe use the full \"fc-time-grid-event\" class instead of using descendants because the event won't\nbe a descendant of the grid when it is being dragged.\n*/\n\n.fc-time-grid-event {\n\toverflow: hidden; /* don't let the bg flow over rounded corners */\n}\n\n.fc-time-grid-event.fc-selected {\n\t/* need to allow touch resizers to extend outside event's bounding box */\n\t/* common fc-selected styles hide the fc-bg, so don't need this anyway */\n\toverflow: visible;\n}\n\n.fc-time-grid-event.fc-selected .fc-bg {\n\tdisplay: none; /* hide semi-white background, to appear darker */\n}\n\n.fc-time-grid-event .fc-content {\n\toverflow: hidden; /* for when .fc-selected */\n}\n\n.fc-time-grid-event .fc-time,\n.fc-time-grid-event .fc-title {\n\tpadding: 0 1px;\n}\n\n.fc-time-grid-event .fc-time {\n\tfont-size: .85em;\n\twhite-space: nowrap;\n}\n\n/* short mode, where time and title are on the same line */\n\n.fc-time-grid-event.fc-short .fc-content {\n\t/* don't wrap to second line (now that contents will be inline) */\n\twhite-space: nowrap;\n}\n\n.fc-time-grid-event.fc-short .fc-time,\n.fc-time-grid-event.fc-short .fc-title {\n\t/* put the time and title on the same line */\n\tdisplay: inline-block;\n\tvertical-align: top;\n}\n\n.fc-time-grid-event.fc-short .fc-time span {\n\tdisplay: none; /* don't display the full time text... */\n}\n\n.fc-time-grid-event.fc-short .fc-time:before {\n\tcontent: attr(data-start); /* ...instead, display only the start time */\n}\n\n.fc-time-grid-event.fc-short .fc-time:after {\n\tcontent: \"\\000A0-\\000A0\"; /* seperate with a dash, wrapped in nbsp's */\n}\n\n.fc-time-grid-event.fc-short .fc-title {\n\tfont-size: .85em; /* make the title text the same size as the time */\n\tpadding: 0; /* undo padding from above */\n}\n\n/* resizer (cursor device) */\n\n.fc-time-grid-event.fc-allow-mouse-resize .fc-resizer {\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\theight: 8px;\n\toverflow: hidden;\n\tline-height: 8px;\n\tfont-size: 11px;\n\tfont-family: monospace;\n\ttext-align: center;\n\tcursor: s-resize;\n}\n\n.fc-time-grid-event.fc-allow-mouse-resize .fc-resizer:after {\n\tcontent: \"=\";\n}\n\n/* resizer (touch device) */\n\n.fc-time-grid-event.fc-selected .fc-resizer {\n\t/* 10x10 dot */\n\tborder-radius: 5px;\n\tborder-width: 1px;\n\twidth: 8px;\n\theight: 8px;\n\tborder-style: solid;\n\tborder-color: inherit;\n\tbackground: #fff;\n\t/* horizontally center */\n\tleft: 50%;\n\tmargin-left: -5px;\n\t/* center on the bottom edge */\n\tbottom: -5px;\n}\n\n\n/* Now Indicator\n--------------------------------------------------------------------------------------------------*/\n\n.fc-time-grid .fc-now-indicator-line {\n\tborder-top-width: 1px;\n\tleft: 0;\n\tright: 0;\n}\n\n/* arrow on axis */\n\n.fc-time-grid .fc-now-indicator-arrow {\n\tmargin-top: -5px; /* vertically center on top coordinate */\n}\n\n.fc-ltr .fc-time-grid .fc-now-indicator-arrow {\n\tleft: 0;\n\t/* triangle pointing right... */\n\tborder-width: 5px 0 5px 6px;\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n}\n\n.fc-rtl .fc-time-grid .fc-now-indicator-arrow {\n\tright: 0;\n\t/* triangle pointing left... */\n\tborder-width: 5px 6px 5px 0;\n\tborder-top-color: transparent;\n\tborder-bottom-color: transparent;\n}\n\n\n\n/* List View\n--------------------------------------------------------------------------------------------------*/\n\n/* possibly reusable */\n\n.fc-event-dot {\n\tdisplay: inline-block;\n\twidth: 10px;\n\theight: 10px;\n\tborder-radius: 5px;\n}\n\n/* view wrapper */\n\n.fc-rtl .fc-list-view {\n\tdirection: rtl; /* unlike core views, leverage browser RTL */\n}\n\n.fc-list-view {\n\tborder-width: 1px;\n\tborder-style: solid;\n}\n\n/* table resets */\n\n.fc .fc-list-table {\n\ttable-layout: auto; /* for shrinkwrapping cell content */\n}\n\n.fc-list-table td {\n\tborder-width: 1px 0 0;\n\tpadding: 8px 14px;\n}\n\n.fc-list-table tr:first-child td {\n\tborder-top-width: 0;\n}\n\n/* day headings with the list */\n\n.fc-list-heading {\n\tborder-bottom-width: 1px;\n}\n\n.fc-list-heading td {\n\tfont-weight: bold;\n}\n\n.fc-ltr .fc-list-heading-main { float: left; }\n.fc-ltr .fc-list-heading-alt { float: right; }\n\n.fc-rtl .fc-list-heading-main { float: right; }\n.fc-rtl .fc-list-heading-alt { float: left; }\n\n/* event list items */\n\n.fc-list-item.fc-has-url {\n\tcursor: pointer; /* whole row will be clickable */\n}\n\n.fc-list-item:hover td {\n\tbackground-color: #f5f5f5;\n}\n\n.fc-list-item-marker,\n.fc-list-item-time {\n\twhite-space: nowrap;\n\twidth: 1px;\n}\n\n/* make the dot closer to the event title */\n.fc-ltr .fc-list-item-marker { padding-right: 0; }\n.fc-rtl .fc-list-item-marker { padding-left: 0; }\n\n.fc-list-item-title a {\n\t/* every event title cell has an <a> tag */\n\ttext-decoration: none;\n\tcolor: inherit;\n}\n\n.fc-list-item-title a[href]:hover {\n\t/* hover effect only on titles with hrefs */\n\ttext-decoration: underline;\n}\n\n/* message when no events */\n\n.fc-list-empty-wrap2 {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n.fc-list-empty-wrap1 {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: table;\n}\n\n.fc-list-empty {\n\tdisplay: table-cell;\n\tvertical-align: middle;\n\ttext-align: center;\n}\n\n.fc-unthemed .fc-list-empty { /* theme will provide own background */\n\tbackground-color: #eee;\n}\n"; });
define('text!modules/analytics/analytics.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../resources/elements/submenu.html'></compose>\n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!resources/css/styles.css', ['module'], function(module) { module.exports = "@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);\r\n\r\n.banner {\r\n    height: 50px;\r\n    width: 100%;\r\n    background-color: white;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n}\r\n\r\n.browse .textContainer {\r\n    height: 430px;\r\n    line-height: 400px;\r\n}\r\n\r\n.textContainer h4 {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n}\r\n\r\n.topMargin {\r\n    margin-top: 25px;\r\n}\r\n\r\n.bottomMargin {\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.leftMargin {\r\n    margin-left: 25px;\r\n}\r\n\r\n.rightMargin {\r\n  margin-right: 25px;\r\n}\r\n\r\n.smallLeftMargin {\r\n    margin-left: 10px;\r\n}\r\n\r\n.bigTopMargin {\r\n    margin-top: 50px;\r\n}\r\n\r\n.bigLeftMargin {\r\n    margin-left: 50px;\r\n}\r\n\r\n.smallMarginRight {\r\n    margin-right: 10px;\r\n}\r\n\r\n.parallax1 {\r\n    /* The image used */\r\n    background-image: url(\"/img/parallax1.jpg\");\r\n\r\n    /* Set a specific height */\r\n    min-height: 300px;\r\n\r\n    /* Create the parallax scrolling effect */\r\n    background-attachment: fixed;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n}\r\n\r\n.parallax2 {\r\n    /* The image used */\r\n    background-image: url(\"/img/parallax2.jpg\");\r\n\r\n    /* Set a specific height */\r\n    min-height: 200px;\r\n\r\n    /* Create the parallax scrolling effect */\r\n    background-attachment: fixed;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n}\r\n\r\n.caption span.border {\r\n    background-color: #111;\r\n    color: #fff;\r\n    padding: 18px;\r\n    font-size: 25px;\r\n    letter-spacing: 10px;\r\n}\r\n\r\n.caption {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 25%;\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #000;\r\n}\r\n\r\n.center-text {\r\n   text-align: center;\r\n}\r\n\r\n.home-page-header{\r\n    text-align: center;\r\n    font-size: 30px;\r\n}\r\n\r\n.underline {\r\n    text-decoration: underline;\r\n}\r\n\r\n.subMenu{\r\n    position: relative;\r\n    top: -5px;\r\n    left: 0px;\r\n    width: 100%;\r\n}\r\n\r\n.subMenu-container {\r\n    position: fixed; /* Set the navbar to fixed position */\r\n    top: 5rem;\r\n    width: 100%;\r\n    z-index:99;\r\n}\r\n\r\n.hover {\r\n    position:absolute;\r\n    height: 200px;\r\n    width: 600px;\r\n    z-index:99;\r\n    display:none;\r\n    box-shadow: 10px 10px 5px #888888;\r\n    overflow: hidden;\r\n    background-color: white;\r\n    padding: 10px;\r\n}\r\n\r\n.hoverProfile {\r\n    position:absolute;\r\n    height: 250px;\r\n    width: 500px;\r\n    z-index:99;\r\n    display:none;\r\n    box-shadow: 10px 10px 5px #888888;\r\n    overflow: hidden;\r\n    background-color: white;\r\n    padding: 10px;\r\n}\r\n\r\n.overFlow {\r\n    overflow-y:scroll;\r\n}\r\n\r\n.carouselSize {\r\n    width:700px;\r\n    height:500px;\r\n}\r\n\r\n.carouselImage {\r\n    height:500px;\r\n}\r\n\r\n.weatherIcon {\r\n    height: 50px;\r\n    width: 50px;\r\n}\r\n\r\n.page-host {\r\n    margin-top: 10rem;\r\n}\r\n\r\nspan i {\r\n    cursor: pointer;\r\n}\r\n\r\n.sortable {\r\n    cursor: pointer;   \r\n}\r\n\r\n.aurelia-flatpickr {\r\n    background-color: white !important;\r\n}\r\n\r\n/* Dropdown Button */\r\n.dropbtn {\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n/* The container <div> - needed to position the dropdown content */\r\n.dropdown {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n/* Dropdown Content (Hidden by Default) */\r\n.dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f9f9f9;\r\n    min-width: 160px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1;\r\n}\r\n\r\n/* Links inside the dropdown */\r\n.dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    text-decoration: none;\r\n    display: block;\r\n}\r\n\r\n/* Change color of dropdown links on hover */\r\n.dropdown-content a:hover {background-color: #f1f1f1}\r\n\r\n/* Show the dropdown menu on hover */\r\n.dropdown:hover .dropdown-content {\r\n    display: block;\r\n}\r\n\r\n/* Change the background color of the dropdown button when the dropdown content is shown */\r\n.dropdown:hover .dropbtn {\r\n    background-color: #3e8e41;\r\n}\r\n\r\n.smart-timeline{position:relative}\r\n.smart-timeline-list{list-style:none;margin:0;padding:0}\r\n.smart-timeline-list:after{content:\" \";background-color:#eee;position:absolute;display:block;width:2px;top:0;left:95px;bottom:0;z-index:1}\r\n.smart-timeline-list li{position:relative;margin:0;padding:15px 0}\r\n.smart-timeline-list>li:hover{background-color:#f4f4f4}\r\n.smart-timeline-hover li:hover{background-color:#f9f9f9}\r\n.smart-timeline-icon{background:#3276b1;color:#fff;border-radius:50%;position:absolute;width:32px;height:32px;line-height:28px;font-size:14px;text-align:center;left:80px;top:10px;z-index:100;padding:2px}\r\n.smart-timeline-icon>img{height:32px;width:32px;border-radius:50%;margin-top:-2px;margin-left:-2px;border:2px solid #3276b1}\r\n.smart-timeline-time{float:left;width:70px;text-align:right}\r\n.smart-timeline-time>small{font-style:italic}\r\n.smart-timeline-content{margin-left:123px}\r\n\r\n\r\n/****** Style Star Rating Widget *****/\r\n\r\n.rating { \r\n  border: none;\r\n  float: left;\r\n}\r\n\r\n.rating > span > input { display: none; } \r\n.rating > span > label:before { \r\n  margin: 5px;\r\n  font-size: 1.25em;\r\n  font-family: FontAwesome;\r\n  display: inline-block;\r\n  content: \"\\f005\";\r\n}\r\n\r\n.rating > span > .half:before { \r\n  content: \"\\f089\";\r\n  position: absolute;\r\n}\r\n\r\n.rating > span > label { \r\n    color: #ddd; \r\n    float: right; \r\n}\r\n\r\n/***** CSS Magic to Highlight Stars on Hover *****/\r\n\r\n.rating > span > input:checked ~ label, /* show gold star when clicked */\r\n.rating:not(:checked) > span > label:hover, /* hover current star */\r\n.rating:not(:checked) > span > label:hover ~ label { color: #FFD700;  } /* hover previous stars in list */\r\n\r\n.rating > span > input:checked + label:hover, /* hover current star when changing rating */\r\n.rating > span >  input:checked ~ label:hover,\r\n.rating > span > label:hover ~ input:checked ~ label, /* lighten current selection */\r\n.rating > span > input:checked ~ label:hover ~ label { color: #FFED85;  }\r\n\r\n.link-shadow {\r\n    -webkit-box-shadow: 3px 4px 11px 0px rgba(105,97,105,1);\r\n    -moz-box-shadow: 3px 4px 11px 0px rgba(105,97,105,1);\r\n    box-shadow: 3px 4px 11px 0px rgba(105,97,105,1);\r\n}\r\n\r\n#curriculumInfo{\r\n     display:none;\r\n}\r\n\r\nux-dialog-header {\r\n    background-color: #ffbd00 ;\r\n    color: white;\r\n}\r\n\r\n.col-centered{\r\n    float: none;\r\n    margin: 0 auto;\r\n}\r\n\r\n.circular--square {\r\n  border-radius: 50%;\r\n}"; });
define('text!modules/analytics/clientRequests.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-2\">\n\t\t<h4>Categories</h4>\n\t\t<div>\n\t\t\t<ul class=\"list-group\">\n\t\t\t\t<button click.trigger=\"typeChanged(category, $event)\" type=\"button\"  repeat.for=\"category of categories\"\n\t\t\t\t\tid=\"${category.code}\" class=\"${$first ? 'list-group-item menuButtons categoryButtons' : 'list-group-item categoryButtons'}\">${category.description}</button>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\n    <div class=\"panel panel-default rightMargin leftMargin col-lg-9\">\n      <div class=\"panel-body\">\n            <div class=\"row\">\n      <!-- Session Select -->\n      <div class=\"col-lg-4\">\n        <div class=\"form-group topMargin leftMargin\">\n            <select value.bind=\"selectedSession\" change.delegate=\"getSessionData()\" id=\"session\" class=\"form-control\">\n              <option repeat.for=\"session of sessions.sessionsArray\"\n                      value.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\n            </select>\n        </div>\n      </div>\n    </div>\n        <div class=\"row\">\n            <div show.bind=\"selectedCategory.code === 0\">\n                <compose view=\"./components/requestsByInstitution.html\"></compose>\n            </div>\n             <div show.bind=\"selectedCategory.code === 1\">\n                <compose view=\"./components/requestsByProducts.html\"></compose>\n            </div>\n        </div> \n      </div> \n</template>"; });
define('text!resources/elements/tree-node.css', ['module'], function(module) { module.exports = ".treeview .list-group-item {\n  cursor: pointer;\n}\n\n.treeview span.indent {\n  margin-left: 10px;\n  margin-right: 10px;\n}\n\n.treeview span.icon {\n  width: 12px;\n  margin-right: 5px;\n}\n\n.treeview .node-disabled {\n  color: silver;\n  cursor: not-allowed;\n}\n"; });
define('text!modules/analytics/helpTickets.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-2\">\n\t\t<h4>Categories</h4>\n\t\t<div>\n\t\t\t<ul class=\"list-group\">\n\t\t\t\t<button click.trigger=\"typeChanged(category, $event)\" type=\"button\"  repeat.for=\"category of categories\"\n\t\t\t\t\tid=\"${category.code}\" class=\"${$first ? 'list-group-item menuButtons categoryButtons' : 'list-group-item categoryButtons'}\">${category.description}</button>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\n    <div class=\"panel panel-default rightMargin leftMargin col-lg-9\">\n      <div class=\"panel-body\">\n        <div show.bind=\"selectedTab === 'types'\" >\n            <compose view=\"./components/helpTicketsByType.html\"></compose>\n        </div>\n        <div show.bind=\"selectedTab === 'curriculum'\">\n            <compose view=\"./components/helpTicketsByCurriculum.html\"></compose>\n        </div>\n        <div show.bind=\"selectedTab === 'institutions'\">\n            <compose view=\"./components/helpTicketsByInstitution.html\"></compose>\n        </div>\n         <div show.bind=\"selectedTab === 'people'\">\n            <compose view=\"./components/helpTicketsByPeople.html\"></compose>\n        </div>\n        <div show.bind=\"selectedTab === 'status'\">\n            <compose view=\"./components/helpTicketsByStatus.html\"></compose>\n        </div>\n      </div> \n    </div>\n</template>"; });
define('text!resources/editor/skins/moono-lisa/dialog.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_dialog{visibility:visible}.cke_dialog_body{z-index:1;background:#fff}.cke_dialog strong{font-weight:bold}.cke_dialog_title{font-weight:bold;font-size:12px;cursor:move;position:relative;color:#484848;border-bottom:1px solid #d1d1d1;padding:12px 19px 12px 12px;background:#f8f8f8;letter-spacing:.3px}.cke_dialog_spinner{border-radius:50%;width:12px;height:12px;overflow:hidden;text-indent:-9999em;border:2px solid rgba(102,102,102,0.2);border-left-color:rgba(102,102,102,1);-webkit-animation:dialog_spinner 1s infinite linear;animation:dialog_spinner 1s infinite linear}.cke_browser_ie8 .cke_dialog_spinner,.cke_browser_ie9 .cke_dialog_spinner{background:url(images/spinner.gif) center top no-repeat;width:16px;height:16px;border:0}@-webkit-keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cke_dialog_contents{background-color:#fff;overflow:auto;padding:15px 10px 5px 10px;margin-top:43px;border-top:1px solid #d1d1d1}.cke_dialog_contents_body{overflow:auto;padding:9px 10px 5px 10px;margin-top:22px}.cke_dialog_footer{text-align:right;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_rtl .cke_dialog_footer{text-align:left}.cke_hc .cke_dialog_footer{outline:0;border-top:1px solid #fff}.cke_dialog .cke_resizer{margin-top:22px}.cke_dialog .cke_resizer_rtl{margin-left:5px}.cke_dialog .cke_resizer_ltr{margin-right:5px}.cke_dialog_tabs{height:33px;display:inline-block;margin:9px 0 0;position:absolute;z-index:2;left:11px}.cke_rtl .cke_dialog_tabs{left:auto;right:11px}a.cke_dialog_tab{height:25px;padding:4px 8px;display:inline-block;cursor:pointer;line-height:26px;outline:0;color:#484848;border:1px solid #d1d1d1;border-radius:3px 3px 0 0;background:#f8f8f8;min-width:90px;text-align:center;margin-left:-1px;letter-spacing:.3px}a.cke_dialog_tab:hover{background-color:#fff}a.cke_dialog_tab:focus{border:2px solid #139ff7;border-bottom-color:#d1d1d1;padding:3px 7px;position:relative;z-index:1}a.cke_dialog_tab_selected{background:#fff;border-bottom-color:#fff;cursor:default;filter:none}a.cke_dialog_tab_selected:hover,a.cke_dialog_tab_selected:focus{border-bottom-color:#fff}.cke_hc a.cke_dialog_tab:hover,.cke_hc a.cke_dialog_tab:focus,.cke_hc a.cke_dialog_tab_selected{border:3px solid;padding:2px 6px}a.cke_dialog_tab_disabled{color:#bababa;cursor:default}.cke_single_page .cke_dialog_tabs{display:none}.cke_single_page .cke_dialog_contents{padding-top:5px;margin-top:0;border-top:0}a.cke_dialog_close_button{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:16px;width:16px;top:11px;z-index:5;opacity:.7;filter:alpha(opacity = 70)}.cke_rtl .cke_dialog_close_button{left:12px}.cke_ltr .cke_dialog_close_button{right:12px}.cke_hc a.cke_dialog_close_button{background-image:none}.cke_hidpi a.cke_dialog_close_button{background-image:url(images/hidpi/close.png);background-size:16px}a.cke_dialog_close_button:hover{opacity:1;filter:alpha(opacity = 100)}a.cke_dialog_close_button span{display:none}.cke_hc a.cke_dialog_close_button span{display:inline;cursor:pointer;font-weight:bold;position:relative;top:3px}div.cke_disabled .cke_dialog_ui_labeled_content div *{background-color:#ddd;cursor:default}.cke_dialog_ui_vbox table,.cke_dialog_ui_hbox table{margin:auto}.cke_dialog_ui_vbox_child{padding:5px 0}.cke_dialog_ui_hbox{width:100%;margin-top:12px}.cke_dialog_ui_hbox_first,.cke_dialog_ui_hbox_child,.cke_dialog_ui_hbox_last{vertical-align:top}.cke_ltr .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_ui_hbox_child{padding-right:10px}.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_child{padding-left:10px}.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-right:5px}.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-left:5px;padding-right:0}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:1px solid}textarea.cke_dialog_ui_input_textarea{overflow:auto;resize:none}input.cke_dialog_ui_input_text,input.cke_dialog_ui_input_password,textarea.cke_dialog_ui_input_textarea{background-color:#fff;border:1px solid #bcbcbc;padding:4px 6px;outline:0;width:100%;*width:95%;box-sizing:border-box;border-radius:2px;min-height:28px;margin-left:1px}input.cke_dialog_ui_input_text:hover,input.cke_dialog_ui_input_password:hover,textarea.cke_dialog_ui_input_textarea:hover{border:1px solid #aeb3b9}input.cke_dialog_ui_input_text:focus,input.cke_dialog_ui_input_password:focus,textarea.cke_dialog_ui_input_textarea:focus,select.cke_dialog_ui_input_select:focus{outline:0;border:2px solid #139ff7}input.cke_dialog_ui_input_text:focus{padding-left:5px}textarea.cke_dialog_ui_input_textarea:focus{padding:3px 5px}select.cke_dialog_ui_input_select:focus{margin:0;width:100%!important}input.cke_dialog_ui_checkbox_input,input.cke_dialog_ui_radio_input{margin-left:1px;margin-right:2px}input.cke_dialog_ui_checkbox_input:focus,input.cke_dialog_ui_checkbox_input:active,input.cke_dialog_ui_radio_input:focus,input.cke_dialog_ui_radio_input:active{border:0;outline:2px solid #139ff7}a.cke_dialog_ui_button{display:inline-block;*display:inline;*zoom:1;padding:4px 1px;margin:0;text-align:center;color:#484848;vertical-align:middle;cursor:pointer;border:1px solid #bcbcbc;border-radius:2px;background:#f8f8f8;letter-spacing:.3px;line-height:18px;box-sizing:border-box}.cke_hc a.cke_dialog_ui_button{border-width:3px}span.cke_dialog_ui_button{padding:0 10px;cursor:pointer}a.cke_dialog_ui_button:hover{background:#fff}a.cke_dialog_ui_button:focus,a.cke_dialog_ui_button:active{border:2px solid #139ff7;outline:0;padding:3px 0}.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button:focus,.cke_hc a.cke_dialog_ui_button:active{border:3px solid}.cke_dialog_footer_buttons a.cke_dialog_ui_button span{color:inherit;font-size:12px;font-weight:bold;padding:0 12px}a.cke_dialog_ui_button_ok{color:#fff;background:#09863e;border:1px solid #09863e}.cke_hc a.cke_dialog_ui_button{border:3px solid #bcbcbc}a.cke_dialog_ui_button_ok:hover{background:#53aa78;border-color:#53aa78}a.cke_dialog_ui_button_ok:focus{box-shadow:inset 0 0 0 2px #FFF}a.cke_dialog_ui_button_ok:focus,a.cke_dialog_ui_button_ok:active{border-color:#139ff7}.cke_hc a.cke_dialog_ui_button_ok:hover,.cke_hc a.cke_dialog_ui_button_ok:focus,.cke_hc a.cke_dialog_ui_button_ok:active{border-color:#484848}a.cke_dialog_ui_button_ok.cke_disabled{background:#d1d1d1;border-color:#d1d1d1;cursor:default}a.cke_dialog_ui_button_ok.cke_disabled span{cursor:default}.cke_dialog_footer_buttons{display:inline-table;margin:5px;width:auto;position:relative;vertical-align:middle}div.cke_dialog_ui_input_select{display:table}select.cke_dialog_ui_input_select{height:28px;line-height:28px;background-color:#fff;border:1px solid #bcbcbc;padding:3px 3px 3px 6px;outline:0;border-radius:2px;margin:0 1px;box-sizing:border-box;width:calc(100% - 2px)!important}.cke_dialog_ui_input_file{width:100%;height:25px}.cke_hc .cke_dialog_ui_labeled_content input:focus,.cke_hc .cke_dialog_ui_labeled_content select:focus,.cke_hc .cke_dialog_ui_labeled_content textarea:focus{outline:1px dotted}.cke_dialog_ui_labeled_label{margin-left:1px}.cke_dialog .cke_dark_background{background-color:transparent}.cke_dialog .cke_light_background{background-color:#ebebeb}.cke_dialog .cke_centered{text-align:center}.cke_dialog a.cke_btn_reset{float:right;background:url(images/refresh.png) top left no-repeat;width:16px;height:16px;border:1px none;font-size:1px}.cke_hidpi .cke_dialog a.cke_btn_reset{background-size:16px;background-image:url(images/hidpi/refresh.png)}.cke_rtl .cke_dialog a.cke_btn_reset{float:left}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked{float:left;width:16px;height:16px;background-repeat:no-repeat;border:none 1px;font-size:1px}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked,.cke_dialog a.cke_btn_reset{margin:2px}.cke_dialog a.cke_btn_locked{background-image:url(images/lock.png)}.cke_dialog a.cke_btn_unlocked{background-image:url(images/lock-open.png)}.cke_rtl .cke_dialog a.cke_btn_locked,.cke_rtl .cke_dialog a.cke_btn_unlocked{float:right}.cke_hidpi .cke_dialog a.cke_btn_unlocked,.cke_hidpi .cke_dialog a.cke_btn_locked{background-size:16px}.cke_hidpi .cke_dialog a.cke_btn_locked{background-image:url(images/hidpi/lock.png)}.cke_hidpi .cke_dialog a.cke_btn_unlocked{background-image:url(images/hidpi/lock-open.png)}.cke_dialog a.cke_btn_locked .cke_icon{display:none}.cke_dialog a.cke_btn_over,.cke_dialog a.cke_btn_locked:hover,.cke_dialog a.cke_btn_locked:focus,.cke_dialog a.cke_btn_locked:active,.cke_dialog a.cke_btn_unlocked:hover,.cke_dialog a.cke_btn_unlocked:focus,.cke_dialog a.cke_btn_unlocked:active,.cke_dialog a.cke_btn_reset:hover,.cke_dialog a.cke_btn_reset:focus,.cke_dialog a.cke_btn_reset:active{cursor:pointer;outline:0;margin:0;border:2px solid #139ff7}.cke_dialog fieldset{border:1px solid #bcbcbc}.cke_dialog fieldset legend{padding:0 6px}.cke_dialog_ui_checkbox,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{display:inline-block}.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{padding-top:5px}.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label{vertical-align:middle}.cke_dialog .ImagePreviewBox{border:1px ridge #bcbcbc;overflow:scroll;height:200px;width:300px;padding:2px;background-color:white}.cke_dialog .ImagePreviewBox table td{white-space:normal}.cke_dialog .ImagePreviewLoader{position:absolute;white-space:normal;overflow:hidden;height:160px;width:230px;margin:2px;padding:2px;opacity:.9;filter:alpha(opacity = 90);background-color:#e4e4e4}.cke_dialog .FlashPreviewBox{white-space:normal;border:1px solid #bcbcbc;overflow:auto;height:160px;width:390px;padding:2px;background-color:white}.cke_dialog .cke_pastetext{width:346px;height:170px}.cke_dialog .cke_pastetext textarea{width:340px;height:170px;resize:none}.cke_dialog iframe.cke_pasteframe{width:346px;height:130px;background-color:white;border:1px solid #aeb3b9;border-radius:3px}.cke_dialog .cke_hand{cursor:pointer}.cke_disabled{color:#a0a0a0}.cke_dialog_body .cke_label{display:none}.cke_dialog_body label{display:inline;cursor:default;letter-spacing:.3px}.cke_dialog_body label+.cke_dialog_ui_labeled_content{margin-top:2px}.cke_dialog_contents_body .cke_dialog_ui_text,.cke_dialog_contents_body .cke_dialog_ui_select,.cke_dialog_contents_body .cke_dialog_ui_hbox_last>a.cke_dialog_ui_button{margin-top:4px}a.cke_smile{overflow:hidden;display:block;text-align:center;padding:.3em 0}a.cke_smile img{vertical-align:middle}a.cke_specialchar{cursor:inherit;display:block;height:1.25em;padding:.2em .3em;text-align:center}a.cke_smile,a.cke_specialchar{border:2px solid transparent}a.cke_smile:hover,a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:hover,a.cke_specialchar:focus,a.cke_specialchar:active{background:#fff;outline:0}a.cke_smile:hover,a.cke_specialchar:hover{border-color:#888}a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:focus,a.cke_specialchar:active{border-color:#139ff7}.cke_dialog_contents a.colorChooser{display:block;margin-top:6px;margin-left:10px;width:80px}.cke_rtl .cke_dialog_contents a.colorChooser{margin-right:10px}.cke_iframe_shim{display:block;position:absolute;top:0;left:0;z-index:-1;filter:alpha(opacity = 0);width:100%;height:100%}.cke_dialog_contents_body .cke_accessibility_legend{margin:2px 7px 2px 2px}.cke_dialog_contents_body .cke_accessibility_legend:focus,.cke_dialog_contents_body .cke_accessibility_legend:active{outline:0;border:2px solid #139ff7;margin:0 5px 0 0}.cke_dialog_contents_body input[type=file]:focus,.cke_dialog_contents_body input[type=file]:active{border:2px solid #139ff7}.cke_dialog_find_fieldset{margin-top:10px!important}.cke_dialog_image_ratiolock{margin-top:52px!important}.cke_dialog_forms_select_order label.cke_dialog_ui_labeled_label{margin-left:0}.cke_dialog_forms_select_order div.cke_dialog_ui_input_select{width:100%}.cke_dialog_forms_select_order_txtsize .cke_dialog_ui_hbox_last{padding-top:4px}.cke_dialog_image_url .cke_dialog_ui_hbox_last,.cke_dialog_flash_url .cke_dialog_ui_hbox_last{vertical-align:bottom}a.cke_dialog_ui_button.cke_dialog_image_browse{margin-top:10px}.cke_dialog_contents_body .cke_tpl_list{border:#bcbcbc 1px solid;margin:1px}.cke_dialog_contents_body .cke_tpl_list:focus,.cke_dialog_contents_body .cke_tpl_list:active{outline:0;margin:0;border:2px solid #139ff7}.cke_dialog_contents_body .cke_tpl_list a:focus,.cke_dialog_contents_body .cke_tpl_list a:active{outline:0}.cke_dialog_contents_body .cke_tpl_list a:focus .cke_tpl_item,.cke_dialog_contents_body .cke_tpl_list a:active .cke_tpl_item{border:2px solid #139ff7;padding:6px}"; });
define('text!modules/analytics/institutions.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n        <div class=\"panel-body\">\n            <div class=\"col-lg-10 col-lg-offset-1\">\n                <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n                    <span click.delegate=\"showTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                        data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                    <span click.delegate=\"showGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                        data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                </div>\n                <div class=\"row\">\n                    <div show.bind=\"tableSelected\" class=\"col-lg-12\">\n                        <compose view=\"./components/institutionsTable.html\"></compose>\n                    </div> \n                    <div show.bind=\"!tableSelected\" class=\"col-lg-12\">\n                        <compose view=\"./components/institutionsCharts.html\"></compose>\n                    </div>\n                </div> \n            </div> \n        </div>\n    </div>\n</template>"; });
define('text!resources/editor/skins/moono-lisa/dialog_ie.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_dialog{visibility:visible}.cke_dialog_body{z-index:1;background:#fff}.cke_dialog strong{font-weight:bold}.cke_dialog_title{font-weight:bold;font-size:12px;cursor:move;position:relative;color:#484848;border-bottom:1px solid #d1d1d1;padding:12px 19px 12px 12px;background:#f8f8f8;letter-spacing:.3px}.cke_dialog_spinner{border-radius:50%;width:12px;height:12px;overflow:hidden;text-indent:-9999em;border:2px solid rgba(102,102,102,0.2);border-left-color:rgba(102,102,102,1);-webkit-animation:dialog_spinner 1s infinite linear;animation:dialog_spinner 1s infinite linear}.cke_browser_ie8 .cke_dialog_spinner,.cke_browser_ie9 .cke_dialog_spinner{background:url(images/spinner.gif) center top no-repeat;width:16px;height:16px;border:0}@-webkit-keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cke_dialog_contents{background-color:#fff;overflow:auto;padding:15px 10px 5px 10px;margin-top:43px;border-top:1px solid #d1d1d1}.cke_dialog_contents_body{overflow:auto;padding:9px 10px 5px 10px;margin-top:22px}.cke_dialog_footer{text-align:right;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_rtl .cke_dialog_footer{text-align:left}.cke_hc .cke_dialog_footer{outline:0;border-top:1px solid #fff}.cke_dialog .cke_resizer{margin-top:22px}.cke_dialog .cke_resizer_rtl{margin-left:5px}.cke_dialog .cke_resizer_ltr{margin-right:5px}.cke_dialog_tabs{height:33px;display:inline-block;margin:9px 0 0;position:absolute;z-index:2;left:11px}.cke_rtl .cke_dialog_tabs{left:auto;right:11px}a.cke_dialog_tab{height:25px;padding:4px 8px;display:inline-block;cursor:pointer;line-height:26px;outline:0;color:#484848;border:1px solid #d1d1d1;border-radius:3px 3px 0 0;background:#f8f8f8;min-width:90px;text-align:center;margin-left:-1px;letter-spacing:.3px}a.cke_dialog_tab:hover{background-color:#fff}a.cke_dialog_tab:focus{border:2px solid #139ff7;border-bottom-color:#d1d1d1;padding:3px 7px;position:relative;z-index:1}a.cke_dialog_tab_selected{background:#fff;border-bottom-color:#fff;cursor:default;filter:none}a.cke_dialog_tab_selected:hover,a.cke_dialog_tab_selected:focus{border-bottom-color:#fff}.cke_hc a.cke_dialog_tab:hover,.cke_hc a.cke_dialog_tab:focus,.cke_hc a.cke_dialog_tab_selected{border:3px solid;padding:2px 6px}a.cke_dialog_tab_disabled{color:#bababa;cursor:default}.cke_single_page .cke_dialog_tabs{display:none}.cke_single_page .cke_dialog_contents{padding-top:5px;margin-top:0;border-top:0}a.cke_dialog_close_button{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:16px;width:16px;top:11px;z-index:5;opacity:.7;filter:alpha(opacity = 70)}.cke_rtl .cke_dialog_close_button{left:12px}.cke_ltr .cke_dialog_close_button{right:12px}.cke_hc a.cke_dialog_close_button{background-image:none}.cke_hidpi a.cke_dialog_close_button{background-image:url(images/hidpi/close.png);background-size:16px}a.cke_dialog_close_button:hover{opacity:1;filter:alpha(opacity = 100)}a.cke_dialog_close_button span{display:none}.cke_hc a.cke_dialog_close_button span{display:inline;cursor:pointer;font-weight:bold;position:relative;top:3px}div.cke_disabled .cke_dialog_ui_labeled_content div *{background-color:#ddd;cursor:default}.cke_dialog_ui_vbox table,.cke_dialog_ui_hbox table{margin:auto}.cke_dialog_ui_vbox_child{padding:5px 0}.cke_dialog_ui_hbox{width:100%;margin-top:12px}.cke_dialog_ui_hbox_first,.cke_dialog_ui_hbox_child,.cke_dialog_ui_hbox_last{vertical-align:top}.cke_ltr .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_ui_hbox_child{padding-right:10px}.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_child{padding-left:10px}.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-right:5px}.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-left:5px;padding-right:0}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:1px solid}textarea.cke_dialog_ui_input_textarea{overflow:auto;resize:none}input.cke_dialog_ui_input_text,input.cke_dialog_ui_input_password,textarea.cke_dialog_ui_input_textarea{background-color:#fff;border:1px solid #bcbcbc;padding:4px 6px;outline:0;width:100%;*width:95%;box-sizing:border-box;border-radius:2px;min-height:28px;margin-left:1px}input.cke_dialog_ui_input_text:hover,input.cke_dialog_ui_input_password:hover,textarea.cke_dialog_ui_input_textarea:hover{border:1px solid #aeb3b9}input.cke_dialog_ui_input_text:focus,input.cke_dialog_ui_input_password:focus,textarea.cke_dialog_ui_input_textarea:focus,select.cke_dialog_ui_input_select:focus{outline:0;border:2px solid #139ff7}input.cke_dialog_ui_input_text:focus{padding-left:5px}textarea.cke_dialog_ui_input_textarea:focus{padding:3px 5px}select.cke_dialog_ui_input_select:focus{margin:0;width:100%!important}input.cke_dialog_ui_checkbox_input,input.cke_dialog_ui_radio_input{margin-left:1px;margin-right:2px}input.cke_dialog_ui_checkbox_input:focus,input.cke_dialog_ui_checkbox_input:active,input.cke_dialog_ui_radio_input:focus,input.cke_dialog_ui_radio_input:active{border:0;outline:2px solid #139ff7}a.cke_dialog_ui_button{display:inline-block;*display:inline;*zoom:1;padding:4px 1px;margin:0;text-align:center;color:#484848;vertical-align:middle;cursor:pointer;border:1px solid #bcbcbc;border-radius:2px;background:#f8f8f8;letter-spacing:.3px;line-height:18px;box-sizing:border-box}.cke_hc a.cke_dialog_ui_button{border-width:3px}span.cke_dialog_ui_button{padding:0 10px;cursor:pointer}a.cke_dialog_ui_button:hover{background:#fff}a.cke_dialog_ui_button:focus,a.cke_dialog_ui_button:active{border:2px solid #139ff7;outline:0;padding:3px 0}.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button:focus,.cke_hc a.cke_dialog_ui_button:active{border:3px solid}.cke_dialog_footer_buttons a.cke_dialog_ui_button span{color:inherit;font-size:12px;font-weight:bold;padding:0 12px}a.cke_dialog_ui_button_ok{color:#fff;background:#09863e;border:1px solid #09863e}.cke_hc a.cke_dialog_ui_button{border:3px solid #bcbcbc}a.cke_dialog_ui_button_ok:hover{background:#53aa78;border-color:#53aa78}a.cke_dialog_ui_button_ok:focus{box-shadow:inset 0 0 0 2px #FFF}a.cke_dialog_ui_button_ok:focus,a.cke_dialog_ui_button_ok:active{border-color:#139ff7}.cke_hc a.cke_dialog_ui_button_ok:hover,.cke_hc a.cke_dialog_ui_button_ok:focus,.cke_hc a.cke_dialog_ui_button_ok:active{border-color:#484848}a.cke_dialog_ui_button_ok.cke_disabled{background:#d1d1d1;border-color:#d1d1d1;cursor:default}a.cke_dialog_ui_button_ok.cke_disabled span{cursor:default}.cke_dialog_footer_buttons{display:inline-table;margin:5px;width:auto;position:relative;vertical-align:middle}div.cke_dialog_ui_input_select{display:table}select.cke_dialog_ui_input_select{height:28px;line-height:28px;background-color:#fff;border:1px solid #bcbcbc;padding:3px 3px 3px 6px;outline:0;border-radius:2px;margin:0 1px;box-sizing:border-box;width:calc(100% - 2px)!important}.cke_dialog_ui_input_file{width:100%;height:25px}.cke_hc .cke_dialog_ui_labeled_content input:focus,.cke_hc .cke_dialog_ui_labeled_content select:focus,.cke_hc .cke_dialog_ui_labeled_content textarea:focus{outline:1px dotted}.cke_dialog_ui_labeled_label{margin-left:1px}.cke_dialog .cke_dark_background{background-color:transparent}.cke_dialog .cke_light_background{background-color:#ebebeb}.cke_dialog .cke_centered{text-align:center}.cke_dialog a.cke_btn_reset{float:right;background:url(images/refresh.png) top left no-repeat;width:16px;height:16px;border:1px none;font-size:1px}.cke_hidpi .cke_dialog a.cke_btn_reset{background-size:16px;background-image:url(images/hidpi/refresh.png)}.cke_rtl .cke_dialog a.cke_btn_reset{float:left}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked{float:left;width:16px;height:16px;background-repeat:no-repeat;border:none 1px;font-size:1px}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked,.cke_dialog a.cke_btn_reset{margin:2px}.cke_dialog a.cke_btn_locked{background-image:url(images/lock.png)}.cke_dialog a.cke_btn_unlocked{background-image:url(images/lock-open.png)}.cke_rtl .cke_dialog a.cke_btn_locked,.cke_rtl .cke_dialog a.cke_btn_unlocked{float:right}.cke_hidpi .cke_dialog a.cke_btn_unlocked,.cke_hidpi .cke_dialog a.cke_btn_locked{background-size:16px}.cke_hidpi .cke_dialog a.cke_btn_locked{background-image:url(images/hidpi/lock.png)}.cke_hidpi .cke_dialog a.cke_btn_unlocked{background-image:url(images/hidpi/lock-open.png)}.cke_dialog a.cke_btn_locked .cke_icon{display:none}.cke_dialog a.cke_btn_over,.cke_dialog a.cke_btn_locked:hover,.cke_dialog a.cke_btn_locked:focus,.cke_dialog a.cke_btn_locked:active,.cke_dialog a.cke_btn_unlocked:hover,.cke_dialog a.cke_btn_unlocked:focus,.cke_dialog a.cke_btn_unlocked:active,.cke_dialog a.cke_btn_reset:hover,.cke_dialog a.cke_btn_reset:focus,.cke_dialog a.cke_btn_reset:active{cursor:pointer;outline:0;margin:0;border:2px solid #139ff7}.cke_dialog fieldset{border:1px solid #bcbcbc}.cke_dialog fieldset legend{padding:0 6px}.cke_dialog_ui_checkbox,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{display:inline-block}.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{padding-top:5px}.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label{vertical-align:middle}.cke_dialog .ImagePreviewBox{border:1px ridge #bcbcbc;overflow:scroll;height:200px;width:300px;padding:2px;background-color:white}.cke_dialog .ImagePreviewBox table td{white-space:normal}.cke_dialog .ImagePreviewLoader{position:absolute;white-space:normal;overflow:hidden;height:160px;width:230px;margin:2px;padding:2px;opacity:.9;filter:alpha(opacity = 90);background-color:#e4e4e4}.cke_dialog .FlashPreviewBox{white-space:normal;border:1px solid #bcbcbc;overflow:auto;height:160px;width:390px;padding:2px;background-color:white}.cke_dialog .cke_pastetext{width:346px;height:170px}.cke_dialog .cke_pastetext textarea{width:340px;height:170px;resize:none}.cke_dialog iframe.cke_pasteframe{width:346px;height:130px;background-color:white;border:1px solid #aeb3b9;border-radius:3px}.cke_dialog .cke_hand{cursor:pointer}.cke_disabled{color:#a0a0a0}.cke_dialog_body .cke_label{display:none}.cke_dialog_body label{display:inline;cursor:default;letter-spacing:.3px}.cke_dialog_body label+.cke_dialog_ui_labeled_content{margin-top:2px}.cke_dialog_contents_body .cke_dialog_ui_text,.cke_dialog_contents_body .cke_dialog_ui_select,.cke_dialog_contents_body .cke_dialog_ui_hbox_last>a.cke_dialog_ui_button{margin-top:4px}a.cke_smile{overflow:hidden;display:block;text-align:center;padding:.3em 0}a.cke_smile img{vertical-align:middle}a.cke_specialchar{cursor:inherit;display:block;height:1.25em;padding:.2em .3em;text-align:center}a.cke_smile,a.cke_specialchar{border:2px solid transparent}a.cke_smile:hover,a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:hover,a.cke_specialchar:focus,a.cke_specialchar:active{background:#fff;outline:0}a.cke_smile:hover,a.cke_specialchar:hover{border-color:#888}a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:focus,a.cke_specialchar:active{border-color:#139ff7}.cke_dialog_contents a.colorChooser{display:block;margin-top:6px;margin-left:10px;width:80px}.cke_rtl .cke_dialog_contents a.colorChooser{margin-right:10px}.cke_iframe_shim{display:block;position:absolute;top:0;left:0;z-index:-1;filter:alpha(opacity = 0);width:100%;height:100%}.cke_dialog_contents_body .cke_accessibility_legend{margin:2px 7px 2px 2px}.cke_dialog_contents_body .cke_accessibility_legend:focus,.cke_dialog_contents_body .cke_accessibility_legend:active{outline:0;border:2px solid #139ff7;margin:0 5px 0 0}.cke_dialog_contents_body input[type=file]:focus,.cke_dialog_contents_body input[type=file]:active{border:2px solid #139ff7}.cke_dialog_find_fieldset{margin-top:10px!important}.cke_dialog_image_ratiolock{margin-top:52px!important}.cke_dialog_forms_select_order label.cke_dialog_ui_labeled_label{margin-left:0}.cke_dialog_forms_select_order div.cke_dialog_ui_input_select{width:100%}.cke_dialog_forms_select_order_txtsize .cke_dialog_ui_hbox_last{padding-top:4px}.cke_dialog_image_url .cke_dialog_ui_hbox_last,.cke_dialog_flash_url .cke_dialog_ui_hbox_last{vertical-align:bottom}a.cke_dialog_ui_button.cke_dialog_image_browse{margin-top:10px}.cke_dialog_contents_body .cke_tpl_list{border:#bcbcbc 1px solid;margin:1px}.cke_dialog_contents_body .cke_tpl_list:focus,.cke_dialog_contents_body .cke_tpl_list:active{outline:0;margin:0;border:2px solid #139ff7}.cke_dialog_contents_body .cke_tpl_list a:focus,.cke_dialog_contents_body .cke_tpl_list a:active{outline:0}.cke_dialog_contents_body .cke_tpl_list a:focus .cke_tpl_item,.cke_dialog_contents_body .cke_tpl_list a:active .cke_tpl_item{border:2px solid #139ff7;padding:6px}.cke_rtl input.cke_dialog_ui_input_text,.cke_rtl input.cke_dialog_ui_input_password{padding-right:2px}.cke_rtl div.cke_dialog_ui_input_text,.cke_rtl div.cke_dialog_ui_input_password{padding-left:2px}.cke_rtl div.cke_dialog_ui_input_text{padding-right:1px}.cke_rtl .cke_dialog_ui_vbox_child,.cke_rtl .cke_dialog_ui_hbox_child,.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_last{padding-right:2px!important}.cke_hc .cke_dialog_title,.cke_hc .cke_dialog_footer,.cke_hc a.cke_dialog_tab,.cke_hc a.cke_dialog_ui_button,.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button_ok,.cke_hc a.cke_dialog_ui_button_ok:hover{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:0}"; });
define('text!modules/facco/editPeople.html', ['module'], function(module) { module.exports = "<template>\r\n  <div class=\"panel panel-info\">\r\n    <div class=\"panel-body\">\r\n      <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n              <compose view=\"./components/peopleTable.html\"></compose>\r\n          </div>\r\n    </div>\r\n</template>\r\n"; });
define('text!resources/editor/skins/moono-lisa/dialog_ie8.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_dialog{visibility:visible}.cke_dialog_body{z-index:1;background:#fff}.cke_dialog strong{font-weight:bold}.cke_dialog_title{font-weight:bold;font-size:12px;cursor:move;position:relative;color:#484848;border-bottom:1px solid #d1d1d1;padding:12px 19px 12px 12px;background:#f8f8f8;letter-spacing:.3px}.cke_dialog_spinner{border-radius:50%;width:12px;height:12px;overflow:hidden;text-indent:-9999em;border:2px solid rgba(102,102,102,0.2);border-left-color:rgba(102,102,102,1);-webkit-animation:dialog_spinner 1s infinite linear;animation:dialog_spinner 1s infinite linear}.cke_browser_ie8 .cke_dialog_spinner,.cke_browser_ie9 .cke_dialog_spinner{background:url(images/spinner.gif) center top no-repeat;width:16px;height:16px;border:0}@-webkit-keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cke_dialog_contents{background-color:#fff;overflow:auto;padding:15px 10px 5px 10px;margin-top:43px;border-top:1px solid #d1d1d1}.cke_dialog_contents_body{overflow:auto;padding:9px 10px 5px 10px;margin-top:22px}.cke_dialog_footer{text-align:right;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_rtl .cke_dialog_footer{text-align:left}.cke_hc .cke_dialog_footer{outline:0;border-top:1px solid #fff}.cke_dialog .cke_resizer{margin-top:22px}.cke_dialog .cke_resizer_rtl{margin-left:5px}.cke_dialog .cke_resizer_ltr{margin-right:5px}.cke_dialog_tabs{height:33px;display:inline-block;margin:9px 0 0;position:absolute;z-index:2;left:11px}.cke_rtl .cke_dialog_tabs{left:auto;right:11px}a.cke_dialog_tab{height:25px;padding:4px 8px;display:inline-block;cursor:pointer;line-height:26px;outline:0;color:#484848;border:1px solid #d1d1d1;border-radius:3px 3px 0 0;background:#f8f8f8;min-width:90px;text-align:center;margin-left:-1px;letter-spacing:.3px}a.cke_dialog_tab:hover{background-color:#fff}a.cke_dialog_tab:focus{border:2px solid #139ff7;border-bottom-color:#d1d1d1;padding:3px 7px;position:relative;z-index:1}a.cke_dialog_tab_selected{background:#fff;border-bottom-color:#fff;cursor:default;filter:none}a.cke_dialog_tab_selected:hover,a.cke_dialog_tab_selected:focus{border-bottom-color:#fff}.cke_hc a.cke_dialog_tab:hover,.cke_hc a.cke_dialog_tab:focus,.cke_hc a.cke_dialog_tab_selected{border:3px solid;padding:2px 6px}a.cke_dialog_tab_disabled{color:#bababa;cursor:default}.cke_single_page .cke_dialog_tabs{display:none}.cke_single_page .cke_dialog_contents{padding-top:5px;margin-top:0;border-top:0}a.cke_dialog_close_button{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:16px;width:16px;top:11px;z-index:5;opacity:.7;filter:alpha(opacity = 70)}.cke_rtl .cke_dialog_close_button{left:12px}.cke_ltr .cke_dialog_close_button{right:12px}.cke_hc a.cke_dialog_close_button{background-image:none}.cke_hidpi a.cke_dialog_close_button{background-image:url(images/hidpi/close.png);background-size:16px}a.cke_dialog_close_button:hover{opacity:1;filter:alpha(opacity = 100)}a.cke_dialog_close_button span{display:none}.cke_hc a.cke_dialog_close_button span{display:inline;cursor:pointer;font-weight:bold;position:relative;top:3px}div.cke_disabled .cke_dialog_ui_labeled_content div *{background-color:#ddd;cursor:default}.cke_dialog_ui_vbox table,.cke_dialog_ui_hbox table{margin:auto}.cke_dialog_ui_vbox_child{padding:5px 0}.cke_dialog_ui_hbox{width:100%;margin-top:12px}.cke_dialog_ui_hbox_first,.cke_dialog_ui_hbox_child,.cke_dialog_ui_hbox_last{vertical-align:top}.cke_ltr .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_ui_hbox_child{padding-right:10px}.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_child{padding-left:10px}.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-right:5px}.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-left:5px;padding-right:0}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:1px solid}textarea.cke_dialog_ui_input_textarea{overflow:auto;resize:none}input.cke_dialog_ui_input_text,input.cke_dialog_ui_input_password,textarea.cke_dialog_ui_input_textarea{background-color:#fff;border:1px solid #bcbcbc;padding:4px 6px;outline:0;width:100%;*width:95%;box-sizing:border-box;border-radius:2px;min-height:28px;margin-left:1px}input.cke_dialog_ui_input_text:hover,input.cke_dialog_ui_input_password:hover,textarea.cke_dialog_ui_input_textarea:hover{border:1px solid #aeb3b9}input.cke_dialog_ui_input_text:focus,input.cke_dialog_ui_input_password:focus,textarea.cke_dialog_ui_input_textarea:focus,select.cke_dialog_ui_input_select:focus{outline:0;border:2px solid #139ff7}input.cke_dialog_ui_input_text:focus{padding-left:5px}textarea.cke_dialog_ui_input_textarea:focus{padding:3px 5px}select.cke_dialog_ui_input_select:focus{margin:0;width:100%!important}input.cke_dialog_ui_checkbox_input,input.cke_dialog_ui_radio_input{margin-left:1px;margin-right:2px}input.cke_dialog_ui_checkbox_input:focus,input.cke_dialog_ui_checkbox_input:active,input.cke_dialog_ui_radio_input:focus,input.cke_dialog_ui_radio_input:active{border:0;outline:2px solid #139ff7}a.cke_dialog_ui_button{display:inline-block;*display:inline;*zoom:1;padding:4px 1px;margin:0;text-align:center;color:#484848;vertical-align:middle;cursor:pointer;border:1px solid #bcbcbc;border-radius:2px;background:#f8f8f8;letter-spacing:.3px;line-height:18px;box-sizing:border-box}.cke_hc a.cke_dialog_ui_button{border-width:3px}span.cke_dialog_ui_button{padding:0 10px;cursor:pointer}a.cke_dialog_ui_button:hover{background:#fff}a.cke_dialog_ui_button:focus,a.cke_dialog_ui_button:active{border:2px solid #139ff7;outline:0;padding:3px 0}.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button:focus,.cke_hc a.cke_dialog_ui_button:active{border:3px solid}.cke_dialog_footer_buttons a.cke_dialog_ui_button span{color:inherit;font-size:12px;font-weight:bold;padding:0 12px}a.cke_dialog_ui_button_ok{color:#fff;background:#09863e;border:1px solid #09863e}.cke_hc a.cke_dialog_ui_button{border:3px solid #bcbcbc}a.cke_dialog_ui_button_ok:hover{background:#53aa78;border-color:#53aa78}a.cke_dialog_ui_button_ok:focus{box-shadow:inset 0 0 0 2px #FFF}a.cke_dialog_ui_button_ok:focus,a.cke_dialog_ui_button_ok:active{border-color:#139ff7}.cke_hc a.cke_dialog_ui_button_ok:hover,.cke_hc a.cke_dialog_ui_button_ok:focus,.cke_hc a.cke_dialog_ui_button_ok:active{border-color:#484848}a.cke_dialog_ui_button_ok.cke_disabled{background:#d1d1d1;border-color:#d1d1d1;cursor:default}a.cke_dialog_ui_button_ok.cke_disabled span{cursor:default}.cke_dialog_footer_buttons{display:inline-table;margin:5px;width:auto;position:relative;vertical-align:middle}div.cke_dialog_ui_input_select{display:table}select.cke_dialog_ui_input_select{height:28px;line-height:28px;background-color:#fff;border:1px solid #bcbcbc;padding:3px 3px 3px 6px;outline:0;border-radius:2px;margin:0 1px;box-sizing:border-box;width:calc(100% - 2px)!important}.cke_dialog_ui_input_file{width:100%;height:25px}.cke_hc .cke_dialog_ui_labeled_content input:focus,.cke_hc .cke_dialog_ui_labeled_content select:focus,.cke_hc .cke_dialog_ui_labeled_content textarea:focus{outline:1px dotted}.cke_dialog_ui_labeled_label{margin-left:1px}.cke_dialog .cke_dark_background{background-color:transparent}.cke_dialog .cke_light_background{background-color:#ebebeb}.cke_dialog .cke_centered{text-align:center}.cke_dialog a.cke_btn_reset{float:right;background:url(images/refresh.png) top left no-repeat;width:16px;height:16px;border:1px none;font-size:1px}.cke_hidpi .cke_dialog a.cke_btn_reset{background-size:16px;background-image:url(images/hidpi/refresh.png)}.cke_rtl .cke_dialog a.cke_btn_reset{float:left}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked{float:left;width:16px;height:16px;background-repeat:no-repeat;border:none 1px;font-size:1px}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked,.cke_dialog a.cke_btn_reset{margin:2px}.cke_dialog a.cke_btn_locked{background-image:url(images/lock.png)}.cke_dialog a.cke_btn_unlocked{background-image:url(images/lock-open.png)}.cke_rtl .cke_dialog a.cke_btn_locked,.cke_rtl .cke_dialog a.cke_btn_unlocked{float:right}.cke_hidpi .cke_dialog a.cke_btn_unlocked,.cke_hidpi .cke_dialog a.cke_btn_locked{background-size:16px}.cke_hidpi .cke_dialog a.cke_btn_locked{background-image:url(images/hidpi/lock.png)}.cke_hidpi .cke_dialog a.cke_btn_unlocked{background-image:url(images/hidpi/lock-open.png)}.cke_dialog a.cke_btn_locked .cke_icon{display:none}.cke_dialog a.cke_btn_over,.cke_dialog a.cke_btn_locked:hover,.cke_dialog a.cke_btn_locked:focus,.cke_dialog a.cke_btn_locked:active,.cke_dialog a.cke_btn_unlocked:hover,.cke_dialog a.cke_btn_unlocked:focus,.cke_dialog a.cke_btn_unlocked:active,.cke_dialog a.cke_btn_reset:hover,.cke_dialog a.cke_btn_reset:focus,.cke_dialog a.cke_btn_reset:active{cursor:pointer;outline:0;margin:0;border:2px solid #139ff7}.cke_dialog fieldset{border:1px solid #bcbcbc}.cke_dialog fieldset legend{padding:0 6px}.cke_dialog_ui_checkbox,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{display:inline-block}.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{padding-top:5px}.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label{vertical-align:middle}.cke_dialog .ImagePreviewBox{border:1px ridge #bcbcbc;overflow:scroll;height:200px;width:300px;padding:2px;background-color:white}.cke_dialog .ImagePreviewBox table td{white-space:normal}.cke_dialog .ImagePreviewLoader{position:absolute;white-space:normal;overflow:hidden;height:160px;width:230px;margin:2px;padding:2px;opacity:.9;filter:alpha(opacity = 90);background-color:#e4e4e4}.cke_dialog .FlashPreviewBox{white-space:normal;border:1px solid #bcbcbc;overflow:auto;height:160px;width:390px;padding:2px;background-color:white}.cke_dialog .cke_pastetext{width:346px;height:170px}.cke_dialog .cke_pastetext textarea{width:340px;height:170px;resize:none}.cke_dialog iframe.cke_pasteframe{width:346px;height:130px;background-color:white;border:1px solid #aeb3b9;border-radius:3px}.cke_dialog .cke_hand{cursor:pointer}.cke_disabled{color:#a0a0a0}.cke_dialog_body .cke_label{display:none}.cke_dialog_body label{display:inline;cursor:default;letter-spacing:.3px}.cke_dialog_body label+.cke_dialog_ui_labeled_content{margin-top:2px}.cke_dialog_contents_body .cke_dialog_ui_text,.cke_dialog_contents_body .cke_dialog_ui_select,.cke_dialog_contents_body .cke_dialog_ui_hbox_last>a.cke_dialog_ui_button{margin-top:4px}a.cke_smile{overflow:hidden;display:block;text-align:center;padding:.3em 0}a.cke_smile img{vertical-align:middle}a.cke_specialchar{cursor:inherit;display:block;height:1.25em;padding:.2em .3em;text-align:center}a.cke_smile,a.cke_specialchar{border:2px solid transparent}a.cke_smile:hover,a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:hover,a.cke_specialchar:focus,a.cke_specialchar:active{background:#fff;outline:0}a.cke_smile:hover,a.cke_specialchar:hover{border-color:#888}a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:focus,a.cke_specialchar:active{border-color:#139ff7}.cke_dialog_contents a.colorChooser{display:block;margin-top:6px;margin-left:10px;width:80px}.cke_rtl .cke_dialog_contents a.colorChooser{margin-right:10px}.cke_iframe_shim{display:block;position:absolute;top:0;left:0;z-index:-1;filter:alpha(opacity = 0);width:100%;height:100%}.cke_dialog_contents_body .cke_accessibility_legend{margin:2px 7px 2px 2px}.cke_dialog_contents_body .cke_accessibility_legend:focus,.cke_dialog_contents_body .cke_accessibility_legend:active{outline:0;border:2px solid #139ff7;margin:0 5px 0 0}.cke_dialog_contents_body input[type=file]:focus,.cke_dialog_contents_body input[type=file]:active{border:2px solid #139ff7}.cke_dialog_find_fieldset{margin-top:10px!important}.cke_dialog_image_ratiolock{margin-top:52px!important}.cke_dialog_forms_select_order label.cke_dialog_ui_labeled_label{margin-left:0}.cke_dialog_forms_select_order div.cke_dialog_ui_input_select{width:100%}.cke_dialog_forms_select_order_txtsize .cke_dialog_ui_hbox_last{padding-top:4px}.cke_dialog_image_url .cke_dialog_ui_hbox_last,.cke_dialog_flash_url .cke_dialog_ui_hbox_last{vertical-align:bottom}a.cke_dialog_ui_button.cke_dialog_image_browse{margin-top:10px}.cke_dialog_contents_body .cke_tpl_list{border:#bcbcbc 1px solid;margin:1px}.cke_dialog_contents_body .cke_tpl_list:focus,.cke_dialog_contents_body .cke_tpl_list:active{outline:0;margin:0;border:2px solid #139ff7}.cke_dialog_contents_body .cke_tpl_list a:focus,.cke_dialog_contents_body .cke_tpl_list a:active{outline:0}.cke_dialog_contents_body .cke_tpl_list a:focus .cke_tpl_item,.cke_dialog_contents_body .cke_tpl_list a:active .cke_tpl_item{border:2px solid #139ff7;padding:6px}.cke_rtl input.cke_dialog_ui_input_text,.cke_rtl input.cke_dialog_ui_input_password{padding-right:2px}.cke_rtl div.cke_dialog_ui_input_text,.cke_rtl div.cke_dialog_ui_input_password{padding-left:2px}.cke_rtl div.cke_dialog_ui_input_text{padding-right:1px}.cke_rtl .cke_dialog_ui_vbox_child,.cke_rtl .cke_dialog_ui_hbox_child,.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_last{padding-right:2px!important}.cke_hc .cke_dialog_title,.cke_hc .cke_dialog_footer,.cke_hc a.cke_dialog_tab,.cke_hc a.cke_dialog_ui_button,.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button_ok,.cke_hc a.cke_dialog_ui_button_ok:hover{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:0}a.cke_dialog_ui_button{min-height:18px}input.cke_dialog_ui_input_text,input.cke_dialog_ui_input_password,textarea.cke_dialog_ui_input_textarea{min-height:18px}input.cke_dialog_ui_input_text:focus,input.cke_dialog_ui_input_password:focus,textarea.cke_dialog_ui_input_textarea:focus{padding-top:4px;padding-bottom:2px}select.cke_dialog_ui_input_select{width:100%!important}select.cke_dialog_ui_input_select:focus{margin-left:1px;width:100%!important;padding-top:2px;padding-bottom:2px}"; });
define('text!modules/facco/facco.html', ['module'], function(module) { module.exports = "<template>\r\n    <compose view='../../resources/elements/submenu.html'></compose>\r\n    <div class=\"col-lg-12\">\r\n        <router-view></router-view>\r\n    </div>\r\n</template>\r\n"; });
define('text!resources/editor/skins/moono-lisa/dialog_iequirks.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_dialog{visibility:visible}.cke_dialog_body{z-index:1;background:#fff}.cke_dialog strong{font-weight:bold}.cke_dialog_title{font-weight:bold;font-size:12px;cursor:move;position:relative;color:#484848;border-bottom:1px solid #d1d1d1;padding:12px 19px 12px 12px;background:#f8f8f8;letter-spacing:.3px}.cke_dialog_spinner{border-radius:50%;width:12px;height:12px;overflow:hidden;text-indent:-9999em;border:2px solid rgba(102,102,102,0.2);border-left-color:rgba(102,102,102,1);-webkit-animation:dialog_spinner 1s infinite linear;animation:dialog_spinner 1s infinite linear}.cke_browser_ie8 .cke_dialog_spinner,.cke_browser_ie9 .cke_dialog_spinner{background:url(images/spinner.gif) center top no-repeat;width:16px;height:16px;border:0}@-webkit-keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes dialog_spinner{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cke_dialog_contents{background-color:#fff;overflow:auto;padding:15px 10px 5px 10px;margin-top:43px;border-top:1px solid #d1d1d1}.cke_dialog_contents_body{overflow:auto;padding:9px 10px 5px 10px;margin-top:22px}.cke_dialog_footer{text-align:right;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_rtl .cke_dialog_footer{text-align:left}.cke_hc .cke_dialog_footer{outline:0;border-top:1px solid #fff}.cke_dialog .cke_resizer{margin-top:22px}.cke_dialog .cke_resizer_rtl{margin-left:5px}.cke_dialog .cke_resizer_ltr{margin-right:5px}.cke_dialog_tabs{height:33px;display:inline-block;margin:9px 0 0;position:absolute;z-index:2;left:11px}.cke_rtl .cke_dialog_tabs{left:auto;right:11px}a.cke_dialog_tab{height:25px;padding:4px 8px;display:inline-block;cursor:pointer;line-height:26px;outline:0;color:#484848;border:1px solid #d1d1d1;border-radius:3px 3px 0 0;background:#f8f8f8;min-width:90px;text-align:center;margin-left:-1px;letter-spacing:.3px}a.cke_dialog_tab:hover{background-color:#fff}a.cke_dialog_tab:focus{border:2px solid #139ff7;border-bottom-color:#d1d1d1;padding:3px 7px;position:relative;z-index:1}a.cke_dialog_tab_selected{background:#fff;border-bottom-color:#fff;cursor:default;filter:none}a.cke_dialog_tab_selected:hover,a.cke_dialog_tab_selected:focus{border-bottom-color:#fff}.cke_hc a.cke_dialog_tab:hover,.cke_hc a.cke_dialog_tab:focus,.cke_hc a.cke_dialog_tab_selected{border:3px solid;padding:2px 6px}a.cke_dialog_tab_disabled{color:#bababa;cursor:default}.cke_single_page .cke_dialog_tabs{display:none}.cke_single_page .cke_dialog_contents{padding-top:5px;margin-top:0;border-top:0}a.cke_dialog_close_button{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:16px;width:16px;top:11px;z-index:5;opacity:.7;filter:alpha(opacity = 70)}.cke_rtl .cke_dialog_close_button{left:12px}.cke_ltr .cke_dialog_close_button{right:12px}.cke_hc a.cke_dialog_close_button{background-image:none}.cke_hidpi a.cke_dialog_close_button{background-image:url(images/hidpi/close.png);background-size:16px}a.cke_dialog_close_button:hover{opacity:1;filter:alpha(opacity = 100)}a.cke_dialog_close_button span{display:none}.cke_hc a.cke_dialog_close_button span{display:inline;cursor:pointer;font-weight:bold;position:relative;top:3px}div.cke_disabled .cke_dialog_ui_labeled_content div *{background-color:#ddd;cursor:default}.cke_dialog_ui_vbox table,.cke_dialog_ui_hbox table{margin:auto}.cke_dialog_ui_vbox_child{padding:5px 0}.cke_dialog_ui_hbox{width:100%;margin-top:12px}.cke_dialog_ui_hbox_first,.cke_dialog_ui_hbox_child,.cke_dialog_ui_hbox_last{vertical-align:top}.cke_ltr .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_ui_hbox_child{padding-right:10px}.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_child{padding-left:10px}.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-right:5px}.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child{padding-left:5px;padding-right:0}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:1px solid}textarea.cke_dialog_ui_input_textarea{overflow:auto;resize:none}input.cke_dialog_ui_input_text,input.cke_dialog_ui_input_password,textarea.cke_dialog_ui_input_textarea{background-color:#fff;border:1px solid #bcbcbc;padding:4px 6px;outline:0;width:100%;*width:95%;box-sizing:border-box;border-radius:2px;min-height:28px;margin-left:1px}input.cke_dialog_ui_input_text:hover,input.cke_dialog_ui_input_password:hover,textarea.cke_dialog_ui_input_textarea:hover{border:1px solid #aeb3b9}input.cke_dialog_ui_input_text:focus,input.cke_dialog_ui_input_password:focus,textarea.cke_dialog_ui_input_textarea:focus,select.cke_dialog_ui_input_select:focus{outline:0;border:2px solid #139ff7}input.cke_dialog_ui_input_text:focus{padding-left:5px}textarea.cke_dialog_ui_input_textarea:focus{padding:3px 5px}select.cke_dialog_ui_input_select:focus{margin:0;width:100%!important}input.cke_dialog_ui_checkbox_input,input.cke_dialog_ui_radio_input{margin-left:1px;margin-right:2px}input.cke_dialog_ui_checkbox_input:focus,input.cke_dialog_ui_checkbox_input:active,input.cke_dialog_ui_radio_input:focus,input.cke_dialog_ui_radio_input:active{border:0;outline:2px solid #139ff7}a.cke_dialog_ui_button{display:inline-block;*display:inline;*zoom:1;padding:4px 1px;margin:0;text-align:center;color:#484848;vertical-align:middle;cursor:pointer;border:1px solid #bcbcbc;border-radius:2px;background:#f8f8f8;letter-spacing:.3px;line-height:18px;box-sizing:border-box}.cke_hc a.cke_dialog_ui_button{border-width:3px}span.cke_dialog_ui_button{padding:0 10px;cursor:pointer}a.cke_dialog_ui_button:hover{background:#fff}a.cke_dialog_ui_button:focus,a.cke_dialog_ui_button:active{border:2px solid #139ff7;outline:0;padding:3px 0}.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button:focus,.cke_hc a.cke_dialog_ui_button:active{border:3px solid}.cke_dialog_footer_buttons a.cke_dialog_ui_button span{color:inherit;font-size:12px;font-weight:bold;padding:0 12px}a.cke_dialog_ui_button_ok{color:#fff;background:#09863e;border:1px solid #09863e}.cke_hc a.cke_dialog_ui_button{border:3px solid #bcbcbc}a.cke_dialog_ui_button_ok:hover{background:#53aa78;border-color:#53aa78}a.cke_dialog_ui_button_ok:focus{box-shadow:inset 0 0 0 2px #FFF}a.cke_dialog_ui_button_ok:focus,a.cke_dialog_ui_button_ok:active{border-color:#139ff7}.cke_hc a.cke_dialog_ui_button_ok:hover,.cke_hc a.cke_dialog_ui_button_ok:focus,.cke_hc a.cke_dialog_ui_button_ok:active{border-color:#484848}a.cke_dialog_ui_button_ok.cke_disabled{background:#d1d1d1;border-color:#d1d1d1;cursor:default}a.cke_dialog_ui_button_ok.cke_disabled span{cursor:default}.cke_dialog_footer_buttons{display:inline-table;margin:5px;width:auto;position:relative;vertical-align:middle}div.cke_dialog_ui_input_select{display:table}select.cke_dialog_ui_input_select{height:28px;line-height:28px;background-color:#fff;border:1px solid #bcbcbc;padding:3px 3px 3px 6px;outline:0;border-radius:2px;margin:0 1px;box-sizing:border-box;width:calc(100% - 2px)!important}.cke_dialog_ui_input_file{width:100%;height:25px}.cke_hc .cke_dialog_ui_labeled_content input:focus,.cke_hc .cke_dialog_ui_labeled_content select:focus,.cke_hc .cke_dialog_ui_labeled_content textarea:focus{outline:1px dotted}.cke_dialog_ui_labeled_label{margin-left:1px}.cke_dialog .cke_dark_background{background-color:transparent}.cke_dialog .cke_light_background{background-color:#ebebeb}.cke_dialog .cke_centered{text-align:center}.cke_dialog a.cke_btn_reset{float:right;background:url(images/refresh.png) top left no-repeat;width:16px;height:16px;border:1px none;font-size:1px}.cke_hidpi .cke_dialog a.cke_btn_reset{background-size:16px;background-image:url(images/hidpi/refresh.png)}.cke_rtl .cke_dialog a.cke_btn_reset{float:left}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked{float:left;width:16px;height:16px;background-repeat:no-repeat;border:none 1px;font-size:1px}.cke_dialog a.cke_btn_locked,.cke_dialog a.cke_btn_unlocked,.cke_dialog a.cke_btn_reset{margin:2px}.cke_dialog a.cke_btn_locked{background-image:url(images/lock.png)}.cke_dialog a.cke_btn_unlocked{background-image:url(images/lock-open.png)}.cke_rtl .cke_dialog a.cke_btn_locked,.cke_rtl .cke_dialog a.cke_btn_unlocked{float:right}.cke_hidpi .cke_dialog a.cke_btn_unlocked,.cke_hidpi .cke_dialog a.cke_btn_locked{background-size:16px}.cke_hidpi .cke_dialog a.cke_btn_locked{background-image:url(images/hidpi/lock.png)}.cke_hidpi .cke_dialog a.cke_btn_unlocked{background-image:url(images/hidpi/lock-open.png)}.cke_dialog a.cke_btn_locked .cke_icon{display:none}.cke_dialog a.cke_btn_over,.cke_dialog a.cke_btn_locked:hover,.cke_dialog a.cke_btn_locked:focus,.cke_dialog a.cke_btn_locked:active,.cke_dialog a.cke_btn_unlocked:hover,.cke_dialog a.cke_btn_unlocked:focus,.cke_dialog a.cke_btn_unlocked:active,.cke_dialog a.cke_btn_reset:hover,.cke_dialog a.cke_btn_reset:focus,.cke_dialog a.cke_btn_reset:active{cursor:pointer;outline:0;margin:0;border:2px solid #139ff7}.cke_dialog fieldset{border:1px solid #bcbcbc}.cke_dialog fieldset legend{padding:0 6px}.cke_dialog_ui_checkbox,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{display:inline-block}.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox{padding-top:5px}.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input,.cke_dialog fieldset .cke_dialog_ui_vbox .cke_dialog_ui_checkbox .cke_dialog_ui_checkbox_input+label{vertical-align:middle}.cke_dialog .ImagePreviewBox{border:1px ridge #bcbcbc;overflow:scroll;height:200px;width:300px;padding:2px;background-color:white}.cke_dialog .ImagePreviewBox table td{white-space:normal}.cke_dialog .ImagePreviewLoader{position:absolute;white-space:normal;overflow:hidden;height:160px;width:230px;margin:2px;padding:2px;opacity:.9;filter:alpha(opacity = 90);background-color:#e4e4e4}.cke_dialog .FlashPreviewBox{white-space:normal;border:1px solid #bcbcbc;overflow:auto;height:160px;width:390px;padding:2px;background-color:white}.cke_dialog .cke_pastetext{width:346px;height:170px}.cke_dialog .cke_pastetext textarea{width:340px;height:170px;resize:none}.cke_dialog iframe.cke_pasteframe{width:346px;height:130px;background-color:white;border:1px solid #aeb3b9;border-radius:3px}.cke_dialog .cke_hand{cursor:pointer}.cke_disabled{color:#a0a0a0}.cke_dialog_body .cke_label{display:none}.cke_dialog_body label{display:inline;cursor:default;letter-spacing:.3px}.cke_dialog_body label+.cke_dialog_ui_labeled_content{margin-top:2px}.cke_dialog_contents_body .cke_dialog_ui_text,.cke_dialog_contents_body .cke_dialog_ui_select,.cke_dialog_contents_body .cke_dialog_ui_hbox_last>a.cke_dialog_ui_button{margin-top:4px}a.cke_smile{overflow:hidden;display:block;text-align:center;padding:.3em 0}a.cke_smile img{vertical-align:middle}a.cke_specialchar{cursor:inherit;display:block;height:1.25em;padding:.2em .3em;text-align:center}a.cke_smile,a.cke_specialchar{border:2px solid transparent}a.cke_smile:hover,a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:hover,a.cke_specialchar:focus,a.cke_specialchar:active{background:#fff;outline:0}a.cke_smile:hover,a.cke_specialchar:hover{border-color:#888}a.cke_smile:focus,a.cke_smile:active,a.cke_specialchar:focus,a.cke_specialchar:active{border-color:#139ff7}.cke_dialog_contents a.colorChooser{display:block;margin-top:6px;margin-left:10px;width:80px}.cke_rtl .cke_dialog_contents a.colorChooser{margin-right:10px}.cke_iframe_shim{display:block;position:absolute;top:0;left:0;z-index:-1;filter:alpha(opacity = 0);width:100%;height:100%}.cke_dialog_contents_body .cke_accessibility_legend{margin:2px 7px 2px 2px}.cke_dialog_contents_body .cke_accessibility_legend:focus,.cke_dialog_contents_body .cke_accessibility_legend:active{outline:0;border:2px solid #139ff7;margin:0 5px 0 0}.cke_dialog_contents_body input[type=file]:focus,.cke_dialog_contents_body input[type=file]:active{border:2px solid #139ff7}.cke_dialog_find_fieldset{margin-top:10px!important}.cke_dialog_image_ratiolock{margin-top:52px!important}.cke_dialog_forms_select_order label.cke_dialog_ui_labeled_label{margin-left:0}.cke_dialog_forms_select_order div.cke_dialog_ui_input_select{width:100%}.cke_dialog_forms_select_order_txtsize .cke_dialog_ui_hbox_last{padding-top:4px}.cke_dialog_image_url .cke_dialog_ui_hbox_last,.cke_dialog_flash_url .cke_dialog_ui_hbox_last{vertical-align:bottom}a.cke_dialog_ui_button.cke_dialog_image_browse{margin-top:10px}.cke_dialog_contents_body .cke_tpl_list{border:#bcbcbc 1px solid;margin:1px}.cke_dialog_contents_body .cke_tpl_list:focus,.cke_dialog_contents_body .cke_tpl_list:active{outline:0;margin:0;border:2px solid #139ff7}.cke_dialog_contents_body .cke_tpl_list a:focus,.cke_dialog_contents_body .cke_tpl_list a:active{outline:0}.cke_dialog_contents_body .cke_tpl_list a:focus .cke_tpl_item,.cke_dialog_contents_body .cke_tpl_list a:active .cke_tpl_item{border:2px solid #139ff7;padding:6px}.cke_rtl input.cke_dialog_ui_input_text,.cke_rtl input.cke_dialog_ui_input_password{padding-right:2px}.cke_rtl div.cke_dialog_ui_input_text,.cke_rtl div.cke_dialog_ui_input_password{padding-left:2px}.cke_rtl div.cke_dialog_ui_input_text{padding-right:1px}.cke_rtl .cke_dialog_ui_vbox_child,.cke_rtl .cke_dialog_ui_hbox_child,.cke_rtl .cke_dialog_ui_hbox_first,.cke_rtl .cke_dialog_ui_hbox_last{padding-right:2px!important}.cke_hc .cke_dialog_title,.cke_hc .cke_dialog_footer,.cke_hc a.cke_dialog_tab,.cke_hc a.cke_dialog_ui_button,.cke_hc a.cke_dialog_ui_button:hover,.cke_hc a.cke_dialog_ui_button_ok,.cke_hc a.cke_dialog_ui_button_ok:hover{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.cke_hc div.cke_dialog_ui_input_text,.cke_hc div.cke_dialog_ui_input_password,.cke_hc div.cke_dialog_ui_input_textarea,.cke_hc div.cke_dialog_ui_input_select,.cke_hc div.cke_dialog_ui_input_file{border:0}.cke_dialog_footer{filter:\"\"}"; });
define('text!modules/facco/viewRequests.html', ['module'], function(module) { module.exports = "<template>\r\n   <div class=\"panel panel-default rightMargin leftMargin\">\r\n    <div class=\"panel-body\">\r\n            <compose view=\"./components/viewRequestsTable.html\"></compose>\r\n    </div> <!-- Panel Body -->\r\n   </div>\r\n</template>\r\n"; });
define('text!resources/editor/skins/moono-lisa/editor.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_reset{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none}.cke_reset_all,.cke_reset_all *,.cke_reset_all a,.cke_reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none;border-collapse:collapse;font:normal normal normal 12px Arial,Helvetica,Tahoma,Verdana,Sans-Serif;color:#000;text-align:left;white-space:nowrap;cursor:auto;float:none}.cke_reset_all .cke_rtl *{text-align:right}.cke_reset_all iframe{vertical-align:inherit}.cke_reset_all textarea{white-space:pre-wrap}.cke_reset_all textarea,.cke_reset_all input[type=\"text\"],.cke_reset_all input[type=\"password\"]{cursor:text}.cke_reset_all textarea[disabled],.cke_reset_all input[type=\"text\"][disabled],.cke_reset_all input[type=\"password\"][disabled]{cursor:default}.cke_reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.cke_reset_all select{box-sizing:border-box}.cke_reset_all table{table-layout:auto}.cke_chrome{display:block;border:1px solid #d1d1d1;padding:0}.cke_inner{display:block;background:#fff;padding:0;-webkit-touch-callout:none}.cke_float{border:0}.cke_float .cke_inner{padding-bottom:0}.cke_top,.cke_contents,.cke_bottom{display:block;overflow:hidden}.cke_top{border-bottom:1px solid #d1d1d1;background:#f8f8f8;padding:6px 8px 2px;white-space:normal}.cke_float .cke_top{border:1px solid #d1d1d1}.cke_bottom{padding:6px 8px 2px;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_browser_ios .cke_contents{overflow-y:auto;-webkit-overflow-scrolling:touch}.cke_resizer{width:0;height:0;overflow:hidden;border-width:10px 10px 0 0;border-color:transparent #bcbcbc transparent transparent;border-style:dashed solid dashed dashed;font-size:0;vertical-align:bottom;margin-top:6px;margin-bottom:2px}.cke_hc .cke_resizer{font-size:15px;width:auto;height:auto;border-width:0}.cke_resizer_ltr{cursor:se-resize;float:right;margin-right:-4px}.cke_resizer_rtl{border-width:10px 0 0 10px;border-color:transparent transparent transparent #bcbcbc;border-style:dashed dashed dashed solid;cursor:sw-resize;float:left;margin-left:-4px;right:auto}.cke_wysiwyg_div{display:block;height:100%;overflow:auto;padding:0 8px;outline-style:none;box-sizing:border-box}.cke_panel{visibility:visible;width:120px;height:100px;overflow:hidden;background-color:#fff;border:1px solid #d1d1d1}.cke_menu_panel{padding:0;margin:0}.cke_combopanel{width:150px;height:170px}.cke_panel_frame{width:100%;height:100%;font-size:12px;overflow:auto;overflow-x:hidden}.cke_panel_container{overflow-y:auto;overflow-x:hidden}.cke_panel_block:focus{outline:0}.cke_panel_list{margin:0;padding:0;list-style-type:none;white-space:nowrap}.cke_panel_listItem{margin:0;padding:0}.cke_panel_listItem a{padding:6px 7px;display:block;color:inherit!important;text-decoration:none;overflow:hidden;text-overflow:ellipsis}.cke_hc .cke_panel_listItem a{border-style:none}.cke_panel_listItem.cke_selected a,.cke_panel_listItem a:hover,.cke_panel_listItem a:focus,.cke_panel_listItem a:active{background-color:#e9e9e9}.cke_panel_listItem a:focus{outline:1px dotted #000}.cke_hc .cke_panel_listItem a:hover,.cke_hc .cke_panel_listItem a:focus,.cke_hc .cke_panel_listItem a:active{border:2px solid;padding:4px 5px}.cke_panel_listItem p,.cke_panel_listItem h1,.cke_panel_listItem h2,.cke_panel_listItem h3,.cke_panel_listItem h4,.cke_panel_listItem h5,.cke_panel_listItem h6,.cke_panel_listItem pre{margin-top:0;margin-bottom:0}.cke_panel_grouptitle{cursor:default;font-size:11px;font-weight:bold;white-space:nowrap;margin:0;padding:6px 6px 7px 6px;color:#484848;border-bottom:1px solid #d1d1d1;background:#f8f8f8}.cke_colorblock{padding:10px;font-size:11px;font-family:'Microsoft Sans Serif',Tahoma,Arial,Verdana,Sans-Serif}.cke_colorblock,.cke_colorblock a{text-decoration:none;color:#000}a.cke_colorbox{padding:2px;float:left;width:20px;height:20px}.cke_rtl a.cke_colorbox{float:right}a:hover.cke_colorbox,a:focus.cke_colorbox,a:active.cke_colorbox{outline:0;padding:0;border:2px solid #139ff7}a:hover.cke_colorbox{border-color:#bcbcbc}span.cke_colorbox{width:20px;height:20px;float:left}.cke_rtl span.cke_colorbox{float:right}a.cke_colorauto,a.cke_colormore{border:#fff 1px solid;padding:3px;display:block;cursor:pointer}a.cke_colorauto{padding:0;border:1px solid transparent;margin-bottom:6px;height:26px;line-height:26px}a.cke_colormore{margin-top:10px;height:20px;line-height:19px}a:hover.cke_colorauto,a:hover.cke_colormore,a:focus.cke_colorauto,a:focus.cke_colormore,a:active.cke_colorauto,a:active.cke_colormore{outline:0;border:#139ff7 1px solid;background-color:#f8f8f8}a:hover.cke_colorauto,a:hover.cke_colormore{border-color:#bcbcbc}.cke_colorauto span.cke_colorbox{width:18px;height:18px;border:1px solid #808080;margin-left:1px;margin-top:3px}.cke_rtl .cke_colorauto span.cke_colorbox{margin-left:0;margin-right:1px}span.cke_colorbox[style*=\"#ffffff\"],span.cke_colorbox[style*=\"#FFFFFF\"],span.cke_colorbox[style=\"background-color:#fff\"],span.cke_colorbox[style=\"background-color:#FFF\"],span.cke_colorbox[style*=\"rgb(255,255,255)\"],span.cke_colorbox[style*=\"rgb(255, 255, 255)\"]{border:1px solid #808080;width:18px;height:18px}.cke_toolbar{float:left}.cke_rtl .cke_toolbar{float:right}.cke_toolgroup{border:0;float:left;margin:1px 2px 6px 0;padding-right:3px}.cke_rtl .cke_toolgroup{float:right;margin:1px 0 6px 2px;padding-left:3px;padding-right:0}.cke_hc .cke_toolgroup{margin-right:5px;margin-bottom:5px}.cke_hc.cke_rtl .cke_toolgroup{margin-right:0;margin-left:5px}a.cke_button{display:inline-block;height:18px;padding:4px 6px;outline:0;cursor:default;float:left;border:0;position:relative}.cke_rtl a.cke_button{float:right}.cke_hc a.cke_button{border:1px solid black;padding:3px 5px;margin:0 3px 5px 0}.cke_hc.cke_rtl a.cke_button{margin:0 0 5px 3px}a.cke_button_on{background:#fff;border:1px #bcbcbc solid;padding:3px 5px}a.cke_button_off:hover,a.cke_button_off:focus,a.cke_button_off:active{background:#e5e5e5;border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active{background:#e5e5e5;border:3px solid #000;padding:1px 3px}a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{border:0;padding:4px 6px;background-color:transparent}a.cke_button_disabled:focus{border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_disabled:hover,.cke_hc a.cke_button_disabled:focus,.cke_hc a.cke_button_disabled:active{border:1px solid #acacac;padding:3px 5px;margin:0 3px 5px 0}.cke_hc a.cke_button_disabled:focus{border:3px solid #000;padding:1px 3px}.cke_hc.cke_rtl a.cke_button_disabled:hover,.cke_hc.cke_rtl a.cke_button_disabled:focus,.cke_hc.cke_rtl a.cke_button_disabled:active{margin:0 0 5px 3px}a.cke_button_disabled .cke_button_icon,a.cke_button_disabled .cke_button_arrow{opacity:.3}.cke_hc a.cke_button_disabled{border-color:#acacac}.cke_hc a.cke_button_disabled .cke_button_icon,.cke_hc a.cke_button_disabled .cke_button_label{opacity:.5}.cke_toolgroup a.cke_button:last-child:after,.cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:0;right:-3px}.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-right:0;right:auto;border-left:1px solid #bcbcbc;top:0;left:-3px}.cke_hc .cke_toolgroup a.cke_button:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-color:#000;top:0;right:-7px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{top:0;right:auto;left:-7px}.cke_toolgroup a.cke_button:hover:last-child:after,.cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:-4px}.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:auto;left:-4px}.cke_hc .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:-9px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:auto;left:-9px}.cke_toolbar.cke_toolbar_last .cke_toolgroup a.cke_button:last-child:after{content:none;border:0;width:0;height:0}.cke_button_icon{cursor:inherit;background-repeat:no-repeat;margin-top:1px;width:16px;height:16px;float:left;display:inline-block}.cke_rtl .cke_button_icon{float:right}.cke_hc .cke_button_icon{display:none}.cke_button_label{display:none;padding-left:3px;margin-top:1px;line-height:17px;vertical-align:middle;float:left;cursor:default;color:#484848}.cke_rtl .cke_button_label{padding-right:3px;padding-left:0;float:right}.cke_hc .cke_button_label{padding:0;display:inline-block;font-size:12px}.cke_button_arrow{display:inline-block;margin:8px 0 0 1px;width:0;height:0;cursor:default;vertical-align:top;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_rtl .cke_button_arrow{margin-right:5px;margin-left:0}.cke_hc .cke_button_arrow{font-size:10px;margin:3px 0 0 3px;width:auto;border:0}.cke_toolbar_separator{float:left;background-color:#bcbcbc;margin:4px 2px 0 2px;height:18px;width:1px}.cke_rtl .cke_toolbar_separator{float:right}.cke_hc .cke_toolbar_separator{background-color:#000;margin-left:2px;margin-right:5px;margin-bottom:9px}.cke_hc.cke_rtl .cke_toolbar_separator{margin-left:5px;margin-right:2px}.cke_toolbar_break{display:block;clear:left}.cke_rtl .cke_toolbar_break{clear:right}a.cke_toolbox_collapser{width:12px;height:11px;float:right;margin:11px 0 0;font-size:0;cursor:default;text-align:center;border:1px solid #bcbcbc}.cke_rtl .cke_toolbox_collapser{float:left}.cke_toolbox_collapser:hover{background:#e5e5e5}.cke_toolbox_collapser.cke_toolbox_collapser_min{margin:0 2px 4px}.cke_toolbox_collapser .cke_arrow{display:inline-block;height:0;width:0;font-size:0;margin-top:1px;border:3px solid transparent;border-bottom-color:#484848}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{margin-top:4px;border-bottom-color:transparent;border-top-color:#484848}.cke_hc .cke_toolbox_collapser .cke_arrow{font-size:8px;width:auto;border:0;margin-top:0}.cke_menuitem span{cursor:default}.cke_menubutton{display:block}.cke_hc .cke_menubutton{padding:2px}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:#e9e9e9;display:block;outline:1px dotted}.cke_menubutton:hover{outline:0}.cke_hc .cke_menubutton:hover,.cke_hc .cke_menubutton:focus,.cke_hc .cke_menubutton:active{border:2px solid;padding:0}.cke_menubutton_disabled:hover,.cke_menubutton_disabled:focus,.cke_menubutton_disabled:active{background-color:transparent;outline:0}.cke_menubutton_inner{display:table-row}.cke_menubutton_icon,.cke_menubutton_label,.cke_menuarrow{display:table-cell}.cke_menubutton_icon{background-color:#f8f8f8;padding:6px 4px}.cke_hc .cke_menubutton_icon{height:16px;width:0;padding:4px 0}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:#e9e9e9}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:#f8f8f8;outline:0}.cke_menuitem .cke_menubutton_on{background-color:#e9e9e9;border:1px solid #dedede;outline:0}.cke_menubutton_on .cke_menubutton_icon{padding-right:3px;background-color:#e9e9e9}.cke_menubutton_label{padding:0 5px;background-color:transparent;width:100%;vertical-align:middle}.cke_menubutton_shortcut{color:#979797}.cke_menubutton_disabled .cke_menubutton_label{opacity:.3;filter:alpha(opacity=30)}.cke_panel_frame .cke_menubutton_label{display:none}.cke_menuseparator{background-color:#d1d1d1;height:1px}.cke_menuarrow{background:transparent url(images/arrow.png) no-repeat 0 10px;padding:0 5px}.cke_rtl .cke_menuarrow{background-position:5px -13px;background-repeat:no-repeat}.cke_hc .cke_menuarrow{background-image:none}.cke_menuarrow span{display:none}.cke_hc .cke_menuarrow span{vertical-align:middle;display:inline}.cke_combo{display:inline-block;float:left;position:relative;margin-bottom:5px}.cke_rtl .cke_combo{float:right}.cke_hc .cke_combo{margin-top:1px;margin-bottom:10px}.cke_combo:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:5px;top:0;right:0}.cke_rtl .cke_combo:after{border-right:0;border-left:1px solid #bcbcbc;right:auto;left:0}.cke_hc .cke_combo:after{border-color:#000}a.cke_combo_button{cursor:default;display:inline-block;float:left;margin:0;padding:1px}.cke_rtl a.cke_combo_button{float:right}.cke_hc a.cke_combo_button{padding:4px}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:hover,.cke_combo_off a.cke_combo_button:focus,.cke_combo_off a.cke_combo_button:active{background:#e5e5e5;border:1px solid #bcbcbc;padding:0 0 0 1px;margin-left:-1px}.cke_combo_off a.cke_combo_button:focus{outline:0}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:active{background:#fff}.cke_rtl .cke_combo_on a.cke_combo_button,.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:0 1px 0 0;margin-left:0;margin-right:-1px}.cke_hc .cke_combo_on a.cke_combo_button,.cke_hc .cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_combo_off a.cke_combo_button:active{border:3px solid #000;padding:1px 1px 1px 2px}.cke_hc.cke_rtl .cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:1px 2px 1px 1px}.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 0 0 3px;margin-left:-3px}.cke_rtl .cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 3px 0 0;margin-left:0;margin-right:-3px}.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 1px 1px 7px;margin-left:-6px}.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 7px 1px 1px;margin-left:0;margin-right:-6px}.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0;margin:0}.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px;margin:0}.cke_toolbar .cke_combo+.cke_toolbar_end,.cke_toolbar .cke_combo+.cke_toolgroup{margin-right:0;margin-left:2px}.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:2px}.cke_hc .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:5px}.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:5px}.cke_toolbar.cke_toolbar_last .cke_combo:nth-last-child(-n+2):after{content:none;border:0;width:0;height:0}.cke_combo_text{line-height:26px;padding-left:10px;text-overflow:ellipsis;overflow:hidden;float:left;cursor:default;color:#484848;width:60px}.cke_rtl .cke_combo_text{float:right;text-align:right;padding-left:0;padding-right:10px}.cke_hc .cke_combo_text{line-height:18px;font-size:12px}.cke_combo_open{cursor:default;display:inline-block;font-size:0;height:19px;line-height:17px;margin:1px 10px 1px;width:5px}.cke_hc .cke_combo_open{height:12px}.cke_combo_arrow{cursor:default;margin:11px 0 0;float:left;height:0;width:0;font-size:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_hc .cke_combo_arrow{font-size:10px;width:auto;border:0;margin-top:3px}.cke_combo_label{display:none;float:left;line-height:26px;vertical-align:top;margin-right:5px}.cke_rtl .cke_combo_label{float:right;margin-left:5px;margin-right:0}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{opacity:.3}.cke_path{float:left;margin:-2px 0 2px}a.cke_path_item,span.cke_path_empty{display:inline-block;float:left;padding:3px 4px;margin-right:2px;cursor:default;text-decoration:none;outline:0;border:0;color:#484848;font-weight:bold;font-size:11px}.cke_rtl .cke_path,.cke_rtl .cke_path_item,.cke_rtl .cke_path_empty{float:right}a.cke_path_item:hover,a.cke_path_item:focus,a.cke_path_item:active{background-color:#e5e5e5}.cke_hc a.cke_path_item:hover,.cke_hc a.cke_path_item:focus,.cke_hc a.cke_path_item:active{border:2px solid;padding:1px 2px}.cke_button__source_label,.cke_button__sourcedialog_label{display:inline}.cke_combopanel__fontsize{width:135px}textarea.cke_source{font-family:'Courier New',Monospace;font-size:small;background-color:#fff;white-space:pre-wrap;border:0;padding:0;margin:0;display:block}.cke_wysiwyg_frame,.cke_wysiwyg_div{background-color:#fff}.cke_notifications_area{pointer-events:none}.cke_notification{pointer-events:auto;position:relative;margin:10px;width:300px;color:white;text-align:center;opacity:.95;filter:alpha(opacity = 95);-webkit-animation:fadeIn .7s;animation:fadeIn .7s}.cke_notification_message a{color:#12306f}@-webkit-keyframes fadeIn{from{opacity:.4}to{opacity:.95}}@keyframes fadeIn{from{opacity:.4}to{opacity:.95}}.cke_notification_success{background:#72b572;border:1px solid #63a563}.cke_notification_warning{background:#c83939;border:1px solid #902b2b}.cke_notification_info{background:#2e9ad0;border:1px solid #0f74a8}.cke_notification_info span.cke_notification_progress{background-color:#0f74a8;display:block;padding:0;margin:0;height:100%;overflow:hidden;position:absolute;z-index:1}.cke_notification_message{position:relative;margin:4px 23px 3px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;z-index:4;text-overflow:ellipsis;overflow:hidden}.cke_notification_close{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:20px;width:20px;top:1px;right:1px;padding:0;margin:0;z-index:5;opacity:.6;filter:alpha(opacity = 60)}.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_notification_close span{display:none}.cke_notification_warning a.cke_notification_close{opacity:.8;filter:alpha(opacity = 80)}.cke_notification_warning a.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_chrome{visibility:inherit}.cke_voice_label{display:none}legend.cke_voice_label{display:none}.cke_button__about_icon{background:url(icons.png?t=H0CF) no-repeat 0 -0px!important}.cke_button__bold_icon{background:url(icons.png?t=H0CF) no-repeat 0 -24px!important}.cke_button__italic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -48px!important}.cke_button__strike_icon{background:url(icons.png?t=H0CF) no-repeat 0 -72px!important}.cke_button__subscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -96px!important}.cke_button__superscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -120px!important}.cke_button__underline_icon{background:url(icons.png?t=H0CF) no-repeat 0 -144px!important}.cke_button__bidiltr_icon{background:url(icons.png?t=H0CF) no-repeat 0 -168px!important}.cke_button__bidirtl_icon{background:url(icons.png?t=H0CF) no-repeat 0 -192px!important}.cke_button__blockquote_icon{background:url(icons.png?t=H0CF) no-repeat 0 -216px!important}.cke_rtl .cke_button__copy_icon,.cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -240px!important}.cke_ltr .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -264px!important}.cke_rtl .cke_button__cut_icon,.cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -288px!important}.cke_ltr .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -312px!important}.cke_rtl .cke_button__paste_icon,.cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -336px!important}.cke_ltr .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -360px!important}.cke_button__codesnippet_icon{background:url(icons.png?t=H0CF) no-repeat 0 -384px!important}.cke_button__bgcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -408px!important}.cke_button__textcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -432px!important}.cke_button__copyformatting_icon{background:url(icons.png?t=H0CF) no-repeat 0 -456px!important}.cke_button__creatediv_icon{background:url(icons.png?t=H0CF) no-repeat 0 -480px!important}.cke_rtl .cke_button__docprops_icon,.cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -504px!important}.cke_ltr .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -528px!important}.cke_button__embed_icon{background:url(icons.png?t=H0CF) no-repeat 0 -552px!important}.cke_button__embedsemantic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -576px!important}.cke_rtl .cke_button__find_icon,.cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -600px!important}.cke_ltr .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -624px!important}.cke_button__replace_icon{background:url(icons.png?t=H0CF) no-repeat 0 -648px!important}.cke_button__flash_icon{background:url(icons.png?t=H0CF) no-repeat 0 -672px!important}.cke_button__button_icon{background:url(icons.png?t=H0CF) no-repeat 0 -696px!important}.cke_button__checkbox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -720px!important}.cke_button__form_icon{background:url(icons.png?t=H0CF) no-repeat 0 -744px!important}.cke_button__hiddenfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -768px!important}.cke_button__imagebutton_icon{background:url(icons.png?t=H0CF) no-repeat 0 -792px!important}.cke_button__radio_icon{background:url(icons.png?t=H0CF) no-repeat 0 -816px!important}.cke_rtl .cke_button__select_icon,.cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -840px!important}.cke_ltr .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -864px!important}.cke_rtl .cke_button__textarea_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -888px!important}.cke_ltr .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -912px!important}.cke_rtl .cke_button__textfield_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -936px!important}.cke_ltr .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -960px!important}.cke_button__horizontalrule_icon{background:url(icons.png?t=H0CF) no-repeat 0 -984px!important}.cke_button__iframe_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1008px!important}.cke_button__image_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1032px!important}.cke_rtl .cke_button__indent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1056px!important}.cke_ltr .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1080px!important}.cke_rtl .cke_button__outdent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1104px!important}.cke_ltr .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1128px!important}.cke_button__justifyblock_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1152px!important}.cke_button__justifycenter_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1176px!important}.cke_button__justifyleft_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1200px!important}.cke_button__justifyright_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1224px!important}.cke_button__language_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1248px!important}.cke_rtl .cke_button__anchor_icon,.cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1272px!important}.cke_ltr .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1296px!important}.cke_button__link_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1320px!important}.cke_button__unlink_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1344px!important}.cke_rtl .cke_button__bulletedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1368px!important}.cke_ltr .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1392px!important}.cke_rtl .cke_button__numberedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1416px!important}.cke_ltr .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1440px!important}.cke_button__mathjax_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1464px!important}.cke_button__maximize_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1488px!important}.cke_rtl .cke_button__newpage_icon,.cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1512px!important}.cke_ltr .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1536px!important}.cke_rtl .cke_button__pagebreak_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1560px!important}.cke_ltr .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1584px!important}.cke_rtl .cke_button__pastefromword_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1608px!important}.cke_ltr .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1632px!important}.cke_rtl .cke_button__pastetext_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1656px!important}.cke_ltr .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1680px!important}.cke_button__placeholder_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1704px!important}.cke_rtl .cke_button__preview_icon,.cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1728px!important}.cke_ltr .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1752px!important}.cke_button__print_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1776px!important}.cke_button__removeformat_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1800px!important}.cke_button__save_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1824px!important}.cke_button__scayt_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1848px!important}.cke_button__selectall_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1872px!important}.cke_rtl .cke_button__showblocks_icon,.cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1896px!important}.cke_ltr .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1920px!important}.cke_button__smiley_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1944px!important}.cke_rtl .cke_button__source_icon,.cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1968px!important}.cke_ltr .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1992px!important}.cke_rtl .cke_button__sourcedialog_icon,.cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2016px!important}.cke_ltr .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2040px!important}.cke_button__specialchar_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2064px!important}.cke_button__table_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2088px!important}.cke_rtl .cke_button__templates_icon,.cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2112px!important}.cke_ltr .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2136px!important}.cke_button__uicolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2160px!important}.cke_rtl .cke_button__redo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2184px!important}.cke_ltr .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2208px!important}.cke_rtl .cke_button__undo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2232px!important}.cke_ltr .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2256px!important}.cke_button__simplebox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2280px!important}.cke_button__spellchecker_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2304px!important}.cke_hidpi .cke_button__about_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -0px!important;background-size:16px!important}.cke_hidpi .cke_button__bold_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -24px!important;background-size:16px!important}.cke_hidpi .cke_button__italic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -48px!important;background-size:16px!important}.cke_hidpi .cke_button__strike_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -72px!important;background-size:16px!important}.cke_hidpi .cke_button__subscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -96px!important;background-size:16px!important}.cke_hidpi .cke_button__superscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -120px!important;background-size:16px!important}.cke_hidpi .cke_button__underline_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -144px!important;background-size:16px!important}.cke_hidpi .cke_button__bidiltr_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -168px!important;background-size:16px!important}.cke_hidpi .cke_button__bidirtl_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -192px!important;background-size:16px!important}.cke_hidpi .cke_button__blockquote_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -216px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__copy_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -240px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__copy_icon,.cke_ltr.cke_hidpi .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -264px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__cut_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -288px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__cut_icon,.cke_ltr.cke_hidpi .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -312px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__paste_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -336px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__paste_icon,.cke_ltr.cke_hidpi .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -360px!important;background-size:16px!important}.cke_hidpi .cke_button__codesnippet_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -384px!important;background-size:16px!important}.cke_hidpi .cke_button__bgcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -408px!important;background-size:16px!important}.cke_hidpi .cke_button__textcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -432px!important;background-size:16px!important}.cke_hidpi .cke_button__copyformatting_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -456px!important;background-size:16px!important}.cke_hidpi .cke_button__creatediv_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -480px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__docprops_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -504px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__docprops_icon,.cke_ltr.cke_hidpi .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -528px!important;background-size:16px!important}.cke_hidpi .cke_button__embed_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -552px!important;background-size:16px!important}.cke_hidpi .cke_button__embedsemantic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -576px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__find_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -600px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__find_icon,.cke_ltr.cke_hidpi .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -624px!important;background-size:16px!important}.cke_hidpi .cke_button__replace_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -648px!important;background-size:16px!important}.cke_hidpi .cke_button__flash_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -672px!important;background-size:16px!important}.cke_hidpi .cke_button__button_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -696px!important;background-size:16px!important}.cke_hidpi .cke_button__checkbox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -720px!important;background-size:16px!important}.cke_hidpi .cke_button__form_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -744px!important;background-size:16px!important}.cke_hidpi .cke_button__hiddenfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -768px!important;background-size:16px!important}.cke_hidpi .cke_button__imagebutton_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -792px!important;background-size:16px!important}.cke_hidpi .cke_button__radio_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -816px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__select_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -840px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__select_icon,.cke_ltr.cke_hidpi .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -864px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textarea_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -888px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textarea_icon,.cke_ltr.cke_hidpi .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -912px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textfield_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -936px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textfield_icon,.cke_ltr.cke_hidpi .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -960px!important;background-size:16px!important}.cke_hidpi .cke_button__horizontalrule_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -984px!important;background-size:16px!important}.cke_hidpi .cke_button__iframe_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1008px!important;background-size:16px!important}.cke_hidpi .cke_button__image_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1032px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__indent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1056px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__indent_icon,.cke_ltr.cke_hidpi .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1080px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__outdent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1104px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__outdent_icon,.cke_ltr.cke_hidpi .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1128px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyblock_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1152px!important;background-size:16px!important}.cke_hidpi .cke_button__justifycenter_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1176px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyleft_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1200px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyright_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1224px!important;background-size:16px!important}.cke_hidpi .cke_button__language_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1248px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__anchor_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1272px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__anchor_icon,.cke_ltr.cke_hidpi .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1296px!important;background-size:16px!important}.cke_hidpi .cke_button__link_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1320px!important;background-size:16px!important}.cke_hidpi .cke_button__unlink_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1344px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__bulletedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1368px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__bulletedlist_icon,.cke_ltr.cke_hidpi .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1392px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__numberedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1416px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__numberedlist_icon,.cke_ltr.cke_hidpi .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1440px!important;background-size:16px!important}.cke_hidpi .cke_button__mathjax_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1464px!important;background-size:16px!important}.cke_hidpi .cke_button__maximize_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1488px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__newpage_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1512px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__newpage_icon,.cke_ltr.cke_hidpi .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1536px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pagebreak_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1560px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pagebreak_icon,.cke_ltr.cke_hidpi .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1584px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastefromword_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1608px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastefromword_icon,.cke_ltr.cke_hidpi .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1632px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastetext_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1656px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastetext_icon,.cke_ltr.cke_hidpi .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1680px!important;background-size:16px!important}.cke_hidpi .cke_button__placeholder_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1704px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__preview_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1728px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__preview_icon,.cke_ltr.cke_hidpi .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1752px!important;background-size:16px!important}.cke_hidpi .cke_button__print_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1776px!important;background-size:16px!important}.cke_hidpi .cke_button__removeformat_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1800px!important;background-size:16px!important}.cke_hidpi .cke_button__save_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1824px!important;background-size:16px!important}.cke_hidpi .cke_button__scayt_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1848px!important;background-size:16px!important}.cke_hidpi .cke_button__selectall_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1872px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__showblocks_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1896px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__showblocks_icon,.cke_ltr.cke_hidpi .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1920px!important;background-size:16px!important}.cke_hidpi .cke_button__smiley_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1944px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__source_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1968px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__source_icon,.cke_ltr.cke_hidpi .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1992px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__sourcedialog_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2016px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__sourcedialog_icon,.cke_ltr.cke_hidpi .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2040px!important;background-size:16px!important}.cke_hidpi .cke_button__specialchar_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2064px!important;background-size:16px!important}.cke_hidpi .cke_button__table_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2088px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__templates_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2112px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__templates_icon,.cke_ltr.cke_hidpi .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2136px!important;background-size:16px!important}.cke_hidpi .cke_button__uicolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2160px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__redo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2184px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__redo_icon,.cke_ltr.cke_hidpi .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2208px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__undo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2232px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__undo_icon,.cke_ltr.cke_hidpi .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2256px!important;background-size:16px!important}.cke_hidpi .cke_button__simplebox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -4560px!important}.cke_hidpi .cke_button__spellchecker_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2304px!important;background-size:16px!important}"; });
define('text!modules/home/about.html', ['module'], function(module) { module.exports = "<template>\r\n\t<compose view='../../resources/elements/submenu.html'></compose>\r\n    <div class=\"col-lg-12\">\r\n        <router-view></router-view>\r\n    </div>\r\n</template>\r\n"; });
define('text!modules/home/contact.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"fluid-container col-lg-10 col-lg-offset-1\">\n\t\t<div class=\"panel panel-primary topMargin\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t<div innerhtml.bind=\"config.UCC_ADDRESS\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div show.bind=\"config.IMG_DOWNLOAD_URL.length && config.IMG_DOWNLOAD_URL.length > 0\" class=\"col-lg-8 center\">\n\t\t\t\t\t\t<img src=\"${config.IMG_DOWNLOAD_URL}${config.UCC_HEADER_IMAGE}\" class=\"img-responsive pull-right\">\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-6\">\n\t\t\t<div class=\"col-lg-12\" show.bind=\"directors.length > 0\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li class=\"list-group-item  topMargin\" repeat.for=\"person of directors\">\n\t\t\t\t\t\t<div class=\"media-left\" innerhtml='${person.item.email | gravatarUrl:100:1}'></div>\n\t\t\t\t\t\t<div class=\"media-body\">\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<h4>${person.item.fullName}</h4>\n\t\t\t\t\t\t\t\t<h5>${person.role | uccTitle:config.ROLES}</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span>${person.item.phone | phoneNumber}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span><a href=\"mailto:${person.item.email}\">${person.item.email}</a></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12 bigTopMargin\" show.bind=\"staff.length > 0\">\n\t\t\t\t<h3>Technical Staff</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li class=\"list-group-item  topMargin\" repeat.for=\"person of staff\">\n\t\t\t\t\t\t<div class=\"media-left\" innerhtml='${person.email | gravatarUrl:100:1}'></div>\n\t\t\t\t\t\t<div class=\"media-body\">\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<h4>${person.fullName}</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span show.bind=\"!showPersonalContactInfo\">${config.UCC_PHONE | phoneNumber}</span>\n\t\t\t\t\t\t\t\t<span show.bind=\"showPersonalContactInfo\">${person.phone | phoneNumber}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span show.bind=\"!showPersonalContactInfo\"><a href=\"mailto:${config.UCC_EMAIL}\">${config.UCC_EMAIL}</a></span>\n\t\t\t\t\t\t\t\t<span show.bind=\"showPersonalContactInfo\"><a href=\"mailto:${person.email}\">${person.email}</a></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12 bigTopMargin bottomMargin\" show.bind=\"admin.length > 0\">\n\t\t\t\t<h3>Administrative Support</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li class=\"list-group-item topMargin\" repeat.for=\"person of admin\">\n\t\t\t\t\t\t<div class=\"media-left\" innerhtml='${person.email | gravatarUrl:100:1}'></div>\n\t\t\t\t\t\t<div class=\"media-body\">\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<h4>${person.fullName}</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span show.bind=\"!showPersonalContactInfo\">${config.UCC_ADMIN_PHONE | phoneNumber}</span>\n\t\t\t\t\t\t\t\t<span show.bind=\"showPersonalContactInfo\">${person.phone | phoneNumber}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<span show.bind=\"!showPersonalContactInfo\"><a href=\"mailto:${config.UCC_ADMIN_EMAIL}\">${config.UCC_ADMIN_EMAIL}</a></span>\n\t\t\t\t\t\t\t\t<span show.bind=\"showPersonalContactInfo\"><a href=\"mailto:${person.email}\">${person.email}</a></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-6 bigTopMargin\" innerhtml.bind=\"config.CONTACT_CONTENT\">\n\t\t</div>\n\t</div>\n</template>"; });
define('text!resources/editor/skins/moono-lisa/editor_gecko.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_reset{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none}.cke_reset_all,.cke_reset_all *,.cke_reset_all a,.cke_reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none;border-collapse:collapse;font:normal normal normal 12px Arial,Helvetica,Tahoma,Verdana,Sans-Serif;color:#000;text-align:left;white-space:nowrap;cursor:auto;float:none}.cke_reset_all .cke_rtl *{text-align:right}.cke_reset_all iframe{vertical-align:inherit}.cke_reset_all textarea{white-space:pre-wrap}.cke_reset_all textarea,.cke_reset_all input[type=\"text\"],.cke_reset_all input[type=\"password\"]{cursor:text}.cke_reset_all textarea[disabled],.cke_reset_all input[type=\"text\"][disabled],.cke_reset_all input[type=\"password\"][disabled]{cursor:default}.cke_reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.cke_reset_all select{box-sizing:border-box}.cke_reset_all table{table-layout:auto}.cke_chrome{display:block;border:1px solid #d1d1d1;padding:0}.cke_inner{display:block;background:#fff;padding:0;-webkit-touch-callout:none}.cke_float{border:0}.cke_float .cke_inner{padding-bottom:0}.cke_top,.cke_contents,.cke_bottom{display:block;overflow:hidden}.cke_top{border-bottom:1px solid #d1d1d1;background:#f8f8f8;padding:6px 8px 2px;white-space:normal}.cke_float .cke_top{border:1px solid #d1d1d1}.cke_bottom{padding:6px 8px 2px;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_browser_ios .cke_contents{overflow-y:auto;-webkit-overflow-scrolling:touch}.cke_resizer{width:0;height:0;overflow:hidden;border-width:10px 10px 0 0;border-color:transparent #bcbcbc transparent transparent;border-style:dashed solid dashed dashed;font-size:0;vertical-align:bottom;margin-top:6px;margin-bottom:2px}.cke_hc .cke_resizer{font-size:15px;width:auto;height:auto;border-width:0}.cke_resizer_ltr{cursor:se-resize;float:right;margin-right:-4px}.cke_resizer_rtl{border-width:10px 0 0 10px;border-color:transparent transparent transparent #bcbcbc;border-style:dashed dashed dashed solid;cursor:sw-resize;float:left;margin-left:-4px;right:auto}.cke_wysiwyg_div{display:block;height:100%;overflow:auto;padding:0 8px;outline-style:none;box-sizing:border-box}.cke_panel{visibility:visible;width:120px;height:100px;overflow:hidden;background-color:#fff;border:1px solid #d1d1d1}.cke_menu_panel{padding:0;margin:0}.cke_combopanel{width:150px;height:170px}.cke_panel_frame{width:100%;height:100%;font-size:12px;overflow:auto;overflow-x:hidden}.cke_panel_container{overflow-y:auto;overflow-x:hidden}.cke_panel_block:focus{outline:0}.cke_panel_list{margin:0;padding:0;list-style-type:none;white-space:nowrap}.cke_panel_listItem{margin:0;padding:0}.cke_panel_listItem a{padding:6px 7px;display:block;color:inherit!important;text-decoration:none;overflow:hidden;text-overflow:ellipsis}.cke_hc .cke_panel_listItem a{border-style:none}.cke_panel_listItem.cke_selected a,.cke_panel_listItem a:hover,.cke_panel_listItem a:focus,.cke_panel_listItem a:active{background-color:#e9e9e9}.cke_panel_listItem a:focus{outline:1px dotted #000}.cke_hc .cke_panel_listItem a:hover,.cke_hc .cke_panel_listItem a:focus,.cke_hc .cke_panel_listItem a:active{border:2px solid;padding:4px 5px}.cke_panel_listItem p,.cke_panel_listItem h1,.cke_panel_listItem h2,.cke_panel_listItem h3,.cke_panel_listItem h4,.cke_panel_listItem h5,.cke_panel_listItem h6,.cke_panel_listItem pre{margin-top:0;margin-bottom:0}.cke_panel_grouptitle{cursor:default;font-size:11px;font-weight:bold;white-space:nowrap;margin:0;padding:6px 6px 7px 6px;color:#484848;border-bottom:1px solid #d1d1d1;background:#f8f8f8}.cke_colorblock{padding:10px;font-size:11px;font-family:'Microsoft Sans Serif',Tahoma,Arial,Verdana,Sans-Serif}.cke_colorblock,.cke_colorblock a{text-decoration:none;color:#000}a.cke_colorbox{padding:2px;float:left;width:20px;height:20px}.cke_rtl a.cke_colorbox{float:right}a:hover.cke_colorbox,a:focus.cke_colorbox,a:active.cke_colorbox{outline:0;padding:0;border:2px solid #139ff7}a:hover.cke_colorbox{border-color:#bcbcbc}span.cke_colorbox{width:20px;height:20px;float:left}.cke_rtl span.cke_colorbox{float:right}a.cke_colorauto,a.cke_colormore{border:#fff 1px solid;padding:3px;display:block;cursor:pointer}a.cke_colorauto{padding:0;border:1px solid transparent;margin-bottom:6px;height:26px;line-height:26px}a.cke_colormore{margin-top:10px;height:20px;line-height:19px}a:hover.cke_colorauto,a:hover.cke_colormore,a:focus.cke_colorauto,a:focus.cke_colormore,a:active.cke_colorauto,a:active.cke_colormore{outline:0;border:#139ff7 1px solid;background-color:#f8f8f8}a:hover.cke_colorauto,a:hover.cke_colormore{border-color:#bcbcbc}.cke_colorauto span.cke_colorbox{width:18px;height:18px;border:1px solid #808080;margin-left:1px;margin-top:3px}.cke_rtl .cke_colorauto span.cke_colorbox{margin-left:0;margin-right:1px}span.cke_colorbox[style*=\"#ffffff\"],span.cke_colorbox[style*=\"#FFFFFF\"],span.cke_colorbox[style=\"background-color:#fff\"],span.cke_colorbox[style=\"background-color:#FFF\"],span.cke_colorbox[style*=\"rgb(255,255,255)\"],span.cke_colorbox[style*=\"rgb(255, 255, 255)\"]{border:1px solid #808080;width:18px;height:18px}.cke_toolbar{float:left}.cke_rtl .cke_toolbar{float:right}.cke_toolgroup{border:0;float:left;margin:1px 2px 6px 0;padding-right:3px}.cke_rtl .cke_toolgroup{float:right;margin:1px 0 6px 2px;padding-left:3px;padding-right:0}.cke_hc .cke_toolgroup{margin-right:5px;margin-bottom:5px}.cke_hc.cke_rtl .cke_toolgroup{margin-right:0;margin-left:5px}a.cke_button{display:inline-block;height:18px;padding:4px 6px;outline:0;cursor:default;float:left;border:0;position:relative}.cke_rtl a.cke_button{float:right}.cke_hc a.cke_button{border:1px solid black;padding:3px 5px;margin:0 3px 5px 0}.cke_hc.cke_rtl a.cke_button{margin:0 0 5px 3px}a.cke_button_on{background:#fff;border:1px #bcbcbc solid;padding:3px 5px}a.cke_button_off:hover,a.cke_button_off:focus,a.cke_button_off:active{background:#e5e5e5;border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active{background:#e5e5e5;border:3px solid #000;padding:1px 3px}a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{border:0;padding:4px 6px;background-color:transparent}a.cke_button_disabled:focus{border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_disabled:hover,.cke_hc a.cke_button_disabled:focus,.cke_hc a.cke_button_disabled:active{border:1px solid #acacac;padding:3px 5px;margin:0 3px 5px 0}.cke_hc a.cke_button_disabled:focus{border:3px solid #000;padding:1px 3px}.cke_hc.cke_rtl a.cke_button_disabled:hover,.cke_hc.cke_rtl a.cke_button_disabled:focus,.cke_hc.cke_rtl a.cke_button_disabled:active{margin:0 0 5px 3px}a.cke_button_disabled .cke_button_icon,a.cke_button_disabled .cke_button_arrow{opacity:.3}.cke_hc a.cke_button_disabled{border-color:#acacac}.cke_hc a.cke_button_disabled .cke_button_icon,.cke_hc a.cke_button_disabled .cke_button_label{opacity:.5}.cke_toolgroup a.cke_button:last-child:after,.cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:0;right:-3px}.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-right:0;right:auto;border-left:1px solid #bcbcbc;top:0;left:-3px}.cke_hc .cke_toolgroup a.cke_button:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-color:#000;top:0;right:-7px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{top:0;right:auto;left:-7px}.cke_toolgroup a.cke_button:hover:last-child:after,.cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:-4px}.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:auto;left:-4px}.cke_hc .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:-9px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:auto;left:-9px}.cke_toolbar.cke_toolbar_last .cke_toolgroup a.cke_button:last-child:after{content:none;border:0;width:0;height:0}.cke_button_icon{cursor:inherit;background-repeat:no-repeat;margin-top:1px;width:16px;height:16px;float:left;display:inline-block}.cke_rtl .cke_button_icon{float:right}.cke_hc .cke_button_icon{display:none}.cke_button_label{display:none;padding-left:3px;margin-top:1px;line-height:17px;vertical-align:middle;float:left;cursor:default;color:#484848}.cke_rtl .cke_button_label{padding-right:3px;padding-left:0;float:right}.cke_hc .cke_button_label{padding:0;display:inline-block;font-size:12px}.cke_button_arrow{display:inline-block;margin:8px 0 0 1px;width:0;height:0;cursor:default;vertical-align:top;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_rtl .cke_button_arrow{margin-right:5px;margin-left:0}.cke_hc .cke_button_arrow{font-size:10px;margin:3px 0 0 3px;width:auto;border:0}.cke_toolbar_separator{float:left;background-color:#bcbcbc;margin:4px 2px 0 2px;height:18px;width:1px}.cke_rtl .cke_toolbar_separator{float:right}.cke_hc .cke_toolbar_separator{background-color:#000;margin-left:2px;margin-right:5px;margin-bottom:9px}.cke_hc.cke_rtl .cke_toolbar_separator{margin-left:5px;margin-right:2px}.cke_toolbar_break{display:block;clear:left}.cke_rtl .cke_toolbar_break{clear:right}a.cke_toolbox_collapser{width:12px;height:11px;float:right;margin:11px 0 0;font-size:0;cursor:default;text-align:center;border:1px solid #bcbcbc}.cke_rtl .cke_toolbox_collapser{float:left}.cke_toolbox_collapser:hover{background:#e5e5e5}.cke_toolbox_collapser.cke_toolbox_collapser_min{margin:0 2px 4px}.cke_toolbox_collapser .cke_arrow{display:inline-block;height:0;width:0;font-size:0;margin-top:1px;border:3px solid transparent;border-bottom-color:#484848}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{margin-top:4px;border-bottom-color:transparent;border-top-color:#484848}.cke_hc .cke_toolbox_collapser .cke_arrow{font-size:8px;width:auto;border:0;margin-top:0}.cke_menuitem span{cursor:default}.cke_menubutton{display:block}.cke_hc .cke_menubutton{padding:2px}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:#e9e9e9;display:block;outline:1px dotted}.cke_menubutton:hover{outline:0}.cke_hc .cke_menubutton:hover,.cke_hc .cke_menubutton:focus,.cke_hc .cke_menubutton:active{border:2px solid;padding:0}.cke_menubutton_disabled:hover,.cke_menubutton_disabled:focus,.cke_menubutton_disabled:active{background-color:transparent;outline:0}.cke_menubutton_inner{display:table-row}.cke_menubutton_icon,.cke_menubutton_label,.cke_menuarrow{display:table-cell}.cke_menubutton_icon{background-color:#f8f8f8;padding:6px 4px}.cke_hc .cke_menubutton_icon{height:16px;width:0;padding:4px 0}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:#e9e9e9}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:#f8f8f8;outline:0}.cke_menuitem .cke_menubutton_on{background-color:#e9e9e9;border:1px solid #dedede;outline:0}.cke_menubutton_on .cke_menubutton_icon{padding-right:3px;background-color:#e9e9e9}.cke_menubutton_label{padding:0 5px;background-color:transparent;width:100%;vertical-align:middle}.cke_menubutton_shortcut{color:#979797}.cke_menubutton_disabled .cke_menubutton_label{opacity:.3;filter:alpha(opacity=30)}.cke_panel_frame .cke_menubutton_label{display:none}.cke_menuseparator{background-color:#d1d1d1;height:1px}.cke_menuarrow{background:transparent url(images/arrow.png) no-repeat 0 10px;padding:0 5px}.cke_rtl .cke_menuarrow{background-position:5px -13px;background-repeat:no-repeat}.cke_hc .cke_menuarrow{background-image:none}.cke_menuarrow span{display:none}.cke_hc .cke_menuarrow span{vertical-align:middle;display:inline}.cke_combo{display:inline-block;float:left;position:relative;margin-bottom:5px}.cke_rtl .cke_combo{float:right}.cke_hc .cke_combo{margin-top:1px;margin-bottom:10px}.cke_combo:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:5px;top:0;right:0}.cke_rtl .cke_combo:after{border-right:0;border-left:1px solid #bcbcbc;right:auto;left:0}.cke_hc .cke_combo:after{border-color:#000}a.cke_combo_button{cursor:default;display:inline-block;float:left;margin:0;padding:1px}.cke_rtl a.cke_combo_button{float:right}.cke_hc a.cke_combo_button{padding:4px}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:hover,.cke_combo_off a.cke_combo_button:focus,.cke_combo_off a.cke_combo_button:active{background:#e5e5e5;border:1px solid #bcbcbc;padding:0 0 0 1px;margin-left:-1px}.cke_combo_off a.cke_combo_button:focus{outline:0}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:active{background:#fff}.cke_rtl .cke_combo_on a.cke_combo_button,.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:0 1px 0 0;margin-left:0;margin-right:-1px}.cke_hc .cke_combo_on a.cke_combo_button,.cke_hc .cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_combo_off a.cke_combo_button:active{border:3px solid #000;padding:1px 1px 1px 2px}.cke_hc.cke_rtl .cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:1px 2px 1px 1px}.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 0 0 3px;margin-left:-3px}.cke_rtl .cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 3px 0 0;margin-left:0;margin-right:-3px}.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 1px 1px 7px;margin-left:-6px}.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 7px 1px 1px;margin-left:0;margin-right:-6px}.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0;margin:0}.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px;margin:0}.cke_toolbar .cke_combo+.cke_toolbar_end,.cke_toolbar .cke_combo+.cke_toolgroup{margin-right:0;margin-left:2px}.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:2px}.cke_hc .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:5px}.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:5px}.cke_toolbar.cke_toolbar_last .cke_combo:nth-last-child(-n+2):after{content:none;border:0;width:0;height:0}.cke_combo_text{line-height:26px;padding-left:10px;text-overflow:ellipsis;overflow:hidden;float:left;cursor:default;color:#484848;width:60px}.cke_rtl .cke_combo_text{float:right;text-align:right;padding-left:0;padding-right:10px}.cke_hc .cke_combo_text{line-height:18px;font-size:12px}.cke_combo_open{cursor:default;display:inline-block;font-size:0;height:19px;line-height:17px;margin:1px 10px 1px;width:5px}.cke_hc .cke_combo_open{height:12px}.cke_combo_arrow{cursor:default;margin:11px 0 0;float:left;height:0;width:0;font-size:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_hc .cke_combo_arrow{font-size:10px;width:auto;border:0;margin-top:3px}.cke_combo_label{display:none;float:left;line-height:26px;vertical-align:top;margin-right:5px}.cke_rtl .cke_combo_label{float:right;margin-left:5px;margin-right:0}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{opacity:.3}.cke_path{float:left;margin:-2px 0 2px}a.cke_path_item,span.cke_path_empty{display:inline-block;float:left;padding:3px 4px;margin-right:2px;cursor:default;text-decoration:none;outline:0;border:0;color:#484848;font-weight:bold;font-size:11px}.cke_rtl .cke_path,.cke_rtl .cke_path_item,.cke_rtl .cke_path_empty{float:right}a.cke_path_item:hover,a.cke_path_item:focus,a.cke_path_item:active{background-color:#e5e5e5}.cke_hc a.cke_path_item:hover,.cke_hc a.cke_path_item:focus,.cke_hc a.cke_path_item:active{border:2px solid;padding:1px 2px}.cke_button__source_label,.cke_button__sourcedialog_label{display:inline}.cke_combopanel__fontsize{width:135px}textarea.cke_source{font-family:'Courier New',Monospace;font-size:small;background-color:#fff;white-space:pre-wrap;border:0;padding:0;margin:0;display:block}.cke_wysiwyg_frame,.cke_wysiwyg_div{background-color:#fff}.cke_notifications_area{pointer-events:none}.cke_notification{pointer-events:auto;position:relative;margin:10px;width:300px;color:white;text-align:center;opacity:.95;filter:alpha(opacity = 95);-webkit-animation:fadeIn .7s;animation:fadeIn .7s}.cke_notification_message a{color:#12306f}@-webkit-keyframes fadeIn{from{opacity:.4}to{opacity:.95}}@keyframes fadeIn{from{opacity:.4}to{opacity:.95}}.cke_notification_success{background:#72b572;border:1px solid #63a563}.cke_notification_warning{background:#c83939;border:1px solid #902b2b}.cke_notification_info{background:#2e9ad0;border:1px solid #0f74a8}.cke_notification_info span.cke_notification_progress{background-color:#0f74a8;display:block;padding:0;margin:0;height:100%;overflow:hidden;position:absolute;z-index:1}.cke_notification_message{position:relative;margin:4px 23px 3px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;z-index:4;text-overflow:ellipsis;overflow:hidden}.cke_notification_close{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:20px;width:20px;top:1px;right:1px;padding:0;margin:0;z-index:5;opacity:.6;filter:alpha(opacity = 60)}.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_notification_close span{display:none}.cke_notification_warning a.cke_notification_close{opacity:.8;filter:alpha(opacity = 80)}.cke_notification_warning a.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_chrome{visibility:inherit}.cke_voice_label{display:none}legend.cke_voice_label{display:none}.cke_button__about_icon{background:url(icons.png?t=H0CF) no-repeat 0 -0px!important}.cke_button__bold_icon{background:url(icons.png?t=H0CF) no-repeat 0 -24px!important}.cke_button__italic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -48px!important}.cke_button__strike_icon{background:url(icons.png?t=H0CF) no-repeat 0 -72px!important}.cke_button__subscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -96px!important}.cke_button__superscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -120px!important}.cke_button__underline_icon{background:url(icons.png?t=H0CF) no-repeat 0 -144px!important}.cke_button__bidiltr_icon{background:url(icons.png?t=H0CF) no-repeat 0 -168px!important}.cke_button__bidirtl_icon{background:url(icons.png?t=H0CF) no-repeat 0 -192px!important}.cke_button__blockquote_icon{background:url(icons.png?t=H0CF) no-repeat 0 -216px!important}.cke_rtl .cke_button__copy_icon,.cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -240px!important}.cke_ltr .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -264px!important}.cke_rtl .cke_button__cut_icon,.cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -288px!important}.cke_ltr .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -312px!important}.cke_rtl .cke_button__paste_icon,.cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -336px!important}.cke_ltr .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -360px!important}.cke_button__codesnippet_icon{background:url(icons.png?t=H0CF) no-repeat 0 -384px!important}.cke_button__bgcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -408px!important}.cke_button__textcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -432px!important}.cke_button__copyformatting_icon{background:url(icons.png?t=H0CF) no-repeat 0 -456px!important}.cke_button__creatediv_icon{background:url(icons.png?t=H0CF) no-repeat 0 -480px!important}.cke_rtl .cke_button__docprops_icon,.cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -504px!important}.cke_ltr .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -528px!important}.cke_button__embed_icon{background:url(icons.png?t=H0CF) no-repeat 0 -552px!important}.cke_button__embedsemantic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -576px!important}.cke_rtl .cke_button__find_icon,.cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -600px!important}.cke_ltr .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -624px!important}.cke_button__replace_icon{background:url(icons.png?t=H0CF) no-repeat 0 -648px!important}.cke_button__flash_icon{background:url(icons.png?t=H0CF) no-repeat 0 -672px!important}.cke_button__button_icon{background:url(icons.png?t=H0CF) no-repeat 0 -696px!important}.cke_button__checkbox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -720px!important}.cke_button__form_icon{background:url(icons.png?t=H0CF) no-repeat 0 -744px!important}.cke_button__hiddenfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -768px!important}.cke_button__imagebutton_icon{background:url(icons.png?t=H0CF) no-repeat 0 -792px!important}.cke_button__radio_icon{background:url(icons.png?t=H0CF) no-repeat 0 -816px!important}.cke_rtl .cke_button__select_icon,.cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -840px!important}.cke_ltr .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -864px!important}.cke_rtl .cke_button__textarea_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -888px!important}.cke_ltr .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -912px!important}.cke_rtl .cke_button__textfield_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -936px!important}.cke_ltr .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -960px!important}.cke_button__horizontalrule_icon{background:url(icons.png?t=H0CF) no-repeat 0 -984px!important}.cke_button__iframe_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1008px!important}.cke_button__image_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1032px!important}.cke_rtl .cke_button__indent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1056px!important}.cke_ltr .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1080px!important}.cke_rtl .cke_button__outdent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1104px!important}.cke_ltr .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1128px!important}.cke_button__justifyblock_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1152px!important}.cke_button__justifycenter_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1176px!important}.cke_button__justifyleft_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1200px!important}.cke_button__justifyright_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1224px!important}.cke_button__language_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1248px!important}.cke_rtl .cke_button__anchor_icon,.cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1272px!important}.cke_ltr .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1296px!important}.cke_button__link_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1320px!important}.cke_button__unlink_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1344px!important}.cke_rtl .cke_button__bulletedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1368px!important}.cke_ltr .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1392px!important}.cke_rtl .cke_button__numberedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1416px!important}.cke_ltr .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1440px!important}.cke_button__mathjax_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1464px!important}.cke_button__maximize_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1488px!important}.cke_rtl .cke_button__newpage_icon,.cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1512px!important}.cke_ltr .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1536px!important}.cke_rtl .cke_button__pagebreak_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1560px!important}.cke_ltr .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1584px!important}.cke_rtl .cke_button__pastefromword_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1608px!important}.cke_ltr .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1632px!important}.cke_rtl .cke_button__pastetext_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1656px!important}.cke_ltr .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1680px!important}.cke_button__placeholder_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1704px!important}.cke_rtl .cke_button__preview_icon,.cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1728px!important}.cke_ltr .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1752px!important}.cke_button__print_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1776px!important}.cke_button__removeformat_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1800px!important}.cke_button__save_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1824px!important}.cke_button__scayt_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1848px!important}.cke_button__selectall_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1872px!important}.cke_rtl .cke_button__showblocks_icon,.cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1896px!important}.cke_ltr .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1920px!important}.cke_button__smiley_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1944px!important}.cke_rtl .cke_button__source_icon,.cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1968px!important}.cke_ltr .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1992px!important}.cke_rtl .cke_button__sourcedialog_icon,.cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2016px!important}.cke_ltr .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2040px!important}.cke_button__specialchar_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2064px!important}.cke_button__table_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2088px!important}.cke_rtl .cke_button__templates_icon,.cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2112px!important}.cke_ltr .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2136px!important}.cke_button__uicolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2160px!important}.cke_rtl .cke_button__redo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2184px!important}.cke_ltr .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2208px!important}.cke_rtl .cke_button__undo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2232px!important}.cke_ltr .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2256px!important}.cke_button__simplebox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2280px!important}.cke_button__spellchecker_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2304px!important}.cke_hidpi .cke_button__about_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -0px!important;background-size:16px!important}.cke_hidpi .cke_button__bold_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -24px!important;background-size:16px!important}.cke_hidpi .cke_button__italic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -48px!important;background-size:16px!important}.cke_hidpi .cke_button__strike_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -72px!important;background-size:16px!important}.cke_hidpi .cke_button__subscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -96px!important;background-size:16px!important}.cke_hidpi .cke_button__superscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -120px!important;background-size:16px!important}.cke_hidpi .cke_button__underline_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -144px!important;background-size:16px!important}.cke_hidpi .cke_button__bidiltr_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -168px!important;background-size:16px!important}.cke_hidpi .cke_button__bidirtl_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -192px!important;background-size:16px!important}.cke_hidpi .cke_button__blockquote_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -216px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__copy_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -240px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__copy_icon,.cke_ltr.cke_hidpi .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -264px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__cut_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -288px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__cut_icon,.cke_ltr.cke_hidpi .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -312px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__paste_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -336px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__paste_icon,.cke_ltr.cke_hidpi .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -360px!important;background-size:16px!important}.cke_hidpi .cke_button__codesnippet_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -384px!important;background-size:16px!important}.cke_hidpi .cke_button__bgcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -408px!important;background-size:16px!important}.cke_hidpi .cke_button__textcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -432px!important;background-size:16px!important}.cke_hidpi .cke_button__copyformatting_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -456px!important;background-size:16px!important}.cke_hidpi .cke_button__creatediv_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -480px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__docprops_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -504px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__docprops_icon,.cke_ltr.cke_hidpi .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -528px!important;background-size:16px!important}.cke_hidpi .cke_button__embed_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -552px!important;background-size:16px!important}.cke_hidpi .cke_button__embedsemantic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -576px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__find_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -600px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__find_icon,.cke_ltr.cke_hidpi .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -624px!important;background-size:16px!important}.cke_hidpi .cke_button__replace_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -648px!important;background-size:16px!important}.cke_hidpi .cke_button__flash_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -672px!important;background-size:16px!important}.cke_hidpi .cke_button__button_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -696px!important;background-size:16px!important}.cke_hidpi .cke_button__checkbox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -720px!important;background-size:16px!important}.cke_hidpi .cke_button__form_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -744px!important;background-size:16px!important}.cke_hidpi .cke_button__hiddenfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -768px!important;background-size:16px!important}.cke_hidpi .cke_button__imagebutton_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -792px!important;background-size:16px!important}.cke_hidpi .cke_button__radio_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -816px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__select_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -840px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__select_icon,.cke_ltr.cke_hidpi .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -864px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textarea_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -888px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textarea_icon,.cke_ltr.cke_hidpi .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -912px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textfield_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -936px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textfield_icon,.cke_ltr.cke_hidpi .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -960px!important;background-size:16px!important}.cke_hidpi .cke_button__horizontalrule_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -984px!important;background-size:16px!important}.cke_hidpi .cke_button__iframe_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1008px!important;background-size:16px!important}.cke_hidpi .cke_button__image_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1032px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__indent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1056px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__indent_icon,.cke_ltr.cke_hidpi .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1080px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__outdent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1104px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__outdent_icon,.cke_ltr.cke_hidpi .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1128px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyblock_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1152px!important;background-size:16px!important}.cke_hidpi .cke_button__justifycenter_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1176px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyleft_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1200px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyright_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1224px!important;background-size:16px!important}.cke_hidpi .cke_button__language_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1248px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__anchor_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1272px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__anchor_icon,.cke_ltr.cke_hidpi .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1296px!important;background-size:16px!important}.cke_hidpi .cke_button__link_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1320px!important;background-size:16px!important}.cke_hidpi .cke_button__unlink_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1344px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__bulletedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1368px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__bulletedlist_icon,.cke_ltr.cke_hidpi .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1392px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__numberedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1416px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__numberedlist_icon,.cke_ltr.cke_hidpi .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1440px!important;background-size:16px!important}.cke_hidpi .cke_button__mathjax_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1464px!important;background-size:16px!important}.cke_hidpi .cke_button__maximize_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1488px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__newpage_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1512px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__newpage_icon,.cke_ltr.cke_hidpi .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1536px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pagebreak_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1560px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pagebreak_icon,.cke_ltr.cke_hidpi .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1584px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastefromword_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1608px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastefromword_icon,.cke_ltr.cke_hidpi .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1632px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastetext_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1656px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastetext_icon,.cke_ltr.cke_hidpi .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1680px!important;background-size:16px!important}.cke_hidpi .cke_button__placeholder_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1704px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__preview_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1728px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__preview_icon,.cke_ltr.cke_hidpi .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1752px!important;background-size:16px!important}.cke_hidpi .cke_button__print_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1776px!important;background-size:16px!important}.cke_hidpi .cke_button__removeformat_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1800px!important;background-size:16px!important}.cke_hidpi .cke_button__save_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1824px!important;background-size:16px!important}.cke_hidpi .cke_button__scayt_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1848px!important;background-size:16px!important}.cke_hidpi .cke_button__selectall_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1872px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__showblocks_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1896px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__showblocks_icon,.cke_ltr.cke_hidpi .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1920px!important;background-size:16px!important}.cke_hidpi .cke_button__smiley_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1944px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__source_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1968px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__source_icon,.cke_ltr.cke_hidpi .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1992px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__sourcedialog_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2016px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__sourcedialog_icon,.cke_ltr.cke_hidpi .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2040px!important;background-size:16px!important}.cke_hidpi .cke_button__specialchar_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2064px!important;background-size:16px!important}.cke_hidpi .cke_button__table_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2088px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__templates_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2112px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__templates_icon,.cke_ltr.cke_hidpi .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2136px!important;background-size:16px!important}.cke_hidpi .cke_button__uicolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2160px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__redo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2184px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__redo_icon,.cke_ltr.cke_hidpi .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2208px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__undo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2232px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__undo_icon,.cke_ltr.cke_hidpi .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2256px!important;background-size:16px!important}.cke_hidpi .cke_button__simplebox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -4560px!important}.cke_hidpi .cke_button__spellchecker_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2304px!important;background-size:16px!important}.cke_bottom{padding-bottom:3px}.cke_combo_text{margin-bottom:-1px;margin-top:1px}"; });
define('text!modules/home/home.html', ['module'], function(module) { module.exports = "<template>\r\n    <style>\r\n        .navbar-inverse {\r\n            color: ${config.SUBMENU_COLOR};\r\n            background-color:${config.SUBMENU_BACKGROUND}\r\n        }\r\n        .navbar-inverse .navbar-nav>.active>a, .navbar-inverse .navbar-nav>.active>a:hover, .navbar-inverse .navbar-nav>.active>a:focus {\r\n            color: ${config.ACTIVE_SUBMENU_COLOR};\r\n            background-color:${config.SUBMENU_BACKGROUND}\r\n        }\r\n    </style>\r\n  <div class=\"${item.priority} textContainer banner\" repeat.for=\"item of siteinfo.siteArray | infoFilter:'SYST'\">\r\n      <h4 class=\"leftMargin\">${item.title}</h4>\r\n  </div>\r\n\r\n  <div class=\"parallax1\">\r\n    <div if.bind=\"config.HOME_WELCOME.length === 0\" class=\"pull-right topMargin rightMargin\">\r\n        <img src=\"/img/${config.UCC_PARALLAX_LOGO}\" width=\"300px\">\r\n    </div>\r\n     <div if.bind=\"config.HOME_WELCOME.length > 0\" class=\"caption\">\r\n      <span class=\"border\">${config.HOME_WELCOME}</span> \r\n    </div>\r\n </div>\r\n\r\n<div class=\"row center-text\" style=\"color: #777;background-color:white;text-align:center;padding:25px 80px;text-align: justify;\">\r\n       <compose view=\"./components/uccInformation.html\"></compose>\r\n</div>\r\n\r\n <div class=\"parallax1\"></div>\r\n\r\n <div class=\"row bigMarginTop\" style=\"color: #777;background-color:white;text-align:center;padding:50px 80px;text-align: justify;\">\r\n        <div class=\"col-lg-3 bigMarginTop\">\r\n            <h2 class=\"underline\">Useful Information</h2>\r\n            <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'DLNK'\">\r\n                <compose view=\"./components/newsItem.html\"></compose>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-5 bigMarginTop leftMargin\">\r\n            <h2 class=\"underline bottomMargin\">Useful Links</h2>\r\n            <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'OLNK'\">\r\n                <compose view=\"./components/homePageLinks.html\"></compose>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3 bigMarginTop leftMargin\">\r\n            <h2 class=\"underline\">UCC and UA News</h2>\r\n            <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'NEWS'\">\r\n                <compose view=\"./components/newsItem.html\"></compose>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n"; });
define('text!resources/editor/skins/moono-lisa/editor_ie.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_reset{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none}.cke_reset_all,.cke_reset_all *,.cke_reset_all a,.cke_reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none;border-collapse:collapse;font:normal normal normal 12px Arial,Helvetica,Tahoma,Verdana,Sans-Serif;color:#000;text-align:left;white-space:nowrap;cursor:auto;float:none}.cke_reset_all .cke_rtl *{text-align:right}.cke_reset_all iframe{vertical-align:inherit}.cke_reset_all textarea{white-space:pre-wrap}.cke_reset_all textarea,.cke_reset_all input[type=\"text\"],.cke_reset_all input[type=\"password\"]{cursor:text}.cke_reset_all textarea[disabled],.cke_reset_all input[type=\"text\"][disabled],.cke_reset_all input[type=\"password\"][disabled]{cursor:default}.cke_reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.cke_reset_all select{box-sizing:border-box}.cke_reset_all table{table-layout:auto}.cke_chrome{display:block;border:1px solid #d1d1d1;padding:0}.cke_inner{display:block;background:#fff;padding:0;-webkit-touch-callout:none}.cke_float{border:0}.cke_float .cke_inner{padding-bottom:0}.cke_top,.cke_contents,.cke_bottom{display:block;overflow:hidden}.cke_top{border-bottom:1px solid #d1d1d1;background:#f8f8f8;padding:6px 8px 2px;white-space:normal}.cke_float .cke_top{border:1px solid #d1d1d1}.cke_bottom{padding:6px 8px 2px;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_browser_ios .cke_contents{overflow-y:auto;-webkit-overflow-scrolling:touch}.cke_resizer{width:0;height:0;overflow:hidden;border-width:10px 10px 0 0;border-color:transparent #bcbcbc transparent transparent;border-style:dashed solid dashed dashed;font-size:0;vertical-align:bottom;margin-top:6px;margin-bottom:2px}.cke_hc .cke_resizer{font-size:15px;width:auto;height:auto;border-width:0}.cke_resizer_ltr{cursor:se-resize;float:right;margin-right:-4px}.cke_resizer_rtl{border-width:10px 0 0 10px;border-color:transparent transparent transparent #bcbcbc;border-style:dashed dashed dashed solid;cursor:sw-resize;float:left;margin-left:-4px;right:auto}.cke_wysiwyg_div{display:block;height:100%;overflow:auto;padding:0 8px;outline-style:none;box-sizing:border-box}.cke_panel{visibility:visible;width:120px;height:100px;overflow:hidden;background-color:#fff;border:1px solid #d1d1d1}.cke_menu_panel{padding:0;margin:0}.cke_combopanel{width:150px;height:170px}.cke_panel_frame{width:100%;height:100%;font-size:12px;overflow:auto;overflow-x:hidden}.cke_panel_container{overflow-y:auto;overflow-x:hidden}.cke_panel_block:focus{outline:0}.cke_panel_list{margin:0;padding:0;list-style-type:none;white-space:nowrap}.cke_panel_listItem{margin:0;padding:0}.cke_panel_listItem a{padding:6px 7px;display:block;color:inherit!important;text-decoration:none;overflow:hidden;text-overflow:ellipsis}.cke_hc .cke_panel_listItem a{border-style:none}.cke_panel_listItem.cke_selected a,.cke_panel_listItem a:hover,.cke_panel_listItem a:focus,.cke_panel_listItem a:active{background-color:#e9e9e9}.cke_panel_listItem a:focus{outline:1px dotted #000}.cke_hc .cke_panel_listItem a:hover,.cke_hc .cke_panel_listItem a:focus,.cke_hc .cke_panel_listItem a:active{border:2px solid;padding:4px 5px}.cke_panel_listItem p,.cke_panel_listItem h1,.cke_panel_listItem h2,.cke_panel_listItem h3,.cke_panel_listItem h4,.cke_panel_listItem h5,.cke_panel_listItem h6,.cke_panel_listItem pre{margin-top:0;margin-bottom:0}.cke_panel_grouptitle{cursor:default;font-size:11px;font-weight:bold;white-space:nowrap;margin:0;padding:6px 6px 7px 6px;color:#484848;border-bottom:1px solid #d1d1d1;background:#f8f8f8}.cke_colorblock{padding:10px;font-size:11px;font-family:'Microsoft Sans Serif',Tahoma,Arial,Verdana,Sans-Serif}.cke_colorblock,.cke_colorblock a{text-decoration:none;color:#000}a.cke_colorbox{padding:2px;float:left;width:20px;height:20px}.cke_rtl a.cke_colorbox{float:right}a:hover.cke_colorbox,a:focus.cke_colorbox,a:active.cke_colorbox{outline:0;padding:0;border:2px solid #139ff7}a:hover.cke_colorbox{border-color:#bcbcbc}span.cke_colorbox{width:20px;height:20px;float:left}.cke_rtl span.cke_colorbox{float:right}a.cke_colorauto,a.cke_colormore{border:#fff 1px solid;padding:3px;display:block;cursor:pointer}a.cke_colorauto{padding:0;border:1px solid transparent;margin-bottom:6px;height:26px;line-height:26px}a.cke_colormore{margin-top:10px;height:20px;line-height:19px}a:hover.cke_colorauto,a:hover.cke_colormore,a:focus.cke_colorauto,a:focus.cke_colormore,a:active.cke_colorauto,a:active.cke_colormore{outline:0;border:#139ff7 1px solid;background-color:#f8f8f8}a:hover.cke_colorauto,a:hover.cke_colormore{border-color:#bcbcbc}.cke_colorauto span.cke_colorbox{width:18px;height:18px;border:1px solid #808080;margin-left:1px;margin-top:3px}.cke_rtl .cke_colorauto span.cke_colorbox{margin-left:0;margin-right:1px}span.cke_colorbox[style*=\"#ffffff\"],span.cke_colorbox[style*=\"#FFFFFF\"],span.cke_colorbox[style=\"background-color:#fff\"],span.cke_colorbox[style=\"background-color:#FFF\"],span.cke_colorbox[style*=\"rgb(255,255,255)\"],span.cke_colorbox[style*=\"rgb(255, 255, 255)\"]{border:1px solid #808080;width:18px;height:18px}.cke_toolbar{float:left}.cke_rtl .cke_toolbar{float:right}.cke_toolgroup{border:0;float:left;margin:1px 2px 6px 0;padding-right:3px}.cke_rtl .cke_toolgroup{float:right;margin:1px 0 6px 2px;padding-left:3px;padding-right:0}.cke_hc .cke_toolgroup{margin-right:5px;margin-bottom:5px}.cke_hc.cke_rtl .cke_toolgroup{margin-right:0;margin-left:5px}a.cke_button{display:inline-block;height:18px;padding:4px 6px;outline:0;cursor:default;float:left;border:0;position:relative}.cke_rtl a.cke_button{float:right}.cke_hc a.cke_button{border:1px solid black;padding:3px 5px;margin:0 3px 5px 0}.cke_hc.cke_rtl a.cke_button{margin:0 0 5px 3px}a.cke_button_on{background:#fff;border:1px #bcbcbc solid;padding:3px 5px}a.cke_button_off:hover,a.cke_button_off:focus,a.cke_button_off:active{background:#e5e5e5;border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active{background:#e5e5e5;border:3px solid #000;padding:1px 3px}a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{border:0;padding:4px 6px;background-color:transparent}a.cke_button_disabled:focus{border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_disabled:hover,.cke_hc a.cke_button_disabled:focus,.cke_hc a.cke_button_disabled:active{border:1px solid #acacac;padding:3px 5px;margin:0 3px 5px 0}.cke_hc a.cke_button_disabled:focus{border:3px solid #000;padding:1px 3px}.cke_hc.cke_rtl a.cke_button_disabled:hover,.cke_hc.cke_rtl a.cke_button_disabled:focus,.cke_hc.cke_rtl a.cke_button_disabled:active{margin:0 0 5px 3px}a.cke_button_disabled .cke_button_icon,a.cke_button_disabled .cke_button_arrow{opacity:.3}.cke_hc a.cke_button_disabled{border-color:#acacac}.cke_hc a.cke_button_disabled .cke_button_icon,.cke_hc a.cke_button_disabled .cke_button_label{opacity:.5}.cke_toolgroup a.cke_button:last-child:after,.cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:0;right:-3px}.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-right:0;right:auto;border-left:1px solid #bcbcbc;top:0;left:-3px}.cke_hc .cke_toolgroup a.cke_button:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-color:#000;top:0;right:-7px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{top:0;right:auto;left:-7px}.cke_toolgroup a.cke_button:hover:last-child:after,.cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:-4px}.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:auto;left:-4px}.cke_hc .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:-9px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:auto;left:-9px}.cke_toolbar.cke_toolbar_last .cke_toolgroup a.cke_button:last-child:after{content:none;border:0;width:0;height:0}.cke_button_icon{cursor:inherit;background-repeat:no-repeat;margin-top:1px;width:16px;height:16px;float:left;display:inline-block}.cke_rtl .cke_button_icon{float:right}.cke_hc .cke_button_icon{display:none}.cke_button_label{display:none;padding-left:3px;margin-top:1px;line-height:17px;vertical-align:middle;float:left;cursor:default;color:#484848}.cke_rtl .cke_button_label{padding-right:3px;padding-left:0;float:right}.cke_hc .cke_button_label{padding:0;display:inline-block;font-size:12px}.cke_button_arrow{display:inline-block;margin:8px 0 0 1px;width:0;height:0;cursor:default;vertical-align:top;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_rtl .cke_button_arrow{margin-right:5px;margin-left:0}.cke_hc .cke_button_arrow{font-size:10px;margin:3px 0 0 3px;width:auto;border:0}.cke_toolbar_separator{float:left;background-color:#bcbcbc;margin:4px 2px 0 2px;height:18px;width:1px}.cke_rtl .cke_toolbar_separator{float:right}.cke_hc .cke_toolbar_separator{background-color:#000;margin-left:2px;margin-right:5px;margin-bottom:9px}.cke_hc.cke_rtl .cke_toolbar_separator{margin-left:5px;margin-right:2px}.cke_toolbar_break{display:block;clear:left}.cke_rtl .cke_toolbar_break{clear:right}a.cke_toolbox_collapser{width:12px;height:11px;float:right;margin:11px 0 0;font-size:0;cursor:default;text-align:center;border:1px solid #bcbcbc}.cke_rtl .cke_toolbox_collapser{float:left}.cke_toolbox_collapser:hover{background:#e5e5e5}.cke_toolbox_collapser.cke_toolbox_collapser_min{margin:0 2px 4px}.cke_toolbox_collapser .cke_arrow{display:inline-block;height:0;width:0;font-size:0;margin-top:1px;border:3px solid transparent;border-bottom-color:#484848}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{margin-top:4px;border-bottom-color:transparent;border-top-color:#484848}.cke_hc .cke_toolbox_collapser .cke_arrow{font-size:8px;width:auto;border:0;margin-top:0}.cke_menuitem span{cursor:default}.cke_menubutton{display:block}.cke_hc .cke_menubutton{padding:2px}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:#e9e9e9;display:block;outline:1px dotted}.cke_menubutton:hover{outline:0}.cke_hc .cke_menubutton:hover,.cke_hc .cke_menubutton:focus,.cke_hc .cke_menubutton:active{border:2px solid;padding:0}.cke_menubutton_disabled:hover,.cke_menubutton_disabled:focus,.cke_menubutton_disabled:active{background-color:transparent;outline:0}.cke_menubutton_inner{display:table-row}.cke_menubutton_icon,.cke_menubutton_label,.cke_menuarrow{display:table-cell}.cke_menubutton_icon{background-color:#f8f8f8;padding:6px 4px}.cke_hc .cke_menubutton_icon{height:16px;width:0;padding:4px 0}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:#e9e9e9}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:#f8f8f8;outline:0}.cke_menuitem .cke_menubutton_on{background-color:#e9e9e9;border:1px solid #dedede;outline:0}.cke_menubutton_on .cke_menubutton_icon{padding-right:3px;background-color:#e9e9e9}.cke_menubutton_label{padding:0 5px;background-color:transparent;width:100%;vertical-align:middle}.cke_menubutton_shortcut{color:#979797}.cke_menubutton_disabled .cke_menubutton_label{opacity:.3;filter:alpha(opacity=30)}.cke_panel_frame .cke_menubutton_label{display:none}.cke_menuseparator{background-color:#d1d1d1;height:1px}.cke_menuarrow{background:transparent url(images/arrow.png) no-repeat 0 10px;padding:0 5px}.cke_rtl .cke_menuarrow{background-position:5px -13px;background-repeat:no-repeat}.cke_hc .cke_menuarrow{background-image:none}.cke_menuarrow span{display:none}.cke_hc .cke_menuarrow span{vertical-align:middle;display:inline}.cke_combo{display:inline-block;float:left;position:relative;margin-bottom:5px}.cke_rtl .cke_combo{float:right}.cke_hc .cke_combo{margin-top:1px;margin-bottom:10px}.cke_combo:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:5px;top:0;right:0}.cke_rtl .cke_combo:after{border-right:0;border-left:1px solid #bcbcbc;right:auto;left:0}.cke_hc .cke_combo:after{border-color:#000}a.cke_combo_button{cursor:default;display:inline-block;float:left;margin:0;padding:1px}.cke_rtl a.cke_combo_button{float:right}.cke_hc a.cke_combo_button{padding:4px}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:hover,.cke_combo_off a.cke_combo_button:focus,.cke_combo_off a.cke_combo_button:active{background:#e5e5e5;border:1px solid #bcbcbc;padding:0 0 0 1px;margin-left:-1px}.cke_combo_off a.cke_combo_button:focus{outline:0}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:active{background:#fff}.cke_rtl .cke_combo_on a.cke_combo_button,.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:0 1px 0 0;margin-left:0;margin-right:-1px}.cke_hc .cke_combo_on a.cke_combo_button,.cke_hc .cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_combo_off a.cke_combo_button:active{border:3px solid #000;padding:1px 1px 1px 2px}.cke_hc.cke_rtl .cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:1px 2px 1px 1px}.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 0 0 3px;margin-left:-3px}.cke_rtl .cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 3px 0 0;margin-left:0;margin-right:-3px}.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 1px 1px 7px;margin-left:-6px}.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 7px 1px 1px;margin-left:0;margin-right:-6px}.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0;margin:0}.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px;margin:0}.cke_toolbar .cke_combo+.cke_toolbar_end,.cke_toolbar .cke_combo+.cke_toolgroup{margin-right:0;margin-left:2px}.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:2px}.cke_hc .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:5px}.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:5px}.cke_toolbar.cke_toolbar_last .cke_combo:nth-last-child(-n+2):after{content:none;border:0;width:0;height:0}.cke_combo_text{line-height:26px;padding-left:10px;text-overflow:ellipsis;overflow:hidden;float:left;cursor:default;color:#484848;width:60px}.cke_rtl .cke_combo_text{float:right;text-align:right;padding-left:0;padding-right:10px}.cke_hc .cke_combo_text{line-height:18px;font-size:12px}.cke_combo_open{cursor:default;display:inline-block;font-size:0;height:19px;line-height:17px;margin:1px 10px 1px;width:5px}.cke_hc .cke_combo_open{height:12px}.cke_combo_arrow{cursor:default;margin:11px 0 0;float:left;height:0;width:0;font-size:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_hc .cke_combo_arrow{font-size:10px;width:auto;border:0;margin-top:3px}.cke_combo_label{display:none;float:left;line-height:26px;vertical-align:top;margin-right:5px}.cke_rtl .cke_combo_label{float:right;margin-left:5px;margin-right:0}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{opacity:.3}.cke_path{float:left;margin:-2px 0 2px}a.cke_path_item,span.cke_path_empty{display:inline-block;float:left;padding:3px 4px;margin-right:2px;cursor:default;text-decoration:none;outline:0;border:0;color:#484848;font-weight:bold;font-size:11px}.cke_rtl .cke_path,.cke_rtl .cke_path_item,.cke_rtl .cke_path_empty{float:right}a.cke_path_item:hover,a.cke_path_item:focus,a.cke_path_item:active{background-color:#e5e5e5}.cke_hc a.cke_path_item:hover,.cke_hc a.cke_path_item:focus,.cke_hc a.cke_path_item:active{border:2px solid;padding:1px 2px}.cke_button__source_label,.cke_button__sourcedialog_label{display:inline}.cke_combopanel__fontsize{width:135px}textarea.cke_source{font-family:'Courier New',Monospace;font-size:small;background-color:#fff;white-space:pre-wrap;border:0;padding:0;margin:0;display:block}.cke_wysiwyg_frame,.cke_wysiwyg_div{background-color:#fff}.cke_notifications_area{pointer-events:none}.cke_notification{pointer-events:auto;position:relative;margin:10px;width:300px;color:white;text-align:center;opacity:.95;filter:alpha(opacity = 95);-webkit-animation:fadeIn .7s;animation:fadeIn .7s}.cke_notification_message a{color:#12306f}@-webkit-keyframes fadeIn{from{opacity:.4}to{opacity:.95}}@keyframes fadeIn{from{opacity:.4}to{opacity:.95}}.cke_notification_success{background:#72b572;border:1px solid #63a563}.cke_notification_warning{background:#c83939;border:1px solid #902b2b}.cke_notification_info{background:#2e9ad0;border:1px solid #0f74a8}.cke_notification_info span.cke_notification_progress{background-color:#0f74a8;display:block;padding:0;margin:0;height:100%;overflow:hidden;position:absolute;z-index:1}.cke_notification_message{position:relative;margin:4px 23px 3px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;z-index:4;text-overflow:ellipsis;overflow:hidden}.cke_notification_close{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:20px;width:20px;top:1px;right:1px;padding:0;margin:0;z-index:5;opacity:.6;filter:alpha(opacity = 60)}.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_notification_close span{display:none}.cke_notification_warning a.cke_notification_close{opacity:.8;filter:alpha(opacity = 80)}.cke_notification_warning a.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_chrome{visibility:inherit}.cke_voice_label{display:none}legend.cke_voice_label{display:none}.cke_button__about_icon{background:url(icons.png?t=H0CF) no-repeat 0 -0px!important}.cke_button__bold_icon{background:url(icons.png?t=H0CF) no-repeat 0 -24px!important}.cke_button__italic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -48px!important}.cke_button__strike_icon{background:url(icons.png?t=H0CF) no-repeat 0 -72px!important}.cke_button__subscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -96px!important}.cke_button__superscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -120px!important}.cke_button__underline_icon{background:url(icons.png?t=H0CF) no-repeat 0 -144px!important}.cke_button__bidiltr_icon{background:url(icons.png?t=H0CF) no-repeat 0 -168px!important}.cke_button__bidirtl_icon{background:url(icons.png?t=H0CF) no-repeat 0 -192px!important}.cke_button__blockquote_icon{background:url(icons.png?t=H0CF) no-repeat 0 -216px!important}.cke_rtl .cke_button__copy_icon,.cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -240px!important}.cke_ltr .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -264px!important}.cke_rtl .cke_button__cut_icon,.cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -288px!important}.cke_ltr .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -312px!important}.cke_rtl .cke_button__paste_icon,.cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -336px!important}.cke_ltr .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -360px!important}.cke_button__codesnippet_icon{background:url(icons.png?t=H0CF) no-repeat 0 -384px!important}.cke_button__bgcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -408px!important}.cke_button__textcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -432px!important}.cke_button__copyformatting_icon{background:url(icons.png?t=H0CF) no-repeat 0 -456px!important}.cke_button__creatediv_icon{background:url(icons.png?t=H0CF) no-repeat 0 -480px!important}.cke_rtl .cke_button__docprops_icon,.cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -504px!important}.cke_ltr .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -528px!important}.cke_button__embed_icon{background:url(icons.png?t=H0CF) no-repeat 0 -552px!important}.cke_button__embedsemantic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -576px!important}.cke_rtl .cke_button__find_icon,.cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -600px!important}.cke_ltr .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -624px!important}.cke_button__replace_icon{background:url(icons.png?t=H0CF) no-repeat 0 -648px!important}.cke_button__flash_icon{background:url(icons.png?t=H0CF) no-repeat 0 -672px!important}.cke_button__button_icon{background:url(icons.png?t=H0CF) no-repeat 0 -696px!important}.cke_button__checkbox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -720px!important}.cke_button__form_icon{background:url(icons.png?t=H0CF) no-repeat 0 -744px!important}.cke_button__hiddenfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -768px!important}.cke_button__imagebutton_icon{background:url(icons.png?t=H0CF) no-repeat 0 -792px!important}.cke_button__radio_icon{background:url(icons.png?t=H0CF) no-repeat 0 -816px!important}.cke_rtl .cke_button__select_icon,.cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -840px!important}.cke_ltr .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -864px!important}.cke_rtl .cke_button__textarea_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -888px!important}.cke_ltr .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -912px!important}.cke_rtl .cke_button__textfield_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -936px!important}.cke_ltr .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -960px!important}.cke_button__horizontalrule_icon{background:url(icons.png?t=H0CF) no-repeat 0 -984px!important}.cke_button__iframe_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1008px!important}.cke_button__image_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1032px!important}.cke_rtl .cke_button__indent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1056px!important}.cke_ltr .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1080px!important}.cke_rtl .cke_button__outdent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1104px!important}.cke_ltr .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1128px!important}.cke_button__justifyblock_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1152px!important}.cke_button__justifycenter_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1176px!important}.cke_button__justifyleft_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1200px!important}.cke_button__justifyright_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1224px!important}.cke_button__language_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1248px!important}.cke_rtl .cke_button__anchor_icon,.cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1272px!important}.cke_ltr .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1296px!important}.cke_button__link_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1320px!important}.cke_button__unlink_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1344px!important}.cke_rtl .cke_button__bulletedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1368px!important}.cke_ltr .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1392px!important}.cke_rtl .cke_button__numberedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1416px!important}.cke_ltr .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1440px!important}.cke_button__mathjax_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1464px!important}.cke_button__maximize_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1488px!important}.cke_rtl .cke_button__newpage_icon,.cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1512px!important}.cke_ltr .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1536px!important}.cke_rtl .cke_button__pagebreak_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1560px!important}.cke_ltr .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1584px!important}.cke_rtl .cke_button__pastefromword_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1608px!important}.cke_ltr .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1632px!important}.cke_rtl .cke_button__pastetext_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1656px!important}.cke_ltr .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1680px!important}.cke_button__placeholder_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1704px!important}.cke_rtl .cke_button__preview_icon,.cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1728px!important}.cke_ltr .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1752px!important}.cke_button__print_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1776px!important}.cke_button__removeformat_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1800px!important}.cke_button__save_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1824px!important}.cke_button__scayt_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1848px!important}.cke_button__selectall_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1872px!important}.cke_rtl .cke_button__showblocks_icon,.cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1896px!important}.cke_ltr .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1920px!important}.cke_button__smiley_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1944px!important}.cke_rtl .cke_button__source_icon,.cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1968px!important}.cke_ltr .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1992px!important}.cke_rtl .cke_button__sourcedialog_icon,.cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2016px!important}.cke_ltr .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2040px!important}.cke_button__specialchar_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2064px!important}.cke_button__table_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2088px!important}.cke_rtl .cke_button__templates_icon,.cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2112px!important}.cke_ltr .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2136px!important}.cke_button__uicolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2160px!important}.cke_rtl .cke_button__redo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2184px!important}.cke_ltr .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2208px!important}.cke_rtl .cke_button__undo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2232px!important}.cke_ltr .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2256px!important}.cke_button__simplebox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2280px!important}.cke_button__spellchecker_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2304px!important}.cke_hidpi .cke_button__about_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -0px!important;background-size:16px!important}.cke_hidpi .cke_button__bold_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -24px!important;background-size:16px!important}.cke_hidpi .cke_button__italic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -48px!important;background-size:16px!important}.cke_hidpi .cke_button__strike_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -72px!important;background-size:16px!important}.cke_hidpi .cke_button__subscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -96px!important;background-size:16px!important}.cke_hidpi .cke_button__superscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -120px!important;background-size:16px!important}.cke_hidpi .cke_button__underline_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -144px!important;background-size:16px!important}.cke_hidpi .cke_button__bidiltr_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -168px!important;background-size:16px!important}.cke_hidpi .cke_button__bidirtl_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -192px!important;background-size:16px!important}.cke_hidpi .cke_button__blockquote_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -216px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__copy_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -240px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__copy_icon,.cke_ltr.cke_hidpi .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -264px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__cut_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -288px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__cut_icon,.cke_ltr.cke_hidpi .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -312px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__paste_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -336px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__paste_icon,.cke_ltr.cke_hidpi .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -360px!important;background-size:16px!important}.cke_hidpi .cke_button__codesnippet_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -384px!important;background-size:16px!important}.cke_hidpi .cke_button__bgcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -408px!important;background-size:16px!important}.cke_hidpi .cke_button__textcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -432px!important;background-size:16px!important}.cke_hidpi .cke_button__copyformatting_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -456px!important;background-size:16px!important}.cke_hidpi .cke_button__creatediv_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -480px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__docprops_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -504px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__docprops_icon,.cke_ltr.cke_hidpi .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -528px!important;background-size:16px!important}.cke_hidpi .cke_button__embed_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -552px!important;background-size:16px!important}.cke_hidpi .cke_button__embedsemantic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -576px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__find_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -600px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__find_icon,.cke_ltr.cke_hidpi .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -624px!important;background-size:16px!important}.cke_hidpi .cke_button__replace_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -648px!important;background-size:16px!important}.cke_hidpi .cke_button__flash_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -672px!important;background-size:16px!important}.cke_hidpi .cke_button__button_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -696px!important;background-size:16px!important}.cke_hidpi .cke_button__checkbox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -720px!important;background-size:16px!important}.cke_hidpi .cke_button__form_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -744px!important;background-size:16px!important}.cke_hidpi .cke_button__hiddenfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -768px!important;background-size:16px!important}.cke_hidpi .cke_button__imagebutton_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -792px!important;background-size:16px!important}.cke_hidpi .cke_button__radio_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -816px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__select_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -840px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__select_icon,.cke_ltr.cke_hidpi .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -864px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textarea_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -888px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textarea_icon,.cke_ltr.cke_hidpi .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -912px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textfield_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -936px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textfield_icon,.cke_ltr.cke_hidpi .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -960px!important;background-size:16px!important}.cke_hidpi .cke_button__horizontalrule_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -984px!important;background-size:16px!important}.cke_hidpi .cke_button__iframe_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1008px!important;background-size:16px!important}.cke_hidpi .cke_button__image_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1032px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__indent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1056px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__indent_icon,.cke_ltr.cke_hidpi .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1080px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__outdent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1104px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__outdent_icon,.cke_ltr.cke_hidpi .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1128px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyblock_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1152px!important;background-size:16px!important}.cke_hidpi .cke_button__justifycenter_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1176px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyleft_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1200px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyright_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1224px!important;background-size:16px!important}.cke_hidpi .cke_button__language_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1248px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__anchor_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1272px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__anchor_icon,.cke_ltr.cke_hidpi .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1296px!important;background-size:16px!important}.cke_hidpi .cke_button__link_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1320px!important;background-size:16px!important}.cke_hidpi .cke_button__unlink_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1344px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__bulletedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1368px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__bulletedlist_icon,.cke_ltr.cke_hidpi .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1392px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__numberedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1416px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__numberedlist_icon,.cke_ltr.cke_hidpi .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1440px!important;background-size:16px!important}.cke_hidpi .cke_button__mathjax_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1464px!important;background-size:16px!important}.cke_hidpi .cke_button__maximize_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1488px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__newpage_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1512px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__newpage_icon,.cke_ltr.cke_hidpi .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1536px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pagebreak_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1560px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pagebreak_icon,.cke_ltr.cke_hidpi .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1584px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastefromword_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1608px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastefromword_icon,.cke_ltr.cke_hidpi .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1632px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastetext_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1656px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastetext_icon,.cke_ltr.cke_hidpi .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1680px!important;background-size:16px!important}.cke_hidpi .cke_button__placeholder_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1704px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__preview_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1728px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__preview_icon,.cke_ltr.cke_hidpi .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1752px!important;background-size:16px!important}.cke_hidpi .cke_button__print_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1776px!important;background-size:16px!important}.cke_hidpi .cke_button__removeformat_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1800px!important;background-size:16px!important}.cke_hidpi .cke_button__save_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1824px!important;background-size:16px!important}.cke_hidpi .cke_button__scayt_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1848px!important;background-size:16px!important}.cke_hidpi .cke_button__selectall_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1872px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__showblocks_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1896px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__showblocks_icon,.cke_ltr.cke_hidpi .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1920px!important;background-size:16px!important}.cke_hidpi .cke_button__smiley_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1944px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__source_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1968px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__source_icon,.cke_ltr.cke_hidpi .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1992px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__sourcedialog_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2016px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__sourcedialog_icon,.cke_ltr.cke_hidpi .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2040px!important;background-size:16px!important}.cke_hidpi .cke_button__specialchar_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2064px!important;background-size:16px!important}.cke_hidpi .cke_button__table_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2088px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__templates_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2112px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__templates_icon,.cke_ltr.cke_hidpi .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2136px!important;background-size:16px!important}.cke_hidpi .cke_button__uicolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2160px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__redo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2184px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__redo_icon,.cke_ltr.cke_hidpi .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2208px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__undo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2232px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__undo_icon,.cke_ltr.cke_hidpi .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2256px!important;background-size:16px!important}.cke_hidpi .cke_button__simplebox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -4560px!important}.cke_hidpi .cke_button__spellchecker_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2304px!important;background-size:16px!important}a.cke_button_disabled,a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{filter:alpha(opacity = 30)}.cke_button_disabled .cke_button_icon{filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff)}.cke_button_off:hover,.cke_button_off:focus,.cke_button_off:active{filter:alpha(opacity = 100)}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{filter:alpha(opacity = 30)}.cke_toolbox_collapser{border:1px solid #a6a6a6}.cke_toolbox_collapser .cke_arrow{margin-top:1px}.cke_hc .cke_top,.cke_hc .cke_bottom,.cke_hc .cke_combo_button,.cke_hc a.cke_combo_button:hover,.cke_hc a.cke_combo_button:focus,.cke_hc .cke_toolgroup,.cke_hc .cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active,.cke_hc .cke_toolbox_collapser,.cke_hc .cke_toolbox_collapser:hover,.cke_hc .cke_panel_grouptitle{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}"; });
define('text!modules/home/institutions.html', ['module'], function(module) { module.exports = "<template>\n<div class=\"col-lg-12 col-sm-12\">\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr colspan='6'>\n                                <compose view=\"../../resources/elements/table-navigation-bar.html\"></compose>\n                        </tr>\n                        <tr>\n                            <th style=\"width:75rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th style=\"width:30rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'city'})\">City </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th style=\"width:15rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'region'})\">Region </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th style=\"width:20rem;\"<span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'country'})\">Country </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th style=\"width:30rem;\">Member Type</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>\n                            \t<input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'name', displayProperty: 'name', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <input value.bind=\"cityFilterValue\" input.delegate=\"dataTable.filterList(cityFilterValue, { type: 'text',  filter: 'cityFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'city', displayProperty: 'city', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <input value.bind=\"regionFilterValue\" input.delegate=\"dataTable.filterList(regionFilterValue, { type: 'text',  filter: 'regionFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'region', displayProperty: 'region', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n\t\t\t\t\t\t\t\t<input value.bind=\"countryFilterValue\" input.delegate=\"dataTable.filterList(countryFilterValue, { type: 'text',  filter: 'countryFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'country', displayProperty: 'country', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<select value.bind=\"memberTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'memberTypeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'memberType', displayProperty: 'memberType', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for=\"institution of is4ua.memberTypes\" value=\"${institution.code}\">${institution.description}</option>\n                                </select>\n\t\t\t\t\t\t\t</th>\n                        </tr>\n                        <tr click.trigger=\"edit($index, $event)\" repeat.for=\"inst of dataTable.displayArray\">\n                            <td data-title=\"Name\">${inst.name}</td>\n\t\t\t\t\t\t\t<td data-title=\"City\">${inst.city}</td>\n\t\t\t\t\t\t\t<td data-title=\"Region\">${inst.region}</td>\n\t\t\t\t\t\t\t<td data-title=\"Country\">${inst.country}</td>\n                            <td data-tile=\"Phone\">${inst.memberType | lookupValue:is4ua.memberTypes:\"code\":\"description\"}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!resources/editor/skins/moono-lisa/editor_ie8.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_reset{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none}.cke_reset_all,.cke_reset_all *,.cke_reset_all a,.cke_reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none;border-collapse:collapse;font:normal normal normal 12px Arial,Helvetica,Tahoma,Verdana,Sans-Serif;color:#000;text-align:left;white-space:nowrap;cursor:auto;float:none}.cke_reset_all .cke_rtl *{text-align:right}.cke_reset_all iframe{vertical-align:inherit}.cke_reset_all textarea{white-space:pre-wrap}.cke_reset_all textarea,.cke_reset_all input[type=\"text\"],.cke_reset_all input[type=\"password\"]{cursor:text}.cke_reset_all textarea[disabled],.cke_reset_all input[type=\"text\"][disabled],.cke_reset_all input[type=\"password\"][disabled]{cursor:default}.cke_reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.cke_reset_all select{box-sizing:border-box}.cke_reset_all table{table-layout:auto}.cke_chrome{display:block;border:1px solid #d1d1d1;padding:0}.cke_inner{display:block;background:#fff;padding:0;-webkit-touch-callout:none}.cke_float{border:0}.cke_float .cke_inner{padding-bottom:0}.cke_top,.cke_contents,.cke_bottom{display:block;overflow:hidden}.cke_top{border-bottom:1px solid #d1d1d1;background:#f8f8f8;padding:6px 8px 2px;white-space:normal}.cke_float .cke_top{border:1px solid #d1d1d1}.cke_bottom{padding:6px 8px 2px;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_browser_ios .cke_contents{overflow-y:auto;-webkit-overflow-scrolling:touch}.cke_resizer{width:0;height:0;overflow:hidden;border-width:10px 10px 0 0;border-color:transparent #bcbcbc transparent transparent;border-style:dashed solid dashed dashed;font-size:0;vertical-align:bottom;margin-top:6px;margin-bottom:2px}.cke_hc .cke_resizer{font-size:15px;width:auto;height:auto;border-width:0}.cke_resizer_ltr{cursor:se-resize;float:right;margin-right:-4px}.cke_resizer_rtl{border-width:10px 0 0 10px;border-color:transparent transparent transparent #bcbcbc;border-style:dashed dashed dashed solid;cursor:sw-resize;float:left;margin-left:-4px;right:auto}.cke_wysiwyg_div{display:block;height:100%;overflow:auto;padding:0 8px;outline-style:none;box-sizing:border-box}.cke_panel{visibility:visible;width:120px;height:100px;overflow:hidden;background-color:#fff;border:1px solid #d1d1d1}.cke_menu_panel{padding:0;margin:0}.cke_combopanel{width:150px;height:170px}.cke_panel_frame{width:100%;height:100%;font-size:12px;overflow:auto;overflow-x:hidden}.cke_panel_container{overflow-y:auto;overflow-x:hidden}.cke_panel_block:focus{outline:0}.cke_panel_list{margin:0;padding:0;list-style-type:none;white-space:nowrap}.cke_panel_listItem{margin:0;padding:0}.cke_panel_listItem a{padding:6px 7px;display:block;color:inherit!important;text-decoration:none;overflow:hidden;text-overflow:ellipsis}.cke_hc .cke_panel_listItem a{border-style:none}.cke_panel_listItem.cke_selected a,.cke_panel_listItem a:hover,.cke_panel_listItem a:focus,.cke_panel_listItem a:active{background-color:#e9e9e9}.cke_panel_listItem a:focus{outline:1px dotted #000}.cke_hc .cke_panel_listItem a:hover,.cke_hc .cke_panel_listItem a:focus,.cke_hc .cke_panel_listItem a:active{border:2px solid;padding:4px 5px}.cke_panel_listItem p,.cke_panel_listItem h1,.cke_panel_listItem h2,.cke_panel_listItem h3,.cke_panel_listItem h4,.cke_panel_listItem h5,.cke_panel_listItem h6,.cke_panel_listItem pre{margin-top:0;margin-bottom:0}.cke_panel_grouptitle{cursor:default;font-size:11px;font-weight:bold;white-space:nowrap;margin:0;padding:6px 6px 7px 6px;color:#484848;border-bottom:1px solid #d1d1d1;background:#f8f8f8}.cke_colorblock{padding:10px;font-size:11px;font-family:'Microsoft Sans Serif',Tahoma,Arial,Verdana,Sans-Serif}.cke_colorblock,.cke_colorblock a{text-decoration:none;color:#000}a.cke_colorbox{padding:2px;float:left;width:20px;height:20px}.cke_rtl a.cke_colorbox{float:right}a:hover.cke_colorbox,a:focus.cke_colorbox,a:active.cke_colorbox{outline:0;padding:0;border:2px solid #139ff7}a:hover.cke_colorbox{border-color:#bcbcbc}span.cke_colorbox{width:20px;height:20px;float:left}.cke_rtl span.cke_colorbox{float:right}a.cke_colorauto,a.cke_colormore{border:#fff 1px solid;padding:3px;display:block;cursor:pointer}a.cke_colorauto{padding:0;border:1px solid transparent;margin-bottom:6px;height:26px;line-height:26px}a.cke_colormore{margin-top:10px;height:20px;line-height:19px}a:hover.cke_colorauto,a:hover.cke_colormore,a:focus.cke_colorauto,a:focus.cke_colormore,a:active.cke_colorauto,a:active.cke_colormore{outline:0;border:#139ff7 1px solid;background-color:#f8f8f8}a:hover.cke_colorauto,a:hover.cke_colormore{border-color:#bcbcbc}.cke_colorauto span.cke_colorbox{width:18px;height:18px;border:1px solid #808080;margin-left:1px;margin-top:3px}.cke_rtl .cke_colorauto span.cke_colorbox{margin-left:0;margin-right:1px}span.cke_colorbox[style*=\"#ffffff\"],span.cke_colorbox[style*=\"#FFFFFF\"],span.cke_colorbox[style=\"background-color:#fff\"],span.cke_colorbox[style=\"background-color:#FFF\"],span.cke_colorbox[style*=\"rgb(255,255,255)\"],span.cke_colorbox[style*=\"rgb(255, 255, 255)\"]{border:1px solid #808080;width:18px;height:18px}.cke_toolbar{float:left}.cke_rtl .cke_toolbar{float:right}.cke_toolgroup{border:0;float:left;margin:1px 2px 6px 0;padding-right:3px}.cke_rtl .cke_toolgroup{float:right;margin:1px 0 6px 2px;padding-left:3px;padding-right:0}.cke_hc .cke_toolgroup{margin-right:5px;margin-bottom:5px}.cke_hc.cke_rtl .cke_toolgroup{margin-right:0;margin-left:5px}a.cke_button{display:inline-block;height:18px;padding:4px 6px;outline:0;cursor:default;float:left;border:0;position:relative}.cke_rtl a.cke_button{float:right}.cke_hc a.cke_button{border:1px solid black;padding:3px 5px;margin:0 3px 5px 0}.cke_hc.cke_rtl a.cke_button{margin:0 0 5px 3px}a.cke_button_on{background:#fff;border:1px #bcbcbc solid;padding:3px 5px}a.cke_button_off:hover,a.cke_button_off:focus,a.cke_button_off:active{background:#e5e5e5;border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active{background:#e5e5e5;border:3px solid #000;padding:1px 3px}a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{border:0;padding:4px 6px;background-color:transparent}a.cke_button_disabled:focus{border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_disabled:hover,.cke_hc a.cke_button_disabled:focus,.cke_hc a.cke_button_disabled:active{border:1px solid #acacac;padding:3px 5px;margin:0 3px 5px 0}.cke_hc a.cke_button_disabled:focus{border:3px solid #000;padding:1px 3px}.cke_hc.cke_rtl a.cke_button_disabled:hover,.cke_hc.cke_rtl a.cke_button_disabled:focus,.cke_hc.cke_rtl a.cke_button_disabled:active{margin:0 0 5px 3px}a.cke_button_disabled .cke_button_icon,a.cke_button_disabled .cke_button_arrow{opacity:.3}.cke_hc a.cke_button_disabled{border-color:#acacac}.cke_hc a.cke_button_disabled .cke_button_icon,.cke_hc a.cke_button_disabled .cke_button_label{opacity:.5}.cke_toolgroup a.cke_button:last-child:after,.cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:0;right:-3px}.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-right:0;right:auto;border-left:1px solid #bcbcbc;top:0;left:-3px}.cke_hc .cke_toolgroup a.cke_button:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-color:#000;top:0;right:-7px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{top:0;right:auto;left:-7px}.cke_toolgroup a.cke_button:hover:last-child:after,.cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:-4px}.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:auto;left:-4px}.cke_hc .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:-9px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:auto;left:-9px}.cke_toolbar.cke_toolbar_last .cke_toolgroup a.cke_button:last-child:after{content:none;border:0;width:0;height:0}.cke_button_icon{cursor:inherit;background-repeat:no-repeat;margin-top:1px;width:16px;height:16px;float:left;display:inline-block}.cke_rtl .cke_button_icon{float:right}.cke_hc .cke_button_icon{display:none}.cke_button_label{display:none;padding-left:3px;margin-top:1px;line-height:17px;vertical-align:middle;float:left;cursor:default;color:#484848}.cke_rtl .cke_button_label{padding-right:3px;padding-left:0;float:right}.cke_hc .cke_button_label{padding:0;display:inline-block;font-size:12px}.cke_button_arrow{display:inline-block;margin:8px 0 0 1px;width:0;height:0;cursor:default;vertical-align:top;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_rtl .cke_button_arrow{margin-right:5px;margin-left:0}.cke_hc .cke_button_arrow{font-size:10px;margin:3px 0 0 3px;width:auto;border:0}.cke_toolbar_separator{float:left;background-color:#bcbcbc;margin:4px 2px 0 2px;height:18px;width:1px}.cke_rtl .cke_toolbar_separator{float:right}.cke_hc .cke_toolbar_separator{background-color:#000;margin-left:2px;margin-right:5px;margin-bottom:9px}.cke_hc.cke_rtl .cke_toolbar_separator{margin-left:5px;margin-right:2px}.cke_toolbar_break{display:block;clear:left}.cke_rtl .cke_toolbar_break{clear:right}a.cke_toolbox_collapser{width:12px;height:11px;float:right;margin:11px 0 0;font-size:0;cursor:default;text-align:center;border:1px solid #bcbcbc}.cke_rtl .cke_toolbox_collapser{float:left}.cke_toolbox_collapser:hover{background:#e5e5e5}.cke_toolbox_collapser.cke_toolbox_collapser_min{margin:0 2px 4px}.cke_toolbox_collapser .cke_arrow{display:inline-block;height:0;width:0;font-size:0;margin-top:1px;border:3px solid transparent;border-bottom-color:#484848}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{margin-top:4px;border-bottom-color:transparent;border-top-color:#484848}.cke_hc .cke_toolbox_collapser .cke_arrow{font-size:8px;width:auto;border:0;margin-top:0}.cke_menuitem span{cursor:default}.cke_menubutton{display:block}.cke_hc .cke_menubutton{padding:2px}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:#e9e9e9;display:block;outline:1px dotted}.cke_menubutton:hover{outline:0}.cke_hc .cke_menubutton:hover,.cke_hc .cke_menubutton:focus,.cke_hc .cke_menubutton:active{border:2px solid;padding:0}.cke_menubutton_disabled:hover,.cke_menubutton_disabled:focus,.cke_menubutton_disabled:active{background-color:transparent;outline:0}.cke_menubutton_inner{display:table-row}.cke_menubutton_icon,.cke_menubutton_label,.cke_menuarrow{display:table-cell}.cke_menubutton_icon{background-color:#f8f8f8;padding:6px 4px}.cke_hc .cke_menubutton_icon{height:16px;width:0;padding:4px 0}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:#e9e9e9}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:#f8f8f8;outline:0}.cke_menuitem .cke_menubutton_on{background-color:#e9e9e9;border:1px solid #dedede;outline:0}.cke_menubutton_on .cke_menubutton_icon{padding-right:3px;background-color:#e9e9e9}.cke_menubutton_label{padding:0 5px;background-color:transparent;width:100%;vertical-align:middle}.cke_menubutton_shortcut{color:#979797}.cke_menubutton_disabled .cke_menubutton_label{opacity:.3;filter:alpha(opacity=30)}.cke_panel_frame .cke_menubutton_label{display:none}.cke_menuseparator{background-color:#d1d1d1;height:1px}.cke_menuarrow{background:transparent url(images/arrow.png) no-repeat 0 10px;padding:0 5px}.cke_rtl .cke_menuarrow{background-position:5px -13px;background-repeat:no-repeat}.cke_hc .cke_menuarrow{background-image:none}.cke_menuarrow span{display:none}.cke_hc .cke_menuarrow span{vertical-align:middle;display:inline}.cke_combo{display:inline-block;float:left;position:relative;margin-bottom:5px}.cke_rtl .cke_combo{float:right}.cke_hc .cke_combo{margin-top:1px;margin-bottom:10px}.cke_combo:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:5px;top:0;right:0}.cke_rtl .cke_combo:after{border-right:0;border-left:1px solid #bcbcbc;right:auto;left:0}.cke_hc .cke_combo:after{border-color:#000}a.cke_combo_button{cursor:default;display:inline-block;float:left;margin:0;padding:1px}.cke_rtl a.cke_combo_button{float:right}.cke_hc a.cke_combo_button{padding:4px}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:hover,.cke_combo_off a.cke_combo_button:focus,.cke_combo_off a.cke_combo_button:active{background:#e5e5e5;border:1px solid #bcbcbc;padding:0 0 0 1px;margin-left:-1px}.cke_combo_off a.cke_combo_button:focus{outline:0}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:active{background:#fff}.cke_rtl .cke_combo_on a.cke_combo_button,.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:0 1px 0 0;margin-left:0;margin-right:-1px}.cke_hc .cke_combo_on a.cke_combo_button,.cke_hc .cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_combo_off a.cke_combo_button:active{border:3px solid #000;padding:1px 1px 1px 2px}.cke_hc.cke_rtl .cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:1px 2px 1px 1px}.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 0 0 3px;margin-left:-3px}.cke_rtl .cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 3px 0 0;margin-left:0;margin-right:-3px}.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 1px 1px 7px;margin-left:-6px}.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 7px 1px 1px;margin-left:0;margin-right:-6px}.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0;margin:0}.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px;margin:0}.cke_toolbar .cke_combo+.cke_toolbar_end,.cke_toolbar .cke_combo+.cke_toolgroup{margin-right:0;margin-left:2px}.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:2px}.cke_hc .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:5px}.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:5px}.cke_toolbar.cke_toolbar_last .cke_combo:nth-last-child(-n+2):after{content:none;border:0;width:0;height:0}.cke_combo_text{line-height:26px;padding-left:10px;text-overflow:ellipsis;overflow:hidden;float:left;cursor:default;color:#484848;width:60px}.cke_rtl .cke_combo_text{float:right;text-align:right;padding-left:0;padding-right:10px}.cke_hc .cke_combo_text{line-height:18px;font-size:12px}.cke_combo_open{cursor:default;display:inline-block;font-size:0;height:19px;line-height:17px;margin:1px 10px 1px;width:5px}.cke_hc .cke_combo_open{height:12px}.cke_combo_arrow{cursor:default;margin:11px 0 0;float:left;height:0;width:0;font-size:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_hc .cke_combo_arrow{font-size:10px;width:auto;border:0;margin-top:3px}.cke_combo_label{display:none;float:left;line-height:26px;vertical-align:top;margin-right:5px}.cke_rtl .cke_combo_label{float:right;margin-left:5px;margin-right:0}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{opacity:.3}.cke_path{float:left;margin:-2px 0 2px}a.cke_path_item,span.cke_path_empty{display:inline-block;float:left;padding:3px 4px;margin-right:2px;cursor:default;text-decoration:none;outline:0;border:0;color:#484848;font-weight:bold;font-size:11px}.cke_rtl .cke_path,.cke_rtl .cke_path_item,.cke_rtl .cke_path_empty{float:right}a.cke_path_item:hover,a.cke_path_item:focus,a.cke_path_item:active{background-color:#e5e5e5}.cke_hc a.cke_path_item:hover,.cke_hc a.cke_path_item:focus,.cke_hc a.cke_path_item:active{border:2px solid;padding:1px 2px}.cke_button__source_label,.cke_button__sourcedialog_label{display:inline}.cke_combopanel__fontsize{width:135px}textarea.cke_source{font-family:'Courier New',Monospace;font-size:small;background-color:#fff;white-space:pre-wrap;border:0;padding:0;margin:0;display:block}.cke_wysiwyg_frame,.cke_wysiwyg_div{background-color:#fff}.cke_notifications_area{pointer-events:none}.cke_notification{pointer-events:auto;position:relative;margin:10px;width:300px;color:white;text-align:center;opacity:.95;filter:alpha(opacity = 95);-webkit-animation:fadeIn .7s;animation:fadeIn .7s}.cke_notification_message a{color:#12306f}@-webkit-keyframes fadeIn{from{opacity:.4}to{opacity:.95}}@keyframes fadeIn{from{opacity:.4}to{opacity:.95}}.cke_notification_success{background:#72b572;border:1px solid #63a563}.cke_notification_warning{background:#c83939;border:1px solid #902b2b}.cke_notification_info{background:#2e9ad0;border:1px solid #0f74a8}.cke_notification_info span.cke_notification_progress{background-color:#0f74a8;display:block;padding:0;margin:0;height:100%;overflow:hidden;position:absolute;z-index:1}.cke_notification_message{position:relative;margin:4px 23px 3px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;z-index:4;text-overflow:ellipsis;overflow:hidden}.cke_notification_close{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:20px;width:20px;top:1px;right:1px;padding:0;margin:0;z-index:5;opacity:.6;filter:alpha(opacity = 60)}.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_notification_close span{display:none}.cke_notification_warning a.cke_notification_close{opacity:.8;filter:alpha(opacity = 80)}.cke_notification_warning a.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_chrome{visibility:inherit}.cke_voice_label{display:none}legend.cke_voice_label{display:none}.cke_button__about_icon{background:url(icons.png?t=H0CF) no-repeat 0 -0px!important}.cke_button__bold_icon{background:url(icons.png?t=H0CF) no-repeat 0 -24px!important}.cke_button__italic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -48px!important}.cke_button__strike_icon{background:url(icons.png?t=H0CF) no-repeat 0 -72px!important}.cke_button__subscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -96px!important}.cke_button__superscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -120px!important}.cke_button__underline_icon{background:url(icons.png?t=H0CF) no-repeat 0 -144px!important}.cke_button__bidiltr_icon{background:url(icons.png?t=H0CF) no-repeat 0 -168px!important}.cke_button__bidirtl_icon{background:url(icons.png?t=H0CF) no-repeat 0 -192px!important}.cke_button__blockquote_icon{background:url(icons.png?t=H0CF) no-repeat 0 -216px!important}.cke_rtl .cke_button__copy_icon,.cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -240px!important}.cke_ltr .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -264px!important}.cke_rtl .cke_button__cut_icon,.cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -288px!important}.cke_ltr .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -312px!important}.cke_rtl .cke_button__paste_icon,.cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -336px!important}.cke_ltr .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -360px!important}.cke_button__codesnippet_icon{background:url(icons.png?t=H0CF) no-repeat 0 -384px!important}.cke_button__bgcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -408px!important}.cke_button__textcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -432px!important}.cke_button__copyformatting_icon{background:url(icons.png?t=H0CF) no-repeat 0 -456px!important}.cke_button__creatediv_icon{background:url(icons.png?t=H0CF) no-repeat 0 -480px!important}.cke_rtl .cke_button__docprops_icon,.cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -504px!important}.cke_ltr .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -528px!important}.cke_button__embed_icon{background:url(icons.png?t=H0CF) no-repeat 0 -552px!important}.cke_button__embedsemantic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -576px!important}.cke_rtl .cke_button__find_icon,.cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -600px!important}.cke_ltr .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -624px!important}.cke_button__replace_icon{background:url(icons.png?t=H0CF) no-repeat 0 -648px!important}.cke_button__flash_icon{background:url(icons.png?t=H0CF) no-repeat 0 -672px!important}.cke_button__button_icon{background:url(icons.png?t=H0CF) no-repeat 0 -696px!important}.cke_button__checkbox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -720px!important}.cke_button__form_icon{background:url(icons.png?t=H0CF) no-repeat 0 -744px!important}.cke_button__hiddenfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -768px!important}.cke_button__imagebutton_icon{background:url(icons.png?t=H0CF) no-repeat 0 -792px!important}.cke_button__radio_icon{background:url(icons.png?t=H0CF) no-repeat 0 -816px!important}.cke_rtl .cke_button__select_icon,.cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -840px!important}.cke_ltr .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -864px!important}.cke_rtl .cke_button__textarea_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -888px!important}.cke_ltr .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -912px!important}.cke_rtl .cke_button__textfield_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -936px!important}.cke_ltr .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -960px!important}.cke_button__horizontalrule_icon{background:url(icons.png?t=H0CF) no-repeat 0 -984px!important}.cke_button__iframe_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1008px!important}.cke_button__image_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1032px!important}.cke_rtl .cke_button__indent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1056px!important}.cke_ltr .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1080px!important}.cke_rtl .cke_button__outdent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1104px!important}.cke_ltr .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1128px!important}.cke_button__justifyblock_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1152px!important}.cke_button__justifycenter_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1176px!important}.cke_button__justifyleft_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1200px!important}.cke_button__justifyright_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1224px!important}.cke_button__language_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1248px!important}.cke_rtl .cke_button__anchor_icon,.cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1272px!important}.cke_ltr .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1296px!important}.cke_button__link_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1320px!important}.cke_button__unlink_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1344px!important}.cke_rtl .cke_button__bulletedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1368px!important}.cke_ltr .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1392px!important}.cke_rtl .cke_button__numberedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1416px!important}.cke_ltr .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1440px!important}.cke_button__mathjax_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1464px!important}.cke_button__maximize_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1488px!important}.cke_rtl .cke_button__newpage_icon,.cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1512px!important}.cke_ltr .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1536px!important}.cke_rtl .cke_button__pagebreak_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1560px!important}.cke_ltr .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1584px!important}.cke_rtl .cke_button__pastefromword_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1608px!important}.cke_ltr .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1632px!important}.cke_rtl .cke_button__pastetext_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1656px!important}.cke_ltr .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1680px!important}.cke_button__placeholder_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1704px!important}.cke_rtl .cke_button__preview_icon,.cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1728px!important}.cke_ltr .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1752px!important}.cke_button__print_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1776px!important}.cke_button__removeformat_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1800px!important}.cke_button__save_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1824px!important}.cke_button__scayt_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1848px!important}.cke_button__selectall_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1872px!important}.cke_rtl .cke_button__showblocks_icon,.cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1896px!important}.cke_ltr .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1920px!important}.cke_button__smiley_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1944px!important}.cke_rtl .cke_button__source_icon,.cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1968px!important}.cke_ltr .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1992px!important}.cke_rtl .cke_button__sourcedialog_icon,.cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2016px!important}.cke_ltr .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2040px!important}.cke_button__specialchar_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2064px!important}.cke_button__table_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2088px!important}.cke_rtl .cke_button__templates_icon,.cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2112px!important}.cke_ltr .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2136px!important}.cke_button__uicolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2160px!important}.cke_rtl .cke_button__redo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2184px!important}.cke_ltr .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2208px!important}.cke_rtl .cke_button__undo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2232px!important}.cke_ltr .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2256px!important}.cke_button__simplebox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2280px!important}.cke_button__spellchecker_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2304px!important}.cke_hidpi .cke_button__about_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -0px!important;background-size:16px!important}.cke_hidpi .cke_button__bold_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -24px!important;background-size:16px!important}.cke_hidpi .cke_button__italic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -48px!important;background-size:16px!important}.cke_hidpi .cke_button__strike_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -72px!important;background-size:16px!important}.cke_hidpi .cke_button__subscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -96px!important;background-size:16px!important}.cke_hidpi .cke_button__superscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -120px!important;background-size:16px!important}.cke_hidpi .cke_button__underline_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -144px!important;background-size:16px!important}.cke_hidpi .cke_button__bidiltr_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -168px!important;background-size:16px!important}.cke_hidpi .cke_button__bidirtl_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -192px!important;background-size:16px!important}.cke_hidpi .cke_button__blockquote_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -216px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__copy_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -240px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__copy_icon,.cke_ltr.cke_hidpi .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -264px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__cut_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -288px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__cut_icon,.cke_ltr.cke_hidpi .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -312px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__paste_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -336px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__paste_icon,.cke_ltr.cke_hidpi .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -360px!important;background-size:16px!important}.cke_hidpi .cke_button__codesnippet_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -384px!important;background-size:16px!important}.cke_hidpi .cke_button__bgcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -408px!important;background-size:16px!important}.cke_hidpi .cke_button__textcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -432px!important;background-size:16px!important}.cke_hidpi .cke_button__copyformatting_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -456px!important;background-size:16px!important}.cke_hidpi .cke_button__creatediv_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -480px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__docprops_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -504px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__docprops_icon,.cke_ltr.cke_hidpi .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -528px!important;background-size:16px!important}.cke_hidpi .cke_button__embed_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -552px!important;background-size:16px!important}.cke_hidpi .cke_button__embedsemantic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -576px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__find_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -600px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__find_icon,.cke_ltr.cke_hidpi .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -624px!important;background-size:16px!important}.cke_hidpi .cke_button__replace_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -648px!important;background-size:16px!important}.cke_hidpi .cke_button__flash_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -672px!important;background-size:16px!important}.cke_hidpi .cke_button__button_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -696px!important;background-size:16px!important}.cke_hidpi .cke_button__checkbox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -720px!important;background-size:16px!important}.cke_hidpi .cke_button__form_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -744px!important;background-size:16px!important}.cke_hidpi .cke_button__hiddenfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -768px!important;background-size:16px!important}.cke_hidpi .cke_button__imagebutton_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -792px!important;background-size:16px!important}.cke_hidpi .cke_button__radio_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -816px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__select_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -840px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__select_icon,.cke_ltr.cke_hidpi .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -864px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textarea_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -888px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textarea_icon,.cke_ltr.cke_hidpi .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -912px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textfield_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -936px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textfield_icon,.cke_ltr.cke_hidpi .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -960px!important;background-size:16px!important}.cke_hidpi .cke_button__horizontalrule_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -984px!important;background-size:16px!important}.cke_hidpi .cke_button__iframe_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1008px!important;background-size:16px!important}.cke_hidpi .cke_button__image_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1032px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__indent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1056px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__indent_icon,.cke_ltr.cke_hidpi .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1080px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__outdent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1104px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__outdent_icon,.cke_ltr.cke_hidpi .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1128px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyblock_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1152px!important;background-size:16px!important}.cke_hidpi .cke_button__justifycenter_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1176px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyleft_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1200px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyright_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1224px!important;background-size:16px!important}.cke_hidpi .cke_button__language_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1248px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__anchor_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1272px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__anchor_icon,.cke_ltr.cke_hidpi .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1296px!important;background-size:16px!important}.cke_hidpi .cke_button__link_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1320px!important;background-size:16px!important}.cke_hidpi .cke_button__unlink_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1344px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__bulletedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1368px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__bulletedlist_icon,.cke_ltr.cke_hidpi .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1392px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__numberedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1416px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__numberedlist_icon,.cke_ltr.cke_hidpi .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1440px!important;background-size:16px!important}.cke_hidpi .cke_button__mathjax_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1464px!important;background-size:16px!important}.cke_hidpi .cke_button__maximize_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1488px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__newpage_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1512px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__newpage_icon,.cke_ltr.cke_hidpi .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1536px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pagebreak_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1560px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pagebreak_icon,.cke_ltr.cke_hidpi .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1584px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastefromword_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1608px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastefromword_icon,.cke_ltr.cke_hidpi .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1632px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastetext_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1656px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastetext_icon,.cke_ltr.cke_hidpi .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1680px!important;background-size:16px!important}.cke_hidpi .cke_button__placeholder_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1704px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__preview_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1728px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__preview_icon,.cke_ltr.cke_hidpi .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1752px!important;background-size:16px!important}.cke_hidpi .cke_button__print_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1776px!important;background-size:16px!important}.cke_hidpi .cke_button__removeformat_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1800px!important;background-size:16px!important}.cke_hidpi .cke_button__save_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1824px!important;background-size:16px!important}.cke_hidpi .cke_button__scayt_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1848px!important;background-size:16px!important}.cke_hidpi .cke_button__selectall_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1872px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__showblocks_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1896px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__showblocks_icon,.cke_ltr.cke_hidpi .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1920px!important;background-size:16px!important}.cke_hidpi .cke_button__smiley_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1944px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__source_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1968px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__source_icon,.cke_ltr.cke_hidpi .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1992px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__sourcedialog_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2016px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__sourcedialog_icon,.cke_ltr.cke_hidpi .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2040px!important;background-size:16px!important}.cke_hidpi .cke_button__specialchar_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2064px!important;background-size:16px!important}.cke_hidpi .cke_button__table_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2088px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__templates_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2112px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__templates_icon,.cke_ltr.cke_hidpi .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2136px!important;background-size:16px!important}.cke_hidpi .cke_button__uicolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2160px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__redo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2184px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__redo_icon,.cke_ltr.cke_hidpi .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2208px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__undo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2232px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__undo_icon,.cke_ltr.cke_hidpi .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2256px!important;background-size:16px!important}.cke_hidpi .cke_button__simplebox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -4560px!important}.cke_hidpi .cke_button__spellchecker_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2304px!important;background-size:16px!important}a.cke_button_disabled,a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{filter:alpha(opacity = 30)}.cke_button_disabled .cke_button_icon{filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff)}.cke_button_off:hover,.cke_button_off:focus,.cke_button_off:active{filter:alpha(opacity = 100)}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{filter:alpha(opacity = 30)}.cke_toolbox_collapser{border:1px solid #a6a6a6}.cke_toolbox_collapser .cke_arrow{margin-top:1px}.cke_hc .cke_top,.cke_hc .cke_bottom,.cke_hc .cke_combo_button,.cke_hc a.cke_combo_button:hover,.cke_hc a.cke_combo_button:focus,.cke_hc .cke_toolgroup,.cke_hc .cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active,.cke_hc .cke_toolbox_collapser,.cke_hc .cke_toolbox_collapser:hover,.cke_hc .cke_panel_grouptitle{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.cke_toolbox_collapser .cke_arrow{border-width:4px}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{border-width:3px}.cke_toolbox_collapser .cke_arrow{margin-top:0}.cke_toolbar{position:relative}.cke_rtl .cke_toolbar_end{right:auto;left:0}.cke_toolbar_end:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:1px;right:2px}.cke_rtl .cke_toolbar_end:after{right:auto;left:2px}.cke_hc .cke_toolbar_end:after{top:2px;right:5px;border-color:#000}.cke_hc.cke_rtl .cke_toolbar_end:after{right:auto;left:5px}.cke_combo+.cke_toolbar_end:after,.cke_toolbar.cke_toolbar_last .cke_toolbar_end:after{content:none;border:0}.cke_combo+.cke_toolgroup+.cke_toolbar_end:after{right:0}.cke_rtl .cke_combo+.cke_toolgroup+.cke_toolbar_end:after{right:auto;left:0}"; });
define('text!modules/home/products.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-12\" style='padding:15px;'>\n        <div class='row'>\n            <div class='col-lg-8 col-lg-offset-2 bottomMargin'>\n                <div id=\"no-more-tables\">\n                    <table id=\"productsTable\" class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr colspan='5'>\n                                 <compose view=\"../../resources/elements/table-navigation-bar.html\"></compose>\n                                 </tr>\n                            <tr>                            \n                            <tr>\n                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\">SAP Product</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilterValue', collectionProperty: 'name', displayProperty: 'name',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <select value.bind=\"sapNameFilterValue\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'sapNameFilter', collectionProperty: 'sapProduct', displayProperty: 'sapProduct',  compare:'match'} )\" class=\"form-control \" >\n                                        <option value=\"\"></option>\n                                        <option repeat.for=\"product of is4ua.sapProductsArray\" value=\"${product.code}\">${product.description}</option>\n                                    </select>\n                                </th>\n                            </tr>\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"system of dataTable.displayArray\">\n                                <td data-title=\"Name\">${system.name}</td>\n                                <td data-title=\"SAP Product\">${system.sapProduct | lookupValue:is4ua.sapProductsArray:\"code\":\"description\"}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!resources/editor/skins/moono-lisa/editor_iequirks.css', ['module'], function(module) { module.exports = "/*\r\nCopyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\r\nFor licensing, see LICENSE.md or http://ckeditor.com/license\r\n*/\r\n.cke_reset{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none}.cke_reset_all,.cke_reset_all *,.cke_reset_all a,.cke_reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;width:auto;height:auto;vertical-align:baseline;box-sizing:content-box;position:static;transition:none;border-collapse:collapse;font:normal normal normal 12px Arial,Helvetica,Tahoma,Verdana,Sans-Serif;color:#000;text-align:left;white-space:nowrap;cursor:auto;float:none}.cke_reset_all .cke_rtl *{text-align:right}.cke_reset_all iframe{vertical-align:inherit}.cke_reset_all textarea{white-space:pre-wrap}.cke_reset_all textarea,.cke_reset_all input[type=\"text\"],.cke_reset_all input[type=\"password\"]{cursor:text}.cke_reset_all textarea[disabled],.cke_reset_all input[type=\"text\"][disabled],.cke_reset_all input[type=\"password\"][disabled]{cursor:default}.cke_reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.cke_reset_all select{box-sizing:border-box}.cke_reset_all table{table-layout:auto}.cke_chrome{display:block;border:1px solid #d1d1d1;padding:0}.cke_inner{display:block;background:#fff;padding:0;-webkit-touch-callout:none}.cke_float{border:0}.cke_float .cke_inner{padding-bottom:0}.cke_top,.cke_contents,.cke_bottom{display:block;overflow:hidden}.cke_top{border-bottom:1px solid #d1d1d1;background:#f8f8f8;padding:6px 8px 2px;white-space:normal}.cke_float .cke_top{border:1px solid #d1d1d1}.cke_bottom{padding:6px 8px 2px;position:relative;border-top:1px solid #d1d1d1;background:#f8f8f8}.cke_browser_ios .cke_contents{overflow-y:auto;-webkit-overflow-scrolling:touch}.cke_resizer{width:0;height:0;overflow:hidden;border-width:10px 10px 0 0;border-color:transparent #bcbcbc transparent transparent;border-style:dashed solid dashed dashed;font-size:0;vertical-align:bottom;margin-top:6px;margin-bottom:2px}.cke_hc .cke_resizer{font-size:15px;width:auto;height:auto;border-width:0}.cke_resizer_ltr{cursor:se-resize;float:right;margin-right:-4px}.cke_resizer_rtl{border-width:10px 0 0 10px;border-color:transparent transparent transparent #bcbcbc;border-style:dashed dashed dashed solid;cursor:sw-resize;float:left;margin-left:-4px;right:auto}.cke_wysiwyg_div{display:block;height:100%;overflow:auto;padding:0 8px;outline-style:none;box-sizing:border-box}.cke_panel{visibility:visible;width:120px;height:100px;overflow:hidden;background-color:#fff;border:1px solid #d1d1d1}.cke_menu_panel{padding:0;margin:0}.cke_combopanel{width:150px;height:170px}.cke_panel_frame{width:100%;height:100%;font-size:12px;overflow:auto;overflow-x:hidden}.cke_panel_container{overflow-y:auto;overflow-x:hidden}.cke_panel_block:focus{outline:0}.cke_panel_list{margin:0;padding:0;list-style-type:none;white-space:nowrap}.cke_panel_listItem{margin:0;padding:0}.cke_panel_listItem a{padding:6px 7px;display:block;color:inherit!important;text-decoration:none;overflow:hidden;text-overflow:ellipsis}.cke_hc .cke_panel_listItem a{border-style:none}.cke_panel_listItem.cke_selected a,.cke_panel_listItem a:hover,.cke_panel_listItem a:focus,.cke_panel_listItem a:active{background-color:#e9e9e9}.cke_panel_listItem a:focus{outline:1px dotted #000}.cke_hc .cke_panel_listItem a:hover,.cke_hc .cke_panel_listItem a:focus,.cke_hc .cke_panel_listItem a:active{border:2px solid;padding:4px 5px}.cke_panel_listItem p,.cke_panel_listItem h1,.cke_panel_listItem h2,.cke_panel_listItem h3,.cke_panel_listItem h4,.cke_panel_listItem h5,.cke_panel_listItem h6,.cke_panel_listItem pre{margin-top:0;margin-bottom:0}.cke_panel_grouptitle{cursor:default;font-size:11px;font-weight:bold;white-space:nowrap;margin:0;padding:6px 6px 7px 6px;color:#484848;border-bottom:1px solid #d1d1d1;background:#f8f8f8}.cke_colorblock{padding:10px;font-size:11px;font-family:'Microsoft Sans Serif',Tahoma,Arial,Verdana,Sans-Serif}.cke_colorblock,.cke_colorblock a{text-decoration:none;color:#000}a.cke_colorbox{padding:2px;float:left;width:20px;height:20px}.cke_rtl a.cke_colorbox{float:right}a:hover.cke_colorbox,a:focus.cke_colorbox,a:active.cke_colorbox{outline:0;padding:0;border:2px solid #139ff7}a:hover.cke_colorbox{border-color:#bcbcbc}span.cke_colorbox{width:20px;height:20px;float:left}.cke_rtl span.cke_colorbox{float:right}a.cke_colorauto,a.cke_colormore{border:#fff 1px solid;padding:3px;display:block;cursor:pointer}a.cke_colorauto{padding:0;border:1px solid transparent;margin-bottom:6px;height:26px;line-height:26px}a.cke_colormore{margin-top:10px;height:20px;line-height:19px}a:hover.cke_colorauto,a:hover.cke_colormore,a:focus.cke_colorauto,a:focus.cke_colormore,a:active.cke_colorauto,a:active.cke_colormore{outline:0;border:#139ff7 1px solid;background-color:#f8f8f8}a:hover.cke_colorauto,a:hover.cke_colormore{border-color:#bcbcbc}.cke_colorauto span.cke_colorbox{width:18px;height:18px;border:1px solid #808080;margin-left:1px;margin-top:3px}.cke_rtl .cke_colorauto span.cke_colorbox{margin-left:0;margin-right:1px}span.cke_colorbox[style*=\"#ffffff\"],span.cke_colorbox[style*=\"#FFFFFF\"],span.cke_colorbox[style=\"background-color:#fff\"],span.cke_colorbox[style=\"background-color:#FFF\"],span.cke_colorbox[style*=\"rgb(255,255,255)\"],span.cke_colorbox[style*=\"rgb(255, 255, 255)\"]{border:1px solid #808080;width:18px;height:18px}.cke_toolbar{float:left}.cke_rtl .cke_toolbar{float:right}.cke_toolgroup{border:0;float:left;margin:1px 2px 6px 0;padding-right:3px}.cke_rtl .cke_toolgroup{float:right;margin:1px 0 6px 2px;padding-left:3px;padding-right:0}.cke_hc .cke_toolgroup{margin-right:5px;margin-bottom:5px}.cke_hc.cke_rtl .cke_toolgroup{margin-right:0;margin-left:5px}a.cke_button{display:inline-block;height:18px;padding:4px 6px;outline:0;cursor:default;float:left;border:0;position:relative}.cke_rtl a.cke_button{float:right}.cke_hc a.cke_button{border:1px solid black;padding:3px 5px;margin:0 3px 5px 0}.cke_hc.cke_rtl a.cke_button{margin:0 0 5px 3px}a.cke_button_on{background:#fff;border:1px #bcbcbc solid;padding:3px 5px}a.cke_button_off:hover,a.cke_button_off:focus,a.cke_button_off:active{background:#e5e5e5;border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active{background:#e5e5e5;border:3px solid #000;padding:1px 3px}a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{border:0;padding:4px 6px;background-color:transparent}a.cke_button_disabled:focus{border:1px #bcbcbc solid;padding:3px 5px}.cke_hc a.cke_button_disabled:hover,.cke_hc a.cke_button_disabled:focus,.cke_hc a.cke_button_disabled:active{border:1px solid #acacac;padding:3px 5px;margin:0 3px 5px 0}.cke_hc a.cke_button_disabled:focus{border:3px solid #000;padding:1px 3px}.cke_hc.cke_rtl a.cke_button_disabled:hover,.cke_hc.cke_rtl a.cke_button_disabled:focus,.cke_hc.cke_rtl a.cke_button_disabled:active{margin:0 0 5px 3px}a.cke_button_disabled .cke_button_icon,a.cke_button_disabled .cke_button_arrow{opacity:.3}.cke_hc a.cke_button_disabled{border-color:#acacac}.cke_hc a.cke_button_disabled .cke_button_icon,.cke_hc a.cke_button_disabled .cke_button_label{opacity:.5}.cke_toolgroup a.cke_button:last-child:after,.cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:4px;top:0;right:-3px}.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-right:0;right:auto;border-left:1px solid #bcbcbc;top:0;left:-3px}.cke_hc .cke_toolgroup a.cke_button:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{border-color:#000;top:0;right:-7px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_disabled:hover:last-child:after{top:0;right:auto;left:-7px}.cke_toolgroup a.cke_button:hover:last-child:after,.cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:-4px}.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-1px;right:auto;left:-4px}.cke_hc .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:-9px}.cke_hc.cke_rtl .cke_toolgroup a.cke_button:hover:last-child:after,.cke_hc.cke_rtl .cke_toolgroup a.cke_button.cke_button_on:last-child:after{top:-2px;right:auto;left:-9px}.cke_toolbar.cke_toolbar_last .cke_toolgroup a.cke_button:last-child:after{content:none;border:0;width:0;height:0}.cke_button_icon{cursor:inherit;background-repeat:no-repeat;margin-top:1px;width:16px;height:16px;float:left;display:inline-block}.cke_rtl .cke_button_icon{float:right}.cke_hc .cke_button_icon{display:none}.cke_button_label{display:none;padding-left:3px;margin-top:1px;line-height:17px;vertical-align:middle;float:left;cursor:default;color:#484848}.cke_rtl .cke_button_label{padding-right:3px;padding-left:0;float:right}.cke_hc .cke_button_label{padding:0;display:inline-block;font-size:12px}.cke_button_arrow{display:inline-block;margin:8px 0 0 1px;width:0;height:0;cursor:default;vertical-align:top;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_rtl .cke_button_arrow{margin-right:5px;margin-left:0}.cke_hc .cke_button_arrow{font-size:10px;margin:3px 0 0 3px;width:auto;border:0}.cke_toolbar_separator{float:left;background-color:#bcbcbc;margin:4px 2px 0 2px;height:18px;width:1px}.cke_rtl .cke_toolbar_separator{float:right}.cke_hc .cke_toolbar_separator{background-color:#000;margin-left:2px;margin-right:5px;margin-bottom:9px}.cke_hc.cke_rtl .cke_toolbar_separator{margin-left:5px;margin-right:2px}.cke_toolbar_break{display:block;clear:left}.cke_rtl .cke_toolbar_break{clear:right}a.cke_toolbox_collapser{width:12px;height:11px;float:right;margin:11px 0 0;font-size:0;cursor:default;text-align:center;border:1px solid #bcbcbc}.cke_rtl .cke_toolbox_collapser{float:left}.cke_toolbox_collapser:hover{background:#e5e5e5}.cke_toolbox_collapser.cke_toolbox_collapser_min{margin:0 2px 4px}.cke_toolbox_collapser .cke_arrow{display:inline-block;height:0;width:0;font-size:0;margin-top:1px;border:3px solid transparent;border-bottom-color:#484848}.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow{margin-top:4px;border-bottom-color:transparent;border-top-color:#484848}.cke_hc .cke_toolbox_collapser .cke_arrow{font-size:8px;width:auto;border:0;margin-top:0}.cke_menuitem span{cursor:default}.cke_menubutton{display:block}.cke_hc .cke_menubutton{padding:2px}.cke_menubutton:hover,.cke_menubutton:focus,.cke_menubutton:active{background-color:#e9e9e9;display:block;outline:1px dotted}.cke_menubutton:hover{outline:0}.cke_hc .cke_menubutton:hover,.cke_hc .cke_menubutton:focus,.cke_hc .cke_menubutton:active{border:2px solid;padding:0}.cke_menubutton_disabled:hover,.cke_menubutton_disabled:focus,.cke_menubutton_disabled:active{background-color:transparent;outline:0}.cke_menubutton_inner{display:table-row}.cke_menubutton_icon,.cke_menubutton_label,.cke_menuarrow{display:table-cell}.cke_menubutton_icon{background-color:#f8f8f8;padding:6px 4px}.cke_hc .cke_menubutton_icon{height:16px;width:0;padding:4px 0}.cke_menubutton:hover .cke_menubutton_icon,.cke_menubutton:focus .cke_menubutton_icon,.cke_menubutton:active .cke_menubutton_icon{background-color:#e9e9e9}.cke_menubutton_disabled:hover .cke_menubutton_icon,.cke_menubutton_disabled:focus .cke_menubutton_icon,.cke_menubutton_disabled:active .cke_menubutton_icon{background-color:#f8f8f8;outline:0}.cke_menuitem .cke_menubutton_on{background-color:#e9e9e9;border:1px solid #dedede;outline:0}.cke_menubutton_on .cke_menubutton_icon{padding-right:3px;background-color:#e9e9e9}.cke_menubutton_label{padding:0 5px;background-color:transparent;width:100%;vertical-align:middle}.cke_menubutton_shortcut{color:#979797}.cke_menubutton_disabled .cke_menubutton_label{opacity:.3;filter:alpha(opacity=30)}.cke_panel_frame .cke_menubutton_label{display:none}.cke_menuseparator{background-color:#d1d1d1;height:1px}.cke_menuarrow{background:transparent url(images/arrow.png) no-repeat 0 10px;padding:0 5px}.cke_rtl .cke_menuarrow{background-position:5px -13px;background-repeat:no-repeat}.cke_hc .cke_menuarrow{background-image:none}.cke_menuarrow span{display:none}.cke_hc .cke_menuarrow span{vertical-align:middle;display:inline}.cke_combo{display:inline-block;float:left;position:relative;margin-bottom:5px}.cke_rtl .cke_combo{float:right}.cke_hc .cke_combo{margin-top:1px;margin-bottom:10px}.cke_combo:after{content:\"\";position:absolute;height:18px;width:0;border-right:1px solid #bcbcbc;margin-top:5px;top:0;right:0}.cke_rtl .cke_combo:after{border-right:0;border-left:1px solid #bcbcbc;right:auto;left:0}.cke_hc .cke_combo:after{border-color:#000}a.cke_combo_button{cursor:default;display:inline-block;float:left;margin:0;padding:1px}.cke_rtl a.cke_combo_button{float:right}.cke_hc a.cke_combo_button{padding:4px}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:hover,.cke_combo_off a.cke_combo_button:focus,.cke_combo_off a.cke_combo_button:active{background:#e5e5e5;border:1px solid #bcbcbc;padding:0 0 0 1px;margin-left:-1px}.cke_combo_off a.cke_combo_button:focus{outline:0}.cke_combo_on a.cke_combo_button,.cke_combo_off a.cke_combo_button:active{background:#fff}.cke_rtl .cke_combo_on a.cke_combo_button,.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:0 1px 0 0;margin-left:0;margin-right:-1px}.cke_hc .cke_combo_on a.cke_combo_button,.cke_hc .cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_combo_off a.cke_combo_button:active{border:3px solid #000;padding:1px 1px 1px 2px}.cke_hc.cke_rtl .cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_combo_off a.cke_combo_button:active{padding:1px 2px 1px 1px}.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 0 0 3px;margin-left:-3px}.cke_rtl .cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_rtl .cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0 3px 0 0;margin-left:0;margin-right:-3px}.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 1px 1px 7px;margin-left:-6px}.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc.cke_rtl .cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px 7px 1px 1px;margin-left:0;margin-right:-6px}.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:0;margin:0}.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbox .cke_toolbar:first-child>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_on a.cke_combo_button,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:hover,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:focus,.cke_hc .cke_toolbar_break+.cke_toolbar>.cke_toolbar_start+.cke_combo_off a.cke_combo_button:active{padding:1px;margin:0}.cke_toolbar .cke_combo+.cke_toolbar_end,.cke_toolbar .cke_combo+.cke_toolgroup{margin-right:0;margin-left:2px}.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:2px}.cke_hc .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:5px}.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolbar_end,.cke_hc.cke_rtl .cke_toolbar .cke_combo+.cke_toolgroup{margin-left:0;margin-right:5px}.cke_toolbar.cke_toolbar_last .cke_combo:nth-last-child(-n+2):after{content:none;border:0;width:0;height:0}.cke_combo_text{line-height:26px;padding-left:10px;text-overflow:ellipsis;overflow:hidden;float:left;cursor:default;color:#484848;width:60px}.cke_rtl .cke_combo_text{float:right;text-align:right;padding-left:0;padding-right:10px}.cke_hc .cke_combo_text{line-height:18px;font-size:12px}.cke_combo_open{cursor:default;display:inline-block;font-size:0;height:19px;line-height:17px;margin:1px 10px 1px;width:5px}.cke_hc .cke_combo_open{height:12px}.cke_combo_arrow{cursor:default;margin:11px 0 0;float:left;height:0;width:0;font-size:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #484848}.cke_hc .cke_combo_arrow{font-size:10px;width:auto;border:0;margin-top:3px}.cke_combo_label{display:none;float:left;line-height:26px;vertical-align:top;margin-right:5px}.cke_rtl .cke_combo_label{float:right;margin-left:5px;margin-right:0}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{opacity:.3}.cke_path{float:left;margin:-2px 0 2px}a.cke_path_item,span.cke_path_empty{display:inline-block;float:left;padding:3px 4px;margin-right:2px;cursor:default;text-decoration:none;outline:0;border:0;color:#484848;font-weight:bold;font-size:11px}.cke_rtl .cke_path,.cke_rtl .cke_path_item,.cke_rtl .cke_path_empty{float:right}a.cke_path_item:hover,a.cke_path_item:focus,a.cke_path_item:active{background-color:#e5e5e5}.cke_hc a.cke_path_item:hover,.cke_hc a.cke_path_item:focus,.cke_hc a.cke_path_item:active{border:2px solid;padding:1px 2px}.cke_button__source_label,.cke_button__sourcedialog_label{display:inline}.cke_combopanel__fontsize{width:135px}textarea.cke_source{font-family:'Courier New',Monospace;font-size:small;background-color:#fff;white-space:pre-wrap;border:0;padding:0;margin:0;display:block}.cke_wysiwyg_frame,.cke_wysiwyg_div{background-color:#fff}.cke_notifications_area{pointer-events:none}.cke_notification{pointer-events:auto;position:relative;margin:10px;width:300px;color:white;text-align:center;opacity:.95;filter:alpha(opacity = 95);-webkit-animation:fadeIn .7s;animation:fadeIn .7s}.cke_notification_message a{color:#12306f}@-webkit-keyframes fadeIn{from{opacity:.4}to{opacity:.95}}@keyframes fadeIn{from{opacity:.4}to{opacity:.95}}.cke_notification_success{background:#72b572;border:1px solid #63a563}.cke_notification_warning{background:#c83939;border:1px solid #902b2b}.cke_notification_info{background:#2e9ad0;border:1px solid #0f74a8}.cke_notification_info span.cke_notification_progress{background-color:#0f74a8;display:block;padding:0;margin:0;height:100%;overflow:hidden;position:absolute;z-index:1}.cke_notification_message{position:relative;margin:4px 23px 3px;font-family:Arial,Helvetica,sans-serif;font-size:12px;line-height:18px;z-index:4;text-overflow:ellipsis;overflow:hidden}.cke_notification_close{background-image:url(images/close.png);background-repeat:no-repeat;background-position:50%;position:absolute;cursor:pointer;text-align:center;height:20px;width:20px;top:1px;right:1px;padding:0;margin:0;z-index:5;opacity:.6;filter:alpha(opacity = 60)}.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_notification_close span{display:none}.cke_notification_warning a.cke_notification_close{opacity:.8;filter:alpha(opacity = 80)}.cke_notification_warning a.cke_notification_close:hover{opacity:1;filter:alpha(opacity = 100)}.cke_chrome{visibility:inherit}.cke_voice_label{display:none}legend.cke_voice_label{display:none}.cke_button__about_icon{background:url(icons.png?t=H0CF) no-repeat 0 -0px!important}.cke_button__bold_icon{background:url(icons.png?t=H0CF) no-repeat 0 -24px!important}.cke_button__italic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -48px!important}.cke_button__strike_icon{background:url(icons.png?t=H0CF) no-repeat 0 -72px!important}.cke_button__subscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -96px!important}.cke_button__superscript_icon{background:url(icons.png?t=H0CF) no-repeat 0 -120px!important}.cke_button__underline_icon{background:url(icons.png?t=H0CF) no-repeat 0 -144px!important}.cke_button__bidiltr_icon{background:url(icons.png?t=H0CF) no-repeat 0 -168px!important}.cke_button__bidirtl_icon{background:url(icons.png?t=H0CF) no-repeat 0 -192px!important}.cke_button__blockquote_icon{background:url(icons.png?t=H0CF) no-repeat 0 -216px!important}.cke_rtl .cke_button__copy_icon,.cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -240px!important}.cke_ltr .cke_button__copy_icon{background:url(icons.png?t=H0CF) no-repeat 0 -264px!important}.cke_rtl .cke_button__cut_icon,.cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -288px!important}.cke_ltr .cke_button__cut_icon{background:url(icons.png?t=H0CF) no-repeat 0 -312px!important}.cke_rtl .cke_button__paste_icon,.cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -336px!important}.cke_ltr .cke_button__paste_icon{background:url(icons.png?t=H0CF) no-repeat 0 -360px!important}.cke_button__codesnippet_icon{background:url(icons.png?t=H0CF) no-repeat 0 -384px!important}.cke_button__bgcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -408px!important}.cke_button__textcolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -432px!important}.cke_button__copyformatting_icon{background:url(icons.png?t=H0CF) no-repeat 0 -456px!important}.cke_button__creatediv_icon{background:url(icons.png?t=H0CF) no-repeat 0 -480px!important}.cke_rtl .cke_button__docprops_icon,.cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -504px!important}.cke_ltr .cke_button__docprops_icon{background:url(icons.png?t=H0CF) no-repeat 0 -528px!important}.cke_button__embed_icon{background:url(icons.png?t=H0CF) no-repeat 0 -552px!important}.cke_button__embedsemantic_icon{background:url(icons.png?t=H0CF) no-repeat 0 -576px!important}.cke_rtl .cke_button__find_icon,.cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -600px!important}.cke_ltr .cke_button__find_icon{background:url(icons.png?t=H0CF) no-repeat 0 -624px!important}.cke_button__replace_icon{background:url(icons.png?t=H0CF) no-repeat 0 -648px!important}.cke_button__flash_icon{background:url(icons.png?t=H0CF) no-repeat 0 -672px!important}.cke_button__button_icon{background:url(icons.png?t=H0CF) no-repeat 0 -696px!important}.cke_button__checkbox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -720px!important}.cke_button__form_icon{background:url(icons.png?t=H0CF) no-repeat 0 -744px!important}.cke_button__hiddenfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -768px!important}.cke_button__imagebutton_icon{background:url(icons.png?t=H0CF) no-repeat 0 -792px!important}.cke_button__radio_icon{background:url(icons.png?t=H0CF) no-repeat 0 -816px!important}.cke_rtl .cke_button__select_icon,.cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -840px!important}.cke_ltr .cke_button__select_icon{background:url(icons.png?t=H0CF) no-repeat 0 -864px!important}.cke_rtl .cke_button__textarea_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -888px!important}.cke_ltr .cke_button__textarea_icon{background:url(icons.png?t=H0CF) no-repeat 0 -912px!important}.cke_rtl .cke_button__textfield_icon,.cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -936px!important}.cke_ltr .cke_button__textfield_icon{background:url(icons.png?t=H0CF) no-repeat 0 -960px!important}.cke_button__horizontalrule_icon{background:url(icons.png?t=H0CF) no-repeat 0 -984px!important}.cke_button__iframe_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1008px!important}.cke_button__image_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1032px!important}.cke_rtl .cke_button__indent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1056px!important}.cke_ltr .cke_button__indent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1080px!important}.cke_rtl .cke_button__outdent_icon,.cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1104px!important}.cke_ltr .cke_button__outdent_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1128px!important}.cke_button__justifyblock_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1152px!important}.cke_button__justifycenter_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1176px!important}.cke_button__justifyleft_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1200px!important}.cke_button__justifyright_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1224px!important}.cke_button__language_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1248px!important}.cke_rtl .cke_button__anchor_icon,.cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1272px!important}.cke_ltr .cke_button__anchor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1296px!important}.cke_button__link_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1320px!important}.cke_button__unlink_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1344px!important}.cke_rtl .cke_button__bulletedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1368px!important}.cke_ltr .cke_button__bulletedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1392px!important}.cke_rtl .cke_button__numberedlist_icon,.cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1416px!important}.cke_ltr .cke_button__numberedlist_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1440px!important}.cke_button__mathjax_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1464px!important}.cke_button__maximize_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1488px!important}.cke_rtl .cke_button__newpage_icon,.cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1512px!important}.cke_ltr .cke_button__newpage_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1536px!important}.cke_rtl .cke_button__pagebreak_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1560px!important}.cke_ltr .cke_button__pagebreak_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1584px!important}.cke_rtl .cke_button__pastefromword_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1608px!important}.cke_ltr .cke_button__pastefromword_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1632px!important}.cke_rtl .cke_button__pastetext_icon,.cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1656px!important}.cke_ltr .cke_button__pastetext_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1680px!important}.cke_button__placeholder_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1704px!important}.cke_rtl .cke_button__preview_icon,.cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1728px!important}.cke_ltr .cke_button__preview_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1752px!important}.cke_button__print_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1776px!important}.cke_button__removeformat_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1800px!important}.cke_button__save_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1824px!important}.cke_button__scayt_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1848px!important}.cke_button__selectall_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1872px!important}.cke_rtl .cke_button__showblocks_icon,.cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1896px!important}.cke_ltr .cke_button__showblocks_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1920px!important}.cke_button__smiley_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1944px!important}.cke_rtl .cke_button__source_icon,.cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1968px!important}.cke_ltr .cke_button__source_icon{background:url(icons.png?t=H0CF) no-repeat 0 -1992px!important}.cke_rtl .cke_button__sourcedialog_icon,.cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2016px!important}.cke_ltr .cke_button__sourcedialog_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2040px!important}.cke_button__specialchar_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2064px!important}.cke_button__table_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2088px!important}.cke_rtl .cke_button__templates_icon,.cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2112px!important}.cke_ltr .cke_button__templates_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2136px!important}.cke_button__uicolor_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2160px!important}.cke_rtl .cke_button__redo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2184px!important}.cke_ltr .cke_button__redo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2208px!important}.cke_rtl .cke_button__undo_icon,.cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2232px!important}.cke_ltr .cke_button__undo_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2256px!important}.cke_button__simplebox_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2280px!important}.cke_button__spellchecker_icon{background:url(icons.png?t=H0CF) no-repeat 0 -2304px!important}.cke_hidpi .cke_button__about_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -0px!important;background-size:16px!important}.cke_hidpi .cke_button__bold_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -24px!important;background-size:16px!important}.cke_hidpi .cke_button__italic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -48px!important;background-size:16px!important}.cke_hidpi .cke_button__strike_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -72px!important;background-size:16px!important}.cke_hidpi .cke_button__subscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -96px!important;background-size:16px!important}.cke_hidpi .cke_button__superscript_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -120px!important;background-size:16px!important}.cke_hidpi .cke_button__underline_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -144px!important;background-size:16px!important}.cke_hidpi .cke_button__bidiltr_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -168px!important;background-size:16px!important}.cke_hidpi .cke_button__bidirtl_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -192px!important;background-size:16px!important}.cke_hidpi .cke_button__blockquote_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -216px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__copy_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -240px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__copy_icon,.cke_ltr.cke_hidpi .cke_button__copy_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -264px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__cut_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -288px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__cut_icon,.cke_ltr.cke_hidpi .cke_button__cut_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -312px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__paste_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -336px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__paste_icon,.cke_ltr.cke_hidpi .cke_button__paste_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -360px!important;background-size:16px!important}.cke_hidpi .cke_button__codesnippet_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -384px!important;background-size:16px!important}.cke_hidpi .cke_button__bgcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -408px!important;background-size:16px!important}.cke_hidpi .cke_button__textcolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -432px!important;background-size:16px!important}.cke_hidpi .cke_button__copyformatting_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -456px!important;background-size:16px!important}.cke_hidpi .cke_button__creatediv_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -480px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__docprops_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -504px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__docprops_icon,.cke_ltr.cke_hidpi .cke_button__docprops_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -528px!important;background-size:16px!important}.cke_hidpi .cke_button__embed_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -552px!important;background-size:16px!important}.cke_hidpi .cke_button__embedsemantic_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -576px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__find_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -600px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__find_icon,.cke_ltr.cke_hidpi .cke_button__find_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -624px!important;background-size:16px!important}.cke_hidpi .cke_button__replace_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -648px!important;background-size:16px!important}.cke_hidpi .cke_button__flash_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -672px!important;background-size:16px!important}.cke_hidpi .cke_button__button_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -696px!important;background-size:16px!important}.cke_hidpi .cke_button__checkbox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -720px!important;background-size:16px!important}.cke_hidpi .cke_button__form_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -744px!important;background-size:16px!important}.cke_hidpi .cke_button__hiddenfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -768px!important;background-size:16px!important}.cke_hidpi .cke_button__imagebutton_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -792px!important;background-size:16px!important}.cke_hidpi .cke_button__radio_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -816px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__select_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -840px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__select_icon,.cke_ltr.cke_hidpi .cke_button__select_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -864px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textarea_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -888px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textarea_icon,.cke_ltr.cke_hidpi .cke_button__textarea_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -912px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__textfield_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -936px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__textfield_icon,.cke_ltr.cke_hidpi .cke_button__textfield_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -960px!important;background-size:16px!important}.cke_hidpi .cke_button__horizontalrule_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -984px!important;background-size:16px!important}.cke_hidpi .cke_button__iframe_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1008px!important;background-size:16px!important}.cke_hidpi .cke_button__image_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1032px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__indent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1056px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__indent_icon,.cke_ltr.cke_hidpi .cke_button__indent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1080px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__outdent_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1104px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__outdent_icon,.cke_ltr.cke_hidpi .cke_button__outdent_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1128px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyblock_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1152px!important;background-size:16px!important}.cke_hidpi .cke_button__justifycenter_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1176px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyleft_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1200px!important;background-size:16px!important}.cke_hidpi .cke_button__justifyright_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1224px!important;background-size:16px!important}.cke_hidpi .cke_button__language_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1248px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__anchor_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1272px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__anchor_icon,.cke_ltr.cke_hidpi .cke_button__anchor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1296px!important;background-size:16px!important}.cke_hidpi .cke_button__link_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1320px!important;background-size:16px!important}.cke_hidpi .cke_button__unlink_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1344px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__bulletedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1368px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__bulletedlist_icon,.cke_ltr.cke_hidpi .cke_button__bulletedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1392px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__numberedlist_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1416px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__numberedlist_icon,.cke_ltr.cke_hidpi .cke_button__numberedlist_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1440px!important;background-size:16px!important}.cke_hidpi .cke_button__mathjax_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1464px!important;background-size:16px!important}.cke_hidpi .cke_button__maximize_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1488px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__newpage_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1512px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__newpage_icon,.cke_ltr.cke_hidpi .cke_button__newpage_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1536px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pagebreak_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1560px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pagebreak_icon,.cke_ltr.cke_hidpi .cke_button__pagebreak_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1584px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastefromword_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1608px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastefromword_icon,.cke_ltr.cke_hidpi .cke_button__pastefromword_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1632px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__pastetext_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1656px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__pastetext_icon,.cke_ltr.cke_hidpi .cke_button__pastetext_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1680px!important;background-size:16px!important}.cke_hidpi .cke_button__placeholder_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1704px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__preview_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1728px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__preview_icon,.cke_ltr.cke_hidpi .cke_button__preview_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1752px!important;background-size:16px!important}.cke_hidpi .cke_button__print_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1776px!important;background-size:16px!important}.cke_hidpi .cke_button__removeformat_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1800px!important;background-size:16px!important}.cke_hidpi .cke_button__save_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1824px!important;background-size:16px!important}.cke_hidpi .cke_button__scayt_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1848px!important;background-size:16px!important}.cke_hidpi .cke_button__selectall_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1872px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__showblocks_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1896px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__showblocks_icon,.cke_ltr.cke_hidpi .cke_button__showblocks_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1920px!important;background-size:16px!important}.cke_hidpi .cke_button__smiley_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1944px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__source_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1968px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__source_icon,.cke_ltr.cke_hidpi .cke_button__source_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -1992px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__sourcedialog_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2016px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__sourcedialog_icon,.cke_ltr.cke_hidpi .cke_button__sourcedialog_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2040px!important;background-size:16px!important}.cke_hidpi .cke_button__specialchar_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2064px!important;background-size:16px!important}.cke_hidpi .cke_button__table_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2088px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__templates_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2112px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__templates_icon,.cke_ltr.cke_hidpi .cke_button__templates_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2136px!important;background-size:16px!important}.cke_hidpi .cke_button__uicolor_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2160px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__redo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2184px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__redo_icon,.cke_ltr.cke_hidpi .cke_button__redo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2208px!important;background-size:16px!important}.cke_rtl.cke_hidpi .cke_button__undo_icon,.cke_hidpi .cke_mixed_dir_content .cke_rtl .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2232px!important;background-size:16px!important}.cke_hidpi .cke_ltr .cke_button__undo_icon,.cke_ltr.cke_hidpi .cke_button__undo_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2256px!important;background-size:16px!important}.cke_hidpi .cke_button__simplebox_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -4560px!important}.cke_hidpi .cke_button__spellchecker_icon{background:url(icons_hidpi.png?t=H0CF) no-repeat 0 -2304px!important;background-size:16px!important}a.cke_button_disabled,a.cke_button_disabled:hover,a.cke_button_disabled:focus,a.cke_button_disabled:active{filter:alpha(opacity = 30)}.cke_button_disabled .cke_button_icon{filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff)}.cke_button_off:hover,.cke_button_off:focus,.cke_button_off:active{filter:alpha(opacity = 100)}.cke_combo_disabled .cke_combo_inlinelabel,.cke_combo_disabled .cke_combo_open{filter:alpha(opacity = 30)}.cke_toolbox_collapser{border:1px solid #a6a6a6}.cke_toolbox_collapser .cke_arrow{margin-top:1px}.cke_hc .cke_top,.cke_hc .cke_bottom,.cke_hc .cke_combo_button,.cke_hc a.cke_combo_button:hover,.cke_hc a.cke_combo_button:focus,.cke_hc .cke_toolgroup,.cke_hc .cke_button_on,.cke_hc a.cke_button_off:hover,.cke_hc a.cke_button_off:focus,.cke_hc a.cke_button_off:active,.cke_hc .cke_toolbox_collapser,.cke_hc .cke_toolbox_collapser:hover,.cke_hc .cke_panel_grouptitle{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.cke_top,.cke_contents,.cke_bottom{width:100%}.cke_button_arrow{font-size:0}.cke_rtl .cke_toolgroup,.cke_rtl .cke_toolbar_separator,.cke_rtl .cke_button,.cke_rtl .cke_button *,.cke_rtl .cke_combo,.cke_rtl .cke_combo *,.cke_rtl .cke_path_item,.cke_rtl .cke_path_item *,.cke_rtl .cke_path_empty{float:none}.cke_rtl .cke_toolgroup,.cke_rtl .cke_toolbar_separator,.cke_rtl .cke_combo_button,.cke_rtl .cke_combo_button *,.cke_rtl .cke_button,.cke_rtl .cke_button_icon{display:inline-block;vertical-align:top}.cke_rtl .cke_button_icon{float:none}.cke_resizer{width:10px}.cke_source{white-space:normal}.cke_bottom{position:static}.cke_colorbox{font-size:0}"; });
define('text!modules/home/register.html', ['module'], function(module) { module.exports = "<template>\r\n     <compose view='../../resources/elements/submenu.html'></compose>\r\n     <div class=\"col-lg-10 col-lg-offset-1\">\r\n      <div class=\"panel panel-primary topMargin\">\r\n        <div class=\"panel-body\">\r\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n              <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Backve\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n              <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n          </div>\r\n          <div class=\"topMargin col-lg-1\">\r\n           <div style=\"height:100px;width:100px;\" innerhtml.bind=\"people.selectedPerson.email | gravatarUrl:100:6\"></div>\r\n           <div class=\"topMargin\">\r\n               <h6>Register your email with <a href=\"https://en.gravatar.com/\">gravatar.com</a> to show your image.</h6>\r\n           </div>\r\n         </div>\r\n         <div class=\"col-sm-12 col-lg-10 leftMargin topMargin\">\r\n           <form class=\"form-horizontal\">\r\n               <!-- Row 1 -->\r\n               <div class=\"col-lg-3\">\r\n                 <label for=\"register_firstName\" class=\"control-label \">First Name *</label>\r\n                 <input value.bind=\"people.selectedPerson.firstName\" id=\"register_firstName\" class=\"form-control\" placeholder=\"First Name\" type=\"text\" />\r\n               </div>\r\n               <div class=\"col-lg-3\">\r\n                  <label for=\"register_middletName\" class=\"control-label \">Middle Name</label>\r\n                  <input value.bind=\"people.selectedPerson.middleName\" id=\"register_middletName\" class=\"form-control\" placeholder=\"Middle Name\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"register_lastName\" class=\"control-label \">Last Name *</label>\r\n                <input value.bind=\"people.selectedPerson.lastName\" id=\"register_lastName\" class=\"form-control\" placeholder=\"Last Name\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"editNickName\" class=\"control-label\">Nickname</label>\r\n                <input value.bind=\"people.selectedPerson.nickName\" id=\"editNickName\" class=\"form-control \" placeholder=\"Nickname\" type=\"text\" />\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-5\">\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_phone\" class=\"control-label \">Phone *</label>\r\n                    <input class=\"form-control\" id=\"register_phone\" masked=\"value.bind: people.selectedPerson.phone; mask: 999-999-9999; placeholder: *\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_mobile\" class=\"control-label \">Mobile</label>\r\n                    <input id=\"register_mobile\" class=\"form-control\" masked=\"value.bind: people.selectedPerson.mobile; mask: 999-999-9999; placeholder: *\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_email\" class=\"control-label\">Email *</label>\r\n                    <input blur.trigger=\"checkEmail()\" value.bind=\"people.selectedPerson.email\" id=\"register_email\" class=\"form-control\" placeholder=\"Email\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_institution\" class=\"control-label\">Institution *</label>\r\n                    <select value.bind=\"people.selectedPerson.institutionId\" id=\"register_institution\" class=\"form-control\" placeholder=\"Institution\">\r\n                        <option value=\"\">Select an option</option>\r\n                        <option repeat.for=\"institution of people.institutionsArray\" value=\"${institution._id}\">${institution.name}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_password\" class=\"control-label\">Password *</label>\r\n                    <input id=\"register_password\" type=\"password\" placeholder=\"Password\"\r\n                        class=\"form-control\"\r\n                        value.bind=\"people.selectedPerson.password\"\r\n                        blur.trigger=\"passwordComplexity()\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_password_repeat\" class=\"control-label\">Repeat Password *</label>\r\n                    <input id=\"register_password_repeat\" type=\"password\" placeholder=\"Password\"\r\n                        class=\"form-control\"\r\n                        value.bind=\"password_repeat\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-5 col-lg-offset-1\">\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_address1\" class=\"control-label \">Address 1</label>\r\n                    <input value.bind=\"people.selectedPerson.address1\" id=\"register_address1\" class=\"form-control\" placeholder=\"Address 1\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_address2\" class=\"control-label \">Address 2</label>\r\n                    <input value.bind=\"people.selectedPerson.address2\" id=\"register_address2\" class=\"form-control\" placeholder=\"Address2\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_city\" class=\"control-label \">City</label>\r\n                    <input value.bind=\"people.selectedPerson.city\" id=\"register_city\" class=\"form-control\" placeholder=\"City\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_region\" class=\"control-label \">Region</label>\r\n                    <input value.bind=\"people.selectedPerson.region\" id=\"register_region\" class=\"form-control\" placeholder=\"Region\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_postal_code\" class=\"control-label \">Postal Code</label>\r\n                    <input value.bind=\"people.selectedPerson.postalCode\" id=\"register_postal_code\" class=\"form-control\" placeholder=\"Postal Code\" type=\"text\" />\r\n                  </div>\r\n                  <div class=\"col-lg-12\">\r\n                    <label for=\"register_city\" class=\"control-label \">Country</label>\r\n                    <input value.bind=\"people.selectedPerson.country\" id=\"register_city\" class=\"form-control\" placeholder=\"Country\" type=\"text\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"topMargin\">Password should be at least ${thresholdLength} characters long and should contain a combination of the following groups: a combination of lowercase letters, uppercase letters, digits or special characters</div>\r\n              <div class=\"row topMargin\">\r\n               <div class=\"col-lg-5\">\r\n                 <label for=\"register_specialization\" class=\"control-label\">Specialization</label>\r\n                 <select value.bind=\"people.selectedPerson.personSpecialization\" id=\"register_specialization\" class=\"form-control\" placeholder=\"Specializatin\">\r\n                     <option value=\"\">Select an option</option>\r\n                     <option repeat.for=\"name of is4ua.specialArray\" value=\"${name.code}\">${name.description}</option>\r\n                 </select>\r\n               </div>\r\n               <div class=\"col-lg-5 col-lg-offset-1\">\r\n                 <label for=\"register_department\" class=\"control-label\">Department</label>\r\n                 <select value.bind=\"people.selectedPerson.departmentCategory\" id=\"register_department\" class=\"form-control\" placeholder=\"Department\">\r\n                     <option value=\"\">Select an option</option>\r\n                     <option repeat.for=\"name of is4ua.deptArray\" value=\"${name.code}\">${name.description}</option>\r\n                 </select>\r\n               </div>\r\n           </div>\r\n         </form>\r\n         </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"; });
define('text!modules/social/editBlog.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"panel panel-info\">  \n      <div class=\"panel-body\">\n        <div class=\"row\">\n\t\t\t<div show.bind=\"!blogSelected\" class=\"container\">\n\t\t\t\t<compose view=\"./components/blogListUCC.html\"></compose>\n\t\t\t</div>\n            <div show.bind=\"blogSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/blogPageUCC.html\"></compose>\n            </div> \n      </div> \n</template>"; });
define('text!modules/social/social.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n\t\t.navbar-inverse .navbar-brand {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t}\n\t\t.navbar-inverse .navbar-nav>li>a {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t}\n\t\t.navbar-inverse {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t\t.navbar-inverse .navbar-nav>.active>a, .navbar-inverse .navbar-nav>.active>a:hover, .navbar-inverse .navbar-nav>.active>a:focus {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t\t.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {\n\t\t\tbackground-color: ${config.HOVER_SUBMENU_BACKGROUND};;\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t}\n\t</style>\n     <div class=\"subMenu-container\">\n        <nav class=\"navbar navbar-inverse subMenu\">\n            <div class=\"navbar-header\">\n                <a class=\"navbar-brand\">Social</a>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"${row.isActive ? 'active' : ''}\"  repeat.for=\"row of router.navigation\"><a href.bind=\"row.href\">${row.title}</a></li>\n                    <li if.bind=\"blogAuthor\" class=\"${row.isActive ? 'active' : ''}\"><a href=\"#/social/writeBlog\">Write a Blog</a></li>\n                    <li if.bind=\"userObj.userRole >= config.UCC_ROLE\" class=\"${row.isActive ? 'active' : ''}\"><a href=\"#/social/editBlog\">Edit Blogs</a></li>\n                </ul>\n            </div>\n        </nav>\n    </div>  \n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/social/viewBlogs.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"panel panel-info\">  \n      <div class=\"panel-body\">\n        <div class=\"row\">\n\t\t\t<div show.bind=\"!blogSelected\" class=\"container\">\n\t\t\t\t<compose view=\"./components/blogList.html\"></compose>\n\t\t\t</div>\n            <div show.bind=\"blogSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/blogPage.html\"></compose>\n            </div> \n      </div> \n</template>\n"; });
define('text!modules/social/viewForums.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"panel panel-info\">  \n      <div class=\"panel-body\">\n        <div class=\"row\">\n\t\t\t<div show.bind=\"!forumSelected\" class=\"container\">\n\t\t\t\t<compose view=\"./components/forumList.html\"></compose>\n\t\t\t</div>\n            <div show.bind=\"forumSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/forumPage.html\"></compose>\n            </div> \n      </div> \n</template>"; });
define('text!modules/social/writeBlog.html', ['module'], function(module) { module.exports = "<template>\n\t\t<div class=\"panel panel-info\">  \n      <div class=\"panel-body\">\n        <div class=\"row\">\n\t\t\t<div show.bind=\"!blogSelected\" class=\"container\">\n\t\t\t\t<compose view=\"./components/writeBlogList.html\"></compose>\n\t\t\t</div>\n            <div show.bind=\"blogSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/blogForm.html\"></compose>\n            </div> \n      </div> \n</template>"; });
define('text!modules/user/profile.html', ['module'], function(module) { module.exports = "<template>\r\n    <compose view='../../resources/elements/submenu.html'></compose>   \r\n\r\n <div class=\"col-lg-8 col-lg-offset-2\">\r\n  <div class=\"panel panel-primary topMargin\">\r\n    <div class=\"panel-body\">\r\n      <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n          <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n          <span click.delegate=\"changePassword()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Change Password\"><i class=\"fa fa-key fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n          <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n      </div>\r\n      <div class=\"topMargin col-lg-2\">\r\n        <div class=\"topMargin\">\r\n            <img if.bind=\"personImage\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${personImage}\" height=\"100\">\r\n        </div>\r\n        <div if.bind=\"!personImage\" style=\"height:100px;width:100px;\" innerhtml.bind=\"people.selectedPerson.email | gravatarUrl:100:6\"></div>\r\n        <div class=\"topMargin\">\r\n            <h6>Register your email with <a href=\"https://en.gravatar.com/\">gravatar.com</a> to show your image.</h6>\r\n        </div>\r\n        \r\n        <label class=\"btn btn-primary\">\r\n                Or Upload a Photo&hellip; <input type=\"file\" id=\"fileUpload\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\r\n        </label>\r\n        <button if.bind=\"people.selectedPerson.file.fileName\" class=\"btn btn-danger topMargin\" click.trigger=\"deleteImage()\">Delete Image</button>\r\n        <div show.bind=\"showPreview\" class=\"topMargin\">\r\n            <img id=\"preview\"  class=\"circular--square leftMargin\" src=\"\" height=\"100\" alt=\"Image preview...\" ref=\"preview\">\r\n            <label>Preview</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-9 leftMargin topMargin\">\r\n        <form class=\"form-horizontal\">\r\n          <div class=\"row\">\r\n            <!-- Row 1 -->\r\n            <div class=\"col-lg-4\">\r\n              <label for=\"editFirstName\" class=\"control-label hideOnPhone\">Name</label>\r\n              <input value.bind=\"people.selectedPerson.firstName\" id=\"editFirstName\" class=\"form-control input-md\" placeholder=\"First Name\" type=\"text\" />\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label for=\"editMiddleName\" class=\"control-label hideOnPhone\">Middle Name</label>\r\n              <input value.bind=\"people.selectedPerson.middleName\" id=\"editMiddleName\" class=\"form-control input-md\" placeholder=\"Middle Name\" type=\"text\" />\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <label for=\"editLastName\" class=\"control-label hideOnPhone\">Last Name</label>\r\n              <input value.bind=\"people.selectedPerson.lastName\" id=\"editLastName\" class=\"form-control input-md\" placeholder=\"Last Name\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <!-- Row 2 -->\r\n          <div class=\"row topMargin\">\r\n            <div class=\"col-lg-5\">\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editPhone\" class=\"control-label hideOnPhone\">Phone</label>\r\n                  <input value.bind=\"people.selectedPerson.phone| phoneNumber\" id=\"editPhone\" class=\"form-control input-md\" placeholder=\"Phone\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editext\" class=\"control-label hideOnPhone\">Extension</label>\r\n                  <input value.bind=\"people.selectedPerson.ext\" id=\"editext\" class=\"form-control input-md\" placeholder=\"Extension\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editMobile\" class=\"control-label hideOnPhone\">Mobile</label>\r\n                  <input value.bind=\"people.selectedPerson.mobile | phoneNumber\" id=\"editMobile\" class=\"form-control input-md\" placeholder=\"Mobile\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editEmail\" class=\"control-label hideOnPhone\">Email</label>\r\n                  <input disabled value.bind=\"people.selectedPerson.email\" id=\"editEmail\" class=\"form-control input-md\" placeholder=\"Email\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editInstitution\" class=\"control-label\">Institution</label>\r\n                  <select value.bind=\"people.selectedPerson.institutionId\" id=\"editInstitution\" class=\"form-control input-md\" placeholder=\"Institution\">\r\n                      <option value=\"\">Select an option</option>\r\n                      <option repeat.for=\"institution of people.institutionsArray\" value=\"${institution._id}\">${institution.name}</option>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-5 col-lg-offset-1\">\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editAddress1\" class=\"control-label hideOnPhone\">Address 1</label>\r\n                  <input value.bind=\"people.selectedPerson.address1\" id=\"editAddress1\" class=\"form-control input-md\" placeholder=\"Address 1\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editAddress2\" class=\"control-label hideOnPhone\">Address 2</label>\r\n                  <input value.bind=\"people.selectedPerson.address2\" id=\"editAddress2\" class=\"form-control input-md\" placeholder=\"Address2\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editCity\" class=\"control-label hideOnPhone\">City</label>\r\n                  <input value.bind=\"people.selectedPerson.city\" id=\"editCity\" class=\"form-control input-md\" placeholder=\"City\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editRegion\" class=\"control-label hideOnPhone\">Region</label>\r\n                  <input value.bind=\"people.selectedPerson.region\" id=\"editRegion\" class=\"form-control input-md\" placeholder=\"Region\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editPostalCode\" class=\"control-label hideOnPhone\">Postal Code</label>\r\n                  <input value.bind=\"people.selectedPerson.postalCode\" id=\"editPostalCode\" class=\"form-control input-md\" placeholder=\"Postal Code\" type=\"text\" />\r\n              </div>\r\n              <div class=\"col-lg-12\">\r\n                  <label for=\"editCountry\" class=\"control-label hideOnPhone\">Country</label>\r\n                  <input value.bind=\"people.selectedPerson.country\" id=\"editCountry\" class=\"form-control input-md\" placeholder=\"Country\" type=\"text\" />\r\n              </div>\r\n          </div>\r\n            <div class=\"row topMargin\">\r\n              <div class=\"col-lg-5\">\r\n               <label for=\"editSpecialization\" class=\"control-label\">Specialization</label>\r\n               <select value.bind=\"people.selectedPerson.personSpecialization\" id=\"editSpecialization\" class=\"form-control input-md\" placeholder=\"Specializatin\">\r\n                   <option value=\"\">Select an option</option>\r\n                   <option repeat.for=\"name of is4ua.specialArray\" value=\"${name.code}\">${name.description}</option>\r\n               </select>\r\n              </div>\r\n              <div class=\"col-lg-5 col-lg-offset-1\">\r\n               <label for=\"editDepartment\" class=\"control-label\">Department</label>\r\n               <select value.bind=\"people.selectedPerson.departmentCategory\" id=\"editDepartment\" class=\"form-control input-md\" placeholder=\"Department\">\r\n                   <option value=\"\">Select an option</option>\r\n                   <option repeat.for=\"name of is4ua.deptArray\" value=\"${name.code}\">${name.description}</option>\r\n               </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n     </div>\r\n   </div>\r\n </div>\r\n</div>\r\n</template>\r\n"; });
define('text!modules/user/resetPassword.html', ['module'], function(module) { module.exports = "<template>\r\n  <div class=\"container\">\r\n    <div class=\"panel panel-primary topMargin\">\r\n      <div class=\"panel-body\">\r\n        <div show.bind=\"showForm\">\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"register_password\" class=\"control-label\">Password *</label>\r\n                <input id=\"register_password\" type=\"password\" placeholder=\"Password\" class=\"form-control input-md\" value.bind=\"newPassword\"\r\n                  blur.trigger=\"passwordComplexity()\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"register_password_repeat\" class=\"control-label\">Repeat Password *</label>\r\n                <input id=\"register_password_repeat\" type=\"password\" placeholder=\"Repeat Password\" class=\"form-control input-md\" value.bind=\"password_repeat\"\r\n                />\r\n            </div>\r\n            <button class=\"btn btn-primary\" click.trigger=\"savePassword()\">Reset Password</button>\r\n          </form>\r\n        </div>\r\n        <div show.bind=\"!showForm\">\r\n          <h3>That validation code appears to have expired.</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"; });
define('text!modules/user/user.html', ['module'], function(module) { module.exports = "<template>\r\n  <compose view=\"./components/banner.html\"></compose>\r\n\r\n  <div class=\"fluid-container\">\r\n        <div class=\"hoverProfile\" style=\"background-color:cyan\">\r\n            <span  click.delegate=\"hideAlert()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close\"><i class=\"fa fa-window-close-o\" aria-hidden=\"true\"></i></span>\r\n            <h4 class=\"pull-right\">${alert.title}</h4>\r\n            <hr/>\r\n            <div innerhtml.bind=\"alert.content\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-3 leftMargin\">\r\n                <div class=\"bigMarginTop leftMargin\">\r\n                    <compose view=\"./components/uccInformation.html\"></compose>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-lg-4\">\r\n                <div style=\"height:500px;\">\r\n                    <compose view=\"./components/carousel.html\"></compose>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-lg-3 col-lg-offset-1\">\r\n                <a class=\"twitter-timeline\"  href=\"https://twitter.com/hashtag/SAPNextGen\" data-widget-id=\"826153620517376000\">#SAPNextGen Tweets</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n             <div class=\"col-lg-3 bigTopMargin leftMargin\">\r\n                <h2 class=\"underline bottomMargin\">Useful Links</h2>\r\n                <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'OLNK'\">\r\n                    <compose view=\"./components/homePageLinks.html\"></compose>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"col-lg-4 bigTopMargin\">\r\n                <h2 show.bind=\"siteinfo.siteArray | infoFilter:'NEWS':true\" class=\"underline topMargin\">UCC and UA News</h2>\r\n                <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'NEWS'\">\r\n                    <compose view=\"./components/newsItem.html\"></compose>\r\n                </div>\r\n            </div>\r\n \r\n            <div class=\"col-lg-3 col-lg-offset-1 bigTopMargin\">\r\n                <h2 class=\"underline\">Useful Information</h2>\r\n                <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'DLNK'\">\r\n                    <compose view=\"./components/newsItem.html\"></compose>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n"; });
define('text!resources/dialogs/confirm-dialog.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n\t\t.modal-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n    <div tabindex=\"-1\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" click.trigger=\"controller.cancel()\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                    <h4 class=\"modal-title\">${header}</h4>\n                </div>\n                <div class=\"modal-body\">\n                   ${message}?\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\" click.trigger=\"controller.cancel()\">No!</button>\n                    <button type=\"button\" class=\"btn btn-danger\" click.trigger=\"controller.ok()\">Yes</button>\n                </div>\n            </div><!-- /.modal-content  -->\n        </div><!-- /.modal-dialog -->\n    </div><!-- /.modal -->\n</template>"; });
define('text!resources/dialogs/document-dialog.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n\t<ux-dialog style=\"width:800px;\">\n\t\t<ux-dialog-header>${model.title}</ux-dialog-header>\n\t\t<ux-dialog-body>\n\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t<div show.bind=\"!categoryForm\">\n\t\t\t\t\t\t\t\t<label>Avuxlable Categories</label>\n\t\t\t\t\t\t\t\t<div class=\"well well2 overFlow\" style=\"height:400px;\">\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter Categories\" />\n\t\t\t\t\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t\t\t\t\t<button click.trigger=\"typeChanged($index)\" type=\"button\" repeat.for=\"type of filteredDocumentArray\" id=\"${type.code}\" class=\"list-group-item\">${type.description}</button>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-lg-8\" style='padding:15px;'>\n\t\t\t\t\t\t\t<table show.bind=\"model.documents.documents.length > 0\" id=\"coursesTable\" class=\"table table-striped table-hover\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>Document </th>\n\t\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr repeat.for=\"document of model.documents.documents\">\n\t\t\t\t\t\t\t\t\t\t<td data-title=\"name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\">${document.fileName}</a></td>\n\t\t\t\t\t\t\t\t\t\t<td click.trigger=\"removeDocument($index)\"><i class=\"fa fa-trash\"></i></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<div show.bind=\"showDocuments\">\n\t\t\t\t\t\t\t\t<div show.bind=\"showDocumentForm\">\n\t\t\t\t\t\t\t\t\t<compose view=\"./documentForm.html\"></compose>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<compose show.bind=\"!showDocumentForm\" view=\"./documentsTable.html\"></compose>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</ux-dialog-body>\n\n\t\t<ux-dialog-footer>\n\t\t\t<div class=\"pull-right topMargin bottomMargin rightMargin\">\n\t\t\t\t<button class=\"btn btn-primary smallMarginRight\" repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n\t\t\t</div>\n\t\t</ux-dialog-footer>\n\t</ux-dialog>\n</template>\n"; });
define('text!resources/dialogs/documentForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div id=\"no-more-tables\">\r\n        <table class=\"table table-striped table-hover cf\">\r\n            <thead class=\"cf\">\r\n                <tr>\r\n                    <th>Add</th>\r\n                    <th>Name</th>\r\n                    <th>Version</th>\r\n                    <th>Date Uploaded</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr repeat.for=\"item of documents.selectedDocument.files\">\r\n                    <td click.trigger=\"addDocument($index)\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></td>\r\n                    <td data-title=\"Name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${documents.selectedDocument.categoryCode}/${documents.selectedDocument.name}/${item.fileName}\">${item.originalFilename}</a></td>\r\n                    <td data-title=\"Version\">${item.version}</td>\r\n                    <td data-title=\"Date Uploaded\">${item.dateUploaded | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>"; });
define('text!resources/dialogs/documentsTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class='row'>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <div id=\"no-more-tables\">\r\n                <table class=\"table table-striped table-hover cf\">\r\n                    <thead class=\"cf\">\r\n                        <tr>\r\n                            <th>Name </th>\r\n                            <th>Description</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr click.trigger=\"chooseDocument($index, $event)\" repeat.for=\"item of documents.documentsArray\">\r\n                            <td data-title=\"name\">${item.name}</td>\r\n                            <td data-title=\"description\">${item.description}</td>\r\n                            <td data-title=\"createdDate\">${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!resources/dialogs/email-dialog.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n\t<ux-dialog style=\"max-width: 600px\">\n    \t<ux-dialog-header>${model.title}</ux-dialog-header>\n\n\t\t<ux-dialog-body>\n\t\t\t<input class=\"form-control bottomMargin\" value.bind=\"model.email.emailSubject\" placeholder=\"Subject\"/>\n\t\t\t<editor value.bind=\"model.email.emailBody\" height=\"250\"></editor>\n\t\t</ux-dialog-body>\n\n\t\t<ux-dialog-footer>\n\t\t\t<button class=\"btn btn-primary\" repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n\t\t</ux-dialog-footer>\n  \t</ux-dialog>\n</template>\n"; });
define('text!resources/dialogs/event-dialog.html', ['module'], function(module) { module.exports = "<template>\n\t<style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n  <ux-dialog style=\"max-width: 800px\">\n    <ux-dialog-header>${model.title}</ux-dialog-header>\n\n    <ux-dialog-body>\n\t\t<label>Title</label>\n\t\t<input class=\"form-control\" value.bind=\"model.event.eventTitle\" ref=\"titleInput\"></input>\n\t\t<label>Start Time</label>\n\t\t<flat-picker controlid=\"startDate\" config.bind=\"flatpickrConfig\" value.bind=\"model.event.eventStart\"></flat-picker>\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label class=\"pull-left\">\n\t\t\t\t\t<input id=\"activeProduct\" checked.bind=\"model.event.allDay\" type=\"checkbox\"> All day\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<br/>\n\t\t<div show.bind=\"!model.event.allDay\">\n\t\t\t<label>End Time</label>\n\t\t\t<flat-picker controlid=\"endDate\" config.bind=\"flatpickrConfig\" value.bind=\"model.event.eventEnd\"></flat-picker>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label class=\"pull-left\">\n\t\t\t\t\t<input id=\"uccRelated\" checked.bind=\"model.event.scope\" type=\"checkbox\"> UCC related\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<label>Notes</label>\n\t\t<editor value.bind=\"model.event.notes\" height=\"250\"></editor>\n    </ux-dialog-body>\n\n    <ux-dialog-footer> \n      <button class=\"btn btn-primary smallMarginRight\" repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>"; });
define('text!resources/dialogs/message-dialog.html', ['module'], function(module) { module.exports = "<template>\n  <style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n  <ux-dialog style=\"max-width: 325px\">\n    <ux-dialog-header>${model.title}</ux-dialog-header>\n\n    <ux-dialog-body>\n      ${model.message}\n    </ux-dialog-body>\n\n    <ux-dialog-footer>\n      <button repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n"; });
define('text!resources/dialogs/note-dialog.html', ['module'], function(module) { module.exports = "<template>\n  <style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n  <ux-dialog style=\"max-width: 600px\">\n    <ux-dialog-header>${model.title}</ux-dialog-header>\n\n    <ux-dialog-body>\n\t\t<select class=\"form-control\" value.bind=\"model.selectedCategory\">\n\t\t\t<option repeat.for=\"option of model.note.noteCategories\" model.bind=\"$index\">${option}</option>\n\t\t</select>\n      \t<editor value.bind=\"model.note.noteBody\" height=\"250\"></editor>\n    </ux-dialog-body>\n\n    <ux-dialog-footer>\n      <button class=\"btn btn-primary smallMarginRight\" repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n    </ux-dialog-footer>\n  </ux-dialog>\n</template>\n"; });
define('text!resources/dialogs/password-dialog.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n\t\tux-dialog-header {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t</style>\n\t<ux-dialog style=\"width: 600px;\">\n\t\t<ux-dialog-header>${model.title}</ux-dialog-header>\n\n\t\t<ux-dialog-body style=\"height:300px;\">\n\t\t\t<h6>Password should be at least ${thresholdLength} characters long and should contuxn a combination of the following groups:  </h6>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><h6>lowercase letters</h6></li>\n\t\t\t\t\t<li><h6>uppercase letters</h6></li>\n\t\t\t\t\t<li><h6> digits or special characters</h6></li>\n\t\t\t\t</ul>\n\t\t\t<div class=\"topMargin\" style=\"height:50px;\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"register_password\" class=\"col-sm-3 control-label\">Password</label>\n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<input id=\"register_password\" type=\"password\" attach-focus=\"true\" placeholder=\"Password\" class=\"form-control input-md\" value.bind=\"password\"\n\t\t\t\t\t\tblur.trigger=\"passwordComplexity()\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"topMargin\">\n\t\t\t\t<div class=\"form-group topMargin\" >\n\t\t\t\t\t<label for=\"register_password_repeat\" class=\"col-sm-3 control-label\">Repeat Password</label>\n\t\t\t\t\t<div class=\"col-md-8\">\n\t\t\t\t\t\t<input id=\"register_password_repeat\" type=\"password\" placeholder=\"Password\" class=\"form-control input-md\" value.bind=\"password_repeat\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ux-dialog-body>\n\n\t\t<ux-dialog-footer>\n\t\t\t<button class=\"btn btn-primary smallMarginRight\" repeat.for=\"option of model.options\" click.trigger=\"selectOption(option)\">${option}</button>\n\t\t</ux-dialog-footer>\n\t</ux-dialog>\n</template>\n"; });
define('text!resources/editor/editor.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"summernote-host\" id.bind=\"editorId\" ref=\"editor\"></div>\n</template>"; });
define('text!resources/elements/add-systems.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"col-lg-12\">\n    <form>\n      <div class=\"col-md-5 topMargin\">\n        <label>Available Systems</label>\n        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter systems\"/>\n            <ul class=\"list-group\">\n              <button click.trigger=\"selectSystem($event, system)\" type=\"button\" repeat.for=\"system of filteredsystemsarray\" id=\"${system._id}\"\n                      class=\"list-group-item\">${system.sid}</button>\n            </ul>\n        </div>\n      </div>\n      <div class=\"col-md-5 topMargin col-md-offset-1\">\n        <label>Assigned Systems</label>\n        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n          <ul class=\"list-group\">\n            <button click.trigger=\"removeSystem($event, system)\" type=\"button\" repeat.for=\"system of selectedproduct.systems\" id=\"${system._id}\"\n                    class=\"list-group-item\">${system.sid}</button>\n          </ul>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n"; });
define('text!resources/elements/flat-picker.html', ['module'], function(module) { module.exports = "<template>\n    <require from=\"flatpickr/flatpickr.css\"></require>\n    <input style=\"background-color:white;\" id=\"${controlid}\" class=\"aurelia-flatpickr form-control\" type=\"text\" placeholder=\"Select Date..\">\n</template>"; });
define('text!resources/elements/nav-bar.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n        .navbar-default {\n            color: ${config.MENU_COLOR};\n            background-color:${config.MENU_BACKGROUND}\n        }\n        .navbar-inverse .navbar-nav>.active>a, .navbar-inverse .navbar-nav>.active>a:hover, .navbar-inverse .navbar-nav>.active>a:focus {\n            color: ${config.ACTIVE_MENU_COLOR};\n            background-color:${config.MENU_BACKGROUND}\n        }\n    </style>\n    <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n                aria-expanded=\"false\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                 \n                <span if.bind=\"config.NAVBAR_LOGO && config.NAVBAR_LOGO.length>0\">\n                    <a if.bind=\"isAuthenticated\"  class=\"navbar-brand\" href=\"#/user\"><img  src=\"/img/${config.NAVBAR_LOGO}\" ></a>\n                    <a if.bind=\"!isAuthenticated\" class=\"navbar-brand\" href=\"#/home\"><img  src=\"/img/${config.NAVBAR_LOGO}\" ></a>\n                </span>\n                 <span if.bind=\"!config.NAVBAR_LOGO || config.NAVBAR_LOGO.length===0\">\n                    <a if.bind=\"isAuthenticated\" class=\"navbar-brand\" href=\"#/user\"><i class=\"fa fa-home\"></i> UCCSS</a>\n                    <a if.bind=\"!isAuthenticated\" class=\"navbar-brand\" href=\"#/home\"><i class=\"fa fa-home\"></i> UCCSS</a>\n                </span>\n              \n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\n                <form if.bind=\"!isAuthenticated && !passwordReset\" class=\"navbar-form navbar-left\" role=\"search\">\n                    <div class=\"form-group\">\n                        <input value.bind=\"email\" type=\"email\" autofocus class=\"form-control\" id=\"email\" placeholder=\"Email\"></input>\n                    </div>\n                    <div class=\"form-group\">\n                        <input value.bind=\"password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"></input>\n                    </div>\n                    <button class=\"btn btn-default\" click.delegate='login()'>Login</button>\n                    <button class=\"btn btn-link\" click.delegate=\"requestPasswordReset()\">Forgot password</button>\n                     <label if.bind=\"loginError\" style=\"color:white;\">${loginError}</label>\n                </form>\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"dropdown\">\n                        <a if.bind=\"userObj.userRole >= config.UCC_ROLE\" href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Administration <span class=\"caret\"></span></a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a href=\"#/system\">System Admin</a></li>\n                            <li><a href=\"#/customers\">Customers</a></li>\n                            <li><a href=\"#/site\">Site</a></li>\n                            <li><a href=\"#/documents\">Documents</a></li>\n                             <li><a href=\"#/inventory\">Inventory</a></li>\n                        </ul>\n                    </li>\n                     <li class=\"dropdown\">\n                        <a if.bind=\"userObj.userRole >= config.UCC_TECH_ROLE\" href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Technical <span class=\"caret\"></span></a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a href=\"#/techRq\">Product Requests</a></li>\n                            <li><a href=\"#/techHt\">Help Tickets</a></li>\n                        </ul>\n                    </li>\n                    <li if.bind=\"isAuthenticated\"><a href=\"#/social\">Social</a></li>\n                    <li if.bind=\"userObj.userRole >= config.USER_ROLE\"><a href=\"#/facco\">Faculty Coordinator</a></li>\n                    <li if.bind=\"isAuthenticated\"><a href=\"#/support\">Support</a></li>\n                    <li if.bind=\"isAuthenticated\"><a href=\"#/clientRequests\">Product Requests</a></li>\n                    <li if.bind=\"isAuthenticated && userObj.userRole >= config.UA_ROLE\"><a href=\"#/analytics\">Analytics</a></li>\n                </ul>\n\n                <ul class=\"nav navbar-nav navbar-right\">\n                     <li class=\"dropdown\">\n                        <a if.bind=\"userObj.userRole >= config.UCC_ROLE\" href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Notes<span class=\"caret\"></span></a>\n                        <ul class=\"dropdown-menu\">\n                            <li><a click.trigger=\"enterNote()\" href=\"#\">Enter Note</a></li>\n                            <li><a href=\"#/notes\">Notes</a></li>\n                        </ul>\n                    </li>  \n                   \n                    <li if.bind=\"!isAuthenticated\"><a href=\"#/register\">Register</a></li>\n                    <li if.bind=\"isAuthenticated\"><a href=\"#/profile\">Profile</a></li>\n                    <li><a href=\"#/about\">About the UCC</a></li>\n                    <li if.bind=\"isAuthenticated\" click.trigger=\"logout()\"><a href=\"#\">Logout</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</template>"; });
define('text!resources/elements/rate-it.html', ['module'], function(module) { module.exports = "<template>\n    <fieldset class=\"rating\">\n\t\t<span repeat.for=\"rate of rates\" >\n\t\t\t<input  type=\"radio\" name=\"${rate.name}\" id=\"${rate.id}\" title=\"${rate.title}\" />\n\t\t\t<label click.delegate=\"rateIt(rate.value, $index)\" class=\"${rate.class}\" for=\"${rate.title}\" title=\"${rate.title}\"></label>\n\t\t</span>\n    </fieldset>\n</template>"; });
define('text!resources/elements/submenu.html', ['module'], function(module) { module.exports = "<template>\n\t<style>\n\t\t.navbar-inverse .navbar-brand {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t}\n\t\t.navbar-inverse .navbar-nav>li>a {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t}\n\t\t.navbar-inverse {\n\t\t\tcolor: ${config.SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t\t.navbar-inverse .navbar-nav>.active>a, .navbar-inverse .navbar-nav>.active>a:hover, .navbar-inverse .navbar-nav>.active>a:focus {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n\t\t}\n\t\t.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {\n\t\t\tbackground-color: ${config.HOVER_SUBMENU_BACKGROUND};;\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t}\n\t</style>\n    <div class=\"subMenu-container\">\n        <nav class=\"navbar navbar-inverse subMenu\">\n            <div class=\"navbar-header\">\n                <a class=\"navbar-brand\">${title}</a>\n            </div>\n            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"${row.isActive ? 'active' : ''}\" repeat.for=\"row of router.navigation\"><a href.bind=\"row.href\">${row.title}</a></li>\n                </ul>\n            </div>\n        </nav>\n    </div>\n</template>"; });
define('text!resources/elements/table-navigation-bar.html', ['module'], function(module) { module.exports = "<template>\n    <div class='row'>\n        <div class=\"col-lg-2\">\n            <label style=\"padding-left:15px;\" class=\"pull-left\">Records ${dataTable.firstVisible} - ${dataTable.lastVisible}/${dataTable.displayLength}</label>\n        </div>\n        <div class=\"col-lg-8 text-center\">\n            <div  class=\"center-block\">\n                <span show.bind=\"dataTable.pageButtons.length > 1\">\n                    <ul class=\"pagination\" id=\"${navControl}\">\n                        <li click.trigger=\"dataTable.backward()\"><a href=\"#!\"><i class=\"fa fa-chevron-left\"></i></a></li>\n                            <li click.trigger=\"dataTable.pageButton($index, $event)\" class=\"hidden-xs hidden-sm waves-effect ${$first ? 'active' : ''}\" repeat.for=\"page of dataTable.pageButtons\"><a>${page}</a></li>\n                        <li click.trigger=\"dataTable.forward()\"><a href=\"#!\"><i class=\"fa fa-chevron-right\"></i></a></li>\n                    </ul>\n                </span>\n            </div>\n        </div>\n        <div class=\"col-lg-2\">\n            <div class=\"input-field col-sm-12 hidden-xs hidden-sm\">\n                <label>Rows</label>\n                <select id=\"rowsShownSelect\" value.bind=\"dataTable.numRowsShown\" change.delegate=\"dataTable.updateTake()\" class=\"pull-right form-control\"\n                    style=\"width:100px;margin-left:5px;\">\n                    <option repeat.for=\"rows of dataTable.rowOptions\" value.bind=\"rows\">${rows}</option>\n                </select>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!resources/elements/tree-node.html', ['module'], function(module) { module.exports = "<template>\n\t<style>\n\t\t.menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n\t\t}\n\t</style>\n\t<require from=\"./tree-node.css\"></require>\n\t<li if.bind=\"visible\" class=\"list-group-item treeview ${selectedNode == data?'menuButtons':''}\" click.delegate=\"clickMe(data)\">\n\t\t<span class=\"indent\" repeat.for=\"i of level\"></span>\n\t\t<span if.bind=\"data.children\" class=\"icon glyphicon ${childrenVisible?'glyphicon-triangle-bottom':'glyphicon-triangle-right'}\" click.delegate=\"toggleExpand(data)\"></span>\n\t\t<span if.bind=\"!data.children\" class=\"icon glyphicon\"></span>\n\t\t${data.name}<span if.bind=\"!childrenVisible && itemCount != 0\" class=\"badge\" click.delegate=\"toggleExpand()\">${itemCount}</span>\n\t\t <span if.bind=\"!data.children\" class=\"icon glyphicon glyphicon-trash pull-right\" click.delegate=\"callback(data)\"></span>\n\t</li>\n\t<tree-node if.bind=\"visible\"  callback.call=\"deleteFile2(node)\" selected-file.bind=\"selectedFile\" repeat.for=\"node of data.children\" data.bind=\"node\" level.bind=\"level + 1\" visible.bind=\"childrenVisible\" max-level.bind=\"maxLevel\" selected-node.bind=\"selectedNode\"></tree-node>\n</template>"; });
define('text!resources/htTimeline/response.html', ['module'], function(module) { module.exports = "<template>\n\t <div class=\"topMargin\">\n\t\t<img if.bind=\"helpTickets.selectedHelpTicket.personId.file.fileName\" class=\"smart-timeline-icon bottomMarginLg\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${helpTickets.selectedHelpTicket.personId.file.fileName}\" height=\"100\">\n\t</div>\n\n    <div if.bind=\"!helpTickets.selectedHelpTicket.personId.file.fileName\" class=\"smart-timeline-icon bottomMarginLg\" innerhtml.bind=\"helpTickets.selectedHelpTicket.personId.email | gravatarUrl:100:1\"></div>\n\t<div class=\"smart-timeline-time\">\n\t\t<small>${event.createdDate | dateFormat:'YYYY-MM-DD':true}</small>\n\t\t<p><span if.bind=\"event.emailSent\"  ><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></span></p>\n    \t<span if.bind=\"event.confidential\"  ><i class=\"fa fa-user-secret\" aria-hidden=\"true\"></i></i></span> \n\t</div>\n\t<div class=\"smart-timeline-content borderTop leftJustify\">\n\t\t<div class=\"form-group\">\n\t\t\t<p>${event.personId.fullName}</p>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"topMargin bottomMargin\"  innerhtml.bind=\"event.content.comments ? event.content.comments : ' ' \"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"hover_img\" repeat.for=\"file of event.files\">\n\t\t\t\t<a href=\"${config.HELPTICKET_FILE_DOWNLOAD_URL}/${helpTickets.selectedHelpTicket.helpTicketNo}/${file.fileName}\" target=\"_blank\"\n\t\t\t\t\tinnerhtml.bind=\"file.fileName | fileType:helpTickets.selectedHelpTicket.helpTicketNo:'helpTickets':file.originalFilename\"></a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"hover_img\" repeat.for=\"document of event.documents\">\n\t\t\t\t<a href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\" target=\"_blank\">${document.fileName}</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!resources/htTimeline/timeline.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"well well-sm topMargin\">\n      <div class=\"smart-timeline\">\n        <ul class=\"smart-timeline-list\">\n          <li>\n            <div class=\"topMargin\">\n                <img if.bind=\"helpTickets.selectedHelpTicket.personId.file.fileName\" class=\"smart-timeline-icon bottomMarginLg\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${helpTickets.selectedHelpTicket.personId.file.fileName}\" height=\"100\">\n            </div>\n\n            <div if.bind=\"!helpTickets.selectedHelpTicket.personId.file.fileName\" class=\"smart-timeline-icon bottomMarginLg\" innerhtml.bind=\"helpTickets.selectedHelpTicket.personId.email | gravatarUrl:100:1\"></div>\n              <div class=\"smart-timeline-time\">\n                <small>${helpTickets.selectedHelpTicket.createdDate | dateFormat:'YYYY-MM-DD':true}</small>\n              </div>\n              <div class=\"smart-timeline-content borderTop leftJustify\">\n                <div class=\"form-group\">\n                  <p>${helpTickets.selectedHelpTicket.personId.fullName}</p>\n                  <div class=\"row\">\n                    <div class=\"col-lg-4\">\n                      <span class=\"col-sm-11 col-sm-offset-1\" id=\"container\"></span>\n                      <h4 show.bind=\"showCourse\" class=\"col-sm-11 col-sm-offset-1 topMargin\">Course: ${course}</h4>\n                      <div show.bind=\"showRequestDetails\">\n                        <h4  class=\"col-sm-11 col-sm-offset-1 topMargin\">Request: ${helpTickets.selectedHelpTicket.requestId.requestNo}</h4>\n                        <h4  class=\"col-sm-11 col-sm-offset-1\">Assignments</h4>\n                        <table class=\"col-sm-11 col-sm-offset-1\">\n                          <tr>\n                            <th class=\"col-lg-1\">System</th>\n                            <th class=\"col-lg-1\">Client</th>\n                          </tr>\n                          <tr repeat.for=\"assign of helpTickets.selectedHelpTicket.requestId.assignments\">\n                            <td class=\"col-lg-1\"><h4>${assign.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</h4></td>\n                            <td class=\"col-lg-1\"><h4>${assign.client}</h4></td>\n                          </tr>\n                        </table>\n                          <!--\n                        <h4  class=\"col-sm-11 col-sm-offset-1 topMargin\">System: ${systems.selectedSystem.sid}</h4>\n                        <h4  class=\"col-sm-11 col-sm-offset-1 \">Client: ${helpTickets.selectedHelpTicket.client}</h4>\n                        -->\n                      </div>\n                      <h4 show.bind=\"!showRequestDetails && clientRequired\" class=\"col-sm-11 col-sm-offset-1 topMargin\">Client not assigned</h4>\n                   \n                      <div class=\"form-group topMargin\">\n                          <div class=\"hover_img\" repeat.for=\"file of helpTickets.selectedHelpTicket.content[0].files\">\n                            <a href=\"${config.HELPTICKET_FILE_DOWNLOAD_URL}/${helpTickets.selectedHelpTicket.helpTicketNo}/${file.fileName}\"\n                              target=\"_blank\"\n                              innerhtml.bind=\"file.fileName | fileType:helpTickets.selectedHelpTicket.helpTicketNo:'helpTickets':file.originalFilename\"></a>\n                          </div>\n                      </div>\n                     </div>\n                    <div class=\"col-lg-7\">\n                      <div class=\"topMargin bottomMargin\"  innerhtml.bind=\"helpTickets.selectedHelpTicket.content[0].content.comments ? helpTickets.selectedHelpTicket.content[0].content.comments : ' ' \"></div>\n                      <div show.bind=\"helpTickets.selectedHelpTicket.content[0].content.steps\">\n                        <hr/>\n                        <h4 >Steps to reproduce the problem</h4>\n                        <div class=\"topMargin bottomMargin\"  innerhtml.bind=\"helpTickets.selectedHelpTicket.content[0].content.steps ? helpTickets.selectedHelpTicket.content[0].content.steps : ' ' \"></div>\n                      </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n          </li>\n          <li repeat.for=\"event of helpTickets.selectedHelpTicket.content | sortDateTime:'createdDate':'DESC':isUCC:true\">\n            <compose view=\"./response.html\"></compose>\n          </li>\n        </ul>\n      </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/bulkEmails.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n\t\t<compose view=\"./components/selectionForm.html\"></compose>\n\t\t<compose view=\"./components/emailTable.html\"></compose>\n        </div> \n      </div> \n</template>"; });
define('text!modules/admin/Customers/customers.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template"; });
define('text!modules/admin/Customers/editInstitutions.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!institutionSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/institutionsTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"institutionSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/institutionsForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/Customers/editPeople.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!personSelected && !bulkEmailSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/peopleTable.html\"></compose>\n            </div> \n            <div show.bind=\"personSelected && !bulkEmailSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/peopleForm.html\"></compose>\n            </div>\n        </div> \n      </div> \n</template>"; });
define('text!modules/admin/documents/documents.html', ['module'], function(module) { module.exports = "<template>\r\n    <style>\r\n        .menuButtons {\r\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\r\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\r\n        }\r\n    </style>\r\n    <compose view='../../../resources/elements/submenu.html'></compose>\r\n\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3\">\r\n                    <div class=\"bottomMargin list-group-item\">\r\n                        <span click.delegate=\"newCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                            title=\"\" data-original-title=\"New Category\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                        <span disabled.bind=\"showDocuments\" click.delegate=\"editCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                            title=\"\" data-original-title=\"Edit\"><i class=\"fa fa-pencil fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                        <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                            title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh fa-lg fa-border\" aria-hidden=\"true\"></i></span> \r\n                    </div>\r\n                    <div show.bind=\"categoryForm\">\r\n                        <div class=\"panel panel-default\" style=\"background-color:ghostwhite;\">\r\n                            <div class=\"panel-body\">\r\n                                <div class=\"bottomMargin\">\r\n                                    <div class=\"bottomMargin list-group-item\">\r\n                                        <span click.delegate=\"backCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" \r\n                                            title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                                        <span click.delegate=\"saveCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                            title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                                        <span click.delegate=\"cancelEditCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                            title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                                                                                    \r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input id=\"name\" value.bind=\"documents.selectedCat.description\" type=\"text\" placeholder=\"Category Name\" class=\"form-control\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div show.bind=\"!categoryForm\">\r\n                        <label>Available Categories</label>\r\n                        <div class=\"well well2 overFlow\" style=\"height:600px;\">\r\n                            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter Categories\" />\r\n                            <ul id=\"categoryList\" class=\"list-group\">\r\n                                <button click.trigger=\"typeChanged($index, $event)\" type=\"button\" repeat.for=\"type of filteredDocumentArray\" id=\"${type.code}\" class=\"${ $first ? 'menuButtons' : ''} list-group-item\">${type.description}</button>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div show.bind=\"showDocuments\" class=\"col-lg-9\" >\r\n                    <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n                        <h3>${documents.selectedCat.description}</h3>\r\n                        <h5>${displayTitle}</h5>\r\n                    </div>\r\n                    <div show.bind=\"showDocumentForm\">\r\n                        <compose view=\"./components/documentForm.html\"></compose>\r\n                    </div>\r\n                    <compose show.bind=\"!showDocumentForm\" view=\"./components/documentsTable.html\"></compose>\r\n                </div>\r\n            </div>\r\n</template>"; });
define('text!modules/admin/inventory/editInventory.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n   \n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!systemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/inventoryTable.html\"></compose>\n            </div> \n            <div show.bind=\"systemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/inventoryForm.html\"></compose>\n            </div>\n        </div> \n      </div> \n</template>"; });
define('text!modules/admin/notes/editCalendar.html', ['module'], function(module) { module.exports = "<template>\n\t<div show.bind=\"eventLayer.selectedEvent.title\" class=\"panel panel-default col-lg-3 bigTopMargin\">\n\t\t <div class=\"bottomMargin list-group-item topMargin\">\n\t\t\t\t\t\t<span click.delegate=\"edit()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Edit\"><i class=\"fa fa-pencil fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"eventLayer.selectedEvent._id\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\"\n                data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t\t</div>\n      <div class=\"panel-body\">\n\t\t\t<h4>${eventLayer.selectedEvent.title}</h4>\n\t\t\t\t<br/>\n\t\t\t<h4>Start: ${eventLayer.selectedEvent.start | dateFormat:'MMMM Do YYYY, h:mm:ss a'}</h4>\n\t\t\t\t<br/>\n\t\t\t<h4 show.bind=\"eventLayer.selectedEvent.allDay\">All Day</h4>\n\t\t\t<br/>\n\t\t\t<div show.bind=\"!eventLayer.selectedEvent.allDay\">\n\t\t\t\t<h4>End: ${eventLayer.selectedEvent.end | dateFormat:'MMMM Do YYYY, h:mm:ss a'}</h4>\n\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t<div class=\"col-lg-12 topMargin\" show.bind=\"eventLayer.selectedEvent.notes && eventLayer.selectedEvent.notes.length > 0\" innerhtml.bind=\"eventLayer.selectedEvent.notes\" ></div>\n\t\t</div>\n  </div>\n  <div class=\"col-lg-9\">\n    <calendar events.bind=\"events\" view=\"month\" weekends.bind=\"false\" day-click.bind=\"dayClicked\" \n    event-click.bind=\"eventClicked\" options.bind=\"{ eventLimit: true, header: {left: 'My title', right:  'today month,agendaWeek,agendaDay,list prev,next'} }\" \n    change.delegate=\"eventDialog($event)\" click.delegate=\"selectEvent($event)\"></calendar>\n  </div>\n</template>"; });
define('text!modules/admin/notes/editNotes.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n\n    <div class=\"panel panel-default rightMargin leftMargin\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"noteSelected === 'No'\">\n                <compose view=\"./components/notesTable.html\"></compose>\n            </div> \n            <div show.bind=\"noteSelected === 'Yes'\" >\n                <compose view=\"./components/notesForm.html\"></compose>\n            </div>\n             <div show.bind=\"noteSelected === 'helpTicket'\" >\n                <compose view=\"./components/helpTicket.html\"></compose>\n            </div>\n        </div> \n      </div> \n\n</template>"; });
define('text!modules/admin/notes/notes.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template"; });
define('text!modules/admin/site/admin.html', ['module'], function(module) { module.exports = "<template>\n\t<style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\n        }\n    </style>\n\t<div class=\"fluid-container\">\n\n\t\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-body\">\n\t\t\t<div class=\"col-lg-3\">\n\t\t\t<h4>Files</h4>\n\t\t\t<div>\n\t\t\t\t<ul class=\"list-group\" id=\"buttonGroup\">\n\t\t\t\t\t<button click.trigger=\"typeSelected($event, $index, type)\" type=\"button\" repeat.for=\"type of tabs\" id=\"${type.screenToShow}\"\n\t\t\t\t\t\tclass=\"${ $first ? 'menuButtons list-group-item' : 'list-group-item'}\">${type.id}</button>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-9\">\n\t\t\t\n\t\t\t<compose if.bind=\"(screenToShow == 'log' || screenToShow == 'auth') && fileList.length\" view='./components/logFileTable.html'></compose>\n\t\t\t\n\t\t\t<compose if.bind=\"screenToShow === 'forl' || screenToShow === 'fore' || screenToShow === 'foro'\" view='./components/foreverLogs.html'></compose>\n\t\t\t\n\t\t\t<compose if.bind=\"showFileList && screenToShow === 'files'\" view='./components/uploadedFilesTable.html'></compose>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/admin/site/downloadForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span show.bind=\"!newDownload\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\r\n        </div> \r\n\r\n        <form class=\"form-horizontal topMargin\">\r\n\r\n            <!-- Row 1 -->\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-sm-3 hideOnPhone\">Status</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <div class=\"checkbox\">\r\n                                <label class=\"pull-left\">\r\n                                    <input id=\"activeProduct\" checked.bind=\"downloads.selectedDownload.active\" type=\"checkbox\"> Active\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"checkbox\">\r\n                                <label class=\"pull-left\">\r\n                                    <input id=\"activeProduct\" checked.bind=\"downloads.selectedDownload.helpTicketRelevant\" type=\"checkbox\"> Help Ticket Relevant\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editName\" class=\"col-sm-2 control-label hideOnPhone\">Name</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input value.bind=\"downloads.selectedDownload.name\" id=\"editName\" class=\"form-control\" placeholder=\"Name\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input value.bind=\"downloads.selectedDownload.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editType\" class=\"col-sm-2 control-label hideOnPhone\">Type</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <select value.bind=\"downloads.selectedDownload.downCatcode\" class=\"form-control\" id=\"editType\">\r\n                                <option value=\"\">Select an option</option>\r\n                                <option repeat.for=\"category of downloads.appCatsArray\" value=\"${category.downCatcode}\">${category.description}</options>\r\n                            </select>\r\n                            <a class=\"btn btn-link\" click.trigger=\"openEditCatForm('new')\" aria-hidden=\"true\">(Add a Category)</a>\r\n                            <a class=\"btn btn-link\" disable.bind=\"this.downloads.selectedDownload.downCatcode == 0\"  click.trigger=\"openEditCatForm('edit')\" aria-hidden=\"true\">(Edit this Category)</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Edit Category -->\r\n            <div class=\"row topMargin col-sm-8 col-sm-offset-2\" show.bind=\"editCat\">\r\n                <div class=\"panel panel-default\" style=\"background-color:ghostwhite;\">\r\n                    <div class=\"panel-body\">\r\n                         <div class=\"list-group-item bottomMargin col-sm-12 topMargin\">\r\n                            <span click.delegate=\"saveCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Category\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                            <span click.delegate=\"cancelEditCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                            <span show.bind=\" editCourseFlag\" click.delegate=\"deleteCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete Category\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-sm-8\">\r\n                                <input id=\"editCatDescription\" value.bind=\"downloads.selectedCat.description\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                      <label show.bind=\"downloads.selectedDownload.file.fileName\" for=\"editFile\" class=\"col-sm-2 control-label hideOnPhone topMargin\">File</label>\r\n                      <div class=\"col-sm-3 topMargin\" show.bind=\"downloads.selectedDownload.file.fileName != undefined\">\r\n                          <a href.bind=\"selectedURL\" innerhtml.bind='downloads.selectedDownload.file.fileName' target='_blank'></a>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-2 col-lg-offset-2\">\r\n                      <label class=\"btn btn-primary\">\r\n                          Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\r\n                      </label>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <ul show.bind=\"!uploading\">\r\n                        <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\r\n                    </ul>\r\n                    <div show.bind=\"uploading\" class=\"progress progress-striped active\">\r\n                        <div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n<!--\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-lg-offset-2\">\r\n                  <div class=\"panel panel-default\">\r\n                      <div class=\"input-group\">\r\n                          <span class=\"input-group-btn\">\r\n                              <span class=\"btn btn-primary btn-fill btn-wd btn-file\">\r\n                              Browse...<input change.delegate=\"changeFiles()\" id=\"uploadFiles\" files.bind=\"files\" type=\"file\" multiple=true>\r\n                              </span>\r\n                          </span>\r\n                          <input type=\"text\" value.bind=\"selectedFile\" class=\"form-control\" readonly/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n-->\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n"; });
define('text!modules/admin/site/downloadTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\r\n        <div class='row'>\r\n            <div class='col-lg-12 bottomMargin'>\r\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\r\n                <div id=\"no-more-tables\">\r\n                    <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\r\n                        <thead class=\"cf\">\r\n\r\n                            <tr>\r\n                                <td colspan='5'>\r\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n                                    <span click.delegate=\"new()\"  class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Download\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\r\n                                    <span click.delegate=\"_cleanUpFilters()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\r\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"width:75px;\">Name <span click.trigger=\"dataTable.sortArray('name')\"><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\">File <span click.trigger=\"dataTable.sortArray('file.originalFilename','object')\"><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\">Type <span click.trigger=\"dataTable.sortArray('downCatcode','id',downloads.appCatsArray,'downCatcode','description')\"><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\">Status <span click.trigger=\"dataTable.sortArray('active')\"><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\">Help Ticket Relevant <span click.trigger=\"dataTable.sortArray('helpTicketRelevant')\"><i class=\"fa fa-sort\"></i></span></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>\r\n                                    <input input.delegate=\"dataTable.filterList($event)\" id=\"name\" type=\"text\" placeholder=\"Filter Name\" class=\"form-control\"/>\r\n                                </th>\r\n                                <th>\r\n                                    <input input.delegate=\"dataTable.filterList($event)\" id=\"file.originalFilename\" type=\"text\" placeholder=\"Filter File\" class=\"form-control\"/>\r\n                                </th>\r\n                                <th>\r\n                                    <select change.delegate=\"dataTable.filterList($event)\" class=\"form-control\" id=\"downCatcode\" compare=\"id\">\r\n                                    <option value=\"\"></option>\r\n                                    <option repeat.for=\"category of downloads.appCatsArray\" value=\"${category.downCatcode}\">${category.description}</option>\r\n                                </select>\r\n                                </th>\r\n                                <th>\r\n                                    <select change.delegate=\"dataTable.filterList($event)\"  class=\"form-control\" id=\"active\" compare=\"boolean\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"true\">Active</option>\r\n                                    <option value=\"false\">Inactive</options>\r\n                                </select>\r\n                                </th>\r\n                                <th>\r\n                                    <select change.delegate=\"dataTable.filterList($event)\" class=\"form-control\" id=\"helpTicketRelevant\" compare=\"boolean\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"true\">True</option>\r\n                                    <option value=\"false\">False</options>\r\n                                </select>\r\n                                </th>\r\n                            </tr>\r\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\r\n                                <td data-title=\"Name\">${item.name}</td>\r\n                                <td data-title=\"Original Filename\" style=\"width: 75px\">\r\n                                    <div>${item.file.originalFilename}</div>\r\n                                </td>\r\n                                <td data-title=\"Type\" style=\"width: 75px\">\r\n                                    <div>${item.downCatcode | lookupDescription:downloads.appCatsArray:'downCatcode'}</div>\r\n                                </td>\r\n                                <td data-title=\"Status\">${item.active | translateStatus}</td>\r\n                                <td data-title=\"Help Ticket Relevant\">${item.helpTicketRelevant}</a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/site/editConfig.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!parameterSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/configTable.html\"></compose>\n            </div> <!-- Table Div -->\n             <div show.bind=\"parameterSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/configForm.html\"></compose>\n            </div>\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/editCurriculum.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!curriculumItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/curriculumTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"curriculumItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/curriculumForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/editDownloads.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!downloadSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/downloadTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"downloadSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/downloadForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/editHelpTickets.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!htTypeSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/htTypeTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"htTypeSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/htTypeForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/editMessages.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!messageItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/messageTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"messageItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/messageForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/editNews.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-info\">\n      <div class=\"panel-body\">\n        <div class=\"row\"> \n            <div show.bind=\"!newsItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/newsTable.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"newsItemSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/newsForm.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body -->\n</template>"; });
define('text!modules/admin/site/site.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/admin/system/editProduct.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-info\">\r\n      <div class=\"panel-body\">\r\n        <div class=\"row\">\r\n            <div show.bind=\"!productSelected\" class=\"col-lg-12\">\r\n                <compose view=\"./components/productTable.html\"></compose>\r\n            </div> <!-- Table Div -->\r\n            <div show.bind=\"productSelected\" class=\"col-lg-12\">\r\n                <compose view=\"./components/productForm.html\"></compose>\r\n            </div> <!-- Form Div -->\r\n        </div> <!-- Row -->\r\n      </div> <!-- Panel Body -->\r\n</template>"; });
define('text!modules/admin/system/editSession.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-info\">\r\n      <div class=\"panel-body\">\r\n        <div class=\"row\">\r\n            <div show.bind=\"showScreen == 'sessionTable'\" class=\"col-lg-12\">\r\n                <compose view=\"./components/sessionTable.html\"></compose>\r\n            </div> <!-- Table Div -->\r\n            <div show.bind=\"showScreen == 'editSession'\" class=\"col-lg-12\">\r\n                <compose view=\"./components/sessionForm.html\"></compose>\r\n            </div> <!-- Form Div -->\r\n            <div show.bind=\"showScreen == 'editConfig'\" class=\"col-lg-12\">\r\n                <compose view=\"./components/sessionConfigTable.html\"></compose>\r\n            </div>\r\n        </div> \r\n      </div> \r\n</template>"; });
define('text!modules/admin/system/editSystem.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-info\">\r\n      <div class=\"panel-body\">\r\n        <div class=\"row\">\r\n            <div show.bind=\"!systemSelected\" class=\"col-lg-12\">\r\n                <compose view=\"./components/systemTable.html\"></compose>\r\n            </div> <!-- Table Div -->\r\n            <div show.bind=\"systemSelected\" class=\"col-lg-12\">\r\n                <compose view=\"./components/systemForm.html\"></compose>\r\n            </div> <!-- Form Div -->\r\n        </div> <!-- Row -->\r\n      </div> <!-- Panel Body -->\r\n</template>"; });
define('text!modules/admin/system/system.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>\n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/analytics/components/helpTicketsByInstitution.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showInstitutionTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showInstitutionGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"institutiontableSelected\" class=\"col-lg-12\">\n              <compose view=\"./institutionHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!institutiontableSelected\" class=\"col-lg-12\">\n              <compose view=\"./institutionHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\t\n</template>"; });
define('text!modules/analytics/components/helpTicketsByProducts.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showProductTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showProductGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"productTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./productHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!productableSelected\" class=\"col-lg-12\">\n              <compose view=\"./productHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/helpTicketsByType.html', ['module'], function(module) { module.exports = "<template>\n  <div>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showTypeTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showTypeGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"typeTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./typeHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!typeTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./typeHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/analytics/components/institutionsCharts.html', ['module'], function(module) { module.exports = "<template>\n\t<!--\n\t<fieldset class=\"col-lg-4\" >\n        <legend>Line Graph via Attribute</legend>\n        <canvas id=\"line-chart\" chart=\"type: line; should-update: false; data.bind: SimpleLineData\"></canvas>\n        <p>Changing the data wont change this graph as it is not update-able</p>\n\t</fieldset>\n\t <chart  class=\"col-lg-2\" id=\"dynamic-pie-chart\" type=\"pie\" style=\"width: 50%; height: 50%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutData\"></chart>\n-->\n    <fieldset class=\"col-lg-4\">\n        <legend>Institution Types</legend>\n        <chart id=\"institutionTypesChart\" type=\"doughnut\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutData\"></chart>\n<!--       \n        <div>\n            <label>Values</label>\n            <div repeat.for=\"i of DynamicDoughnutData.datasets[0].data.length\">\n                <input value.bind=\"DynamicDoughnutData.datasets[0].data[i]\" placeholder=\"Value ${$index + 1}\"/>\n            </div>\n        </div>\n\n        <p>Both charts are using the same dataset behind the scenes, so changing one will change both.</p>\n        <p>Changing the above value should trigger a chart refresh after 2 seconds</p>\n        <p>Although dynamically added entries will not be tracked currently</p>\n        <button click.delegate=\"addEntry()\">Add Entry</button>\n\t\t<button click.delegate=\"resetPieData()\">Reset</button>\n\t\t-->\n\t</fieldset>\n\t    <fieldset class=\"col-lg-4\">\n        <legend>Member Types</legend>\n\t\t<chart id=\"memberTypesChart\" type=\"doughnut\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutDataMT\"></chart>\n\t</fieldset>\n\t</fieldset>\n\t    <fieldset class=\"col-lg-4\">\n        <legend>Highest Degrees</legend>\n\t\t<chart id=\"highestDegreesChart\" type=\"doughnut\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutDataHD\"></chart>\n\t</fieldset>\n\t</fieldset>\n\t    <fieldset class=\"col-lg-4\">\n        <legend>Countries</legend>\n\t\t<chart id=\"countriesChart\" type=\"doughnut\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutDataCountries\"></chart>\n\t</fieldset>\n\t</fieldset>\n\t    <fieldset class=\"col-lg-8\">\n        <legend>Regions</legend>\n\t\t<chart id=\"regionsChart\" native-options.bind=\"chartOptions\" type=\"bar\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutDataRegions\"></chart>\n\t</fieldset>\n\t</fieldset>\n\t    <fieldset class=\"col-lg-4\">\n        <legend>Status</legend>\n\t\t<chart id=\"statusChart\" type=\"doughnut\" style=\"width: 80%; height: 80%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"DynamicDoughnutDataStatus\"></chart>\n\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/institutionsTable.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-12 bottomMargin\">\n        <div show.bind=\"showExportPanel\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n                        <span click.delegate=\"downloadExcel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                            data-original-title=\"Download\"><i class=\"fa fa-download fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"cancelDownload()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                            data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                    </div>\n                    <div class=\"checkbox\"><label><input checked.bind=\"substituteDescriptions\" type=\"checkbox\"> Substitute IS4UA Descriptions</label></div>\n                    <div class=\"topMargin\">\n                        <div class=\"col-md-5 topMargin\">\n                            <label id=\"productList\">Available Fields</label>\n                            <div class=\"well well2 overFlow\" style=\"height:400px;\">\n                            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter products\"/>\n                            <ul class=\"list-group\">\n                                <a  click.trigger=\"selectField($index)\" type=\"button\" repeat.for=\"product of unselectedFields\" id=\"${$index}\"\n                                        class=\"list-group-item dropbtn\">${product.displayName}</a>\n                            </ul>\n                            </div>\n                        </div>\n                        <div class=\"col-md-5 col-md-offset-1 topMargin\">\n                            <label id=\"requestProductsLabel\">Selected Fields</label>\n                            <div class=\"well well2 overflow\" style=\"height:400px;\">\n                            <ul class=\"list-group\">\n                                <a click.trigger=\"removeField($index)\" type=\"button\" repeat.for=\"product of selectedFields\" id=\"${$index}\"\n                                        class=\"list-group-item dropbtn\">${product.displayName}</a>\n                            </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div id=\"no-more-tables\">\n            <table class=\"table table-striped table-hover cf\">\n                <thead class=\"cf\">\n                    <tr colspan='6'>\n                            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n                    </tr>\n                    <tr>\n                        <td colspan='6'>\n                            <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                            <span click.delegate=\"_clearFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n                                <span click.delegate=\"export()\"  class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Export to CSV\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i></span>\n                            <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        <th style=\"width:30rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionTypeSorter, propertyName: 'institutionType'})\">Institution Type </span><i class=\"fa fa-sort\"></i></th>\n                        <th style=\"width:15rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customMemberTypeSorter, propertyName: 'memberType'})\">Member Type </span><i class=\"fa fa-sort\"></i></th>\n                        <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customHighestDegreeSorter, propertyName: 'highestDegree'})\">Highest Degree </span><i class=\"fa fa-sort\"></i></th>\n                        <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'region'})\">Region </span><i class=\"fa fa-sort\"></i></th>\n                        <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'country'})\">Country </span><i class=\"fa fa-sort\"></i></th>\n                        <th style=\"width:20rem;\">Member Since</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>\n                            <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'name', displayProperty: 'fullnameName', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                        </th>\n                        <th>\n                            <select value.bind=\"institutionTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'institutionTypeFilter',  collectionProperty: 'institutionType', displayProperty: 'institutionType', compare:'match'} )\" class=\"form-control\">\n                                <option value=\"\"></option>\n                                <option repeat.for=\"institution of is4ua.institutionTypes\" value=\"${institution.code}\">${institution.description}</option>\n                            </select>\n                        </th>\n                        <th>\n                            <select value.bind=\"memberTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'memberTypeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'memberType', displayProperty: 'memberType', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                <option value=\"\"></option>\n                                <option repeat.for=\"institution of is4ua.memberTypes\" value=\"${institution.code}\">${institution.description}</option>\n                            </select>\n                        </th>\n                        <th>\n                        <select value.bind=\"highestDegreeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'highestDegreeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'highestDegree', displayProperty: 'highestDegree', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                <option value=\"\"></option>\n                                <option repeat.for=\"institution of is4ua.highestDegrees\" value=\"${institution.code}\">${institution.description}</option>\n                            </select>\n                        </th>\n                        <th>\n                            <input value.bind=\"regionFilterValue\" input.delegate=\"dataTable.filterList(regionFilterValue, { type: 'text',  filter: 'regionFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'region', displayProperty: 'country', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                        </th>\n                        <th>\n                            <input value.bind=\"countryFilterValue\" input.delegate=\"dataTable.filterList(countryFilterValue, { type: 'text',  filter: 'countryFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'country', displayProperty: 'country', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                        </th>\n                            <th></th>\n                        <th>\n                            <select value.bind=\"institutionStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'institutionStatusFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'institutionStatus', displayProperty: 'institutionStatus', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                <option value=\"\"></option>\n                                <option repeat.for='status of is4ua.institutonStatusArray' value=\"${status.code}\">${status.description}</option>\n                            </select>\n                        </th>\n                    </tr>\n                    <tr repeat.for=\"inst of dataTable.displayArray\">\n                        <td data-title=\"Name\">${inst.name}</td>\n                        <td data-title=\"Type\">${inst.institutionType | lookupValue:is4ua.institutionTypes:\"code\":\"description\"}</td>\n                        <td data-tile=\"Member Type\">${inst.memberType | lookupValue:is4ua.memberTypes:\"code\":\"description\"}</td>\n                        <td data-title=\"Degree\">${inst.highestDegree | lookupValue:is4ua.highestDegrees:\"code\":\"description\"}</td>\n                        <td data-title=\"Region\">${inst.region}</td>\n                        <td data-title=\"Country\">${inst.country}</td>\n                        <td data-title=\"JoinDate\">${inst.joinDate | dateFormat:config.DATE_FORMAT_TABLE:true}</td>\n                        <td data-title=\"Status\">${inst.institutionStatus | lookupValue:is4ua.institutonStatusArray:\"code\":\"description\"}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/productRequestsDetail.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"hoverProfile\" >\n      <span  click.delegate=\"hideProfile()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close\"><i class=\"fa fa-window-close-o\" aria-hidden=\"true\"></i></span>\n      <span  click.delegate=\"customerActionDialog()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send Email\"><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i></span>\n      <hr/>\n      <div class=\"col-md-4\">\n         <div  class=\"topMargin\">\n              <img if.bind=\"profileRequest.requestId.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${profileRequest.requestId.personId.file.fileName}\" height=\"100\">\n          </div>\n          <div if.bind=\"!profileRequest.requestId.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"profileRequest.requestId.personId.email | gravatarUrl:100:6\"></div>\n      </div>\n      <div class=\"col-md-8\">\n        <h5>Nickname: ${profileRequest.requestId.personId.nickName}</h5>\n        <h5>Phone: ${profileRequest.requestId.personId.phone | formatPhone}</h5>\n        <h5>Mobile: ${profileRequest.requestId.personId.mobile | formatPhone}</h5>\n        <h5>Email: ${profileRequest.requestId.personId.email}</h5>\n      </div>\n  </div>\n\t<div class=\"col-lg-12\">\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"showProductDetail()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\n\t\t<h2 class=\"bottomMargin topMargin\" >${selectedProductDetails}</h2>\n\t\t<compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n        <table class=\"table table-striped table-hover cf\">\n            <thead class=\"cf\">\n                <tr>\n\t\t\t\t\t<th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customPersonSorter, propertyName: 'requestId.personId.lastName'})\">Faculty </span><span><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t<th class=\"col-lg-3\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customInstituteSorter, propertyName: 'requestId.institutionId'})\">Institution </span><i class=\"fa fa-sort\"></i></th>\n\t\t\t\t\t<th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requiredDate'})\">Due </span><span><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t<th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'createdDate'})\">Created </span><span><i class=\"fa fa-sort\"></i></span></th>\n            \t\t<th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customRequestStatusSorter, propertyName: 'requestStatus'})\">Status </span><i class=\"fa fa-sort\"></i></th>   \n\t\t\t\t\t<th>IDs Requested</th>\n                </tr>\n                 <tr>\n                    <th>\n                        <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customNameFilter,  compare:'custom'} )\"  class=\"form-control\" />\n\t\t\t\t\t</th>\n\t\t\t\t\t<th>\n\t\t\t\t\t<input value.bind=\"institutionFilterValue\" input.delegate=\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n\t\t\t\t\t</th>\n\t\t\t\t\t<th>\n\t\t\t\t\t\t<input type=\"date\" value.bind=\"requiredDateFilterValue\" input.delegate=\"dataTable.filterList(requiredDateFilterValue, {type: 'date', filter: 'requiredDate',  collectionProperty: 'requiredDate', compare: 'after'} )\"  class=\"form-control\" />\n\t\t\t\t\t</th>\n\t\t\t\t\t<th>\n\t\t\t\t\t\t<input type=\"date\" value.bind=\"createdDateFilterValue\" input.delegate=\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\"  class=\"form-control\" />\n\t\t\t\t\t</th>\n\t\t\t\t\t<th>\n\t\t\t\t\t\t<select value.bind=\"requestStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'requestStatusFilter',  collectionProperty: 'requestStatus', displayProperty: 'requestStatus',  compare:'match'} )\" class=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t<option repeat.for=\"status of config.REQUEST_STATUS\" value=\"${status.code}\">${status.description}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr repeat.for=\"request of dataTable.displayArray\">\n\t\t\t\t\t<td class=\"dropbtn\" click.delegate=\"showProfile(request, $event)\" data-title=\"Customer\">${request.requestId.personId.fullName}</td>\n\t\t\t\t\t<td data-title=\"Name\">${request.requestId.institutionId.name}</td>\n\t\t\t\t\t<td  data-title=\"requiredDate\">${request.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n\t\t\t\t\t<td  data-title=\"dateCreated\">${request.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n\t\t\t\t\t<td  data-title=\"status\">${request.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}</td>\n\t\t\t\t\t<td  data-title=\"ids-requested\">${request.requestId | idsRequested}\n                </tr>\n            </tbody>\n\t\t</table>\n\t</div>\n</template>"; });
define('text!modules/analytics/components/productRequestsTable.html', ['module'], function(module) { module.exports = "<template>\n    <div show.bind=\"summerTable\" class='col-lg-12'>\n        <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n        <table class=\"table table-striped table-hover cf\">\n            <thead class=\"cf\">\n                <tr>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customProductSorter, propertyName: 'productId'})\">Product </span><i class=\"fa fa-sort\"></i></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'total'})\">Total  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '1'})\">${config.REQUEST_STATUS[0].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '2'})\">${config.REQUEST_STATUS[1].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '3'})\">${config.REQUEST_STATUS[2].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '4'})\">${config.REQUEST_STATUS[3].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '5'})\">${config.REQUEST_STATUS[4].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '6'})\">${config.REQUEST_STATUS[5].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '7'})\">${config.REQUEST_STATUS[6].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                </tr>\n                 <tr>\n                    <th>\n                        <input value.bind=\"productFilterValue\" input.delegate=\"dataTable.filterList(productFilterValue, { type: 'custom',  filter: customProductFilterValue, compare:'custom'} )\"  class=\"form-control\" />\n                    </th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th> \n                    <th></th> \n                </tr>\n            </thead>\n            <tbody>\n                <tr click.delegate=\"showProductDetail(stat)\" repeat.for=\"stat of dataTable.displayArray\">\n                    <td data-title=\"Product\">${stat.productId.name}</td>\n                    <td data-title=\"Institution\">${stat.total}</td>\n                    <td data-title=\"${config.REQUEST_STATUS[$index].description}\" repeat.for=\"status of config.REQUEST_STATUS\">${stat | statValue:config.REQUEST_STATUS:$index}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <compose show.bind=\"!summerTable\" view=\"./productRequestsDetail.html\"></compose>\n</template>"; });
define('text!modules/analytics/components/requestsByInstitution.html', ['module'], function(module) { module.exports = "<template>\n  <div show.bind=\"selectedSession\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showInstitutionTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showInstitutionGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"institutionTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./requestsTable.html\"></compose>\n          </div> \n          <div show.bind=\"!institutionTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./requestsInstitutionChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/analytics/components/requestsByProducts.html', ['module'], function(module) { module.exports = "<template>\n    <div show.bind=\"selectedSession\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showProductTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showProductGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"productTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./productRequestsTable.html\"></compose>\n          </div> \n          <div show.bind=\"!productTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./requestsProductChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/analytics/components/requestsInstitutionChart.html', ['module'], function(module) { module.exports = "<template>\n\t</fieldset>\n\t    <fieldset if.bind=\"!institutionTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"institutionRequestsChart\" type=\"horizontalBar\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"institutionChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/requestsProductChart.html', ['module'], function(module) { module.exports = "<template>\n\t    <fieldset if.bind=\"!productTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"regionsChart\" type=\"horizontalBar\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"productChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/requestsTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionSorter, propertyName: 'productId'})\">Institution  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'total'})\">Total  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '1'})\">${config.REQUEST_STATUS[0].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '2'})\">${config.REQUEST_STATUS[1].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '3'})\">${config.REQUEST_STATUS[2].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '4'})\">${config.REQUEST_STATUS[3].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '5'})\">${config.REQUEST_STATUS[4].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '6'})\">${config.REQUEST_STATUS[5].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: '7'})\">${config.REQUEST_STATUS[6].description}  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'custom',  filter: customNameFilterValue, compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th repeat.for=\"total of totalsInstitutionArray\">${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Institution\">${stat.name}</td>\n                            <td data-title=\"Total\">${stat.total}</td>\n                            <td data-title=\"${config.REQUEST_STATUS[$index].description}\" repeat.for=\"status of config.REQUEST_STATUS\">${stat | statValue:config.REQUEST_STATUS:$index}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/facco/components/peopleTable.html', ['module'], function(module) { module.exports = "<template>\r\n   <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n      <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\r\n      <div id=\"no-more-tables\">\r\n          <table class=\"table table-striped table-hover cf\">\r\n              <thead class=\"cf\">\r\n                  <tr>\r\n                      <td colspan='7'>\r\n                          <span click.delegate=\"refresh()\" class=\"smallMarginRight\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n                          <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                      <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'lastName'})\">Name </span><i class=\"fa fa-sort\"></i></th>\r\n                      <th style=\"width:15rem;\">Phone</th>\r\n                      <th style=\"width:15rem;\">Mobile</th>\r\n                      <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'email'})\">Email </span> <i class=\"fa fa-sort\"></i></th>\r\n                      <th>Role</th>\r\n                      <th>Status</th>\r\n                      <th>Change Status</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr>\r\n                      <th>\r\n                          <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', collectionProperty: 'fullName', compare:'match'} )\"  class=\"form-control\" />\r\n                      </th>\r\n                      <th></th>\r\n                      <th></th>\r\n                      <th></th>\r\n                      <th>\r\n                         <input value.bind=\"roleFilter\" input.delegate=\"dataTable.filterList(roleFilter, { type: 'custom', filter: customRoleFilter, compare: 'custom'})\"  class=\"form-control\" />\r\n                      </th>\r\n                      <th>\r\n                          <select value.bind=\"personStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'personStatusFilter',  collectionProperty: 'personStatus', displayProperty: 'personStatus',  compare:'match'} )\" class=\"form-control\" >\r\n                              <option value=\"\"></option>\r\n                              <option repeat.for='status of is4ua.personStatusArray' value='${status.code}'>${status.description}</option>\r\n                          </select>\r\n                      </th>\r\n                      <th></th>\r\n                  </tr>\r\n                  <tr  repeat.for=\"person of dataTable.displayArray\">\r\n                      <td  data-title=\"Name\">${person.fullName}</td>\r\n                      <td  data-title=\"Phone\">${person.phone | phoneNumber}</td>\r\n                      <td  data-title=\"Phone\">${person.mobile | phoneNumber}</td>\r\n                      <td  data-title=\"Email\">${person.email}</td>\r\n                      <td  data-title=\"Role\">${person.roles}</td>\r\n                      <td  data-title=\"Status\">${person.personStatus | lookupValue:is4ua.personStatusArray:\"code\":\"description\"}</td>\r\n                      <td data-title=\"Update\" style=\"width: 100px\" click.trigger=\"updateStatus(person)\" innerhtml.bind=\"person.personStatus | personStatusButton\">\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  </div>\r\n</template>\r\n"; });
define('text!modules/facco/components/requestDetailDetails.html', ['module'], function(module) { module.exports = "<template>\r\n\t<div class=\"col-lg-5\" show.bind=\"showRequest\">\r\n    \t<div class=\"panel panel-primary topMargin\">\r\n      \t\t<div class=\"panel-heading\">\r\n        \t\t<h3 class=\"panel-title\">${selectedProductID | lookupValue:products.productsArray:\"_id\":\"name\"}</h3>\r\n      \t\t</div>\r\n\t      \t<div class=\"panel-body\">\r\n\t        \t<h5>Request status: ${requests.selectedRequestDetail.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"desscription\"}</h5>\r\n\t        \t<h5>Assigned system: ${requests.selectedRequestDetail.assignment.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</h5>\r\n\t        \t<h5>Assigned client: ${requests.selectedRequestDetail.assignment.clientId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</h5>\r\n\t      \t</div>\r\n    \t</div>\r\n  \t</div>\r\n</template>"; });
define('text!modules/facco/components/requestsTable.html', ['module'], function(module) { module.exports = "<template>\r\n<div class=\"col-lg-10 col-lg-offset-1\">\r\n    <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\r\n      <div id=\"no-more-tables\">\r\n        <table class=\"table table-striped table-hover cf\">\r\n          <thead class=\"cf\">\r\n            <tr>\r\n              <td colspan='7'>\r\n                <span click.delegate=\"refresh()\" class=\"smallMarginRight\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n                <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"col-xs-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requestNo'})\">No </span> <i class=\"fa fa-sort\"></i></th>\r\n              <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requiredDate'})\">Due </span><i class=\"fa fa-sort\"></i></th>\r\n              <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'createdDate'})\">Created </span><i class=\"fa fa-sort\"></i></th>\r\n              <th class=\"col-lg-1\">Type</th>\r\n              <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requestStatus'})\">Status </span><i class=\"fa fa-sort\"></i></th>\r\n              <th class=\"col-sm-1\">IDS Requestd</th>\r\n              <th class=\"col-lg-2\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name', searchProperty: 'productId', surrogateArray: products.productsArray, surrogateProperty: '_id', type: 'lookup'})\">Product </span> <i class=\"fa fa-sort\"></i></th>\r\n              <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'fullName', searchProperty: 'requestId.personId', surrogateArray: people.instutionPeopleArray, surrogateProperty: '_id', type: 'lookup'})\">Faculty </span><i class=\"fa fa-sort\"></i></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th></th>\r\n              <th>\r\n                <input value.bind=\"requiredDateFilter\" change.delegate=\"dataTable.filterList(requiredDateFilter, { type: 'date',  filter: 'requiredDateFilter', collectionProperty: 'requiredDate', compare:'after' })\" type=\"date\" class=\"form-control datepicker\" data-dateformat=config.DATE_FORMAT_TABLE>\r\n              </th>\r\n              <th>\r\n                <input value.bind=\"createdDateFilter\" change.delegate=\"dataTable.filterList(createdDateFilter, { type: 'date',  filter: 'createdDateFilter', collectionProperty: 'createdDate', compare:'after' })\" type=\"date\" class=\"form-control datepicker\" data-dateformat=config.DATE_FORMAT_TABLE>\r\n              </th>\r\n              <th>\r\n           \t\t<select value.bind=\"courseFilter\" input.delegate=\"dataTable.filterList($event, { type: 'custom',  filter: courseCustomFilter,  collectionProperty: 'requestId.courseId', displayProperty: 'courseId',  compare:'custom'} )\" class=\"form-control\" >\r\n                \t<option value=\"\"></option>\r\n                   <option  value=\"${config.SANDBOX_ID}\">Sandbox</option>\r\n                   <option  value=\"Regular\">Regular</option>\r\n              \t</select>\r\n              </th>\r\n              <th>\r\n               \t<select value.bind=\"requestStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'requestStatusFilter',  collectionProperty: 'requestStatus', displayProperty: 'requestStatus',  compare:'match'} )\" class=\"form-control\" >\r\n\t                  <option value=\"\"></option>\r\n\t                   <option repeat.for=\"status of config.REQUEST_STATUS\" value=\"${status.code}\">${status.description}</option>\r\n\t              </select>\r\n              </th>\r\n              <th></th>\r\n              <th>\r\n              \t<select value.bind=\"productFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'productFilter',  collectionProperty: 'productId', displayProperty: 'name',  compare:'match'} )\" class=\"form-control\" >\r\n\t                  <option value=\"\"></option>\r\n\t                  <option repeat.for=\"product of products.productsArray\" value=\"${product._id}\">${product.name}</option>\r\n\t              </select>\r\n              </th>\r\n              <th>\r\n                <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'custom',  filter: nameCustomFilter, collectionProperty: 'fullName', compare:'custom'} )\"  class=\"form-control\" />\r\n              </th>\r\n            </tr>\r\n            <tr click.trigger=\"selectRequest($index, $event, request)\" repeat.for=\"request of dataTable.displayArray\">\r\n              <td data-title=\"Request No\">${request.requestNo}</td>\r\n              <td data-title=\"Required Date\">${request.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n              <td data-title=\"Date Created\">${request.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n              <td data-title=\"Course\">${request.requestId.courseId | sandbox:config.SANDBOX_ID}</td>\r\n              <td data-title=\"Status\">${request.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}</td>\r\n              <td data-title=\"IDs Requested\">${request.requestId | idsRequested}\r\n              <td data-title=\"Product\">${request.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</td>\r\n              <td data-title=\"Person\">${request.requestId.personId | lookupValue:people.instutionPeopleArray:\"_id\":\"fullName\"}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>"; });
define('text!modules/facco/components/viewRequestsTable.html', ['module'], function(module) { module.exports = "<template>\r\n\t<div class=\"row\">\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"form-group topMargin leftMargin\">\r\n            <select value.bind=\"selectedSession\" change.delegate=\"getRequests()\" id=\"session\" class=\"form-control\">\r\n              <option value=\"\">Select a session</option>\r\n              <option repeat.for=\"session of sessions.sessionsArray\"\r\n                      value.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\r\n            </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      <div show.bind=\"selectedSession != ''\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n            <!-- Request Table -->\r\n            <compose view=\"./requestsTable.html\"></compose>\r\n          </div>\r\n      </div>\r\n  </div>\r\n\r\n  <compose view=\"./requestDetailDetails.html\"></compose>\r\n</template>"; });
define('text!modules/home/components/homeContent.html', ['module'], function(module) { module.exports = "<template>\n  <div  style=\"margin-top:20px;\">\n    <div class=\"col-md-12\">\n      <h2>${heading}</h2>\n    <div class=\"col-md-12 \">\n      <img class=\"col-md-12\" src=\"img/DataCenter.jpg\" class=\"homePageImage\" />\n      <div class=\"col-md-4 topMargin\"><img class=\"center-block\" src=\"/img/ucc_logo.jpg\" style=\"height:100px;\"/></div>\n      <div class=\"col-md-4 topMargin\"><img class=\"center-block\" src=\"/img/sap_ua2.PNG\" style=\"height:75px;\"/></div>\n      <div class=\"col-md-4 topMargin\"><img class=\"center-block\" src=\"/img/ibm_LOGO.PNG\" style=\"height:75px;\"/></div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/home/components/homePageLinks.html', ['module'], function(module) { module.exports = "<template>\n  <div>\n    <div class=\"col-md-6 bottomMargin\">\n      <a href.bind=item.url target=\"_blank\">${item.title}</a>\n      <br>${item.content}\n    </div>\n  </div>\n</template>"; });
define('text!modules/home/components/newsItem.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"bottomMargin\">\n    <span class=\"col-md-12 newsTitle topMargin\">${item.title}</span>\n    <span innerhtml.bind=\"item.content\"></span>\n    <span class=\"newsUrl\"><a href.bind=\"item.url\" target=\"_blank\">more info...</a></span>\n  </div>\n</template>"; });
define('text!modules/home/components/uccInformation.html', ['module'], function(module) { module.exports = "<template>\r\n\t<div class=\"home-page-header underline\">${config.HOME_PAGE_UCC_TITLE}</div>\r\n\t<div id=\"leftContainer\" class=\"col-lg-3\"><!--\r\n\t\t<h3 class=\"underline\">Current Sessions</h3>\r\n\t\t<div class=\"list-group\">\r\n\t\t\t<a class=\"list-group-item\" repeat.for=\"session of sessions.sessionsArray | sessionType:'Active:Requests:Next'\">\r\n\t\t\t\t<h4 class=\"list-group-item-heading\">${session.sessionStatus}: Session ${session.session} - ${session.year}</h4>\r\n\t\t\t\t<p class=\"list-group-item-text\">Requests open: ${session.requestsOpenDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t\t<p class=\"list-group-item-text\">Clients available: ${session.startDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t\t<p class=\"list-group-item-text\">Session ends: ${session.endDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t\t-->\r\n\t</div>\r\n\t<div id=\"middleContainer\" class=\"col-lg-4 col-lg-offset-1\">\r\n\t\t<!--\r\n\t\t<h3 class=\"underline\">Sessions Schedule</h3>\r\n\t\t<div repeat.for=\"item of siteinfo.siteArray | infoFilter:'INFO'\">\r\n\t\t\t<h3>${item.title}</h3>\r\n\t\t\t<span innerhtml=\"${item.content}\"></span>\r\n\t\t</div>\r\n\t\t-->\r\n\t</div>\r\n\t<div id=\"rightContainer\" class=\"col-lg-3\">\r\n\t\t<!--\r\n\t\t<h3 class=\"underline\">UCC Sessions</h3>\r\n\t\t<span innerhtml.bind=\"config.SESSION_EXPLANATION\"></span>\r\n\t\t-->\r\n\t</div>\r\n\r\n</template>\r\n"; });
define('text!modules/social/components/blogForm.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"container\">\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"!newItem\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTitle\" class=\"control-label hideOnPhone\">Title</label>\n\t\t\t\t\t\t<input value.bind=\"social.selectedBlog.title\" id=\"editTitle\" class=\"form-control \" placeholder=\"Title\" type=\"text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTeaser\" class=\"control-label hideOnPhone\">Teaser</label>\n\t\t\t\t\t\t<textarea value.bind=\"social.selectedBlog.teaser\" id=\"editTeaser\" rows=\"5\" class=\"form-control\" placeholder=\"Teaser\" type=\"text\" ></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"topMargin\">\n\t\t\t\t<editor id=\"blogContent\" value.bind=\"social.selectedBlog.text\" height=\"800\"></editor>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/social/components/blogList.html', ['module'], function(module) { module.exports = "<template>\n\t<ul>\n\t\t<li show.bind=\"blog.active\" class=\"list-group-item\" style=\"margin-top:5px;\" repeat.for=\"blog of social.blogArray\">\n\t\t<div class=\"media-left\">\n\t\t\t<img  if.bind=\"blog.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${blog.personId.file.fileName}\" height=\"100\">\n\t\t</div>\n\t\t<div  class=\"media-left\" if.bind=\"!blog.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"blog.personId.email | gravatarUrl:100:6\"></div>\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<h4>${blog.title}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<span>${blog.teaser}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t<span>${blog.dateCreated | dateFormat}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Likes: ${blog.likes}</span>\n\t\t\t\t\t<span click.trigger=\"like($index)\" class=\"smallMarginLeft\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\t\t\tdata-original-title=\"Like\"><i class=\"fa fa-thumbs-o-up fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t<span show.bind=\"blog.views > 0\" class=\"leftMargin\">Views: ${blog.views}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n</template>"; });
define('text!modules/social/components/blogListUCC.html', ['module'], function(module) { module.exports = "<template>\n\t<ul>\n\t\t<li class=\"list-group-item\" style=\"margin-top:5px;\" repeat.for=\"blog of social.blogArray\">\n\t\t\t<div class=\"media-left\">\n\t\t\t<img  if.bind=\"blog.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${blog.personId.file.fileName}\" height=\"100\">\n\t\t</div>\n          <div class=\"media-left\" if.bind=\"!blog.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"blog.personId.email | gravatarUrl:100:6\"></div>\n\t\t<!--\t<div class=\"media-left\" innerhtml='${blog.personId.email | gravatarUrl:100:1}'></div> -->\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<h4>${blog.title}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<span>${blog.teaser}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t<span>${blog.dateCreated | dateFormat}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Likes: ${blog.likes}</span>\n\t\t\t\t\t<span show.bind=\"blog.views > 0\" class=\"leftMargin\">Views: ${blog.views}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Active: ${blog.active}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n</template>"; });
define('text!modules/social/components/blogPage.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"container\">\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div  class=\"col-lg-2 topMargin\">\n\t\t\t<img if.bind=\"social.selectedBlog.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${{social.selectedBlog.personId.file.fileName}\" height=\"100\">\n\t\t</div>\n\t\t  <div class=\"media-left\" if.bind=\"!social.selectedBlog.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"social.selectedBlog.personId.email | gravatarUrl:100:6\"></div>\n\t\t  <!--\n\t\t<div class=\"col-lg-2 topMargin\" show.bind=\"!social.selectedBlog.personId.file.fileName\" innerhtml='${social.selectedBlog.personId.email | gravatarUrl:100:1}'></div>\n\t\t\t-->\n\t\t<div class=\"col-lg-10\">\n\t\t\t<h3>${social.selectedBlog.title}</h3>\n\t\t\t<span>${social.selectedBlog.dateCreated | dateFormat}</span>\n\t\t\t<span class=\"leftMargin\">Likes: ${social.selectedBlog.likes}</span>\n\t\t\t<span click.trigger=\"like(999)\" class=\"smallMarginLeft\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Like\"><i class=\"fa fa-thumbs-o-up fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"social.selectedBlog.views > 0\" class=\"leftMargin\">Views: ${social.selectedBlog.views}</span>\n\t\t\t<div class=\"topMargin\" innerhtml.bind=\"social.selectedBlog.text\"></div>\n\t\t</div>\n\t</div>\n</template> "; });
define('text!modules/social/components/blogPageUCC.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"container\">\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"!social.selectedBlog.active\" click.delegate=\"toggleActivation()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Activate\"><i class=\"fa fa-eye fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"social.selectedBlog.active\" click.delegate=\"toggleActivation()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Inactivate\"><i class=\"fa fa-eye-slash fa-lg fa-border\" aria-hidden=\"true\"></i></span>\t\t\n\t\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\t\t\n\t\t</div>\n\t\t<div class=\"media-left\" >\n\t\t\t<img if.bind=\"social.selectedBlog.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${social.selectedBlog.personId.file.fileName}\" height=\"100\">\n\t\t</div>\n\t\t<div if.bind=\"!social.selectedBlog.personId.file.fileName\" class=\"col-lg-2 topMargin\" innerhtml='${social.selectedBlog.personId.email | gravatarUrl:100:1}'></div>\n\t\t<div class=\"col-lg-10\">\n\t\t\t<input value.bind=\"social.selectedBlog.title\"  class=\"form-control\" id=\"editTitle\" placeholder=\"Title\" type=\"text\"/>\n\t\t\t<br/>\n\t\t\t<input value.bind=\"social.selectedBlog.teaser\"  class=\"form-control\" id=\"editTeaser\" placeholder=\"Teaser\" type=\"text\"/>\n\t\t\t<br/>\n\t\t\t<editor value.bind=\"social.selectedBlog.text\" toolbar.bind=\"toolbar\" id=\"blogContent\" height=\"500\"></editor>      \n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/social/components/forumList.html', ['module'], function(module) { module.exports = "<template>\n\t<div>\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"newForum()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"New Forum\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div show.bind=\"openNewForumForm\">\n\t\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t\t<span click.delegate=\"saveForum()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTitle\" class=\"control-label hideOnPhone\">Title</label>\n\t\t\t\t\t\t<input value.bind=\"title\" id=\"editTitle\" class=\"form-control \" placeholder=\"Title\" type=\"text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTeaser\" class=\"control-label hideOnPhone\">Description</label>\n\t\t\t\t\t\t<textarea value.bind=\"text\" id=\"editTeaser\" rows=\"5\" class=\"form-control\" placeholder=\"Description\" type=\"text\" ></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<ul>\n\t\t<li show.bind=\"forum.active\" class=\"list-group-item\" style=\"margin-top:5px;\" repeat.for=\"forum of social.forumArray\">\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div click.trigger=\"selectForum($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<h4>${forum.title}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div click.trigger=\"selectForum($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<span>${forum.text}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t<span>${forum.dateCreated | dateFormat}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Topics: ${forum.topics}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Posts: ${forum.posts}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n</template>"; });
define('text!modules/social/components/forumPage.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"container\">\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div class=\"list-group-item\" style=\"margin-top:5px;\">\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<h4>${social.selectedForum.title}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<span>${social.selectedForum.text}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t<span>${social.selectedForum.dateCreated | dateFormat}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Topics: ${social.selectedForum.topics}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Posts: ${social.selectedForum.posts}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"bottomMargin topMargin list-group-item\">\n\t\t\t<span click.delegate=\"newForumTopic()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"New Forum Topic\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div show.bind=\"openNewTopicForm || openMessageForm\">\n\t\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t\t<span click.delegate=\"saveForumTopic()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div show.bind=\"openNewTopicForm\" class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTitle\" class=\"control-label hideOnPhone\">Title</label>\n\t\t\t\t\t\t<input value.bind=\"FormTopicTitle\" id=\"editTitle\" class=\"form-control \" placeholder=\"Title\" type=\"text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editTeaser\" class=\"control-label hideOnPhone\">Description</label>\n\t\t\t\t\t\t<textarea value.bind=\"ForumTopicText\" id=\"editTeaser\" rows=\"5\" class=\"form-control\" placeholder=\"Description\" type=\"text\" ></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<ul>\n\t\t\t<li class=\"list-group-item\" style=\"margin-top:5px;\" repeat.for=\"message of social.selectedForum.messages\">\n\t\t\t\t<div class=\"media-left\" innerhtml='${message.personId | gravatarUrlId:people.peopleArray:100:1}'></div>\n\t\t\t\t<div class=\"media-body\">\n\t\t\t\t\t<div click.trigger=\"selectForum($index)\" class=\"col-lg-12\">\n\t\t\t\t\t\t<h4>${message.title}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div click.trigger=\"selectForum($index)\" class=\"col-lg-12\">\n\t\t\t\t\t\t<span>${message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t\t<span>${message.dateCreated | dateFormat}</span>\n\t\t\t\t\t\t<span click.delegate=\"respond(message, $index)\" class=\"leftMargin\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\t\t\t\tdata-original-title=\"Respond\"><i class=\"fa fa-mail-reply fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</template>"; });
define('text!modules/social/components/writeBlogList.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"new()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"New\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t</div>\n\t<ul>\n\t\t<li show.bind=\"blog.active\" class=\"list-group-item\" style=\"margin-top:5px;\" repeat.for=\"blog of social.blogArray\">\n\t\t\t<div class=\"media-left\" innerhtml='${blog.personId.email | gravatarUrl:100:1}'></div>\n\t\t\t<div class=\"media-body\">\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<h4>${blog.title}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div click.trigger=\"selectBlog($index)\" class=\"col-lg-12\">\n\t\t\t\t\t<span>${blog.teaser}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12 smallFont topMargin\">\n\t\t\t\t\t<span>${blog.dateCreated | dateFormat}</span>\n\t\t\t\t\t<span class=\"leftMargin\">Likes: ${blog.likes}</span>\n\t\t\t\t\t<span show.bind=\"blog.views > 0\" class=\"leftMargin\">Views: ${blog.views}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n</template>"; });
define('text!modules/tech/requests/assignments.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-default rightMargin leftMargin\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"requestSelected == 'table'\">\n                <compose view=\"./components/viewRequestsTable.html\"></compose>\n            </div> \n            <div show.bind=\"requestSelected == 'form'\" >\n                <compose view=\"./components/viewRequestsForm.html\"></compose>\n            </div>\n            <div show.bind=\"requestSelected == 'edit'\" >\n                <compose view=\"./components/editRequestsForm.html\"></compose>\n            </div>\n        </div> \n      </div> \n\n</template>\n"; });
define('text!modules/tech/requests/createRequest.html', ['module'], function(module) { module.exports = "<template>\n\n\t<div class=\"fluid-container\">\n\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\" ></i></span>\n\t\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-4\">\n\t\t\t<div class=\"topMargin\">\n\t\t\t\t<select id=\"session\" value.bind=\"sessionId\" class=\"form-control\" change.delegate=\"changeSession($event)\" id=\"session\">\n\t\t\t\t\t<option value=\"-1\">Select a session</option>\n\t\t\t\t\t<option repeat.for=\"session of sessions.sessionsArray\"\n\t\t\t\t\t\tvalue.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<div show.bind=\"sessionSelected\" class=\"topMargin\">\n\t\t\t\t<select id=\"institution\" value.bind=\"selectedInstitution\" change.delegate=\"changeInstitution($event)\" class=\"form-control\">\n\t\t\t\t\t<option value=\"\">Choose the Institution</option>\n\t\t\t\t\t<option repeat.for=\"item of people.institutionsArray\" value=\"${item._id}\">${item.name}</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<div show.bind=\"institutionSelected\" class=\"topMargin\">\n\t\t\t\t<select id=\"faculty\" value.bind=\"selectedPerson\" change.delegate=\"changePerson($event)\" class=\"form-control\">\n\t\t\t\t\t<option value=\"\">Choose the Faculty</option>\n\t\t\t\t\t<option repeat.for=\"item of people.instutionPeopleArray\" value=\"${item._id}\">${item.fullName}</option>\n\t\t\t\t</select>\n\t\t\t</div>\n  \n\t\t\t<div id=\"course\" show.bind=\"personSelected && config.SANDBOX_USED\" class=\"topMargin\">\n\t\t\t\t<select value.bind=\"requestType\" change.delegate=\"changeRequestType($event)\" id=\"requestType\" class=\"form-control\">\n\t\t\t\t\t<option value=\"-1\">Choose the Type of The Request</option>\n\t\t\t\t\t<option value=\"sandboxCourse\">${config.SANDBOX_NAME}</option>\n\t\t\t\t\t<option value=\"regularCourse\">Regular Course</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t<compose show.bind=\"regularClient && personSelected\" view='./components/Courses.html'></compose>\n\n\t\t\t<div id=\"existingRequestInfo\"></div>\n\n\t\t\t<div class=\"row\"  id=\"numStudents\" show.bind=\"courseSelected && regularClient\">\n\t\t\t\t<div class=\"topMargin col-lg-5\">\n\t\t\t\t\t<label for=\"undergraduates\" class=\"control-label\">Undergraduates</label>\n\t\t\t\t\t<input  id=\"undergraduates\"  type=\"number\" placeholder=\"Number of Undergraduates\"\n\t\t\t\t\tclass=\"form-control\" value.bind=\"requests.selectedRequest.undergradIds\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"topMargin col-lg-5\">\n\t\t\t\t\t<label for=\"graduates\" class=\"control-label\">Graduates</label>\n\t\t\t\t\t<input id=\"graduates\" type=\"number\" placeholder=\"Number of Graduates\"\n\t\t\t\t\t\tclass=\"form-control\" value.bind=\"requests.selectedRequest.graduateIds\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row col-lg-offset-3\" show.bind=\"courseSelected\">\n\t\t\t\t<span class=\"col-lg-8 \" id=\"numberOfStudentsError\"></span>\n\t\t\t</div>\n\n\t\t\t<!-- Begin and End Date -->\n\t\t\t<div class=\"row\" show.bind=\"sandBoxClient || courseSelected\">\n      \t\t\t<div class=\"col-lg-5 topMargin\">\n\t\t\t\t\t<label class=\"form-control-label \">Start Date</label>\n\t\t\t\t\t<flat-picker disabled.bind=\"showLockMessage\" controlid=\"startDate\" config.bind=\"config\" change.delegate=\"changeBeginDate($event)\"  \n\t\t\t\t\t\tvalue.bind=\"requests.selectedRequest.startDate\" startdate.bind=\"minStartDate\" enddate.bind=\"maxStartDate\"></flat-picker>\n\t\t\t\t\t<span id='startDateError'></span>\n           \t\t</div>\n\t\t\t\t<div class=\"col-lg-5 topMargin\">\n\t\t\t\t\t<label class=\"form-control-label \">End Date</label>\n\t\t\t\t\t<flat-picker disabled.bind=\"showLockMessage\" controlid=\"endDate\" config.bind=\"config\" value.bind=\"requests.selectedRequest.endDate\" startdate.bind=\"minEndDate\" enddate.bind=\"maxEndDate\"></flat-picker>\n\t\t\t\t\t<span id='endDateError'></span>\n\t\t\t\t</div>\n      \t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div show.bind=\"sandBoxClient || courseSelected\" class=\"col-lg-8\">\n\t\t<div class=\"row\">\t\n\t\t\t<div class=\"col-md-5 topMargin\">\n\t\t\t\t<label id=\"productList\">Available Products</label>\n\t\t\t\t<div class=\"well well2 overFlow\" style=\"height:400px;\">\n\t\t\t\t\t<input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter products\"/>\n\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t<a click.trigger=\"selectProduct($event)\" type=\"button\" repeat.for=\"product of filteredProductsArray\" id=\"${product._id}\" class=\"list-group-item dropbtn\">${product.name}</a>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-5 col-md-offset-1 topMargin\">\n\t\t\t\t<label id=\"requestProductsLabel\">Requested Products</label>\n\t\t\t\t<div class=\"well well2 overflow\" style=\"height:400px;\">\n\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t<a  show.bind=\"!product.delete\" click.trigger=\"removeProduct($event)\" type=\"button\" repeat.for=\"product of requests.selectedRequest.requestDetails\" id=\"${product.productId}\"\n\t\t\t\t\t\t\t\tclass=\"list-group-item dropbtn\">${product.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</a>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\" id=\"productListTable\">\n\t\t\t\t<div show.bind=\"requests.selectedRequest.requestDetails.length > 0\">\n\t\t\t\t\t<table class=\"table table-striped table-bordered col-md-10 topMargin\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Requested Product</th>\n\t\t\t\t\t\t<th>Date Required</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tbody id=\"requiredProductsTable\">\n\t\t\t\t\t\t<tr repeat.for=\"request of requests.selectedRequest.requestDetails\">\n\t\t\t\t\t\t<td>${request.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<div class=\"form-group  col-md-8\">\n\t\t\t\t\t\t\t<flat-picker controlid=\"requiredDate-${$index}\" config.bind=\"config\" value.bind=\"request.requiredDate\" startdate.bind=\"minRequiredDate\" enddate.bind=\"maxRequiredDate\"></flat-picker>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\n\t\t\t\t<div class=\"topMargin\" show.bind=\"sandBoxClient || courseSelected\">\n\t\t\t\t\t<editor value.bind=\"requests.selectedRequest.comments\" height=\"250\"></editor>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n</template>"; });
define('text!modules/tech/requests/techRequests.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>   \n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/tech/support/archiveHelpTickets.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/searchHTForm.html\"></compose>\n            </div> <!-- Table Div -->\n            <div show.bind=\"helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/viewHTSearchResults.html\"></compose>\n            </div> <!-- Form Div -->\n        </div> <!-- Row -->\n      </div> <!-- Panel Body --> \n</template>"; });
define('text!modules/tech/support/createHelpTickets.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n        <div class=\"col-lg-4\">\n            <compose view='./components/helpTicketType.html'></compose>\n            <compose view='./components/Requests.html' show.bind=\"showRequests\"></compose>\n        </div>\n        <div class=\"col-lg-8\">\n            <compose show.bind=\"showAdditionalInfo\" view='./components/helpTicketDetails.html'></compose>\n        </div>\n      </div>\n    </div>\n</template>"; });
define('text!modules/tech/support/support.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>   \n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/tech/support/viewHelpTickets.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/viewHTTable.html\"></compose>\n            </div> \n           \n            <div show.bind=\"helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/viewHTForm.html\"></compose>\n            </div> \n           \n        </div> \n      </div> \n    \n</template>"; });
define('text!modules/user/components/banner.html', ['module'], function(module) { module.exports = "<template>\r\n  <div class=\"subMenu-container\">\r\n    <div class=\"textContainer banner subMenu\">\r\n      <span show.bind=\"temp\" class=\"leftMargin\">\r\n        <h4>${userObj.institutionId.city} weather: ${temp} </h4>\r\n        <img src=\"${weatherIcon}\" class=\"weatherIcon smallLeftMargin\">\r\n      </span>\r\n      <span show.bind=\"ucctemp\" class=\"leftMargin\">\r\n        <h4>UCC weather: ${ucctemp} </h4>\r\n        <img src=\"${uccweatherIcon}\" class=\"weatherIcon smallLeftMargin\">\r\n      </span>\r\n      <div class=\"pull-right\">\r\n        <span show.bind=\"userObj.userRole < config.UCC_ROLE\">\r\n\t\t\t\t\t<a href=\"#/clientRequests\" class=\"rightMargin\" if.bind=\"showRequests > 0\" style=\"text-decoration: none;\">Requests <span class=\"badge\">${showRequests}</span></a>            \r\n\t\t\t\t\t<a href=\"#/support\" class=\"rightMargin\" if.bind=\"showHelpTickets > 0\" style=\"text-decoration: none;\">Help Tickets <span class=\"badge\">${showHelpTickets}</span></a>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span show.bind=\"userObj.userRole >= config.UCC_ROLE\">\r\n\t\t\t\t\t<a href=\"#/techRq\" class=\"rightMargin\" if.bind=\"showRequests > 0\" style=\"text-decoration: none;\">Requests <span class=\"badge\">${showRequests}</span></a>            \r\n\t\t\t\t\t<a href=\"#/techHt\" class=\"rightMargin\" if.bind=\"showHelpTickets > 0\" style=\"text-decoration: none;\">Help Tickets <span class=\"badge\">${showHelpTickets}</span></a>\r\n\t\t\t\t</span>\r\n        <span show.bind=\"alertIndex > -1\" click.delegate=\"openAlert(siteinfo.siteArray[alertIndex])\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n          title=\"\" data-original-title=\"Alerts\"><i class=\"fa fa-bell-o fa-border\" aria-hidden=\"true\"></i></span>\r\n        <span class=\"rightMargin\"><h4>Welcome ${userObj.fullName}</h4></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"; });
define('text!modules/user/components/carousel.html', ['module'], function(module) { module.exports = "<template>\n  <div show.bind=\"showCarousel\" id=\"carousel-example-generic\" class=\"carousel slide bigTopMargin carouselSize\" data-ride=\"carousel\">\n    <!-- Indicators -->\n    <ol class=\"carousel-indicators\">\n      <li data-target=\"#carousel-example-generic\" data-slide-to=\"${$index}\" class=\"$firts ? 'active' : '''\" repeat.for=\"item of siteinfo.siteArray | infoFilter:'CARO'\"></li>\n    </ol>\n\n    <!-- Wrapper for slides -->\n    <div class=\"carousel-inner\" role=\"listbox\">\n      <div repeat.for=\"item of siteinfo.siteArray | infoFilter:'CARO'\" class=\"${$first ? 'item active' : 'item'}\">\n        <a href=\"${item.url}\" target=\"_blank\"><img src=\"${item.url}\" class=\"d-block img-fluid img-responsive\"  alt=\"${item.title}\"></a>\n        <div class=\"carousel-caption\">\n          <h3>${item.title}</h3>\n        </div>\n      </div>\n    </div>\n\n    <!-- Controls -->\n    <a class=\"left carousel-control\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"prev\">\n      <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"right carousel-control\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"next\">\n      <span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Next</span>\n    </a>\n  </div>\n  <div  class=\"carouselSize\" show.bind=\"!showCarousel\">\n    <img src=\"${config.IMG_DOWNLOAD_URL}${config.DEFAULT_HOME_IMAGE}\" height=\"600\" class=\"img-responsive\">\n  </div>\n"; });
define('text!modules/user/components/homePageLinks.html', ['module'], function(module) { module.exports = "<template>\r\n  <blockquote>\r\n    <h6>${item.title}</h6>\r\n     <p innerhtml.bind=\"item.content\"></p>\r\n    <small show.bind=\"moreInfoExists(item)\"><a show.bind=\"moreInfoExists(item)\" href.bind=\"item.url\" target=\"_blank\">more info...</a></small>\r\n  </blockquote>\r\n</template>"; });
define('text!modules/user/components/newsItem.html', ['module'], function(module) { module.exports = "<template>\n  <blockquote>\n    <p innerhtml.bind=\"item.content\"></p>\n    <small show.bind=\"moreInfoExists(item)\"><a show.bind=\"moreInfoExists(item)\" href.bind=\"item.url\" target=\"_blank\">more info...</a></small>\n  </blockquote>\n</template>"; });
define('text!modules/user/components/uccInformation.html', ['module'], function(module) { module.exports = "<template>\r\n\t\t<h2 class=\"underline\">UCC Information</h2>\r\n\t\t<div class=\"${item.priority}\" repeat.for=\"item of siteinfo.siteArray | infoFilter:'SYST'\">\r\n\t\t\t<h3>${item.title}</h3>\r\n\t\t\t<span innerhtml=\"${item.content}\"></span>\r\n\t\t\t<hr/>\r\n\t\t</div>\r\n\t\t<div repeat.for=\"item of siteinfo.siteArray | infoFilter:'INFO'\">\r\n\t\t\t<h3>${item.title}</h3>\r\n\t\t\t<span innerhtml=\"${item.content}\"></span>\r\n\t\t\t<hr/>\r\n\t\t</div>\r\n\t\t<div class=\"bigTopMargin\">\r\n\t\t\t<h2 class=\"underline\">Sessions</h2>\r\n\t\t\t<div class=\"list-group\">\r\n\t\t\t\t<a class=\"list-group-item\" repeat.for=\"session of sessions.sessionsArray | sessionType:'Active:Requests:Next'\">\r\n\t\t\t\t\t<h4 class=\"list-group-item-heading\">${session.sessionStatus}: Session ${session.session} - ${session.year}</h4>\r\n\t\t\t\t\t<p class=\"list-group-item-text\">Requests open: ${session.requestsOpenDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t\t\t<p class=\"list-group-item-text\">Clients available: ${session.startDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t\t\t<p class=\"list-group-item-text\">Session ends: ${session.endDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n</template>"; });
define('text!modules/user/requests/clientRequests.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>     \n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/user/requests/createRequests.html', ['module'], function(module) { module.exports = "<template>\n<require from=\"fuelux/css/fuelux.min.css\"></require>\n<require from=\"flatpickr/flatpickr.css\"></require>\n<div class=\"row\">\n <span  show.bind=\"showLockMessage\" class=\"leftMargin bottomMargin\" >Request is currently locked by ${lockObject.personId | lookupValue:people.peopleArray:\"_id\":'fullName'}</span>\n \n</div>\n  <div class=\"fuelux col-lg-7 blackText\" style=\"height:1000px;\">\n    <div class=\"wizard\" data-initialize=\"wizard\" id=\"myWizard\">\n      <div class=\"steps-container\">\n        <ul class=\"steps\">\n          <li data-step=\"1\"  data-target=\"#step1\" class=\"active\">\n            <span class=\"badge badge-info\">1</span>Step 1<span class=\"chevron\"></span>\n          </li>\n          <li data-step=\"2\" data-target=\"#step2\">\n            <span class=\"badge\">2</span>Step 2<span class=\"chevron\"></span>\n          </li>\n          <li data-step=\"3\" data-target=\"#step3\">\n            <span class=\"badge\">3</span>Step 3<span class=\"chevron\"></span>\n          </li>\n          <li data-step=\"4\" data-target=\"#step4\">\n            <span class=\"badge\">4</span>Step 4<span class=\"chevron\"></span>\n          </li>\n        </ul>\n      </div>\n      <div class=\"actions\">\n        <button type=\"button\" class=\"btn btn-default btn-prev btn-md\">\n           <span><i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i></span>Prev</button>\n        <button type=\"button\" class=\"btn btn-primary btn-next btn-md\" data-last=\"Complete\">Next\n          <span><i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n      <div class=\"step-content\">\n\n        <div class=\"step-pane active\" id=\"step1\" data-step=\"1\">\n          <h3><strong>Step 1 </strong> - Course Information</h3>\n          <compose view=\"./components/client-request-step1.html\"></compose>\n        </div>\n\n        <div class=\"step-pane\" id=\"step2\"  data-step=\"2\">\n          <h3><strong>Step 2 </strong> - Products</h3>\n\n          <compose view=\"./components/client-request-step2.html\"></compose>\n\n        </div>\n\n        <div class=\"step-pane\" id=\"step3\"  data-step=\"3\">\n          <h3><strong>Step 3 </strong> - Additional Comments</h3>\n          <compose view=\"./components/client-request-step3.html\"></compose>\n        </div>\n\n        <div class=\"step-pane\" id=\"step4\"  data-step=\"4\">\n          <h3><strong>Step 4 </strong> - Requested Dates</h3>\n          <compose view=\"./components/client-request-step4.html\"></compose>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-4 leftMargin\" id=\"SessionInfo\">\n\t\t\t<h2 class=\"underline\">Current Sessions</h2>\n\t\t\t<div class=\"list-group\">\n\t\t\t\t<a class=\"list-group-item\" repeat.for=\"session of sessions.sessionsArray\">\n\t\t\t\t\t<h4 class=\"list-group-item-heading\">${session.sessionStatus}: Session ${session.session} - ${session.year}</h4>\n\t\t\t\t\t<p class=\"list-group-item-text\">Requests open: ${session.requestsOpenDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\n\t\t\t\t\t<p class=\"list-group-item-text\">Clients available: ${session.startDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\n\t\t\t\t\t<p class=\"list-group-item-text\">Session ends: ${session.endDate | dateFormat:config.DATE_FORMAT_TABLE}</p>\n\t\t\t\t</a>\n    </div>\n  </div>\n  <div show.bind=\"sessionSelected\" class=\"topMargin col-lg-4 leftMargin\"><h4>Session: ${sessions.selectedSession.session} - ${sessions.selectedSession.year}</h4></div> \n  <div show.bind=\"sandBoxClient\" class=\"topMargin col-lg-4 leftMargin\"><h4>Course: ${config.SANDBOX_NAME}</h4></div> \n  <div show.bind=\"courseSelected\" class=\"topMargin col-lg-4 leftMargin\"><h4>Course: ${people.selectedCourse.number} - ${people.selectedCourse.name}</h4></div> \n  <div class=\"topMargin col-lg-4 leftMargin\" style=\"display: none;\" id=\"existingRequestInfo\"></div>\n\n  <div id=\"curriculumInfo\" class=\"topMargin col-lg-4 leftMargin\" >\n    <div class=\"panel panel-default\" >\n      <div class=\"panel-heading\">${productInfoObject.header}</div>\n      <div class=\"panel-body\" innerhtml.bind=\"productInfoObject.info\"></div>\n    </div>\n  </div>\n</div>\n  \n</template>\n"; });
define('text!modules/user/requests/viewProducts.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"container\">\n   <div class=\"col-lg-5 topMargin\">\n        <label id=\"productList\">Available Products</label>\n        <div class=\"well well2 overFlow\">\n          <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter products\"/>\n          <ul class=\"list-group\">\n            <a  click.trigger=\"selectProduct($event)\" type=\"button\" repeat.for=\"product of filteredProductsArray\" id=\"${product._id}\"\n                    mouseover.delegate=\"showCurriculum(product, $event)\" mouseout.delegate=\"hideCurriculum()\"\n                    class=\"list-group-item dropbtn\">${product.name}</a>\n          </ul>\n        </div>\n\t</div>\n\t <div id=\"curriculumInfo\" class=\"topMargin col-lg-6 leftMargin\">\n\t\t<div class=\"col-lg-6\" style=\"position:fixed;\">\n\t\t\t<h2>${productInfoObject.header}</h2>\n\t\t\t<div class=\"panel-body\" innerhtml.bind=\"productInfoObject.info\"></div>\n\t\t</div>\n\t</div>\n  </div>\n</template>"; });
define('text!modules/user/requests/viewRequests.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n        <div class=\"col-lg-4\">\n            <div class=\"form-group topMargin leftMargin\">\n                <select show.bind=\"!requestSelected\" value.bind=\"selectedSession\" change.delegate=\"getRequests()\" id=\"session\" class=\"form-control\">\n                <option repeat.for=\"session of sessions.sessionsArray\"\n                        value.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\n                </select>\n            </div>\n        </div>\n\n        <div show.bind=\"!requestSelected\" class=\"col-lg-12\">\n            <compose view=\"./components/viewRequestsTable.html\"></compose>\n        </div> \n        <div show.bind=\"requestSelected\" class=\"col-lg-12\">\n            <compose view=\"./components/viewRequestsForm.html\"></compose>\n        </div>\n      </div>\n    </div> \n</template>"; });
define('text!modules/user/support/createHelpTickets.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-body\">\r\n        <div class=\"col-lg-4\">\r\n            <compose view='./components/helpTicketType.html'></compose>\r\n\r\n            <compose show.bind=\"helpTicketType != 'NULL' && requestsRequired\" view='./components/Requests.html'></compose>\r\n           \r\n        </div>\r\n        <div class=\"col-lg-8\">\r\n            <compose show.bind=\"showAdditionalInfo && helpTicketType != 'NULL'\" view='./components/helpTicketDetails.html'></compose>\r\n        </div>\r\n      </div>\r\n    </div> <!-- Panel Body -->\r\n</template>"; });
define('text!modules/user/support/curriculum.html', ['module'], function(module) { module.exports = "<template>\r\n\t<style>\r\n        .menuButtons {\r\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\r\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\r\n        }\r\n    </style>\r\n\t<div class=\"col-lg-3\">\r\n\t\t<h4>Curriculum Categories</h4>\r\n\t\t<div>\r\n\t\t\t<ul id=\"buttonGroup\" class=\"list-group\">\r\n\t\t\t\t<button click.trigger=\"typeChanged($index, $event)\" type=\"button\" repeat.for=\"category of curriculum.curriculumCatArray\"\r\n\t\t\t\t\tid=\"${category.name}\" class=\"${ $first ? 'list-group-item menuButtons' : 'list-group-item'}\">${category.name}</button>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-lg-9\">\r\n\t\t<div show.bind=\"typeSelected != '' && !curriculumSelected\" style='padding:15px;'>\r\n\t\t\t<div class='row'>\r\n\t\t\t\t<div class='col-lg-12 bottomMargin'>\r\n\t\t\t\t\t<table id=\"newsTable\" class=\"table table-striped table-hover\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colspan='4'>\r\n\t\t\t\t\t\t\t\t\t<compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Title </th>\r\n\t\t\t\t\t\t\t\t<th>Rating</th>\r\n\t\t\t\t\t\t\t\t<th>Rate It</th>\r\n\t\t\t\t\t\t\t\t<th>Products</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr repeat.for=\"curriculum of curriculumArray\">\r\n\t\t\t\t\t\t\t\t<td click.delegate=\"selectCurriculum(curriculum)\" data-title=\"Title\" class=\"col-lg-6\">${curriculum.title}</td>\r\n\t\t\t\t\t\t\t\t<td data-title=\"Rating\">${curriculum.rating | formatDigits:2}</td>\r\n\t\t\t\t\t\t\t\t<td data-title=\"Rating\" class=\"col-lg-2\">\r\n\t\t\t\t\t\t\t\t\t<rate-it id=\"${curriculum._id}\" change.delegate=\"rateCurriculum($event)\" rating.two-way=\"curriculum.rating\" raters.bind=\"curriculum.raters\"></rate-it>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td data-title=\"Products\" class=\"col-lg-4\">\r\n\t\t\t\t\t\t\t\t\t<ul class=\"list-group\">\r\n\t\t\t\t\t\t\t\t\t\t<li repeat.for=\"product of curriculum.products\" class=\"list-group-item\">${product | lookupValue:products.productsArray:\"_id\":\"name\"}</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div show.bind=\"curriculumSelected\">\r\n\t\t\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n\t\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\r\n\t\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t<span click.delegate=\"add()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\r\n\t\t\t\t\tdata-original-title=\"Add Comment\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t<span show.bind=\"addComment\" click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\r\n\t\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t<span show.bind=\"addComment\" click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n\t\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"panel panel-default leftMargin rightMargin\">\r\n\t\t\t\t <div class=\"panel-heading\">\r\n\t\t\t\t\t<h3 class=\"panel-title\">${curriculum.selectedCurriculum.title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div show.bind=\"curriculum.selectedCurriculum.description.length > 0\" class=\"panel-body\" innerhtml.bind=\"curriculum.selectedCurriculum.description\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"topMargin bigLeftMargin\" show.bind=\"curriculum.selectedCurriculum.file.fileName != undefined\">\r\n\t\t\t\t\t<a href=\"${config.DOWNLOAD_URL}/curriculum/${curriculum.selectedCurriculum.category}/${curriculum.selectedCurriculum.file.fileName}\" innerhtml.bind='curriculum.selectedCurriculum.file.fileName' target='_blank'></a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div show.bind=\"addComment\">\r\n\t\t\t\t<h3>Comments are not anonymous</h3>\r\n\t\t\t\t <editor value.bind=\"comment\" height=\"250\"></editor>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"well well-sm topMargin leftMargin rightMargin\" show.bind=\"curriculum.selectedCurriculum.customerComments.length > 0\">\r\n\t\t\t\t<!-- Timeline Content -->\r\n\t\t\t\t<div class=\"smart-timeline\">\r\n\t\t\t\t\t<ul class=\"smart-timeline-list\">\r\n\t\t\t\t\t\t<li  repeat.for=\"comment of curriculum.selectedCurriculum.customerComments\">\r\n\t\t\t\t\t\t\t<compose view=\"./components/comment.html\"></compose>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</template>"; });
define('text!modules/user/support/downloads.html', ['module'], function(module) { module.exports = "<template>\r\n    <style>\r\n        .menuButtons {\r\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\r\n\t\t\tbackground-color:${config.SUBMENU_BACKGROUND}\r\n        }\r\n    </style>\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-body\">\r\n          <div class=\"col-lg-3\">\r\n\t\t<h4>Download Categories</h4>\r\n\t\t<div>\r\n\t\t\t<ul class=\"list-group\" id=\"buttonGroup\">\r\n\t\t\t\t<button click.trigger=\"typeChanged($event, $index)\" type=\"button\" repeat.for=\"type of downloads.appCatsArray\" id=\"${type.downCatcode}\"\r\n\t\t\t\t\tclass=\"${ $first ? 'menuButtons list-group-item' : 'list-group-item'}\">${type.description}</button>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n       \r\n\r\n        <div show.bind=\"typeSelected != ''\" class=\"col-lg-9\" style='padding:15px;'>\r\n            <div class='row'>\r\n                <div class='col-lg-12 bottomMargin'>\r\n                    <table id=\"newsTable\" class=\"table table-striped table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td colspan='3'>\r\n                                    <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th >Name </th>\r\n                                <th>File</th>\r\n                                <th >Decription</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr repeat.for=\"item of dataTable.displayArray\">\r\n                                <td data-title=\"name\" class=\"col-md-2\">${item.name}</td>\r\n                                <td data-title=\"originalFilename\" class=\"col-md-2\">\r\n                                    <a href=\"${config.DOWNLOAD_URL}/downloads/${typeSelected}/${item.file.originalFilename}\" target=\"_blank\">${item.file.originalFilename}</a>\r\n                                </td>\r\n                                <td data-title=\"description\" class=\"col-md-8\">\r\n                                    <div>${item.description}</div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   </div>\r\n</template>"; });
define('text!modules/user/support/links.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"row\">\r\n      <div repeat.for=\"category of linkArray\" class=\"col-lg-3\">\r\n        <h2>${category.category}</h2>\r\n        <div>\r\n          <a repeat.for=\"link of category.links\" href=\"${link.url}\" class=\"list-group-item link-shadow\" target=\"_blank\">\r\n            <h4 class=\"list-group-item-heading\">${link.title}</h4>\r\n            <p class=\"list-group-item-text\">${link.content}</p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</template>"; });
define('text!modules/user/support/support.html', ['module'], function(module) { module.exports = "<template>\n    <compose view='../../../resources/elements/submenu.html'></compose>   \n    <div class=\"col-lg-12\">\n        <router-view></router-view>\n    </div>\n</template>"; });
define('text!modules/user/support/viewHelpTickets.html', ['module'], function(module) { module.exports = "<template>\n   \n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n            <div show.bind=\"!helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/viewHTTable.html\"></compose>\n            </div> \n           \n            <div show.bind=\"helpTicketSelected\" class=\"col-lg-12\">\n                <compose view=\"./components/viewHTForm.html\"></compose>\n            </div> \n           \n        </div> \n      </div> \n    \n</template>"; });
define('text!modules/admin/Customers/components/Address.html', ['module'], function(module) { module.exports = "<template>\n     <div class=\"topMargin\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"copyInstAddress()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Copy Instituion Address\"><i class=\"fa fa-files-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        </div>\n        <div class=\"topMargin\">\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editAddress1\" class=\"control-label hideOnPhone\">Address 1</label>\n                <input value.bind=\"people.selectedPerson.address1\" id=\"editAddress1\" class=\"form-control \" placeholder=\"Address 1\" type=\"text\" />\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editAddress2\" class=\"control-label hideOnPhone\">Address 2</label>\n                <input value.bind=\"people.selectedPerson.address2\" id=\"editAddress2\" class=\"form-control \" placeholder=\"Address2\" type=\"text\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editCity\" class=\"control-label hideOnPhone\">City</label>\n                <input value.bind=\"people.selectedPerson.city\" id=\"editCity\" class=\"form-control \" placeholder=\"City\" type=\"text\" />\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editRegion\" class=\"control-label hideOnPhone\">Region</label>\n                <input value.bind=\"people.selectedPerson.region\" id=\"editRegion\" class=\"form-control \" placeholder=\"Region\" type=\"text\" />\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editPostalCode\" class=\"control-label hideOnPhone\">Postal Code</label>\n                <input value.bind=\"people.selectedPerson.postalCode\" id=\"editPostalCode\" class=\"form-control \" placeholder=\"Postal Code\" type=\"text\" />\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <label for=\"editCountry\" class=\"control-label hideOnPhone\">Country</label>\n                <input value.bind=\"people.selectedPerson.country\" id=\"editCountry\" class=\"form-control \" placeholder=\"Country\" type=\"text\" />\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/Audit.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"topMargin\">\n        <table id=\"auditTable\" class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <th style=\"width:20rem;\">Property </th>\n                    <th style=\"width:30rem;\">Date</th>\n                    <th style=\"width:15rem;\">Old Value</th>\n\t\t\t\t\t<th style=\"width:15rem;\">New Value</th>\n\t\t\t\t\t<th style=\"width:15rem;\">Person</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr repeat.for=\"change of people.selectedPerson.audit\">\n                    <td>${change.property} </td>\n                    <td>${change.eventDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n                    <td>${change.oldValue}</td>\n\t\t\t\t\t<td>${change.newValue}</td>\n\t\t\t\t\t<td>${change.personId | lookupValue:people.peopleArray:\"_id\":\"fullName\"}</td>\n                </tr>\n            </tbody>\n        </table>\n\t</div>\n</template>"; });
define('text!modules/admin/Customers/components/Courses.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n        <table id=\"coursesTable\" class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <td colspan='6'>\n                        <span click.delegate=\"refreshCourses()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"newCourse()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Course\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                    </td>\n                </tr>\n                <tr>\n                    <th style=\"width:20rem;\">Number </th>\n                    <th style=\"width:30rem;\">Name</th>\n                    <th style=\"width:15rem;\">Status</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"selectCourse\" click.delegate=\"editACourse($index, $event)\"  repeat.for=\"course of people.coursesArray\">\n                    <td data-title=\"name\">${course.number} </td>\n                    <td data-title=\"insitution\">${course.name}</td>\n                    <td data-tile=\"phone\">${course.active | translateStatus}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"row\" show.bind=\"courseSelected\">\n            <div class=\"panel panel-default col-md-12\">\n                <div class=\"panel-body\">\n                    <div class=\"bottomMargin\">\n                        <div class=\"bottomMargin list-group-item\">\n                            <span click.delegate=\"saveCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                            <span click.delegate=\"cancelEditCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                        </div>  \n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"number\" value.bind=\"people.selectedCourse.number\" type=\"text\" placeholder=\"Course Number\"\n                            class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"name\" value.bind=\"people.selectedCourse.name\" type=\"text\" placeholder=\"Course Name\"\n                            class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"checkbox\">\n                            <label class=\"pull-left\">\n                                <input id=\"activeProduct\" checked.bind=\"people.selectedCourse.active\" type=\"checkbox\"> Active\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/Email.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"row\">\n\t\t<fieldset class=\"form-group\">\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"studentIdTemplate\" class=\"col-sm-6 form-control-label topMargin\">\n                Customer Message\n                <span class=\"smallLeftMargin\" click.delegate=\"sendCustomerEmail()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send\"><i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i></span>\n                <span class=\"smallLeftMargin\" click.delegate=\"cancelCustomerEmail()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban\" aria-hidden=\"true\"></i></span>\n              </label>\n\t\t\t  <div class=\"col-lg-11\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<Input class=\"form-control\" value.bind=\"emailSubject\" placeholder=\"Email Subject\" />\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t  <div class=\"col-lg-11\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<editor value.bind=\"emailMessage\" height=\"250\" toolbar.bind=\"toolbar\" ></editor>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</fieldset>\n\t</div>\n</template>"; });
define('text!modules/admin/Customers/components/emailTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n        <div id=\"no-more-tables\">\n            <table class=\"table table-striped table-hover cf\">\n                <thead class=\"cf\">\n                    <tr colspan='7'>\n                            <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                    </tr>                            \n                    <tr>\n                        <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'lastName'})\">Name </span><i class=\"fa fa-sort\"></i></th>                              \n                        <th style=\"width:30rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'institutionId.name'})\">Institution </span><i class=\"fa fa-sort\"></i></th>\n                        <th style=\"width:15rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'city'})\">City </span><i class=\"fa fa-sort\"></i></th>\n                        <th style=\"width:15rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'institutionId.region'})\">Region </span><i class=\"fa fa-sort\"></i>></th>\n                        <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'email'})\">Email </span><i class=\"fa fa-sort\"></i></th>\n                        <th>Role</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr repeat.for=\"person of dataTable.displayArray\">\n                        <td  data-title=\"Name\">${person.firstName} ${person.lastName}</td>\n                        <td  data-title=\"Insitution\">${person.institutionId._id | lookupValue:people.institutionsArray:\"_id\":\"name\"}</td>\n                        <td  data-tile=\"City\">${person.institutionId.city}</td>\n                        <td  data-tile=\"Region\">${person.institutionId.region}</td>\n                        <td  data-title=\"Email\">${person.email}</td>\n                        <td  data-title=\"Role\">${person.roles}</td>\n                        <td  data-title=\"Status\">${person.personStatus | lookupValue:is4ua.personStatusArray:\"code\":\"description\"}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/instAddress.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"row topMargin\">\n        <!-- Row 5 -->\n        <div class=\"col-lg-6 topMargin\">\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Address 1</label>\n                        <input value.bind=\"people.selectedInstitution.address1\" id=\"editAddress1\" class=\"form-control\" placeholder=\"Address 1\" type=\"text\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Address 2</label>\n                        <input value.bind=\"people.selectedInstitution.address2\" id=\"editAddress1\" class=\"form-control\" placeholder=\"Address 2\" type=\"text\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>City</label>\n                        <input value.bind=\"people.selectedInstitution.city\" id=\"editCity\" class=\"form-control\" placeholder=\"City\" type=\"text\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Region</label>\n                        <input value.bind=\"people.selectedInstitution.region\" id=\"editRegion\" class=\"form-control\" placeholder=\"Region\" type=\"text\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Postal Code</label>\n                        <input value.bind=\"people.selectedInstitution.postalCode\" id=\"editPostalCode\" class=\"form-control\" placeholder=\"Postal Code\"\n                            type=\"text\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Country</label>\n                        <input value.bind=\"people.selectedInstitution.country\" id=\"editCountry\" class=\"form-control\" placeholder=\"Country\" type=\"text\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6 topMargin\">\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>URL</label>\n                        <input value.bind=\"people.selectedInstitution.url\" id=\"editCountry\" class=\"form-control\" placeholder=\"URL\" type=\"text\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <div class=\"col-sm-10\">\n                        <label>Time Zone</label>\n                        <select value.bind=\"people.selectedInstitution.timeZone\" class=\"form-control\">\n                            <option value=\"\">Select an option</option>\n                            <option repeat.for=\"zone of config.TIMEZONES\" value=\"${zone}\">${zone}</option>\n                    </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/instIs4ua.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-6 topMargin\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-group\">\n                <div class=\"col-sm-10\">\n                    <label>Institution Type *</label>\n                    <select value.bind=\"people.selectedInstitution.institutionType\" id=\"editInstitutionType\" class=\"form-control\">\n                        <option value=\"\">Select an option</option>\n                        <option repeat.for=\"status of is4ua.institutionTypes\" value=\"${status.code}\">${status.description}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-12\">\n            <div class=\"form-group\">\n                <div class=\"col-sm-10\">\n                    <label>Member Type *</label>\n                    <select value.bind=\"people.selectedInstitution.memberType\" id=\"editMemberType\" class=\"form-control\">\n                        <option value=\"\">Select an option</option>\n                        <option repeat.for=\"status of is4ua.memberTypes\" value=\"${status.code}\">${status.description}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n     <div class=\"col-lg-6 topMargin\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-group\">\n                <div class=\"col-sm-10\">\n                    <label class=\"left\">Highest Degree *</label>\n                    <select value.bind=\"people.selectedInstitution.highestDegree\" id=\"editHighestDegree\" class=\"form-control\">\n                        <option value=\"\">Select an option</option>\n                        <option repeat.for=\"status of is4ua.highestDegrees\" value=\"${status.code}\">${status.description}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-12\">\n            <div class=\"form-group\">\n                <div class=\"col-sm-10\">\n                    <label>Department</label>\n                    <input value.bind=\"people.selectedInstitution.universityDept\" id=\"editDepartment\" class=\"form-control\" placeholder=\"Department\" type=\"text\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/institutionsForm.html', ['module'], function(module) { module.exports = "<<template>\n    <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-12\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"!newInstitution\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div>\n\n        <div class=\"topMargin\">\n            <form class=\"form-horizontal\">\n                <!-- Row 1 -->\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\">\n                            <div class=\"col-sm-10\">\n                                <label>Name *</label>\n                                <input value.bind=\"people.selectedInstitution.name\" id=\"editName\" class=\"form-control\" placeholder=\"Name\" type=\"text\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\">\n                            <div class=\"col-sm-10\">\n                                <label>Modifed Date</label>\n                                 <flat-picker controlid=\"modifiedDate\" config.bind=\"config\" value.bind=\"people.selectedInstitution.dateModified\"></flat-picker>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\">\n                            <div class=\"col-sm-10\">\n                                <label>Date Joined</label>\n                                <flat-picker controlid=\"joinDate\" config.bind=\"config\" value.bind=\"people.selectedInstitution.joinDate\"></flat-picker>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\">\n                            <div class=\"col-sm-10\">\n                                <label>Date Dropped</label>\n                                 <flat-picker controlid=\"dropDate\" config.bind=\"config\" value.bind=\"people.selectedInstitution.dropDate\"></flat-picker>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\"> \n                            <div class=\"col-sm-10\">\n                                <label class=\"left\">Status *</label>\n                                <select value.bind=\"people.selectedInstitution.institutionStatus\" id=\"editInstitutonStatusArray\" class=\"form-control\">\n                                    <option value=\"\">Select an option</option>\n                                    <option repeat.for=\"status of is4ua.institutonStatusArray\" value=\"${status.code}\">${status.description}</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row topMargin\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"row\">\n                            <div class=\"panel panel-default\">\n                                <div class=\"panel-body\">\n                                    <div class=\"col-lg-2\">\n                                        <div id=\"instFormListGroup\" class=\"list-group\">\n                                            <a class=\"${ $first ? 'menuButtons' : ''} list-group-item\" repeat.for=\"tab of tabs\" href=\"\" class=\"list-group-item\" click.delegate=\"changeTab($event, $index)\">\n                                                <h4 id=\"${tab.id}\" class=\"list-group-item-heading\">${tab.title}</h4>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-10\">\n                                        <div class=\"tab-content\">\n                                            <div repeat.for=\"tab of tabs\" id=\"${tab.id + 'Tab'}\" class=\"${ $first ? 'tab-pane fade in active' : 'tab-pane fade' }\">\n                                                <compose view=\"${tabPath + tab.id + '.html'}\"></compose>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    </template>"; });
define('text!modules/admin/Customers/components/institutionsTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12 col-sm-12\">\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr colspan='6'>\n                                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                        </tr>\n                        <tr>\n                            <td colspan='6'>\n                                <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                <span click.delegate=\"new()\"  class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                <span click.delegate=\"_clearFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n                                <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th style=\"width:30rem;\">Institution Type</th>\n                            <th style=\"width:15rem;\">Member Type</th>\n                            <th style=\"width:20rem;\">Member Since</th>\n                            <th>Highest Degree</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>\n                            <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'name', displayProperty: 'fullnameName', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <select value.bind=\"institutionTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'institutionTypeFilter',  collectionProperty: 'institutionType', displayProperty: 'institutionType', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for=\"institution of is4ua.institutionTypes\" value=\"${institution.code}\">${institution.description}</option>\n                                </select>\n                            </th>\n                            <th>\n                                <select value.bind=\"memberTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'memberTypeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'memberType', displayProperty: 'memberType', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for=\"institution of is4ua.memberTypes\" value=\"${institution.code}\">${institution.description}</option>\n                                </select>\n                            </th>\n                            <th></th>\n                            <th>\n                            <select value.bind=\"highestDegreeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'highestDegreeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'highestDegree', displayProperty: 'highestDegree', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for=\"institution of is4ua.highestDegrees\" value=\"${institution.code}\">${institution.description}</option>\n                                </select>\n                            </th>\n                            <th>\n                                <select value.bind=\"institutionStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'institutionStatusFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'institutionStatus', displayProperty: 'institutionStatus', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for='status of is4ua.institutonStatusArray' value=\"${status.code}\">${status.description}</option>\n                                </select>\n                            </th>\n                        </tr>\n                        <tr click.trigger=\"edit($index, $event)\" repeat.for=\"inst of dataTable.displayArray\">\n                            <td data-title=\"Name\">${inst.name}</td>\n                            <td data-title=\"Type\">${inst.institutionType | lookupValue:is4ua.institutionTypes:\"code\":\"description\"}</td>\n                            <td data-tile=\"Phone\">${inst.memberType | lookupValue:is4ua.memberTypes:\"code\":\"description\"}</td>\n                            <td data-title=\"Email\">${inst.joinDate | dateFormat:config.DATE_FORMAT_TABLE:true}</td>\n                            <td data-title=\"Role\">${inst.highestDegree | lookupValue:is4ua.highestDegrees:\"code\":\"description\"}</td>\n                            <td data-title=\"Status\">${inst.institutionStatus | lookupValue:is4ua.institutonStatusArray:\"code\":\"description\"}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/instPeople.html', ['module'], function(module) { module.exports = "<template>\r\n            <div class=\"col-lg-10 col-offset-lg-1\" style=\"padding:15px;\">\r\n\r\n            <table id=\"personTable2\" class=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width:20rem;\">Name</th>\r\n                        <th style=\"width:15rem;\">Phone</th>\r\n                        <th style=\"width:20rem;\">eMail</th>\r\n                        <th>Role</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr repeat.for=\"person of people.instutionPeopleArray\" class=\"blackText\">\r\n                        <td data-title=\"name\">${person.firstName} ${person.lastName}</td>\r\n                        <td data-tile=\"phone\">${person.phone | phoneNumber}</td>\r\n                        <td data-title=\"email\">${person.email}</td>\r\n                        <td data-title=\"role\">${person.roles}</td>\r\n                        <td data-title=\"status\">${person.personStatus | lookupValue:is4ua.personStatusArray:\"code\":\"description\"}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n</template>"; });
define('text!modules/admin/Customers/components/is4ua.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n        <!-- Row 4 -->\n            <div class=\"col-lg-12\">\n                <div class=\"form-group\">\n                    <label for=\"editSpecialization\" class=\"col-sm-3 control-label\">Specialization</label>\n                    <div class=\"col-sm-8\">\n                        <select value.two-way=\"people.selectedPerson.personSpecialization\" id=\"editSpecialization\" class=\"form-control \" placeholder=\"Specializatin\">\n                            <option value=\"\">Select an option</option>\n                            <option repeat.for=\"name of is4ua.specialArray\" value=\"${name.code}\">${name.description}</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-12\">\n                <div class=\"form-group\">\n                    <label for=\"editDepartment\" class=\"col-sm-3 control-label\">Department</label>\n                    <div class=\"col-sm-8\">\n                        <select value.two-way=\"people.selectedPerson.departmentCategory\" id=\"editDepartment\" class=\"form-control \" placeholder=\"Department\">\n                            <option value=\"\">Select an option</option>\n                            <option repeat.for=\"name of is4ua.deptArray\" value=\"${name.code}\">${name.description}</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/Password.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n        <div class=\"panel panel-default col-md-12\">\n            <div class=\"panel-body\">\n                <div class=\"bottomMargin\">\n                        <div class=\"bottomMargin list-group-item\">\n                            <span click.delegate=\"savePassword()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                            <span click.delegate=\"cancelEditPassword()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                        </div>  \n                    </div>\n                <div class=\"form-group\">\n                    <input id=\"newPassword\" type=\"text\" placeholder=\"New Password\"\n                        class=\"form-control topMargin\"\n                        value.bind=\"newPassword\" />\n                </div>\n                <!--\n                <div class=\"form-group\">\n                    <input id=\"password_repeat\" type=\"text\" placeholder=\"Repeat Password\"\n                        class=\"form-control topMargin\"\n                        value.bind=\"newPassword_repeat\" />\n                </div>\n                -->\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/peopleForm.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-12\">\n\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"!newPerson\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div> \n\n\n        <div class=\"topMargin\">\n            <form class=\"form-horizontal topMargin\">\n                <div class=\"row\">\n                    <div class=\"col-lg-1\">\n                         <div  class=\"topMargin\">\n                            <img if.bind=\"profileHelpTicket.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${people.selectedPerson.file.fileName}\" height=\"100\">\n                        </div>\n                        <div if.bind=\"!profileHelpTicket.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"people.selectedPerson.email | gravatarUrl:100:6\"></div>\n                    </div>\n                    <div class=\"col-lg-11\">\n                    <form class=\"horizontal-form\">\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editFirstName\" class=\"col-sm-3 control-label hideOnPhone\">First Name *</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"people.selectedPerson.firstName\" id=\"editFirstName\" class=\"form-control \" placeholder=\"First Name\" type=\"text\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editMiddleName\" class=\"col-sm-3 control-label hideOnPhone\">Middle Name</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"people.selectedPerson.middleName\" id=\"editMiddleName\" class=\"form-control \" placeholder=\"Middle Name\"\n                                        type=\"text\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editLastName\" class=\"col-sm-3 control-label hideOnPhone\">Last Name *</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"people.selectedPerson.lastName\" id=\"editLastName\" class=\"form-control \" placeholder=\"Last Name\" type=\"text\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editLastName\" class=\"col-sm-3 control-label hideOnPhone\">Nickname</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"people.selectedPerson.nickName\" id=\"editLastName\" class=\"form-control \" placeholder=\"Nickname\" type=\"text\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label col-sm-3 hideOnPhone\">Status *</label>\n                                <div class=\"col-sm-8\">\n                                    <select keypress.bind=\"setStatus($event)\" value.bind=\"people.selectedPerson.personStatus\" id=\"editStatus\" class=\"form-control \" placeholder=\"Status\">\n                                        <option value=\"\">Select an option</option>\n                                        <option repeat.for='status of is4ua.personStatusArray' value=\"${status.code}\">${status.description}</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editMobile\" class=\"col-sm-3 control-label hideOnPhone\">Mobile</label>\n                                <div class=\"col-sm-8\">\n                                    <input class=\"form-control\" id=\"editMobile\" masked=\"value.bind: people.selectedPerson.mobile; mask: 999-999-9999; placeholder: *\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                         <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editPhone\" class=\"col-sm-3 control-label hideOnPhone\">Phone *</label>\n                                <div class=\"col-sm-8\">\n                                    <input class=\"form-control\" id=\"editPhone\" masked=\"value.bind: people.selectedPerson.phone; mask: 999-999-9999; placeholder: *\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editPhone\" class=\"col-sm-3 control-label hideOnPhone\">Extension</label>\n                                <div class=\"col-sm-8\">\n                                    <input class=\"form-control\" id=\"editPhoneExt\" value.bind=\"people.selectedPerson.ext\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editEmail\" class=\"col-sm-3 control-label hideOnPhone\">Email *</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"people.selectedPerson.email\" id=\"editEmail\" class=\"form-control \" placeholder=\"Email\" type=\"text\" blur.trigger=\"checkEmail()\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n \n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editInstitution\" class=\"col-sm-3 control-label\">Institution *</label>\n                                <div class=\"col-sm-8\">\n                                    <select change.trigger=\"changeInstitution()\" value.bind=\"institutionId\" id=\"editInstitution\" class=\"form-control \" placeholder=\"Institution\">\n                                        <option value=\"\">Select an option</option>\n                                        <option repeat.for=\"institution of people.institutionsArray\" value=\"${institution._id}\">${institution.name}</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editSpecialization\" class=\"col-sm-3 control-label\">Specialization</label>\n                                <div class=\"col-sm-8\">\n                                    <select value.two-way=\"people.selectedPerson.personSpecialization\" id=\"editSpecialization\" class=\"form-control \" placeholder=\"Specializatin\">\n                            <option value=\"\">Select an option</option>\n                            <option repeat.for=\"name of is4ua.specialArray\" value=\"${name.code}\">${name.description}</option>\n                        </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"editDepartment\" class=\"col-sm-3 control-label\">Department</label>\n                                <div class=\"col-sm-8\">\n                                    <select value.two-way=\"people.selectedPerson.departmentCategory\" id=\"editDepartment\" class=\"form-control \" placeholder=\"Department\">\n                                        <option value=\"\">Select an option</option>\n                                        <option repeat.for=\"name of is4ua.deptArray\" value=\"${name.code}\">${name.description}</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n\n                <div class=\"row bigTopMargin\">\n                    <div class=\"col-lg-9 col-lg-offset-2\">\n                        <div class=\"row\">\n                            <div class=\"panel panel-default\">\n                                <div class=\"panel-body\">\n                                    <div class=\"col-lg-2\">\n                                        <div id=\"peopleFormListGroup\" class=\"list-group\">\n                                            <a class=\"${ $first ? 'menuButtons' : ''} list-group-item\" repeat.for=\"tab of tabs\" href=\"\" class=\"list-group-item\" click.delegate=\"changeTab($event, $index)\">\n                                                <h4 id=\"${tab.id}\" class=\"list-group-item-heading\">${tab.id}</h4>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-10\">\n                                        <div class=\"tab-content\">\n                                            <div repeat.for=\"tab of tabs\" id=\"${tab.id + 'Tab'}\" class=\"${ $first ? 'tab-pane fade in active' : 'tab-pane fade' }\">\n                                                <compose view=\"${tabPath + tab.id + '.html'}\"></compose>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </form>\n        </div>\n        <div>\n\n</template>"; });
define('text!modules/admin/Customers/components/peopleTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12 col-sm-12\">\n        <div class='row'>\n            <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n                <div id=\"no-more-tables\">\n                    <table class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr colspan='7'>\n                                 <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                                 </tr>\n                            <tr>                            \n                            <tr>\n                                <td colspan='7'>\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"new()\"  class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"_clearFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'fullName'})\">Name </span><i class=\"fa fa-sort\"></i></th>\n                                <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'nickName'})\">Nickname </span><i class=\"fa fa-sort\"></i></th>                                \n                                <th style=\"width:30rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionSorter, propertyName: 'intitutionId'})\">Institution </span><i class=\"fa fa-sort\"></i></th>\n                                <th style=\"width:15rem;\">Phone</th>\n                                <th style=\"width:20rem;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'email'})\">Email </span><i class=\"fa fa-sort\"></i></th>\n                                <th>Role</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>\n                                    <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', collectionProperty: 'fullName', displayProperty: 'fullName',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <input value.bind=\"nickNameFilterValue\" input.delegate=\"dataTable.filterList(nickNameFilterValue, { type: 'text',  filter: 'nickNameFilter',  collectionProperty: 'nickName', displayProperty: 'nickName',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <input value.bind=\"institutionFilterValue\" input.delegate=\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n                                </th>\n                                <th></th>\n                                <th></th>\n                                <th>\n                                    <input value.bind=\"roleFilter\" input.delegate=\"dataTable.filterList($event, { type: 'custom',  filter: customRoleFilter, compare:'custom'} )\"  class=\"form-control\" />\n\n                                </th>\n                                <th>\n                                    <select value.bind=\"activeFilterValue\" change.delegate=\"filterActive()\" class=\"form-control \" id=\"personStatus\">\n                                        <option value=\"\"></option>\n                                        <option repeat.for='status of is4ua.personStatusArray' model.bind='status.code'>${status.description}</option>\n                                    </select>\n                                </th>\n                            </tr>\n                            <tr repeat.for=\"person of dataTable.displayArray\">\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Name\">${person.firstName} ${person.lastName}</td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Nickname\">${person.nickName}</td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Insitution\">${person.institutionId.name}</d> \n                                <td click.trigger=\"edit($index, $event)\" data-tile=\"Phone\">${person.phone | phoneNumber}</td>\n                                <td class=\"dropbtn\" data-title=\"Email\" click.delegate=\"sendAnEmail(person._id)\">${person.email}</td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Role\">${person.roles}</td>\n                                <td class=\"dropbtn\" click.trigger=\"toggleStatus(person._id, person.personStatus)\" data-title=\"Status\">${person.personStatus | lookupValue:is4ua.personStatusArray:\"code\":\"description\"}\n                                  <span  click.delegate=\"toggleStatus(person._id, person.personStatus)\" innerhtml=\"${person.personStatus | activateButton}\"></span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/Customers/components/Roles.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n         <form>\n      <div class=\"col-md-5 topMargin\">\n        <label>Roles</label>\n        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n            <ul class=\"list-group\">\n              <button click.trigger=\"selectRole($event, role)\" type=\"button\" repeat.for=\"role of filteredArray\" id=\"${role.role}\"\n                      class=\"list-group-item\">${role.label}</button>\n            </ul>\n        </div>\n      </div>\n      <div class=\"col-md-5 topMargin col-md-offset-1\">\n        <label>Assigned Roles</label>\n        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n          <ul class=\"list-group\">\n            <button click.trigger=\"removeRole($index, role)\" type=\"button\" repeat.for=\"role of people.selectedPerson.roles\" id=\"${role}\"\n                    class=\"list-group-item\">${role | lookupValue:config.ROLES:'role':'label'}</button>\n          </ul>\n        </div>\n      </div>\n    </form>\n</template"; });
define('text!modules/admin/Customers/components/selectionForm.html', ['module'], function(module) { module.exports = "<template>\n <div class=\"col-lg-12\">\n\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"_clearFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t \ttitle=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"composeEmail()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\ttitle=\"\" data-original-title=\"Send\"><i class=\"fa fa-paper-plane fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t</div>\n\n\t<div show.bind=\"composeEmailPanel\" class=\"panel panel-info leftMargin rightMargin topMargin bottomMargin\">\n      <div class=\"panel-body\">\n\t   <div class=\"list-group-item col-md-12 topMargin\">\n\t\t\t<span click.delegate=\"send()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send Email\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\" ></i></span>\n\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div class=\"col-lg-10 col-lg-offset-1 topMargin\">\n\t\t\t<input value.bind=\"email.subject\" class=\"form-control\" placeholder=\"Subject\"/>\n\t\t\t<div class=\"topMargin\">\n\t\t\t\t<editor value.bind=\"email.emailMessage\" height=\"250\" toolbar.bind=\"toolbar\" ></editor>\n\t\t\t</div>\n\t\t</div>\n\t  </div>\n\t</div>\n\n\t<div class=\"panel panel-info leftMargin rightMargin\">\n      <div class=\"panel-body\">\n\t  \t<div class=\"col-lg-3\">\n\t\t\t<label class=\"control-labelhideOnPhone\">Status</label>\n\t\t\t<select value.bind=\"activeFilterValue\" change.delegate=\"filterActive()\" class=\"form-control \" id=\"personStatus\">\n\t\t\t\t<option value=\"\"></option>\n\t\t\t\t<option repeat.for='item of is4ua.personStatusArray' value='${item.code}'>${item.description}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<label class=\"control-label hideOnPhone\">Institution Type</label>\n\t\t\t <select value.bind=\"institutionTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'institutionTypeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'institutionId.institutionType', displayProperty: 'institutionId.institutionType', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n\t\t\t\t<option value=\"\"></option>\n\t\t\t\t<option repeat.for=\"institution of is4ua.institutionTypes\" value=\"${institution.code}\">${institution.description}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<label class=\"control-label hideOnPhone\">Member Type</label>\n\t\t\t<select value.bind=\"memberTypeFilterValue\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'memberTypesFilter', lookupArray: people.institutionsArray, lookupProperty: 'memberType', collectionProperty: 'institutionId.memberType', displayProperty: 'institutionId.name', matchProperty:'memberType', compare:'lookup'} )\" class=\"form-control \" ref=\"memberTypeFilter\">\n\t\t\t\t<option value=\"\"></option>\n\t\t\t\t<option repeat.for='item of is4ua.memberTypes' value='${item.code}'>${item.description}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<label class=\"control-label hideOnPhone\">Institution</label>\n\t\t\t<input value.bind=\"institutionFilterValue\" input.delegate=\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n\t\t</div>\n\t\t<div class=\"col-lg-3 topMargin\">\n\t\t\t<label class=\"control-label hideOnPhone\">Region</label>\n\t\t\t<input value.bind=\"regionFilterValue\" input.delegate=\"dataTable.filterList(regionFilterValue, { type: 'custom',  filter: regionCustomFilter, compare:'custom'} )\"   class=\"form-control\" ref=\"regionFilter\"/>\n\t\t</div>\n\t\t<div class=\"col-lg-3 topMargin\">\n\t\t\t<label class=\"control-label hideOnPhone\">City</label>\n\t\t\t<input value.bind=\"cityFilterValue\" input.delegate=\"dataTable.filterList(cityFilterValue, { type: 'custom',  filter: cityCustomFilter, compare:'custom'} )\"   class=\"form-control\" ref=\"cityFilter\"/>\n\t\t</div>\n\t\t<div class=\"col-lg-3 topMargin\">\n\t\t\t<label class=\"control-label hideOnPhone\">Country</label>\n\t\t\t<input value.bind=\"countryFilterValue\" input.delegate=\"dataTable.filterList(countryFilterValue, { type: 'custom',  filter: countryCustomFilter, compare:'custom'} )\"   class=\"form-control\" ref=\"countryFilter\"/>\n\t\t</div>\n\t\t<div class=\"col-lg-3 topMargin\">\n\t\t\t<label>Roles</label><br/>\n\t\t\t<select value.bind=\"roleFilterValue\" ref=\"select\" class=\"form-control\" \n\t\t\t\tinput.delegate=\"dataTable.filterList($event, { type: 'custom',  filter: roleCustomFilter, compare:'custom'} )\">\n\t\t\t\t<option repeat.for=\"option of config.ROLES\" value.bind=\"option.role\">${option.label}</option>\n\t\t\t</select>\n\t\t</div>\n\t  </div>\n\t</div>\n\n</div>\n</template>\n"; });
define('text!modules/admin/documents/components/documentForm.html', ['module'], function(module) { module.exports = "<template>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <div class=\"bottomMargin list-group-item\">\r\n                <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\r\n                    data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\r\n                    data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                    title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                <span click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                    title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\r\n            </div>\r\n\r\n            <div class=\"panel panel-default\" style=\"background-color:ghostwhite;\">\r\n                <div class=\"panel-body\">\r\n                    <form class=\"form-horizontal topMargin\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"activeDoc\" class=\"control-label col-sm-2 hideOnPhone\">Status</label>\r\n                                    <div class=\"col-sm-8\">\r\n                                        <div class=\"checkbox\">\r\n                                            <label class=\"pull-left\">\r\n                                                            <input id=\"activeDoc\" checked.bind=\"documents.selectedDocument.active\" type=\"checkbox\"> Active\r\n                                                        </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"editName\" class=\"col-sm-2 control-label hideOnPhone\">Name</label>\r\n                                    <div class=\"col-sm-8\">\r\n                                        <input value.bind=\"documents.selectedDocument.name\" id=\"editName\" class=\"form-control\" placeholder=\"Name\" type=\"text\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\r\n                                    <div class=\"col-sm-8\">\r\n                                        <input value.bind=\"documents.selectedDocument.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\"\r\n                                            type=\"text\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2 col-lg-offset-2\">\r\n                                <label class=\"btn btn-primary\">\r\n                                            Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <ul show.bind=\"!uploading\" >\r\n                                    <li repeat.for=\"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\r\n                                </ul>\r\n                                <div show.bind=\"uploading\" class=\"progress progress-striped active\">\r\n                                    <div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-lg-offset-2\">\r\n                            <div id=\"editFiles\"></div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class=\"row topMargin\">\r\n                <div id=\"no-more-tables\">\r\n                    <table class=\"table table-striped table-hover cf\">\r\n                        <thead class=\"cf\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Version</th>\r\n                                <th>Date Uploaded</th>\r\n                                <th>Uploaded By</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr repeat.for=\"item of documents.selectedDocument.files\">\r\n                                <td data-title=\"Name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${documents.selectedCat.code}/${documents.selectedDocument.name}/${item.fileName}\">${item.originalFilename}</a></td>\r\n                                <td data-title=\"Version\">${item.version}</td>\r\n                                <td data-title=\"Date Uploaded\">${item.dateUploaded | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                                <td data-title=\"Person\">${item.personId | lookupValue:people.peopleArray:\"_id\":\"fullName\"}</td>\r\n                                <td data-title=\"Active\" click.trigger=\"toggleFileActive($index)\" innerhtml.bind='item.active | checkBox'></td>\r\n                                <td data-title=\"Delete\" click.trigger=\"deleteFile($index)\"><i class=\"fa fa-trash\"></i></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n</template>"; });
define('text!modules/admin/documents/components/documentsTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class='row'>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\r\n            <div id=\"no-more-tables\">\r\n                <table class=\"table table-striped table-hover cf\">\r\n                    <thead class=\"cf\">\r\n                        <tr>\r\n                            <td colspan='6'>\r\n                                <span click.delegate=\"new()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                    title=\"\" data-original-title=\"New Document\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Name </th>\r\n                            <th>Description</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr click.trigger=\"editDocument($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\r\n                            <td data-title=\"name\">${item.name}</td>\r\n                            <td data-title=\"description\">${item.description}</td>\r\n                            <td data-title=\"createdDate\">${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/inventory/components/documentForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div id=\"no-more-tables\">\r\n        <table class=\"table table-striped table-hover cf\">\r\n            <thead class=\"cf\">\r\n                <tr>\r\n                    <th>Add</th>\r\n                    <th>Name</th>\r\n                    <th>Version</th>\r\n                    <th>Date Uploaded</th>\r\n                    <th>Status</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr repeat.for=\"item of documents.selectedDocument.files\">\r\n                    <td click.trigger=\"addDocument($index)\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></td>\r\n                    <td data-title=\"Name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${documents.selectedDocument.categoryCode}/${documents.selectedDocument.name}/${item.fileName}\">${item.originalFilename}</a></td>\r\n                    <td data-title=\"Version\">${item.version}</td>\r\n                    <td data-title=\"Date Uploaded\">${item.dateUploaded | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                    <td data-title=\"Active\"  innerhtml.bind='item.active | checkBox'></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/inventory/components/Documents.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4\">\r\n                    <div show.bind=\"!categoryForm\">\r\n                        <label>Available Categories</label>\r\n                        <div class=\"well well2 overFlow\" style=\"height:400px;\">\r\n                            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter Categories\" />\r\n                            <ul class=\"list-group\">\r\n                                <button click.trigger=\"typeChanged($index)\" type=\"button\" repeat.for=\"type of filteredDocumentArray\" id=\"${type.code}\" class=\"list-group-item\">${type.description}</button>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div show.bind=\"showDocuments\" class=\"col-lg-8\" style='padding:15px;'>\r\n                    <div show.bind=\"showDocumentForm\">\r\n                        <compose view=\"./documentForm.html\"></compose>\r\n                    </div>\r\n                    <compose show.bind=\"!showDocumentForm\" view=\"./documentsTable.html\"></compose>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</template>"; });
define('text!modules/admin/inventory/components/documentsTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class='row'>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <div id=\"no-more-tables\">\r\n                <table class=\"table table-striped table-hover cf\">\r\n                    <thead class=\"cf\">\r\n                        <tr>\r\n                            <th>Name </th>\r\n                            <th>Description</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr click.trigger=\"chooseDocument($index, $event)\" repeat.for=\"item of documents.documentsArray\">\r\n                            <td data-title=\"name\">${item.name}</td>\r\n                            <td data-title=\"description\">${item.description}</td>\r\n                            <td data-title=\"createdDate\">${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/inventory/components/History.html', ['module'], function(module) { module.exports = "<template>\n</template>"; });
define('text!modules/admin/inventory/components/inventoryForm.html', ['module'], function(module) { module.exports = "<template>\n\t <div class=\"fluid-container\">\n\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span  click.delegate=\"duplicate()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Duplicate\"><i class=\"fa fa-files-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"!inventory.selectedInventory._id\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"isDuplicate\">Duplicate</span>\n        </div>\n\n        <div class=\"topMargin leftMargin\">\n            <form class=\"form-horizontal topMargin\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label>Name *</label>\n\t\t\t\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.systemName\" id=\"editSystemName\" class=\"form-control\" placeholder=\"Name\" type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label>Description *</label>\n\t\t\t\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.description\" id=\"editDescription\" class=\"form-control\" placeholder=\"Description\" type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label>Date Created</label>\n\t\t\t\t\t\t\t\t<flat-picker controlid=\"dateCreated\" config.bind=\"config\" value.bind=\"inventory.selectedInventory.dateCreated\"></flat-picker>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<table id=\"coursesTable\" class=\"table table-striped table-hover\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Document </th>\n\t\t\t\t\t\t\t\t\t<th>Default</th>\n\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr repeat.for=\"document of inventory.selectedInventory.documents\">\n\t\t\t\t\t\t\t\t\t<td data-title=\"name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\">${document.fileName}</a></td>\n\t\t\t\t\t\t\t\t\t<td data-title=\"default\" click.trigger=\"toggleDefault($index)\" innerhtml.bind='document.default | checkBox'></td>\n\t\t\t\t\t\t\t\t\t<td  click.trigger=\"removeDocument($index)\"><i class=\"fa fa-trash\"></i></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label>Serial Number</label>\n\t\t\t\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.serialNumber\" class=\"form-control\" placeholder=\"Serial Number\" type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<label>Model Number</label>\n\t\t\t\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.modelNumber\" class=\"form-control\" placeholder=\"Model Number\" type=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t <div class=\"col-sm-12 col-lg-3\">\n                        <div class=\"form-group\"> \n                            <div class=\"col-sm-10\">\n                                <label class=\"left\">Type *</label>\n                                <select value.bind=\"inventory.selectedInventory.type\" class=\"form-control\">\n                                    <option value=\"\">Select an option</option>\n                                    <option repeat.for=\"type of config.systemTypes\" value.bind=\"type\">${type}</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\t\t\t\t</div>\n\t\t\t</form>\n        </div>\n\n\t\t<div class=\"row topMargin leftMargin\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"panel panel-default\">\n\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t<div class=\"col-lg-2\">\n\t\t\t\t\t\t\t<div id=\"invFormListGroup\" class=\"list-group\">\n\t\t\t\t\t\t\t\t<a class=\"${ $first ? 'active' : ''} list-group-item\" repeat.for=\"tab of tabs\" href=\"\" class=\"list-group-item\" click.delegate=\"changeTab($event, $index)\">\n\t\t\t\t\t\t\t\t\t<h4 id=\"${tab.id}\" class=\"list-group-item-heading\">${tab.title}</h4>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t\t<div class=\"tab-content\">\n\t\t\t\t\t\t\t\t<div repeat.for=\"tab of tabs\" id=\"${tab.id + 'Tab'}\" class=\"${ $first ? 'tab-pane fade in active' : 'tab-pane fade' }\">\n\t\t\t\t\t\t\t\t\t<compose view=\"${tabPath + tab.id + '.html'}\"></compose>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t </div>\n</template>"; });
define('text!modules/admin/inventory/components/inventoryTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\" style='padding:15px;'>\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n            <div id=\"no-more-tables\">\n                <table id=\"productsTable\" class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr colspan='4'>\n                                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                        </tr>                           \n                        <tr>\n                            <td colspan='4'>\n                                <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                <span click.delegate=\"new()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'systemName'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'serialNumber'})\">Serial Number </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'modelNumber'})\">Model </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'type'})\">Type </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>\n                                <input value.bind=\"systemNameFilterValue\" input.delegate=\"dataTable.filterList(systemNameFilterValue, { type: 'text',  filter: 'systemNameFilter', collectionProperty: 'systemName', displayProperty: 'systemName',  compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <input value.bind=\"serialNumberFilterValue\" input.delegate=\"dataTable.filterList(serialNumberFilterValue, { type: 'text',  filter: 'serialNumberFilter', collectionProperty: 'serialNumber', displayProperty: 'serialNumber',  compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <input value.bind=\"modelNumberFilterValue\" input.delegate=\"dataTable.filterList(modelNumberFilterValue, { type: 'text',  filter: 'modelNumberFilter', collectionProperty: 'modelNumber', displayProperty: 'modelNumber',  compare:'match'} )\"  class=\"form-control\" />\n                            </th>\n                            <th>\n                                <select value.bind=\"typeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'typeFilter',  collectionProperty: 'type', displayProperty: 'type', compare:'match'} )\" class=\"form-control\">\n                                    <option value=\"\"></option>\n                                    <option repeat.for=\"type of config.systemTypes\" value=\"${type}\">${type}</option>\n                                </select>\n                            </th>\n                        </tr>\n                        <tr click.trigger=\"edit($index, $event)\" repeat.for=\"system of dataTable.displayArray\">\n                            <td data-title=\"Name\">${system.systemName}</td>\n                            <td data-title=\"Name\">${system.serialNumber}</td>\n                            <td data-title=\"Name\">${system.modelNumber}</td>\n                            <td data-title=\"Name\">${system.type}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/inventory/components/Maintenance.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Vendor Name</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceProvider\"  class=\"form-control\" placeholder=\"Vendor Name\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Contract Number</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceContract\"  class=\"form-control\" placeholder=\"Contract Number\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Customer Number</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceCustomerNumber\"  class=\"form-control\" placeholder=\"Customer Number\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Contact Name</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceContact\"  class=\"form-control\" placeholder=\"Contact\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Phone</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenancePhone\"  class=\"form-control\" placeholder=\"Phone\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceEmail\"  class=\"form-control\" placeholder=\"Vendor Email\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>URL</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceUrl\"  class=\"form-control\" placeholder=\"Contract URL\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>User ID</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenaceUserId\"  class=\"form-control\" placeholder=\"User ID\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenancePassword\"  class=\"form-control\" placeholder=\"Password\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Date Created</label>\n\t\t\t\t\t<flat-picker controlid=\"maintenanceStartDate\" config.bind=\"config\" value.bind=\"inventory.selectedInventory.maintenanceStartDate\"></flat-picker>\n\t\t\t\t\t<!-- <date-picker value.two-way=\"inventory.selectedInventory.maintenanceStartDate\"  controlid=\"maintenanceStartDate\"></date-picker> -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>End Date</label>\n\t\t\t\t\t<flat-picker controlid=\"maintenanceEndDate\" config.bind=\"config\" value.bind=\"inventory.selectedInventory.maintenanceEndDate\"></flat-picker>\n\t\t\t\t\t<!-- <date-picker value.two-way=\"inventory.selectedInventory.maintenanceEndDate\"  controlid=\"maintenanceEndDate\"></date-picker> -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Days of warning before expiration</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.maintenanceAlert\"  class=\"form-control\" placeholder=\"Days\" type=\"number\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/admin/inventory/components/Purchase.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Vendor Name</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.vendorName\"  class=\"form-control\" placeholder=\"Vendor Name\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Date Purchased</label>\n\t\t\t\t\t<flat-picker controlid=\"datePurchased\" config.bind=\"config\" value.bind=\"inventory.selectedInventory.datePurchased\"></flat-picker>\n\t\t\t\t<!--\t<date-picker value.two-way=\"inventory.selectedInventory.datePurchased\"  controlid=\"createdDate\"></date-picker> -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>PO Number</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.poNumber\"  class=\"form-control\" placeholder=\"PO Number\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Vendor Contact </label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.vendorContact\"  class=\"form-control\" placeholder=\"Contact Name\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Vendor Phone</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.vendorPhone\"  class=\"form-control\" placeholder=\"Phone\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Vendor Email</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.vendorEmail\"  class=\"form-control\" placeholder=\"Email\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/admin/inventory/components/Technical.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Admin User ID</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.adminUserId\"  class=\"form-control\" placeholder=\"Admin User ID\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>Admin Password</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.adminPassword\"  class=\"form-control\" placeholder=\"Admin Password\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-3\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<label>System URL</label>\n\t\t\t\t\t<input value.bind=\"inventory.selectedInventory.systemUrl\"  class=\"form-control\" placeholder=\"System URL\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"topMargin\">\n        <table  class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <td colspan='6'>\n                        <span click.delegate=\"newIP()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Course\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                    </td>\n                </tr>\n                <tr>\n                    <th style=\"width:20rem;\">IP </th>\n                    <th style=\"width:30rem;\">Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"selectCourse\" click.delegate=\"editIP($index, $event)\"  repeat.for=\"address of inventory.selectedInventory.IPAddress\">\n                    <td data-title=\"Address\">${address.address} </td>\n                    <td data-title=\"Descriptino\">${address.description}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"row\" show.bind=\"addressSelected\">\n            <div class=\"panel panel-default col-md-12\">\n                <div class=\"panel-body\">\n                    <div class=\"bottomMargin\">\n                        <div class=\"bottomMargin list-group-item\">\n                            <span click.delegate=\"saveAddress()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                            <span click.delegate=\"cancelEditAddress()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                        </div>  \n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"number\" value.bind=\"address\" ref=\"ipAddress\" type=\"text\" placeholder=\"Address\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"name\" value.bind=\"description\" ref=\"ipDescription\" type=\"text\" placeholder=\"Description\" class=\"form-control\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/notes/components/helpTicket.html', ['module'], function(module) { module.exports = "<template>\n\t <div class=\"fluid-container\">\n\t <div class=\"row\">\n        <span class=\"leftMargin largeFont\">Help Ticket ${helpTickets.selectedHelpTicket.helpTicketNo}</span>\n    </div>\n\n    <!-- Buttons -->\n    <div class=\"bottomMargin leftMargin rightMargin list-group-item\">\n      <span click.delegate=\"backHelpTicket()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n        data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    </div>\n\n    <!-- Help Ticket Header -->\n    <div class=\"topMargin\">\n      <!-- Enter Response -->\n      <div class=\"row\">\n        <div class=\"list-group-item leftMargin rightMargin\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <h3 class=\"col-md-offset-1\">Created: ${helpTickets.selectedHelpTicket.createdDate | dateFormat:'YYYY-MM-DD'} ${helpTickets.selectedHelpTicket.createdDate\n                    | dateFormat:'h:mm A'}</h3>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <h3>Type: ${helpTickets.selectedHelpTicket.helpTicketType | lookupValue:config.HELP_TICKET_TYPES:\"code\":\"description}</h3>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <h3 class=\"col-md-offset-1\">Session: ${helpTickets.selectedHelpTicket.sessionId | session:sessions.sessionsArray}</h3>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <h3>Status: ${helpTickets.selectedHelpTicket.helpTicketStatus | lookupValue:config.HELP_TICKET_STATUSES:\"code\":\"description\"}</h3>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-md-offset-1\">Owner: ${helpTickets.selectedHelpTicket.owner[0].personId |  lookupValue:people.peopleArray:\"_id\":'fullName'}</label>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <label>Keywords: ${helpTickets.selectedHelpTicket.keyWords}</label>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n    <compose view=\"../../../../resources/htTimeline/timeline.html\"></compose>\n</div>\n</template>"; });
define('text!modules/admin/notes/components/notesForm.html', ['module'], function(module) { module.exports = "<template>\n    <require from=\"flatpickr/flatpickr.css\"></require>\n    <div class=\"col-lg-12\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"people.selectedNote._id\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\"\n                data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div>\n\n        <form class=\"form-horizontal topMargin\">\n\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editType\" class=\"col-lg-2 control-label hideOnPhone\">Type</label>\n                        <div class=\"col-lg-8\">\n                            <select value.bind=\"people.selectedNote.category\" class=\"form-control\" id=\"itemType\">\n                                <option value=\"${type}\" repeat.for=\"type of userObj.noteCategories\">${type}</optionp>\n                            </select>\n                            <a class=\"btn btn-link\" click.trigger=\"openEditCatForm('new')\" aria-hidden=\"true\">(Add a Category)</a>\n                            <a class=\"btn btn-link\" disable.bind=\"people.selectedNote.category !== ''\" click.trigger=\"openEditCatForm('edit')\" aria-hidden=\"true\">(Edit this Category)</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div show.bind=\"showCategoryForm\" class=\"row col-lg-8 col-lg-offset-2\">\n                <div class=\"panel panel-default\" style=\"background-color:ghostwhite;\">\n<div class=\"panel-body\">\n    <div class=\"list-group-item bottomMargin col-sm-12 topMargin\">\n        <span click.delegate=\"saveCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n            title=\"\" data-original-title=\"Save Category\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        <span click.delegate=\"cancelEditCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n            title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        <span show.bind=\" editCategoryFlag\" click.delegate=\"deleteCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\"\n            data-placement=\"bottom\" title=\"\" data-original-title=\"Delete Category\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>      \n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"editTitle\" class=\"col-sm-2 control-label hideOnPhone\">Title</label>\n                <div class=\"col-sm-8\">\n                    <input value.bind=\"categoryDescription\" id=\"editCategoryName\" class=\"form-control \" placeholder=\"Category\" type=\"text\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <div class=\"form-group\">\n            <div class=\"checkbox col-lg-offset-2\">\n                <label>\n                                <input checked.bind=\"people.selectedNote.isReminder\"  type=\"checkbox\"> This note is a reminder\n                            </label>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div show.bind=\"people.selectedNote.isReminder\">\n    <div class=\"row\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"reminderType\" class=\"col-lg-2 control-label\">Reminder Type</label>\n                <div class=\"col-lg-8\">\n                    <select class=\"form-control\" value.two-way=\"people.selectedNote.reminderType\" change.delegate=\"typeSelected()\" id=\"reminderType\"\n                        ref=\"reminderType\">\n                                        <option value=\"\">Type of Reminder</option>\n                                        <option value=\"T\">Time</option>\n                                        <option value=\"D\">Daily</option>\n                                        <option value=\"W\">Weekly</option>\n                                        <option value=\"M\">Monthly</option>\n                                        <option value=\"A\">Annual</option>\n                                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"priority\" class=\"col-lg-2 control-label\">Priority</label>\n                <div class=\"col-lg-8\">\n                    <select class=\"form-control\" value.two-way=\"people.selectedNote.priority\" id=\"priority\" ref=\"priority\">\n                                        <option value=\"0\">Information</option>\n                                        <option value=\"1\">Critical</option>\n                                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div show.bind=\"people.selectedNote.reminderType === 'W' || people.selectedNote.reminderType === 'M'\" class=\"row\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"reminderDay\" class=\"col-lg-2 control-label\">Day</label>\n                <div class=\"col-lg-8\">\n                    <select class=\"form-control\" value.two-way=\"people.selectedNote.reminderDay\" id=\"reminderDay\">\n                                        <option value=\"\">Choose the day</option>\n                                        <option repeat.for=\"day of days\" value=\"${day.number}\">${day.day}</option>\n                                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div show.bind=\"showDates\">\n\n    <div class=\"row\" show.bind=\"people.selectedNote.reminderType === 'T'\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"input-dateRemind\" class=\"col-lg-2 control-label\">Date and time</label>\n                <div class=\"col-lg-8\">\n                    <flat-picker id.bind=\"dateRemindT\" config.bind=\"configT\" value.bind=\"people.selectedNote.dateStartRemind\"></flat-picker>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\" show.bind=\"people.selectedNote.reminderType !== 'T'\">\n        <div class=\"col-sm-12 col-lg-12\">\n            <div class=\"form-group\">\n                <label for=\"input-dateRemind\" class=\"col-lg-2 control-label\">Start Date</label>\n                <div class=\"col-lg-8\">\n                    <flat-picker id.bind=\"dateStartRemind\" config.bind=\"config\" value.bind=\"test\"></flat-picker>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12\">\n                <div class=\"form-group\">\n                    <label for=\"input-dateEndRemind\" class=\"col-lg-2 control-label \">End Date</label>\n                    <div class=\"col-lg-8\">\n                        <flat-picker id.bind=\"dateEndRemind\" config.bind=\"config\" value.bind=\"people.selectedNote.dateEndRemind\"></flat-picker>\n                       \n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-8  col-lg-offset-2 topMargin\">\n    <editor value.bind=\"people.selectedNote.note\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n\n</div>\n\n</form>\n\n</div>\n</template>"; });
define('text!modules/admin/notes/components/notesTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\" style='padding:15px;'>\n        <div class='row'>\n            <div class='col-lg-12 bottomMargin'>\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                <div id=\"no-more-tables\">\n                    <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr>\n                                <td colspan='5'>\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"new()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th style=\"width:250px;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'category'})\">Category </span><i class=\"fa fa-sort\"></i></th>\n                                <th style=\"width:8em;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'reminderType'})\">Reminder Type </span><i class=\"fa fa-sort\"></i></th>\n                                <th style=\"width:150px;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'dateStartRemind'})\">Start </span><i class=\"fa fa-sort\"></i></th>\n                                <th style=\"width:150px;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'note'})\">Note </span><i class=\"fa fa-sort\"></i></th>\n                                <th></th>\n                                <th>Help Ticket No</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>\n                                   <select change.delegate=\"dataTable.filterList($event)\" class=\"form-control \" id=\"category\" compare=\"id\">\n\t\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"${type}\" repeat.for=\"type of userObj.noteCategories\">${type}</optionp>\n\t\t\t\t\t\t\t\t\t</select>\n                                </th>\n                                 <th>\n                                     <select class=\"form-control\" id=\"reminderType\"  change.delegate=\"dataTable.filterList($event)\" id=\"reminderType\"\n                                        compare=\"id\" type=\"select-one\" ref=\"reminderType\">\n                                            <option value=\"\"></option>\n                                            <option value=\"T\">Time</option>\n                                            <option value=\"D\">Daily</option>\n                                            <option value=\"W\">Weekly</option>\n                                            <option value=\"M\">Monthly</option>\n                                            <option value=\"A\">Annual</option>\n                                    </select>\n                                 </th>\n                                <th>\n                                    <input input.delegate=\"dataTable.filterList($event)\" id=\"dateStartRemind\" type=\"date\" placeholder=\"Filter Date\" class=\"form-control\"/>\n                                </th>\n                                <th>\n                                    <input input.delegate=\"dataTable.filterList($event)\" id=\"note\" type=\"text\" placeholder=\"Filter note\" class=\"form-control\"/>\n                                </th>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                            <tr class=\"${item.isReminder} ? 'warning' : ''}\" repeat.for=\"item of dataTable.displayArray\">\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Category\">${item.category}</td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Type\">${item.reminderType}</td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Date Start\" style=\"width: 75px\">\n                                    <div>${item.dateStartRemind | dateFormat:config.DATE_FORMAT_TABLE}</div>\n                                </td>\n                                <td click.trigger=\"edit($index, $event)\" data-title=\"Type\" innerhtml = ${item.note}></td>\n                                <td style=\"width:5rem;\">\n                                    <span show.bind=\"item.reference\" click.trigger=\"navigateToHelpTicket(item)\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"View\"><i class=\"fa fa-eye fa-lg\" aria-hidden=\"true\"></i></span>\n                                </td>\n                                <td style=\"width:5rem;\" click.trigger=\"edit($index, $event)\">${item.helpTicketNo}</td>\n                                <td style=\"width:5rem;\">\n                                    <span  click.trigger=\"delete(item)\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg\" aria-hidden=\"true\"></i></span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/site/components/configForm.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-12 bottomMargin\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        </div> \n\t</div>\n\n\t<div class=\"row bigTopMargin\">\n\t\t<div class=\"col-lg-10 col-lg-offset-1\">\n\t\t\t<div class=\"form-group\">\n\t\t \t\t<editor value.bind=\"siteConfig.configArray[selectedIndex].value\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div innerhtml.bind=\"siteConfig.configArray[selectedIndex].value\" class=\"col-lg-10 col-lg-offset-1 bigTopMargin\">\n\t</div>\n</template>"; });
define('text!modules/admin/site/components/configTable.html', ['module'], function(module) { module.exports = "<template>\n     <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-2 lefMargin\">\n        <div id=\"configListGroup\" class=\"list-group\">\n            <a class=\"${ $first ? 'menuButtons' : ''} list-group-item\" repeat.for=\"tab of tabs\" href=\"\" class=\"list-group-item\" click.delegate=\"changeTab($event, $index)\">\n                <h4 id=\"${tab.id}\" class=\"list-group-item-heading\">${tab.id}</h4>\n            </a>\n        </div>\n    </div>\n    <div class=\"col-lg-10\">\n        <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\n            <div class='row'>\n                <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n                    <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                    <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                </div>   \n                <div class='col-lg-12 bottomMargin'>\n                    <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                    <div id=\"no-more-tables\">\n                        <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\n                            <thead class=\"cf\">\n                                <tr>\n                                    <td colspan='5'>\n                                        <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                            title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th style=\"width:200px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'parameter'})\">Parameter </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                    <th style=\"width:300px;\">Description</th>\n                                    <th style=\"width:100px;\">Value</th>\n                                    <th style=\"width:200px;\">Date Modified</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th>\n                                        <input value.bind=\"parameterFilterValue\" input.delegate=\"dataTable.filterList(parameterFilterValue, { type: 'text',  filter: 'parameterFilter', collectionProperty: 'parameter', displayProperty: 'parameter',  compare:'match'} )\"  class=\"form-control\" />\n                                    </th>\n                                    <th></th>\n                                    <th></th>\n                                </tr>\n                                <tr  repeat.for=\"item of dataTable.displayArray\">\n                                    <td data-title=\"Parameter\">${item.parameter}</td>\n                                    <td data-title=\"Description\">${item.description}</td>\n                                    <td data-title=\"Value\">\n                                        <input show.bind=\"item.type == 'value'\" readonly.bind=\"item.readOnly\" value.bind=\"item.value\" id=\"editValue\" class=\"form-control\" type=\"text\" />\n                                        <div show.bind=\"item.type == 'boolean'\">\n                                            <span  click.delegate=\"switchValue(item)\" innerhtml=\"${item.value | onoffSwitch}\"></span>\n                                        </div>\n                                        <div show.bind=\"item.type == 'html'\">\n                                            <span click.delegate=\"edit(item)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Edit\"><i class=\"fa fa-pencil fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                                        </div> \n                                    </td>\n\n                                    <td data-title=\"Modified Date\"><div>${item.dateModified | dateFormat:config.DATE_FORMAT_TABLE}</div></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/site/components/curriculumForm.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\">\n\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"!newItem\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div>\n\n        <form class=\"form-horizontal topMargin\">\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editType\" class=\"col-sm-2 control-label hideOnPhone\">Category</label>\n                        <div class=\"col-sm-8\">\n                            <select value.bind=\"curriculum.selectedCurriculum.category\" class=\"form-control\" id=\"itemType\">\n\t\t\t\t\t\t\t\t<option value=\"\">--- Choose a Category ---</option>\n                                <option value=\"${category.name}\" repeat.for=\"category of curriculum.curriculumCatArray\">${category.name}</optionp>\n                            </select>\n                            <a class=\"btn btn-link\" click.trigger=\"openEditCatForm('new')\" aria-hidden=\"true\">(Add a Category)</a>\n                            <a class=\"btn btn-link\" disable.bind=\"curriculum.selectedCurriculum.category == ''\" click.trigger=\"openEditCatForm('edit')\"\n                                aria-hidden=\"true\">(Edit this Category)</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div show.bind=\"showCategoryForm\" class=\"row\">\n                <div class=\"panel panel-default col-lg-8 col-lg-offset-2\" style=\"background-color:ghostwhite;\">\n                    <div class=\"panel-body\">\n                        <div class=\"list-group-item bottomMargin col-sm-12 topMargin\">\n                            <span click.delegate=\"saveCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                            <span click.delegate=\"cancelEditCategory()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                            <span show.bind=\" editCategoryFlag\" click.delegate=\"deleteCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\"\n                                data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"editTitle\" class=\"col-sm-2 control-label hideOnPhone\">Title</label>\n                                    <div class=\"col-sm-8\">\n                                        <input value.bind=\"curriculum.selectedCurriculumCategory.name\" id=\"editCategoryName\" class=\"form-control \" placeholder=\"Name\"\n                                            type=\"text\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 col-lg-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"editCategory\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n                                    <div class=\"col-sm-8\">\n                                        <editor value.bind=\"curriculum.selectedCurriculumCategory.categoryDescription\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n                                     <!--   <tiny-mce height.bind=\"150\" value.two-way=\"categoryDescription\"></tiny-mce> -->\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editTitle\" class=\"col-sm-2 control-label hideOnPhone\">Title</label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"curriculum.selectedCurriculum.title\" id=\"editTitle\" class=\"form-control \" placeholder=\"Title\" type=\"text\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editContent\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n                        <div class=\"col-sm-8\">\n                            <editor value.bind=\"curriculum.selectedCurriculum.description\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n                        </div>\n                    </div>\n                </div>\n            </div>\n             <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                  <div class=\"form-group\">\n                      <label show.bind=\"curriculum.selectedCurriculum.file.fileName\" for=\"editFile\" class=\"col-sm-2 control-label hideOnPhone topMargin\">File</label>\n                      <div class=\"col-sm-3 topMargin\" show.bind=\"curriculum.selectedCurriculum.file.fileName != undefined\">\n                          <a href.bind=\"selectedURL\" innerhtml.bind='curriculum.selectedCurriculum.file.fileName' target='_blank'></a>\n                      </div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-2 col-lg-offset-2\">\n                    <label class=\"btn btn-primary\">\n                        Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\n                    </label>\n                </div>\n                <div class=\"col-lg-6\">\n                    <ul show.bind=\"!uploading\">\n                        <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                    </ul>\n                    <div show.bind=\"uploading\" class=\"progress progress-striped active\">\n                        <div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <div class=\"col-md-5 topMargin\">\n                    <label>Available Products</label>\n                    <div class=\"well well2 overFlow\" style=\"height:400px;\">\n                        <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter products\" />\n                        <ul class=\"list-group\">\n                            <button click.trigger=\"selectProduct($event)\" type=\"button\" repeat.for=\"product of filteredProductsArray\" id=\"${product._id}\"\n                                class=\"list-group-item\">${product.name}</button>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"col-md-5 col-md-offset-1 topMargin\">\n                    <label id=\"requestProductsLabel\">Requested Products</label>\n                    <div class=\"well well2 overflow\" style=\"height:400px;\">\n                        <ul class=\"list-group\">\n                            <button click.trigger=\"removeProduct($event)\" type=\"button\" repeat.for=\"product of curriculum.selectedCurriculum.products\"\n                                id=\"${product}\" class=\"list-group-item\">${product | lookupValue:products.productsArray:\"_id\":\"name\"}</button>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n    </div>\n</template>"; });
define('text!modules/admin/site/components/curriculumTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\n        <div class='row'>\n            <div class='col-lg-12 bottomMargin'>\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                <div id=\"no-more-tables\">\n                    <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr>\n                                <td colspan='5'>\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"new()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                </td>\n                            </tr>\n                            <tr>\n\t\t\t\t\t\t\t\t<th style=\"width:250px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'category'})\">Category </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:250px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'title'})\">Title </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'dateCreated'})\">Created </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'dateModified'})\">Modified </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n\t\t\t\t\t\t\t\t<th>\n                                    <select value.bind=\"categoryFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'categoryFilter',  collectionProperty: 'category', displayProperty: 'category', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                        <option value=\"\"></option>\n                                       <option repeat.for=\"category of curriculum.curriculumCatArray\" value=\"${category.name}\">${category.name}</option>\n                                    </select>\n\t\t\t\t\t\t\t\t</th>\n                                <th>\n                                    <input value.bind=\"titleFilterValue\" input.delegate=\"dataTable.filterList(titleFilterValue, { type: 'text',  filter: 'titleFilter', collectionProperty: 'title', displayProperty: 'title',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <input value.bind=\"dateCreatedFilterValue\" input.delegate=\"dataTable.filterList(dateCreatedFilterValue, {type: 'date', filter: 'dateCreated',  collectionProperty: 'dateCreated', compare: 'after'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                   <input value.bind=\"dateModifiedFilterValue\" input.delegate=\"dataTable.filterList(dateModifiedFilterValue, {type: 'date', filter: 'dateModified',  collectionProperty: 'dateModified', compare: 'after'} )\"  class=\"form-control\" />\n                                </th>\n                            </tr>\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\n\t\t\t\t\t\t\t\t<td data-title=\"Category\">${item.category}</td>\n                                <td data-title=\"Title\">${item.title}</td>\n                                <td data-title=\"Date Created\" style=\"width: 75px\">\n                                    <div>${item.dateCreated | dateFormat:config.DATE_FORMAT_TABLE}</div>\n                                </td>\n                                <td data-title=\"Date Expired\" style=\"width: 75px\">\n                                    <div>${item.dateModified | dateFormat:config.DATE_FORMAT_TABLE}</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/site/components/document.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"panel panel-default\">\n        <div class=\"panel-body\">\n            <div class=\"row\">\n                <div class=\"col-lg-4\">\n                    <div show.bind=\"!categoryForm\">\n                        <label>Available Categories</label>\n                        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n                            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter Categories\" />\n                            <ul class=\"list-group\">\n                                <button click.trigger=\"typeChanged($index)\" type=\"button\" repeat.for=\"type of filteredDocumentArray\" id=\"${type.code}\" class=\"list-group-item\">${type.description}</button>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-lg-8\" style='padding:15px;'>\n\t\t\t\t\t\t<table id=\"coursesTable\" class=\"table table-striped table-hover\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Document </th>\n\t\t\t\t\t\t\t\t\t<th>Default</th>\n\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr repeat.for=\"document of helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].documents\">\n\t\t\t\t\t\t\t\t\t<td data-title=\"name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\">${document.fileName}</a></td>\n\t\t\t\t\t\t\t\t\t<td data-title=\"default\" click.trigger=\"toggleDefault($index)\" innerhtml.bind='document.default | checkBox'></td>\n\t\t\t\t\t\t\t\t\t<td  click.trigger=\"removeDocument($index)\"><i class=\"fa fa-trash\"></i></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n                <div show.bind=\"showDocuments\" >\n                    <div show.bind=\"showDocumentForm\">\n                        <compose view=\"./documentForm.html\"></compose>\n                    </div>\n                    <compose show.bind=\"!showDocumentForm\" view=\"./documentsTable.html\"></compose>\n                </div>\n            </div>\n            </div>\n        </div>\n</template>"; });
define('text!modules/admin/site/components/documentForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div id=\"no-more-tables\">\r\n        <table class=\"table table-striped table-hover cf\">\r\n            <thead class=\"cf\">\r\n                <tr>\r\n                    <th>Add</th>\r\n                    <th>Name</th>\r\n                    <th>Version</th>\r\n                    <th>Date Uploaded</th>\r\n                    <th>Status</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr repeat.for=\"item of documents.selectedDocument.files\">\r\n                    <td click.trigger=\"addDocument($index)\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></td>\r\n                    <td data-title=\"Name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${documents.selectedDocument.name}/${item.fileName}\">${item.originalFilename}</a></td>\r\n                    <td data-title=\"Version\">${item.version}</td>\r\n                    <td data-title=\"Date Uploaded\">${item.dateUploaded | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                    <td data-title=\"Active\"  innerhtml.bind='item.active | checkBox'></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/site/components/documentsTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class='row'>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <div id=\"no-more-tables\">\r\n                <table class=\"table table-striped table-hover cf\">\r\n                    <thead class=\"cf\">\r\n                        <tr>\r\n                            <th>Name </th>\r\n                            <th>Description</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr click.trigger=\"chooseDocument($index, $event)\" repeat.for=\"item of documents.documentsArray\">\r\n                            <td data-title=\"name\">${item.name}</td>\r\n                            <td data-title=\"description\">${item.description}</td>\r\n                            <td data-title=\"createdDate\">${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/site/components/downloadForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n            <span show.bind=\"!newDownload\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\r\n        </div> \r\n\r\n        <form class=\"form-horizontal topMargin\">\r\n\r\n            <!-- Row 1 -->\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"control-label col-sm-3 hideOnPhone\">Status</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <div class=\"checkbox\">\r\n                                <label class=\"pull-left\">\r\n                                    <input id=\"activeProduct\" checked.bind=\"downloads.selectedDownload.active\" type=\"checkbox\"> Active\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"checkbox\">\r\n                                <label class=\"pull-left\">\r\n                                    <input id=\"activeProduct\" checked.bind=\"downloads.selectedDownload.helpTicketRelevant\" type=\"checkbox\"> Help Ticket Relevant\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editName\" class=\"col-sm-2 control-label hideOnPhone\">Name</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input value.bind=\"downloads.selectedDownload.name\" id=\"editName\" class=\"form-control\" placeholder=\"Name\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input value.bind=\"downloads.selectedDownload.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editType\" class=\"col-sm-2 control-label hideOnPhone\">Type</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <select value.bind=\"downloads.selectedDownload.downCatcode\" class=\"form-control\" id=\"editType\">\r\n                                <option value=\"\">Select an option</option>\r\n                                <option repeat.for=\"category of downloads.appCatsArray\" value=\"${category.downCatcode}\">${category.description}</options>\r\n                            </select>\r\n                            <a class=\"btn btn-link\" click.trigger=\"openEditCatForm('new')\" aria-hidden=\"true\">(Add a Category)</a>\r\n                            <a class=\"btn btn-link\" disable.bind=\"this.downloads.selectedDownload.downCatcode == 0\"  click.trigger=\"openEditCatForm('edit')\" aria-hidden=\"true\">(Edit this Category)</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Edit Category -->\r\n            <div class=\"row topMargin col-sm-8 col-sm-offset-2\" show.bind=\"editCat\">\r\n                <div class=\"panel panel-default\" style=\"background-color:ghostwhite;\">\r\n                    <div class=\"panel-body\">\r\n                         <div class=\"list-group-item bottomMargin col-sm-12 topMargin\">\r\n                            <span click.delegate=\"saveCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Category\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                            <span click.delegate=\"cancelEditCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n                            <span show.bind=\" editCourseFlag\" click.delegate=\"deleteCat()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete Category\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-sm-8\">\r\n                                <input id=\"editCatDescription\" value.bind=\"downloads.selectedCat.description\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                      <label show.bind=\"downloads.selectedDownload.file.fileName\" for=\"editFile\" class=\"col-sm-2 control-label hideOnPhone topMargin\">File</label>\r\n                      <div class=\"col-sm-3 topMargin\" show.bind=\"downloads.selectedDownload.file.fileName != undefined\">\r\n                          <a href.bind=\"selectedURL\" innerhtml.bind='downloads.selectedDownload.file.fileName' target='_blank'></a>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-2 col-lg-offset-2\">\r\n                      <label class=\"btn btn-primary\">\r\n                          Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\r\n                      </label>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <ul show.bind=\"!uploading\">\r\n                        <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\r\n                    </ul>\r\n                    <div show.bind=\"uploading\" class=\"progress progress-striped active\">\r\n                        <div id=\"progressBar\" class=\"progress-bar\" style=\"width: 0%\"></div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n<!--\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-lg-offset-2\">\r\n                  <div class=\"panel panel-default\">\r\n                      <div class=\"input-group\">\r\n                          <span class=\"input-group-btn\">\r\n                              <span class=\"btn btn-primary btn-fill btn-wd btn-file\">\r\n                              Browse...<input change.delegate=\"changeFiles()\" id=\"uploadFiles\" files.bind=\"files\" type=\"file\" multiple=true>\r\n                              </span>\r\n                          </span>\r\n                          <input type=\"text\" value.bind=\"selectedFile\" class=\"form-control\" readonly/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n-->\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n"; });
define('text!modules/admin/site/components/downloadTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\r\n        <div class='row'>\r\n            <div class='col-lg-12 bottomMargin'>\r\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\r\n                <div id=\"no-more-tables\">\r\n                    <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\r\n                        <thead class=\"cf\">\r\n\r\n                            <tr>\r\n                                <td colspan='5'>\r\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n                                    <span click.delegate=\"new()\"  class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Download\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\r\n                                    <span click.delegate=\"_cleanUpFilters()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\r\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"width:20rem;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'file.originalFilename', type: 'custom', sorter: customFileNameSorter})\">File </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'downloads.appCatsArray', type: 'custom', sorter: customCatSorter})\">Type </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th  style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'active'})\">Status </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n                                <th   style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketRelevant'})\">Help Ticket Relevant </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>\r\n                                    <input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilter', collectionProperty: 'name', displayProperty: 'name',  compare:'match'} )\"  class=\"form-control\" />\r\n                                </th>\r\n                                <th>\r\n                                    <input value.bind=\"fileNameFilterValue\" input.delegate=\"dataTable.filterList(fileNameFilterValue, { type: 'text',  filter: 'fileNameFilter', collectionProperty: 'file.originalFilename', displayProperty: 'file.originalFilename',  compare:'match'} )\"  class=\"form-control\" />\r\n                                </th>\r\n                                <th>\r\n                                \t<select value.bind=\"downCatcodeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'downCatcodeFilter',  collectionProperty: 'downCatcode', displayProperty: 'downCatcode', matchProperty:'', compare:'match'} )\" class=\"form-control\">\r\n                                        <option value=\"\"></option>\r\n                                        <option repeat.for=\"category of downloads.appCatsArray\" value=\"${category.downCatcode}\">${category.description}</option>\r\n                                    </select>\r\n                                </th>\r\n                                <th>\r\n                                    <select value.bind=\"activeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'boolean',  filter: 'activeFilter',  collectionProperty: 'active', displayProperty: 'active', matchProperty:'', compare:'boolean'} )\" class=\"form-control\">                                  \r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"true\">Active</option>\r\n                                        <option value=\"false\">Inactive</options>\r\n                                    </select>\r\n                                </th>\r\n                                <th>\r\n                                    <select value.bind=\"helpTicketRelevantFilter\" input.delegate=\"dataTable.filterList($event, { type: 'boolean',  filter: 'helpTicketRelevantFilter',  collectionProperty: 'helpTicketRelevant', displayProperty: 'helpTicketRelevant', matchProperty:'', compare:'boolean'} )\" class=\"form-control\">\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"true\">True</option>\r\n                                        <option value=\"false\">False</options>\r\n                                    </select>\r\n                                </th>\r\n                            </tr>\r\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\r\n                                <td data-title=\"Name\">${item.name}</td>\r\n                                <td data-title=\"Original Filename\" style=\"width: 75px\">\r\n                                    <div>${item.file.originalFilename}</div>\r\n                                </td>\r\n                                <td data-title=\"Type\" style=\"width: 75px\">\r\n                                    <div>${item.downCatcode | lookupValue:downloads.appCatsArray:'downCatcode':\"description\"}</div>\r\n                                </td>\r\n                                <td data-title=\"Status\">${item.active | translateStatus}</td>\r\n                                <td data-title=\"Help Ticket Relevant\">${item.helpTicketRelevant}</a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/site/components/htTypeForm.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-12\">\n\t\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div class=\"bottomMargin panel panel-default leftMargin rightMargin\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\"\n\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t<div class=\"col-lg-1 topMargin\">\n\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.showSubtypes\" id=\"subtypesCheckBox\" type=\"checkbox\"> Show subtypes\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n</template>"; });
define('text!modules/admin/site/components/htTypeTable.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\ttitle=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t</div>\n\t<div class=\"fluid-container\">\n\t\t<div class=\"row leftMargin rightMargin\">\n\t\t\t<div class=\"form-group topMargin col-lg-5\">\n\t\t\t\t<select value.bind=\"selectedCategory\" change.delegate=\"selectCategory()\" id=\"category\" class=\"form-control\">\n\t\t\t\t<option value=\"-1\">Select a Category</option>\n\t\t\t\t<option repeat.for=\"type of helpTickets.helpTicketTypesArray\"\n\t\t\t\t\t\tvalue.bind=\"$index\">${type.description}</option>\n\t\t\t\t</select>\n\t\t\t\t <a class=\"btn btn-link\" click.trigger=\"newCategory()\" aria-hidden=\"true\">(Add a Category)</a>\n\t\t\t<!--\t<span click.delegate=\"newCategory()\" class=\"topMargin\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Category\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span> -->\n\t\t\t</div>\n\t\t\t<div show.bind=\"selectedCategory > -1\" class=\"form-group topMargin col-lg-5\">\n\t\t\t\t<select value.bind=\"selectedSubtype\" change.delegate=\"typeSelected()\" id=\"course\"\n\t\t\t\t\t\tclass=\"form-control\">\n\t\t\t\t<option value=\"-1\">Select a Subtype</option>\n\t\t\t\t<option repeat.for=\"subtype of helpTickets.selectedHelpTicketType.subtypes\"\n\t\t\t\t\t\tvalue.bind=\"$index\">${subtype.description}</option>\n\t\t\t\t</select>\n\t\t\t\t <a class=\"btn btn-link\" click.trigger=\"newCategory()\" aria-hidden=\"true\">(Add a Subtype)</a>\n\t\t\t<!--\t<span click.delegate=\"newSubtype()\" class=\"topMargin\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Subtype\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span> -->\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div show.bind=\"selectedCategory > -1\">\n\t\t\t<h4>Category</h4>\n\t\t\t<div class=\"bottomMargin panel panel-default leftMargin rightMargin\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\"\n\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-8\">\n\t\t\t\t\t\t\t<div class=\"col-lg-2 topMargin\">\n\t\t\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.showSubtypes\" id=\"subtypesCheckBox\" type=\"checkbox\"> Show subtypes\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div show.bind=\"selectedSubtype > -1\">\n\t\t\t\t<h4>Subtype</h4>\n\t\t\t\t<div class=\"bottomMargin panel panel-default leftMargin rightMargin\">\n\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-lg-2 topMargin\">\n\t\t\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].active\" id=\"activeSubtypesCheckBox\" type=\"checkbox\"> Active\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"editKey\" class=\"col-sm-2 control-label hideOnPhone\">Key</label>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].type\" id=\"editKey\" class=\"form-control \" placeholder=\"Key\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-2 topMargin\">\n\t\t\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].public\" id=\"publicSubtypesCheckBox\" type=\"checkbox\"> Public\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-2 topMargin\">\n\t\t\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].appsRequired\" id=\"appsSubtypesCheckBox\" type=\"checkbox\"> Applications Required\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-2 topMargin\">\n\t\t\t\t\t\t\t\t<div class=\"checkbox \">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].clientRequried\" id=\"clientSubtypesCheckBox\" type=\"checkbox\"> Client Required\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-lg-4\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].description\" id=\"editSubtypeDescription\" class=\"form-control \" placeholder=\"Description\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t<div class=\"row\">\t\n\t\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"editInputForm\" class=\"col-sm-4 control-label hideOnPhone\">Input Form</label>\n\t\t\t\t\t\t\t\t\t<textarea value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].inputForm\" id=\"editInputForm\" class=\"form-control \" placeholder=\"Input Form\" rows=\"20\" ></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bottomMargin panel panel-default col-lg-5\">\n\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t<label class=\"col-sm-12 control-label hideOnPhone\">Preview</label>\n\t\t\t\t\t\t\t\t\t<div innerhtml.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].inputForm\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\t\n\t\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"editOutputForm\" class=\"col-sm-4 control-label hideOnPhone\">Output Form</label>\n\t\t\t\t\t\t\t\t\t<textarea value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].outputForm\" id=\"editOutputForm\" class=\"form-control \" placeholder=\"Input Form\" rows=\"20\" ></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bottomMargin panel panel-default col-lg-5\">\n\t\t\t\t\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t\t\t\t\t<label class=\"col-sm-12 control-label hideOnPhone\">Preview</label>\n\t\t\t\t\t\t\t\t\t<div innerhtml.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].outputForm\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"form-group topMargin col-lg-5\">\n\t\t\t\t\t\t\t\t<select value.bind=\"selectedValidationRules\" change.delegate=\"selectCategory()\" id=\"validation\" class=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"-1\">Select a Rule</option>\n\t\t\t\t\t\t\t\t<option repeat.for=\"type of helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].validation\"\n\t\t\t\t\t\t\t\t\t\tvalue.bind=\"$index\">${type.rule} - ${type.value}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div show.bind=\"selectedValidationRules > -1\" class=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"editRule\" class=\"col-sm-2 control-label hideOnPhone\">Rule</label>\n\t\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].validation[selectedValidationRules].rule\" id=\"editRule\" class=\"form-control\" placeholder=\"Rule\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"editRule\" class=\"col-sm-2 control-label hideOnPhone\">Value</label>\n\t\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].validation[selectedValidationRules].value\" id=\"editRule\" class=\"form-control\" placeholder=\"Value\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"editRule\" class=\"col-sm-2 control-label hideOnPhone\">Message</label>\n\t\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].validation[selectedValidationRules].message\" id=\"editRule\" class=\"form-control\" placeholder=\"Message\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"editRule\" class=\"col-sm-2 control-label hideOnPhone\">Control</label>\n\t\t\t\t\t\t\t\t\t\t<input value.bind=\"helpTickets.selectedHelpTicketType.subtypes[selectedSubtype].validation[selectedValidationRules].control\" id=\"editRule\" class=\"form-control\" placeholder=\"Control\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<compose view=\"./document.html\"></compose>\n\t\t</div>\n      </div>\n\t\n    </div>\n</template>"; });
define('text!modules/admin/site/components/logFileTable.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-3 topMargin\">\n\t\t<div  class=\"panel panel-default\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t<span click.delegate=\"deleteFiles()\" class=\"smallMarginRight input-group-addon\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete oldest files\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t<input value.bind=\"filesToDelete\" id=\"filesToDelete\" class=\"form-control\"  type=\"number\" ria-describedby=\"basic-addon1\" placeholder=\"# of oldest files to delete\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<label>Files</label>\n\t\t\t\t<div class=\"well well2 overFlow\" style=\"height:600px;\">\n\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t<button click.trigger=\"fileSelected($index)\" type=\"button\" repeat.for=\"file of fileList\" id=\"${type.code}\" class=\"list-group-item\">${file}</button>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-lg-9 topMargin\">\n\t\t<compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n\t\t<div id=\"no-more-tables\">\n\t\t\t<table class=\"table table-striped table-hover cf\">\n\t\t\t\t<thead class=\"cf\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan='3'>\n\t\t\t\t\t\t\t<span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t<span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style=\"width:8em;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'event'})\">Event </span><span><i class=\"fa fa-sort\"></i></span></th>Event<span click.trigger=\"dataTable.sortArray('event')\"><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t<th style=\"width:8em;\" if.bind=\"screenToShow==='log'\">Code</th>\n\t\t\t\t\t\t<th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'user'})\">Data </span><span><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t<th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'date'})\">Time </span><span><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<input value.bind=\"eventFilterValue\" input.delegate=\"dataTable.filterList(eventFilterValue, { type: 'text',  filter: 'eventFilter', collectionProperty: 'event', displayProperty: 'event',  compare:'match'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th if.bind=\"screenToShow==='log'\">\n\t\t\t\t\t\t\t<input value.bind=\"codeFilterValue\" input.delegate=\"dataTable.filterList(codeFilterValue, { type: 'text',  filter: 'codeFilter', collectionProperty: 'code', displayProperty: 'code',  compare:'match'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<input value.bind=\"dataFilterValue\" input.delegate=\"dataTable.filterList(dataFilterValue, { type: 'text',  filter: 'dataFilter', collectionProperty: 'data', displayProperty: 'data',  compare:'match'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr repeat.for=\"item of dataTable.displayArray\">\n\t\t\t\t\t\t<td data-title=\"Event\">${item.event}</td>\n\t\t\t\t\t\t<td if.bind=\"screenToShow==='log'\" data-title=\"Code\">${item.code}</td>\n\t\t\t\t\t\t<td data-title=\"Data\"><span innerhtml.bind=\"item.data\"></span></td>\n\t\t\t\t\t\t<td data-title=\"Date\">${item.date}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/admin/site/components/messageForm.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <!--\n            <span click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n            -->\n        </div>         \n\n        <form class=\"form-horizontal topMargin\">\n\n            <!-- Row 1 -->\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editCategory\" class=\"col-sm-2 control-label hideOnPhone\">Type</label>\n                        <div class=\"col-sm-8\">\n                            <select value.bind=\"siteinfo.selectedMessage.category\" class=\"form-control\" id=\"category\">\n                                <option value=\"\">-- Select an Option --</option>\n                                <option value=\"${type}\" repeat.for=\"type of config.MESSAGE_TYPES\">${type}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editKey\" class=\"col-sm-2 control-label hideOnPhone\">Key</label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"siteinfo.selectedMessage.key\" id=\"editKey\" class=\"form-control \" placeholder=\"Key\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editDescription\" class=\"col-sm-2 control-label hideOnPhone\">Description</label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"siteinfo.selectedMessage.description\" id=\"editDescription\" class=\"form-control \" placeholder=\"Description\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editContent\" class=\"col-sm-2 control-label hideOnPhone\">Content</label>\n                        <div class=\"col-sm-8\">\n                            <editor value.bind=\"siteinfo.selectedMessage.content\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editContent\" class=\"col-sm-2 control-label hideOnPhone\">Preview</label>\n                        <div class=\"col-sm-8\">\n                            <div show.bind=\"siteinfo.selectedMessage.content\" class=\"bottomMargin topMargin\" innerhtml.bind=\"siteinfo.selectedMessage.content\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            -->\n        </form>\n    </div>\n</template>\n"; });
define('text!modules/admin/site/components/messageTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\n        <div class='row'>\n            <div class='col-lg-12 bottomMargin'>\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                <div id=\"no-more-tables\">\n                    <table class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr>\n                                <td colspan='3'>\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th style=\"width:250px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'key'})\">Key </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'category'})\">Category </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\"><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'description'})\">Description </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>\n                                    <input value.bind=\"keyFilterValue\" input.delegate=\"dataTable.filterList(keyFilterValue, { type: 'text',  filter: 'keyFilter', collectionProperty: 'key', displayProperty: 'key',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <select value.bind=\"categoryFilter\" input.delegate=\"dataTable.filterList($event, { type:\n                                    'value',  filter: 'categoryFilter',  collectionProperty: 'category', displayProperty: 'category', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n                                        <option value=\"\"></option>\n                                        <option value=\"${type}\" repeat.for=\"type of config.MESSAGE_TYPES\">${type}</option>\n                                    </select>\n                                </th>\n                                <th>\n                                    <input value.bind=\"descriptionFilterValue\" input.delegate=\"dataTable.filterList(descriptionFilterValue, { type: 'text',  filter: 'descriptionFilter', collectionProperty: 'description', displayProperty: 'description',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                            </tr>\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\n                                <td data-title=\"Key\">${item.key}</td>\n                                <td data-title=\"Category\" style=\"width: 75px\">\n                                    <div>${item.category}</div>\n                                </td>\n                                <td data-title=\"Description\" style=\"width: 75px\">\n                                    <div>${item.description}</div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/site/components/newsForm.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\">\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"siteinfo.selectedItem._id\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div>\n\n        <form class=\"form-horizontal topMargin\">\n\n            <!-- Row 1 -->\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editType\" class=\"col-sm-2 control-label hideOnPhone\">Type</label>\n                        <div class=\"col-sm-8\">\n                            <select value.bind=\"siteinfo.selectedItem.itemType\" class=\"form-control\" id=\"itemType\">\n                                <option value=\"${type.type}\" repeat.for=\"type of config.SITE_INFO_TYPES\">${type.description}</optionp>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" show.bind=\"siteinfo.selectedItem.itemType == 'SYST'\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editPriority\" class=\"col-sm-2 control-label hideOnPhone\">Priority</label>\n                        <div class=\"col-sm-8\">\n                            <select value.bind=\"siteinfo.selectedItem.priority\" class=\"form-control \" id=\"priority\">\n                                <option value=\"\"></option>\n                                <option value=\"INFO\">Information</option>\n                                <option value=\"WARN\">Warning</options>\n                                <option value=\"DANG\">Danger</options>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n             <div class=\"row\" show.bind=\"siteinfo.selectedItem.itemType == 'ILNK'\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editCategory\" class=\"col-sm-2 control-label hideOnPhone\">Category</label>\n                        <div class=\"col-sm-8\">\n                             <input value.bind=\"siteinfo.selectedItem.category\" id=\"editUrl\" class=\"form-control \" placeholder=\"Category\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editTitle\" class=\"col-sm-2 control-label hideOnPhone\">Title</label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"siteinfo.selectedItem.title\" id=\"editTitle\" class=\"form-control \" placeholder=\"Title\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editContent\" class=\"col-sm-2 control-label hideOnPhone\">Content</label>\n                        <div class=\"col-sm-8\">\n                            <editor value.bind=\"siteinfo.selectedItem.content\" toolbar.bind=\"toolbar\" height=\"250\"></editor>                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editUrl\" class=\"col-sm-2 control-label hideOnPhone\"><a href=\"${siteinfo.selectedItem.url}\" target=\"_blank\">URL</a></label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"siteinfo.selectedItem.url\" id=\"editUrl\" class=\"form-control \" placeholder=\"URL\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editCreatedDate\" class=\"col-sm-2 control-label hideOnPhone\">Date Created</label>\n                        <div class=\"col-sm-8\">\n                            <flat-picker controlid=\"editCreatedDate\" config.bind=\"config\"  value.bind=\"siteinfo.selectedItem.createdDate\"></flat-picker>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editExpireddDate\" class=\"col-sm-2 control-label hideOnPhone\">Date Expires</label>\n                        <div class=\"col-sm-8\">\n                            <flat-picker controlid=\"editCreatedDate\" config.bind=\"config\"  value.bind=\"siteinfo.selectedItem.expiredDate\"></flat-picker>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-lg-12\">\n                    <div class=\"form-group\">\n                        <label for=\"editImageUrl\" class=\"col-sm-2 control-label hideOnPhone\">Image URL</label>\n                        <div class=\"col-sm-8\">\n                            <input value.bind=\"siteinfo.selectedItem.image\" id=\"editImageUrl\" class=\"form-control \" placeholder=\"Image URL\" type=\"text\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-9 col-lg-offset-2\">\n                    <div class=\"col-lg-2\">\n                        <label class=\"btn btn-primary\">\n                            Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\" files.bind=\"files\">\n                        </label>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <ul>\n                            <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>          \n        </form>\n    </div>\n</template>\n"; });
define('text!modules/admin/site/components/newsTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\" style='padding:15px;'>\n\t\t<div class='col-lg-12 bottomMargin'>\n\t\t\t<compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n\t\t\t<div id=\"no-more-tables\">\n\t\t\t\t<table id=\"newsTable\" class=\"table table-striped table-hover cf\">\n\t\t\t\t\t<thead class=\"cf\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='5'>\n\t\t\t\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input checked.bind=\"isChecked\" change.trigger=\"filterOutExpired()\" type=\"checkbox\"> Hide expired entries\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colspan='5'>\n\t\t\t\t\t\t\t\t<span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t<span click.delegate=\"new()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t<span click.delegate=\" _cleanUpFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\t\n\t\t\t\t\t\t\t\t<span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style=\"width:250px;\"<span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'title'})\">title </span><i class=\"fa fa-sort\"></i></th>\n\t\t\t\t\t\t\t<th style=\"width:150px;\">Created <span click.trigger=\"dataTable.sortArray('createdDate')\"><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t\t<th style=\"width:150px;\">Expires <span click.trigger=\"dataTable.sortArray('expiredDate')\"><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t\t<th style=\"width:150px;\">Type <span click.trigger=\"dataTable.sortArray('itemType')\"><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t\t<th style=\"width:150px;\">URL <span click.trigger=\"dataTable.sortArray('url')\"><i class=\"fa fa-sort\"></i></span></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t <input value.bind=\"titleFilterValue\" input.delegate=\"dataTable.filterList(titleFilterValue, { type: 'text',  filter: 'titleFilter', collectionProperty: 'title', displayProperty: 'title',  compare:'match'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t \t<input value.bind=\"createdDateFilterValue\" input.delegate=\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<input value.bind=\"expiredDateFilterValue\" input.delegate=\"dataTable.filterList(expiredDateFilterValue, {type: 'date', filter: 'expiredDate',  collectionProperty: 'expiredDate', compare: 'after'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<select value.bind=\"itemTypeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'itemTypeFilter',  collectionProperty: 'itemType', displayProperty: 'itemType', matchProperty:'', compare:'match'} )\" class=\"form-control\">\n\t\t\t\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t\t\t\t<option value=\"${type.type}\" repeat.for=\"type of config.SITE_INFO_TYPES\">${type.description}</optionp>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<input value.bind=\"urlFilterValue\" input.delegate=\"dataTable.filterList(urlFilterValue, { type: 'text',  filter: 'urlFilter', collectionProperty: 'url', displayProperty: 'url',  compare:'match'} )\"  class=\"form-control\" />\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr click.trigger=\"edit($index, $event)\" repeat.for=\"item of dataTable.displayArray\">\n\t\t\t\t\t\t\t<td data-title=\"Title\">${item.title}</td>\n\t\t\t\t\t\t\t<td data-title=\"Date Created\" style=\"width: 75px\"><div>${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</div></td>\n\t\t\t\t\t\t\t<td data-title=\"Date Expired\" style=\"width: 75px\"><div>${item.expiredDate | dateFormat:config.DATE_FORMAT_TABLE}</div></td>\n\t\t\t\t\t\t\t<td data-title=\"Type\">${item.itemType}</td>\n\t\t\t\t\t\t\t<td data-title=\"url\"><a href=\"${item.url}\" target=\"_blank\">${item.url}</a></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n    </div>\n</template>"; });
define('text!modules/admin/site/components/uploadedFilesTable.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"topMargin\">\n\t\t<tree-node data.bind=\"uploadedFileList\" callback.call=\"deleteFile(data)\" level.bind=\"0\" selected-file.bind=\"selectedFile\" selected-node.bind=\"selectedNode\" max-level.bind=\"1\"></tree-node>\n\t</div>\n</template>"; });
define('text!modules/admin/system/components/Assignments.html', ['module'], function(module) { module.exports = "<template>\r\n  <div class=\"col-lg-12\">\r\n      <div class=\"col-lg-6\">\r\n    \r\n          <div class=\"form-group\">\r\n            <label for=\"editStudentId\" class=\"control-label hideOnPhone\">Student ID Prefix</label>\r\n            <input value.bind=\"products.selectedProduct.defaultStudentIdPrefix\" id=\"editStudentId\" class=\"form-control \" placeholder=\"Student ID Prefix\" type=\"text\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"editFacultyId\" class=\"control-label\">Faculty ID Prefix</label>\r\n            <input value.bind=\"products.selectedProduct.defaultFacultyIdPrefix\" id=\"editFacultyId\" class=\"form-control \" placeholder=\"Faculty ID Prefix\" type=\"text\" />\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <label for=\"editIdsAvailable \" class=\"control-label \">Number of IDs</label>\r\n            <input value.bind=\"products.selectedProduct.idsAvailable \" id=\"editIdsAvailable \" class=\"form-control\" placeholder=\"Number of IDs \" type=\"text \" />\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <label for=\"editFirstUsableID \" class=\"control-label \">First usable ID</label>\r\n            <input value.bind=\"products.selectedProduct.firstAllowableId \" id=\"editFirstUsableID \" class=\"form-control \" placeholder=\"First Usable ID \" type=\"number \" />\r\n          </div>\r\n\r\n        \r\n      </div>\r\n           \r\n      <div class=\"col-lg-5 col-sm-offset-1\">  \r\n        <div class=\"form-group\">\r\n            <label for=\"editStudentPassword\" class=\"control-label\">Student Password</label>\r\n            <input value.bind=\"products.selectedProduct.defaultStudentPassword\" id=\"editStudentPassword\" class=\"form-control \" placeholder=\"Student Password\" type=\"text\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"editFacultyPassword\" class=\"control-label\">Faculty Password</label>\r\n            <input value.bind=\"products.selectedProduct.defaultFacultyPassword\" id=\"editFacultyPassword\" class=\"form-control \" placeholder=\"Faculty Password\" type=\"text\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n        <label class=\"control-label hideOnPhone\">Clients</label>\r\n          <div class=\"checkbox\">\r\n            <label class=\"pull-left\">\r\n              <input  id=\"clientRelevant\" checked.bind=\"products.selectedProduct.clientRelevant\" type=\"checkbox\"> Required\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group \">\r\n            <label for=\"editLastUsableID \" class=\"control-label \">Last usable ID</label>\r\n            <input value.bind=\"products.selectedProduct.lastAllowableId \" id=\"editLastUsableID \" class=\"form-control \" placeholder=\"Last Usable ID \" type=\"number \" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-12\">\r\n       <label  class=\"control-label \">Assignment Comments</label>\r\n      <editor value.bind=\"products.selectedProduct.productInfo\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/system/components/Description.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\">\n        <div class=\"form-group \">\n\t\t\t<label>Product Information for Customers</label>\n             <editor value.bind=\"products.selectedProduct.productDescription\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/system/components/documentForm.html', ['module'], function(module) { module.exports = "<template>\r\n    <div id=\"no-more-tables\">\r\n        <table class=\"table table-striped table-hover cf\">\r\n            <thead class=\"cf\">\r\n                <tr>\r\n                    <th>Select</th>\r\n                    <th>Name</th>\r\n                    <th>Version</th>\r\n                    <th>Date Uploaded</th>\r\n                    <th>Status</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr repeat.for=\"item of documents.selectedDocument.files\">\r\n                    <td click.trigger=\"addDocument($index)\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></td>\r\n                    <td data-title=\"Name\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${documents.selectedDocument.categoryCode}/${documents.selectedDocument.name}/${item.fileName}\">${item.originalFilename}</a></td>\r\n                    <td data-title=\"Version\">${item.version}</td>\r\n                    <td data-title=\"Date Uploaded\">${item.dateUploaded | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                    <td data-title=\"Active\"  innerhtml.bind='item.active | checkBox'></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/system/components/Documents.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4\">\r\n                    <div show.bind=\"!categoryForm\">\r\n                        <label>Available Categories</label>\r\n                        <div class=\"well well2 overFlow\" style=\"height:400px;\">\r\n                            <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter Categories\" />\r\n                            <ul class=\"list-group\">\r\n                                <button click.trigger=\"typeChanged($index)\" type=\"button\" repeat.for=\"type of filteredDocumentArray\" id=\"${type.code}\" class=\"list-group-item\">${type.description}</button>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div show.bind=\"showDocuments\" class=\"col-lg-8\" style='padding:15px;'>\r\n                    <div show.bind=\"showDocumentForm\">\r\n                        <compose view=\"./documentForm.html\"></compose>\r\n                    </div>\r\n                    <compose show.bind=\"!showDocumentForm\" view=\"./documentsTable.html\"></compose>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</template>"; });
define('text!modules/admin/system/components/documentsTable.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class='row'>\r\n        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n            <div id=\"no-more-tables\">\r\n                <table class=\"table table-striped table-hover cf\">\r\n                    <thead class=\"cf\">\r\n                        <tr>\r\n                            <th>Name </th>\r\n                            <th>Description</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr click.trigger=\"chooseDocument($index, $event)\" repeat.for=\"item of documents.documentsArray\">\r\n                            <td data-title=\"name\">${item.name}</td>\r\n                            <td data-title=\"description\">${item.description}</td>\r\n                            <td data-title=\"createdDate\">${item.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/system/components/edit-client-form.html', ['module'], function(module) { module.exports = "<template>\n\t<div id=\"home\" class=\"tab-pane fade active in\">\n\t\t<div class=\"bottomMargin topMargin list-group-item leftMargin rightMargin\">\n\t\t\t<span click.delegate=\"backClient()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span click.delegate=\"saveClient()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\n\t\t<fieldset>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"client\" class=\"col-lg-2 control-label topMargin\">Client</label>\n\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t<input disabled.bind=\"selectedClient.assignments.length > 0\" value.bind=\"selectedClient.client\" id=\"client\" class=\"form-control topMargin\" placeholder=\"Product\" type=\"text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"idsavaialble\" class=\"col-lg-2 control-label topMargin\">IDs Available</label>\n\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t<input disabled.bind=\"selectedClient.assignments.length > 0\" value.bind=\"selectedClient.idsAvailable\" id=\"idsavaialble\"\n\t\t\t\t\t\t class=\"form-control topMargin\" placeholder=\"IDs Available\" type=\"number\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"lastID\" class=\"col-lg-2 control-label topMargin\">Last ID Assigned</label>\n\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t<input value.bind=\"selectedClient.lastIdAssigned\" id=\"lastID\" class=\"form-control topMargin\" placeholder=\"Last ID Allocated\"\n\t\t\t\t\t\t type=\"number\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"status\" class=\"col-lg-2 control-label topMargin\">Status</label>\n\t\t\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t\t\t<select value.bind=\"selectedClient.clientStatus\" class=\"form-control topMargin\" id=\"status\">\n\t\t\t\t\t\t\t<option value=\"\">Select an option</option>\n\t\t\t\t\t\t\t<option repeat.for=\"name of config.CLIENT_STATUSES\" model.bind=\"name.code\">${name.description}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</fieldset>\n\t</div>\n</template>"; });
define('text!modules/admin/system/components/is4ua.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-6\">\n        <div class=\"form-group\">\n            <label for=\"editSapName\" class=\"control-label\">SAP Name</label>\n            <select value.two-way=\"products.selectedProduct.sapProduct\" id=\"editSapName\" class=\"form-control \" placeholder=\"SAP Name\">\n                <option value=\"\">Select an option</option>\n                <option repeat.for=\"name of is4ua.sapProductsArray\" value=\"${name.code}\">${name.description}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"editHostedWhere\" class=\"control-label\">Hosted</label>\n            <select value.bind=\"products.selectedProduct.hostWhere\" id=\"editHostedWhere\" class=\"form-control \">\n                <option value=\"\">Select an option</option>\n                <option value=\"UCC\">UCC</option>\n                <option value=\"Other\">Other</option>\n            </select>\n        </div>\n    \n        <div class=\"form-group\">\n            <label for=\"editUaCurriculum\" class=\"control-label\">UA Curriculum</label>\n            <select value.bind=\"products.selectedProduct.uaCurriculum\" id=editUaCurriculum \" class=\"form-control  \">\n                <option value=\" \">Select an option</option>\n                <option repeat.for=\"name of is4ua.uaCurriculumArray \" value=\"${name.code} \">${name.description}</option>\n            </select>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/system/components/Notes.html', ['module'], function(module) { module.exports = "<template>\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"form-group \">\r\n            <label>Internal Comments</label>\r\n             <editor value.bind=\"products.selectedProduct.clientInfo\" toolbar.bind=\"toolbar\" height=\"250\"></editor>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/system/components/productForm.html', ['module'], function(module) { module.exports = "<template>\n    <style>\n        .menuButtons {\n\t\t\tcolor: ${config.ACTIVE_SUBMENU_COLOR};\n\t\t\tbackground-color:${config.BUTTONS_BACKGROUND}\n        }\n    </style>\n    <div class=\"col-lg-12\">\n\n        <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span show.bind=\"!newProduct\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n        </div>  \n\n        <div class=\" topMargin blackText\">\n            <form class=\"form-horizontal topMargin\">\n                <!-- Row 1 -->\n                <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"form-group\">\n                                <label for=\"editName\" class=\"col-sm-3 control-label hideOnPhone\">Name</label>\n                                <div class=\"col-sm-8\">\n                                    <input value.bind=\"products.selectedProduct.name\" id=\"editName\" class=\"form-control \" placeholder=\"Name\" type=\"text\" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label col-sm-3 hideOnPhone\">Status</label>\n                                <div class=\"col-sm-8\">\n                                    <div class=\"checkbox\">\n                                        <label class=\"pull-left\">\n                                            <input id=\"activeProduct\" checked.bind=\"products.selectedProduct.active\" type=\"checkbox\"> Active\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <table id=\"coursesTable\" class=\"table table-striped table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>Document </th>\n                                    <th>Default</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr repeat.for=\"document of products.selectedProduct.documents\">\n                                    <td data-title=\"name\">${document.fileName} </td>\n                                    <td data-title=\"default\" click.trigger=\"toggleDefault($index)\" innerhtml.bind='document.default | checkBox'></td>\n                                    <td  click.trigger=\"removeDocument($index)\"><i class=\"fa fa-trash\"></i></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>             \n                </div>\n\n                <div class=\"row topMargin\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"row\">\n                            <div class=\"panel panel-default\">\n                                <div class=\"panel-body\">\n                                    <div class=\"col-lg-2\">\n                                        <div id=\"productListGroup\" class=\"list-group\">\n                                            <a  class=\"${ $first ? 'menuButtons' : ''} list-group-item\"  repeat.for=\"tab of tabs\" href=\"\" class=\"list-group-item\" click.delegate=\"changeTab($event, $index)\">\n                                                <h4 id=\"${tab.id}\" class=\"list-group-item-heading\">${tab.id}</h4>\n                                            </a>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-10\">\n                                        <div class=\"tab-content\">\n                                            <div repeat.for=\"tab of tabs\" id=\"${tab.id + 'Tab'}\" class=\"${ $first ? 'tab-pane fade in active' : 'tab-pane fade' }\">\n                                                <compose view=\"${tabPath + tab.id + '.html'}\"></compose>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/system/components/productTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\" style='padding:15px;'>\n        <div class='row'>\n            <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\n                <div id=\"no-more-tables\">\n                    <table id=\"productsTable\" class=\"table table-striped table-hover cf\">\n                        <thead class=\"cf\">\n                            <tr colspan='5'>\n                                 <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                                 </tr>\n                            <tr>                            \n                            <tr>\n                                <td colspan='5'>\n                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"new()\" class=\"smallMarginRight\"  bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                                    <span click.delegate=\"_cleanUpFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th style=\"width:75px;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'clientKey'})\">Key </span><i class=\"fa fa-sort\"></i></th>\n                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Name </span><span><i class=\"fa fa-sort\"></i></span></th>\n                                <th style=\"width:150px;\">SAP Product</th>\n                                <th>Status </th>\n                                <th>Systems</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th></th>\n                                <th>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"nameFilterValue\" input.delegate=\"dataTable.filterList(nameFilterValue, { type: 'text',  filter: 'nameFilterValue', collectionProperty: 'name', displayProperty: 'name',  compare:'match'} )\"  class=\"form-control\" />\n                                </th>\n                                <th>\n                                    <select value.bind=\"sapNameFilterValue\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'sapNameFilter', collectionProperty: 'sapProduct', displayProperty: 'sapProduct',  compare:'match'} )\" class=\"form-control \" >\n                                        <option value=\"\"></option>\n                                        <option repeat.for=\"product of is4ua.sapProductsArray\" value=\"${product.code}\">${product.description}</option>\n                                    </select>\n                                </th>\n                                <th>\n                                    <select value.bind=\"activeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'boolean',  filter: 'activeFilter', lookupArray: '', lookupProperty: '', collectionProperty: 'active', displayProperty: 'active', matchProperty:'', compare:'boolean'} )\" class=\"form-control\">\n                                        <option value=\"\"></option>\n                                        <option value=\"true\">Active</option>\n                                        <option value=\"false\">Inactive</option>\n                                    </select>\n                                </th>\n                                <th>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"systemFilterValue\" input.delegate=\"dataTable.filterList(systemFilterValue, { type: 'custom',  filter: systemCustomFilter, collectionProperty: 'systems.sid', compare:'custom'} )\"  class=\"form-control\" />\n                                </th>\n                            </tr>\n                            <tr click.trigger=\"edit($index, $event)\" repeat.for=\"system of dataTable.displayArray\">\n                                <td data-title=\"Client Key\">${system.clientKey}</td>\n                                <td data-title=\"Name\">${system.name}</td>\n                                <td data-title=\"SAP Product\">${system.sapProduct | lookupValue:is4ua.sapProductsArray:\"code\":\"description\"}</td>\n                                <td class=\"centerText\" data-title=\"Status\">${system.active | translateStatus}</td>\n                                <td data-title=\"Systems\">${system.systems | systemList}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/admin/system/components/sessionConfigTable.html', ['module'], function(module) { module.exports = "<template>\r\n   <div class=\"col-lg-12 col-sm-12\" style='padding:15px;'>\r\n        <div class='row'>\r\n\t\t\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n                <span click.delegate=\"backConfig()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t<span click.delegate=\"saveConfig()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t\t<span click.delegate=\"cancelConfig()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n\t\t\t</div>   \r\n            <div class='col-lg-12 bottomMargin'>\r\n                <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\r\n                <div id=\"no-more-tables\">\r\n                    <table id=\"newsTable\" class=\"table table-striped table-hover cf\">\r\n                        <thead class=\"cf\">\r\n                            <tr>\r\n                                <td colspan='5'>\r\n                                    <span click.delegate=\"refreshConfig()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Session</th>\r\n                                <th>Start Day</th>\r\n                                <th>Start Month</th>\r\n\t\t\t\t\t\t\t\t<th>End Day</th>\r\n\t\t\t\t\t\t\t\t<th>End Month</th>\r\n\t\t\t\t\t\t\t\t<th>Open Day</th>\r\n\t\t\t\t\t\t\t\t<th>Open Month</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr  repeat.for=\"item of editSessionConfigArray\">\r\n                                <td><input value.bind=\"item.session\" class=\"form-control\" type=\"text\" /></td>\r\n                                <td><input value.bind=\"item.startDay\" class=\"form-control\" type=\"text\" /></td>\r\n\t\t\t\t\t\t\t\t<td><input value.bind=\"item.startMonth\" class=\"form-control\" type=\"text\" /></td>\r\n\t\t\t\t\t\t\t\t<td><input value.bind=\"item.endDay\" class=\"form-control\" type=\"text\" /></td>\r\n\t\t\t\t\t\t\t\t<td><input value.bind=\"item.endMonth\" class=\"form-control\" type=\"text\" /></td>\r\n\t\t\t\t\t\t\t\t<td><input value.bind=\"item.openDay\" class=\"form-control\" type=\"text\" /></td>\r\n\t\t\t\t\t\t\t\t<td><input value.bind=\"item.openMonth\" class=\"form-control\" type=\"text\" /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>"; });
define('text!modules/admin/system/components/sessionForm.html', ['module'], function(module) { module.exports = "<template>\r\n <div class=\"container\">\r\n    <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\r\n      <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n      <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n      <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\r\n    </div> \r\n\r\n    <div class=\"topMargin\">\r\n\t    <div class=\"col-lg-5 topMargin\">\r\n\t      <label for=\"editSession\" class=\"form-control-label\">Session</label>\r\n\t      <select value.bind=\"sessions.selectedSession.session\" class=\"form-control\" id=\"editSession\">\r\n\t        <option></option>\r\n\t        <option repeat.for=\"session of config.SESSION_PARAMS\">${session.session}</option>\r\n\t      </select>\r\n\t    </div>\r\n\t    <div class=\"col-lg-5 col-lg-offset-1 topMargin\">\r\n\t     \t<label for=\"editYear\" class=\"form-control-label \">Year</label>\r\n\t    \t<input value.bind=\"sessions.selectedSession.year\" id=\"editYear\" class=\" form-control\" placeholder=\"Year\" type=\"text\" />\r\n\t    </div>\r\n\t    <div class=\"col-lg-5 topMargin\">\r\n\t    \t<label class=\"form-control-label \">Start Date</label>\r\n        \t<flat-picker controlid=\"startDate\" config.bind=\"config\" value.bind=\"sessions.selectedSession.startDate\"></flat-picker>\r\n\t    </div>\r\n\t    <div class=\"col-lg-5 col-lg-offset-1 topMargin\">\r\n\t    \t<label class=\"form-control-label \">End Date</label>\r\n        \t<flat-picker controlid=\"endDate\" config.bind=\"config\" value.bind=\"sessions.selectedSession.endDate\"></flat-picker>\r\n\t    </div>\r\n\t    <div class=\"col-lg-5 topMargin\">\r\n\t    \t<label class=\"form-control-label \">Requests Open</label>\r\n            <flat-picker controlid=\"requestsOpenDate\" config.bind=\"config\" value.bind=\"sessions.selectedSession.requestsOpenDate\"></flat-picker>\r\n\t    </div>\r\n\t     <div class=\"col-lg-5 col-lg-offset-1 topMargin\">\r\n\t     \t<label for=\"editStatus\" class=\"form-control-label\">Status</label>\r\n            <select value.bind=\"sessions.selectedSession.sessionStatus\" id=\"editStatus\" class=\"form-control\" id=\"editStatus\">\r\n              <option repeat.for=\"session of config.SESSION_STATUSES\" value.bind=\"session\">${session}</option>\r\n            </select>\r\n\t     </div>\r\n    </div>\r\n </div>\t\r\n</template>"; });
define('text!modules/admin/system/components/sessionTable.html', ['module'], function(module) { module.exports = "sessionTable.html\r\n<template>\r\n\t<div class='row'>\r\n\t        <div class='col-lg-10 col-lg-offset-1 bottomMargin'>\r\n\t            <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\r\n\t            <div id=\"no-more-tables\">\r\n\t                <table id=\"sessionsTable\" class=\"table table-striped table-hover cf\">\r\n\t                    <thead class=\"cf\">\r\n\t                        <tr>\r\n\t                            <td colspan='6'>\r\n\t                                <div class=\"checkbox\">\r\n\t                                    <label>\r\n\t                                        <input checked.bind=\"isChecked\" change.trigger=\"filterOutClosed()\" type=\"checkbox\"> Hide inactive sessions\r\n\t                                    </label>\r\n\t                                </div>\r\n\t                            </td>\r\n\t                            <tr>\r\n\t                                <td colspan='6'>\r\n\t                                    <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\r\n\t                                    <span click.delegate=\"new()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"smallMarginRight fa fa-plus\" aria-hidden=\"true\"></i></span>\r\n\t                                    <span click.delegate=\"editSessionConfig()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Config\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\r\n\t                                    <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\r\n\t                                </td>\r\n\t                            </tr>\r\n\t                            <tr>\r\n\t                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'session'})\">Session </span> <span><i class=\"fa fa-sort\"></i></span></th>\r\n\t                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'startDate'})\">Start Date </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n\t                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'endDate'})\">End Date </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n\t                                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requestsOpenDate'})\">Requests Open </span><span><i class=\"fa fa-sort\"></i></span></th>\r\n\t                                <th>Status</th>\r\n\t                                <th></th>\r\n\t                            </tr>\r\n\t                    </thead>\r\n\t                    <tbody>\r\n\t                        <tr repeat.for=\"session of dataTable.displayArray\">\r\n\t                            <td data-title=\"Session\" click.trigger=\"edit($index, $event)\">${session.session} - ${session.year}</td>\r\n\t                            <td data-title=\"StartDate\" click.trigger=\"edit($index, $event)\">\r\n\t                                <div style=\"width: 100px\">${session.startDate | dateFormat:config.DATE_FORMAT_TABLE}</div>\r\n\t                            </td>\r\n\t                            <td data-title=\"EndDate\" click.trigger=\"edit($index, $event)\">\r\n\t                                <div style=\"width: 100px\">${session.endDate | dateFormat:config.DATE_FORMAT_TABLE}</div>\r\n\t                            </td>\r\n\t                            <td data-title=\"RequestsOpen\" click.trigger=\"edit($index, $event)\">\r\n\t                                <div style=\"width: 100px\">${session.requestsOpenDate | dateFormat:config.DATE_FORMAT_TABLE}</div>\r\n\t                            </td>\r\n\t                            <td data-title=\"createdDate\" click.trigger=\"edit($index, $event)\">${session.sessionStatus}</td>\r\n\t                            <td data-title=\"Update\" style=\"width: 100px\" click.trigger=\"updateStatus($index, session, $event)\" innerhtml.bind=\"session.sessionStatus | sessionStatusButton\">\r\n\t                            </td>\r\n\t                        </tr>\r\n\t                    </tbody>\r\n\t                </table>\r\n\t            </div>\r\n\t        </div>\r\n\t    </div>\r\n\t</div>\r\n</template>\t"; });
define('text!modules/admin/system/components/systemForm.html', ['module'], function(module) { module.exports = "<template>\t\n<div class=\"col-lg-12\">\n\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span show.bind=\"!newSystem\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"editClientsButton()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Edit Client List\"><i class=\"fa fa-pencil fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t</div>  \n\n\t\t <!-- Edit Form -->\n\t<div class=\"col-lg-6\">\n\t\t<div class=\"col-lg-6\">\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editSid\" class=\"form-control-label\">SID</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.sid | toUppercase\" id=\"editSid\" class=\"form-control\" placeholder=\"SID\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t<label>\n\t\t\t\t\t<input checked.bind=\"systems.selectedSystem.active\" type=\"checkbox\"> Active\n\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editDesc\" class=\"form-control-label\">Description</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.description\" id=\"editDesc\" class=\"form-control\" placeholder=\"Description\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editServer\" class=\"form-control-label\">Server</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.server | toUppercase\" id=\"editServer\" class=\"form-control\" placeholder=\"Server\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editInst\" class=\"form-control-label\">Instance</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.instance\" id=\"editInst\" class=\"form-control\" placeholder=\"Instance\" type=\"text\" maxLength=\"2\"/>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editIpAddress\" class=\"form-control-label\">IP Address</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.ipAddress\" id=\"editIpAddress\" class=\"form-control\" placeholder=\"IP Address\" type=\"text\"/>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editOs\" class=\"form-control-label\">OS</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.os\" id=\"editOs\" class=\"form-control\" placeholder=\"Operating System\" type=\"text\"/>\n\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editOsVersion\" class=\"form-control-label\">OS Version</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.osVersion\" id=\"editOsVersion\" class=\"form-control\" placeholder=\"OS Version\" type=\"text\"/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-6\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editDB\" class=\"form-control-label\">Database</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.dbType\" id=\"editDB\" class=\"form-control\" placeholder=\"Database\" type=\"text\"/>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editDBVersion\" class=\"form-control-label\">Dataabase Version</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.dbVersion\" id=\"editDBVersion\" class=\"form-control\" placeholder=\"Database Version\" type=\"text\"/>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editIts\" class=\"form-control-label\">ITS</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.its\" id=\"editIts\" class=\"form-control\" placeholder=\"ITS\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editTerms\" class=\"form-control-label\">Sessions</label>\n\t\t\t\t<select multiple value.bind=\"systems.selectedSystem.sessions\" class=\"form-control\">\n\t\t\t\t\t<option value=\"${session.session}\"  repeat.for=\"session of config.SESSION_PARAMS\">${session.session}</option>\n\t\t\t\t</select>\n\t\t\t</div><div class=\"col-lg-12\">\n\t\t\t\t<label for=\"editTerms\" class=\"form-control-label\">Sessions</label>\n\t\t\t\t<select multiple value.bind=\"systems.selectedSystem.sessions\" class=\"form-control\">\n\t\t\t\t\t<option value=\"${session.session}\"  repeat.for=\"session of config.SESSION_PARAMS\">${session.session}</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12 bottomMargin\">\n\t\t\t\t<label for=\"editIdsAvailable\" class=\"form-control-label\">IDS Available</label>\n\t\t\t\t<input value.bind=\"systems.selectedSystem.idsAvailable\" id=\"editIdsAvailable\" class=\"form-control\" placeholder=\"IDS Available\" type=\"text\" />\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12 bottomMargin\">\n\t\t\t\t<label for=\"editProduct\" class=\"form-control-label\">Products</label>\n\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t<li class=\"list-group-item\" repeat.for=\"product of systems.selectedSystem.productId\">${product | lookupValue:products.productsArray:\"_id\":\"name\"}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-12 bottomMargin\">\n\t\t\t\t<label for=\"editNotes\" class=\"form-control-label\">Notes</label>\n\t\t\t\t<textarea value.bind=\"systems.selectedSystem.notes\" id=\"editNotes\" rows=\"8\" class=\"form-control\"></textarea>\n\t\t</div>\n\t</div>\n\t <div class=\"col-lg-6\">\n\t\t<div class=\"row\">\n\t\t\t<div show.bind=\"editClients\" class=\"panel panel-default editPanel col-sm-9\" >\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<div class=\"topMargin leftmargin\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t\t\t\t\t\t\t<span click.delegate=\"generateClients()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Add Clients\"><i class=\"fa fa-plus fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t<span click.delegate=\"refreshClients()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh Clients\"><i class=\"fa fa-refresh fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t<span click.delegate=\"deleteClients()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete Clients\"><i class=\"fa fa-trash-o fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t<span click.delegate=\"editClientsButton()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel Changes\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t</div>  \n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t<div class=\"leftMargin bottomMargin topMargin\">\n\t\t\t\t\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t\t\t\t\t<input value.bind=\"editFirstClient\" id=\"editFirstClient\" placeholder=\"Start\" class=\"form-control input-sm\" type=\"number\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-sm-2 \">\n\t\t\t\t\t\t\t\t<input value.bind=\"editLastClient\" id=\"editLastClient\" placeholder=\"End\" class=\"form-control input-sm\" type=\"number\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-sm-2 \">\n\t\t\t\t\t\t\t\t<input value.bind=\"systems.selectedSystem.idsAvailable\" id=\"editClientIdsAvailable\" placeholder=\"IDS Available\" class=\"form-control input-sm\" type=\"number\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-sm-4\">\n\t\t\t\t\t\t\t\t<select value.bind=\"editClientStatus\" class=\"form-control\" data-title=\"Single Select\" data-style=\"btn-default btn-block\" data-menu-style=\"dropdown-blue\">\n\t\t\t\t\t\t\t\t\t<option repeat.for=\"status of config.CLIENT_STATUSES\" value=\"${status.code}\">${status.description}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"col-lg-3\">\n\t\t\t\t\t\t\t\t\t<label  class=\"form-control-label topMargin\">Client Interval</label>\n\t\t\t\t\t\t\t\t\t<input value.bind=\"clientInterval\" id=\"clientInterval\" placeholder=\"Interval\" class=\"form-control input-sm\" type=\"number\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-8\">\n\t\t\t\t\t\t\t\t<label  class=\"form-control-label topMargin\">Product</label>\n\t\t\t\t\t\t\t\t<select class=\"form-control col-lg-8\"  value.bind=\"selectedProduct\">\n\t\t\t\t\t\t\t\t\t<option value=\"\">Choose a product</option>\n\t\t\t\t\t\t\t\t\t<option repeat.for=\"product of products.productsArray\" model.bind=\"product._id\">${product.name}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n               \n\t\t<div show.bind=\"systems.selectedSystem.clients.length > 0 && !clientSelected\" class=\"col-sm-9\">\n\t\t\t<div class=\"panel panel-default\" >\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li class=\"list-group-item\" repeat.for=\"client of systems.selectedSystem.clients | sortArray:'client':'ASC'\">\n\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t<span class=\"col-sm-8\">\n\t\t\t\t\t\t\t\t\t<h5>Client ${client.client} <span class=\"leftMargin\">IDs: ${client.idsAvailable}</span></h5>\n\t\t\t\t\t\t\t\t\t<h6>Status: ${client.clientStatus | lookupValue:config.CLIENT_STATUSES:\"code\":\"description\"}</h6>\n\t\t\t\t\t\t\t\t\t<h7>Product: ${client.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</h7>\n\t\t\t\t\t\t\t\t\t<h7> <span class=\"leftMargin\">Assignments: ${client.assignments.length}</span></h7>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"col-sm-4\">\n\t\t\t\t\t\t\t\t\t<span click.delegate=\"refreshClient($index)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh Client\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t\t<span click.delegate=\"toggleSandBox($index)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Toggle Sandbox\"><i class=\"fa fa-users\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t\t<span click.delegate=\"deleteClient($index)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete Client\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t\t\t<span click.trigger=\"selectClient(client, $index)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Edit Client\"><i class=\"fa fa-pencil fa-lg fa-border\" aria-hidden=\"true\"></i></span>                                            \n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div show.bind=\"clientSelected\">\n\t\t\t<compose view=\"./edit-client-form.html\"></compose>\n\t\t</div>\n\t</div>\n</div>\n</template>"; });
define('text!modules/admin/system/components/Systems.html', ['module'], function(module) { module.exports = "<template>\n     <div class=\"col-lg-12\">\n        <add-systems systemstring.two-way=\"editSystemsString\" systemchanges.two-way=\"systemChanges\" systemsarray.bind=\"systems.systemsArray\"  filteredsystemsarray.bind=\"systems.systemsArray\" selectedproduct.two-way=\"products.selectedProduct\"></add-systems>\n    </div>\n</template>"; });
define('text!modules/admin/system/components/systemTable.html', ['module'], function(module) { module.exports = "<template>\n <div class='col-lg-10 col-lg-offset-1'>\n\t<div id=\"no-more-tables\">\n        <table id=\"systemsTable\" class=\"table table-striped table-hover cf\">\n            <thead class=\"cf\">\n                <tr colspan='5'>\n                    <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n                </tr>\n                <tr>                    \n                <tr>\n                    <td colspan='5'>\n                        <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"new()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"_cleanUpFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                    </td>\n                </tr>\n                <tr>\n                    <th style=\"width:100px;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'sid'})\">SID </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'description'})\">Description </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'server'})\">Server </span><span><i class=\"fa fa-sort\"></i></span></th>\n                    <th class=\"hidden-xs hidden-sm\">Instance</th>\n                    <th class=\"hidden-xs hidden-sm\">Status</th>\n                    <th>Gold Backup</th>\n                    <th>Snapshot</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th>\n                        <input value.bind=\"sidFilterValue\" input.delegate=\"dataTable.filterList(sidFilterValue, { type: 'text',  filter: 'sidFilterValue', lookupArray: '', lookupProperty: '', collectionProperty: 'sid', displayProperty: 'sid', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                    </th>\n                    <th>\n                        <input value.bind=\"descriptionFilterValue\" input.delegate=\"dataTable.filterList(descriptionFilterValue, { type: 'text',  filter: 'descriptionFilterValue', lookupArray: '', lookupProperty: '', collectionProperty: 'description', displayProperty: 'description', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                    </th>\n                    <th class=\"hidden-xs hidden-sm\">\n                        <input value.bind=\"serverFilterValue\" input.delegate=\"dataTable.filterList(serverFilterValue, { type: 'text',  filter: 'serverFilterValue', lookupArray: '', lookupProperty: '', collectionProperty: 'server', displayProperty: 'server', matchProperty:'', compare:'match'} )\"  class=\"form-control\" />\n                    </th>\n                    <th class=\"hidden-xs hidden-sm\"></th>\n                    <th class=\"hidden-xs hidden-sm\">\n                        <select value.bind=\"activeFilter\" input.delegate=\"dataTable.filterList($event, { type: 'boolean',  filter: 'activeFilter', collectionProperty: 'active', displayProperty: 'active', compare:'boolean'} )\" class=\"form-control\">\n                            <option value=\"\"></option>\n                            <option value=true>Active</option>\n                            <option value=false>Inactive</option>\n                        </select>\n                    </th>\n                    <th></th>\n                    <th></th>\n                </tr>\n                <tr repeat.for=\"system of dataTable.displayArray\">\n                    <td click.trigger=\"edit($index, $event)\" data-title=\"Session\">${system.sid}</td>\n                    <td click.trigger=\"edit($index, $event)\" data-title=\"StartDate\">${system.description}</td>\n                    <td click.trigger=\"edit($index, $event)\"  class=\"hidden-xs hidden-sm\" data-title=\"EndDate\">${system.server}</td>\n                    <td click.trigger=\"edit($index, $event)\"  class=\"hidden-xs hidden-sm\" data-title=\"RequestsOpen\">${system.instance}</td>\n                    <td click.trigger=\"edit($index, $event)\"  class=\"hidden-xs hidden-sm\" data-title=\"createdDate\">${system.active | translateStatus}</td>\n                    <td  data-title=\"Gold\">\n                        <div class=\"checkbox\">\n                            <label>\n                                <input change.delegate=\"saveBackups(system)\" checked.bind=\"system.goldBackup\" type=\"checkbox\">\n                            </label>\n                        </div>\n                    </td>\n                    <td  data-title=\"Snapshot\">\n                        <div class=\"checkbox\">\n                            <label>\n                                <input change.delegate=\"saveBackups(system)\" checked.bind=\"system.snapShot\" type=\"checkbox\">\n                            </label>\n                        </div>\n                    </td>\n\n                </tr>\n            </tbody>\n        </table>\n        </div>\n    </div>  \n</template>"; });
define('text!modules/tech/requests/components/Courses.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n        <H4>Choose a Course</h4>\n        <table id=\"coursesTable\" class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <td colspan='6'>\n                        <span click.delegate=\"refreshCourses()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"newCourse()\" class=\"smallMarginRight\"  bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Course\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                        <span style=\"margin-left:5px;\"  class=\"smallMarginRight\"  bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\" click.delegate=\"editACourse()\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\n                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                    </td>\n                </tr>\n                <tr>\n                    <th style=\"width:20rem;\">Number </th>\n                    <th style=\"width:30rem;\">Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"selectCourse\" click.delegate=\"selectCourse($index, $event)\"  repeat.for=\"course of people.coursesArray\">\n                    <td data-title=\"nummber\">${course.number} </td>\n                    <td data-title=\"name\">${course.name}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"row\" show.bind=\"editCourse\">\n            <div class=\"panel panel-default col-md-10 col-md-offset-1\" style=\"background-color:ghostwhite;\">\n                <div class=\"bottomMargin list-group-item leftMargin rightMargin topMargin\">\n                    <span click.trigger=\"saveCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Course\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                    <span click.trigger=\"cancelEditCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"form-group\">\n                        <input id=\"number\" value.bind=\"people.selectedCourse.number\" type=\"text\" placeholder=\"Course Number\"\n                            class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"name\" value.bind=\"people.selectedCourse.name\" type=\"text\" placeholder=\"Course Name\"\n                            class=\"form-control\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <span id=\"course\"></span>\n</template>\n"; });
define('text!modules/tech/requests/components/editRequestsForm.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"hoverProfile\" >\n      <span  click.delegate=\"hideProfile()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close\"><i class=\"fa fa-window-close-o\" aria-hidden=\"true\"></i></span>\n      <span  click.delegate=\"customerActionDialog()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send Email\"><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i></span>\n      <hr/>\n      <div class=\"col-md-4\">\n\t\t\t\t <div class=\"topMargin\">\n            <img if.bind=\"personImage\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${selectedRequestDetail.requestId.personId.file.fileName}\" height=\"100\">\n        </div>\n        <div if.bind=\"!personImage\" style=\"height:100px;width:100px;\" innerhtml.bind=\"selectedRequestDetail.requestId.personId.email | gravatarUrl:100:6\"></div>\n      </div>\n      <div class=\"col-md-8\">\n        <h5>Nickname: ${selectedRequestDetail.requestId.personId.nickName}</h5>\n        <h5>Phone: ${selectedRequestDetail.requestId.personId.phone | formatPhone}</h5>\n        <h5>Mobile: ${selectedRequestDetail.requestId.personId.mobile | formatPhone}</h5>\n        <h5>Email: ${selectedRequestDetail.requestId.personId.email}</h5>\n      </div>\n  </div>\n<div class=\"fluid-container\">\n\t<div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n\t\t<span click.delegate=\"backEdit()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"saveEdit()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"customerActionDialog()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Customer Action\"><i class=\"fa fa-paper-plane fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"openAudit()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Audit\"><i class=\"fa fa-history fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t<span click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t</div>\n\n\t<div show.bind=\"showAudit\">\n    <table class=\"table table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Property</th>\n          <th>Old Value</th>\n          <th>New Value</th>\n          <th>Person</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr  repeat.for=\"item of selectedRequestDetail.requestId.audit\">\n          <td>${item.eventDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n          <td>${item.property}</td>\n          <td>${item.oldValue}</td>\n          <td>${item.newValue}</td>\n          <td>${item.personId.fullName}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n\t<div show.bind=\"!showAudit\" class=\"col-lg-10 col-lg-offset-1\">\n\t\t<h4>Request No. ${selectedRequestDetail.requestNo}</h4>\n\t\t<h5 class=\"dropbtn\" click.delegate=\"showProfile(selectedRequestDetail, $event)\">Faculty: ${selectedRequestDetail.requestId.personId.fullName} <i class=\"fa fa-info\" aria-hidden=\"true\"></i></h5>\n\t\t<h5>Institution: ${selectedRequestDetail.requestId.institutionId | lookupValue:people.institutionsArray:\"_id\":\"name\"}</h5>\n\t\n\t<div class=\"col-lg-5\" >\n\t\t<div class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">Status</label>\n\t\t\t<select class=\"form-control\" value.bind=\"selectedRequestDetail.requestStatus\">\n\t\t\t\t<option repeat.for=\"status of config.REQUEST_STATUS\" value=\"${status.code}\">${status.description}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<label for=\"undergraduates\" class=\"control-label\">Undergraduates</label>\n\t\t\t<input  id=\"undergraduates\"  type=\"number\" placeholder=\"Number of Undergraduates\" class=\"form-control\" value.bind=\"selectedRequestDetail.requestId.undergradIds\"/>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<label for=\"graduates\" class=\"control-label\">Graduates</label>\n\t\t\t<input id=\"graduates\" type=\"number\" placeholder=\"Number of Graduates\" class=\"form-control\" value.bind=\"selectedRequestDetail.requestId.graduateIds\"/>\n\t\t</div>\n\t\t <div class=\"row col-lg-offset-3\">\n\t\t\t<span class=\"col-lg-8 \" id=\"numberOfStudentsError\"></span>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">Product</label>\n\t\t\t<select class=\"form-control\" value.bind=\"selectedRequestDetail.productId._id\">\n\t\t\t\t<option repeat.for=\"product of products.productsArray\" value=\"${product._id}\">${product.name}</option>\n\t\t\t</select>\n\t\t</div>\n  </div>\n\n\t<div class=\"col-lg-5\" >\n\t\t<div  show.bind=\"config.SANDBOX_USED\" class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">Request Type</label>\n\t\t\t<select class=\"form-control\" value.bind=\"selectedRequestDetail.requestId.courseId\">\n\t\t\t\t<option value=\"${config.SANDBOX_ID}\">${config.SANDBOX_NAME}</option>\n\t\t\t\t<option repeat.for=\"course of personCourses\" value=\"${course._id}\">${course.number} ${course.name}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">Start Date</label>\n\t\t\t<flat-picker controlid=\"startDate\" config.bind=\"dateConfig\"  \n\t\t\t\t\tvalue.bind=\"selectedRequestDetail.requestId.startDate\" startdate.bind=\"minStartDate\" enddate.bind=\"maxStartDate\"></flat-picker>\n\t\t\t<span id='startDateError'></span>\n\t\t</div>\n\t\t<div class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">End Date</label>\n\t\t\t\t<flat-picker controlid=\"endDate\" config.bind=\"dateConfig\" value.bind=\"selectedRequestDetail.requestId.endDate\" startdate.bind=\"minEndDate\" enddate.bind=\"maxEndDate\"></flat-picker>\n\t\t\t\t<span id='endDateError'></span>\n\t\t</div>\n\t\t\t<div class=\"topMargin\">\n\t\t\t<label class=\"form-control-label \">Required Date</label>\n\t\t\t\t<flat-picker controlid=\"requiredDate\" config.bind=\"dateConfig\" value.bind=\"selectedRequestDetail.requiredDate\" startdate.bind=\"minEndDate\" enddate.bind=\"maxEndDate\"></flat-picker>\n\t\t\t\t<span id='requiredDateError'></span>\n\t\t</div>\n\t</div>\n\n\n\t <div class=\"col-lg-12 topMargin\" innerhtml.bind=\"selectedRequestDetail.requestId.comments\"></div>\n\t \n</div>\n</template>"; });
define('text!modules/tech/requests/components/requestDetailDetails.html', ['module'], function(module) { module.exports = "<template>\n     <div class=\"col-lg-5\" show.bind=\"showRequest\">\n    <div class=\"panel panel-primary topMargin\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">${selectedProductID | lookupValue:products.productsArray:\"_id\":\"name\"}</h3>\n      </div>\n      <div class=\"panel-body\">\n        <h5>Request status: ${selectedRequestDetail.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}</h5>\n        <h5>Assigned system: ${selectedRequestDetail.assignment.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</h5>\n        <h5>Assigned client: ${selectedRequestDetail.assignment.clientId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</h5>\n      </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/tech/requests/components/requestDetails.html', ['module'], function(module) { module.exports = "<template>\n     <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div  class=\"panel panel-default topMargin\">\n            <div class=\"panel-body leftJustify\">\n              <div class=\"bottomMargin\">\n                <button class=\"btn btn-primary btn-fill btn-wd\" click.delegate=\"save()\">Save</button>\n                <button class=\"btn btn-primary btn-fill btn-wd\" click.delegate=\"cancel()\">Cancel</button>\n              </div>\n              <div class=\"form-group\" show.bind=\"requests.selectedRequest.courseId != config.SANDBOX_ID\">\n                <div class=\"row\">\n                  <div class=\"col-lg-6\">\n                      <h5>Undergraduates: ${requests.selectedRequest.undergradIds}</h5>\n                  </div>\n                  <div class=\"col-lg-6\">\n                      <h5>Graduates: ${requests.selectedRequest.graduateIds}</h5>\n                  </div>\n                </div>\n                 \n                  <div class=\"row\">\n                    <div class=\"col-lg-4\">\n                        <div class=\"form-group\">\n                            <label for=\"editAddUnder\" class=\"control-label\">Add Undergraduates</label>\n                            <input value.bind=\"requests.selectedRequest.addUndergraduates\" id=\"editAddUnder\" class=\"form-control input-sm\" placeholder=\"Addiiontal undergraduates\" type=\"number\" />\n                        </div>\n                    </div>\n                              \n                    <div class=\"col-lg-4 col-lg-offset-2\">\n                        <div class=\"form-group\">\n                            <label for=\"editAddGrad\" class=\"control-label\">Add Graduate</label>\n                             <input value.bind=\"requests.selectedRequest.addGraduates\" type=\"number\" id=\"editAddGrad\" class=\"form-control input-sm\" placeholder=\"Addiiontal Graduates\"/>\n                        </div>\n                    </div>\n                  </div>\n                \n                \n                 <label show.bind=\"request.addUndergraduates > 0\">Additional Undergraduates: ${requests.selectedRequest.addUndergraduates}</label>\n                 <label show.bind=\"request.addGraduates > 0\">Additional Graduates: ${requests.selectedRequest.addGraduates}</label>\n              </div>\n              <div class=\"leftJustify\">\n                <div class=\"row\">\n                  <div class=\"col-lg-6\">\n                    <div class=\"form-group topMargin\">\n                      <div class=\"input-group\">\n                        <div>\n                          <label for=\"beginDate\" class=\"leftJustify\">Date the course begins</label>\n                          <input change.trigger=\"changeBeginDate()\" type=\"date\" value.bind=\"requests.selectedRequest.startDate\"\n                                class=\"form-control\" id=\"beginDate\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-6\">\n                    <div class=\"form-group topMargin\">\n                      <div class=\"input-group\">\n                        <div>\n                          <label for=\"endDate\" class=\"leftJustify\">Date the course ends</label>\n                          <input change.trigger=\"changeEndDate()\" type=\"date\" value.bind=\"requests.selectedRequest.endDate\"\n                                class=\"form-control\" id=\"endDate\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n               <textarea  placeholder=\"Additional Comments\" class=\"topMargin col-lg-12\" id=\"comments\"\n                value.bind=\"requests.selectedRequest.comments\" class=\"form-control\" rows=\"10\"></textarea>\n              \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n</template>\n    "; });
define('text!modules/tech/requests/components/requestsTable.html', ['module'], function(module) { module.exports = "<template>\n   <div class=\"hover\" innerhtml.bind=\"commentShown\"></div>\n    <div class=\"hoverProfile\" >\n      <span  click.delegate=\"hideProfile()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close\"><i class=\"fa fa-window-close-o\" aria-hidden=\"true\"></i></span>\n      <span  click.delegate=\"customerActionDialog()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send Email\"><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i></span>\n      <hr/>\n      <div class=\"col-md-4\">\n         <div  class=\"topMargin\">\n              <img if.bind=\"profileRequest.requestId.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${profileRequest.requestId.personId.file.fileName}\" height=\"100\">\n          </div>\n          <div if.bind=\"!profileRequest.requestId.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"profileRequest.requestId.personId.email | gravatarUrl:100:6\"></div>\n      </div>\n      <div class=\"col-md-8\">\n        <h5>Nickname: ${profileRequest.requestId.personId.nickName}</h5>\n        <h5>Phone: ${profileRequest.requestId.personId.phone | formatPhone}</h5>\n        <h5>Mobile: ${profileRequest.requestId.personId.mobile | formatPhone}</h5>\n        <h5>Email: ${profileRequest.requestId.personId.email}</h5>\n      </div>\n  </div>\n  <div class=\"col-lg-12 letMargin rightMargin\">\n      <table id=\"requestsTable\" class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <td colspan='7'>\n                <div class=\"checkbox\">\n                    <label>\n                        <input checked.bind=\"isCheckedAssigned\" change.trigger=\"filterInAssigned()\" type=\"checkbox\"> Filter out Assigned Requests\n                    </label>\n                </div>\n            </td>\n          </tr>\n          <tr>\n            <td colspan='9'>\n              <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n            </td>\n          </tr>\n          <tr>\n            <td colspan='9'>\n              <span click.delegate=\"refresh()\"class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n              <span click.delegate=\"clearFilters()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i></span>\n              <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n            </td>\n            <td></td>\n          </tr>\n          <tr>\n           <!-- <th class=\"col-xs-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requestNo'})\">No </span><span><i class=\"fa fa-sort\"></i></span></th> -->\n            <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'requiredDate'})\">Due </span><span><i class=\"fa fa-sort\"></i></span></th>\n            <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'createdDate'})\">Created </span><span><i class=\"fa fa-sort\"></i></span></th>\n            <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customRequestStatusSorter, propertyName: 'requestStatus'})\">Status </span><i class=\"fa fa-sort\"></i></th>   \n            <th class=\"col-sm-1\">IDS Requestd</th>\n            <th class=\"col-lg-2\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'productId.name'})\">Product </span><span><i class=\"fa fa-sort\"></i></span></th>\n            <th class=\"col-lg-2\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customCourseSorter, propertyName: 'requestId.courseId.name'})\">Course </span><span><i class=\"fa fa-sort\"></i></span></th>\n            <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customPersonSorter, propertyName: 'requestId.personId.lastName'})\">Faculty </span><span><i class=\"fa fa-sort\"></i></span></th>\n            <th class=\"col-lg-1\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customInstitutionsSorter, propertyName: 'requestId.institutionId'})\">Institution </span><i class=\"fa fa-sort\"></i></th>\n            <th style=\"width:20px;\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>\n              <input type=\"date\" value.bind=\"requiredDateFilterValue\" input.delegate=\"dataTable.filterList(requiredDateFilterValue, {type: 'date', filter: 'requiredDate',  collectionProperty: 'requiredDate', compare: 'after'} )\"  class=\"form-control\" />\n            </th>\n            <th>\n              <input type=\"date\" value.bind=\"createdDateFilterValue\" input.delegate=\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\"  class=\"form-control\" />\n            </th>\n            <th>\n              <select value.bind=\"requestStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'requestStatusFilter',  collectionProperty: 'requestStatus', displayProperty: 'requestStatus',  compare:'match'} )\" class=\"form-control\">\n                <option value=\"\"></option>\n                <option repeat.for=\"status of config.REQUEST_STATUS\" value=\"${status.code}\">${status.description}</option>\n              </select>\n            </th>\n            <th></th>\n            <th>\n              <input value.bind=\"productFilterValue\" input.delegate=\"dataTable.filterList(productFilterValue, { type: 'custom',  filter: customProductNameFilter,  compare:'custom'} )\"  class=\"form-control\" />\n            </th>\n            <th>\n              <input value.bind=\"courseFilterValue\" input.delegate=\"dataTable.filterList(courseFilterValue, { type: 'custom',  filter: courseCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n            </th>\n            <th>\n              <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customNameFilter,  compare:'custom'} )\"  class=\"form-control\" />\n            </th>\n            <th>\n              <input value.bind=\"institutionFilterValue\" input.delegate=\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n            </th>\n            <th></th>\n          </tr>\n          <tr  repeat.for=\"request of dataTable.displayArray\" class=\"${request.requestStatus | getArrayValue:config.REQUEST_STATUS:'status':-1}\">\n          <!--  <td click.delegate=\"selectARequest($index, $event, request)\" data-title=\"requestNo\">${request.requestNo}</td> -->\n            <td click.delegate=\"selectARequest($index, $event, request)\" data-title=\"requiredDate\">${request.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n            <td click.delegate=\"selectARequest($index, $event, request)\" data-title=\"dateCreated\">${request.createdDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n            <td click.delegate=\"selectARequest($index, $event, request)\" mouseover.delegate=\"showComment(request, $event)\" mouseout.delegate=\"hideComment()\"   data-title=\"status\">${request.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}</td>\n            <td click.delegate=\"selectARequest($index, $event, request)\" data-title=\"ids-requested\">${request.requestId | idsRequested}\n            <td click.delegate=\"selectARequest($index, $event, request)\" data-title=\"product\">${request.productId.name}</td>\n            <td data-title=\"Course\">${request.requestId.courseId.name}</td>\n            <td class=\"dropbtn\" click.delegate=\"showProfile(request, $event)\" data-title=\"Name\">${request.requestId.personId.fullName} <i class=\"fa fa-info\" aria-hidden=\"true\"></i></td>\n            <td data-title=\"Name\">${request.requestId.institutionId.name}</td>\n            <td><span class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Edit\"><i class=\"fa fa-pencil fa-lg fa-border\" click.delegate=\"editRequest($index, request)\" aria-hidden=\"true\"></i></span></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>"; });
define('text!modules/tech/requests/components/viewRequestsForm.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n    <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"customerActionDialog()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Customer Action\"><i class=\"fa fa-paper-plane fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"openFacultyDetails()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Details\"><i class=\"fa fa-user fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"openSettings()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Settings\"><i class=\"fa fa-cog fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"openAudit()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Audit\"><i class=\"fa fa-history fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    <span click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n  </div>\n  <div class=\"row leftMargin rightMargin\">\n    <div show.bind=\"!facultyDetails\" class=\"well col-lg-12\">\n       <div class=\"col-lg-4\">\n          <div class=\"col-lg-12\">\n            <h5>Request No: ${selectedRequestDetail.requestNo}</h5>\n          </div>\n          <div class=\"col-lg-12\">\n            <h5>Required Date: ${selectedRequestDetail.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</h5>\n          </div>\n          <div class=\"col-lg-12\">\n              <h5>Product: ${selectedRequestDetail.productId.name}</h5>\n          </div>\n          <div class=\"col-lg-12\">\n            <h5>Course: ${selectedRequestDetail.requestId.courseId.name}</h5>\n          </div>\n        </div>\n         <div class=\"col-lg-4\">\n            <div class=\"col-lg-12\">\n              <h5>Faculty: ${selectedRequestDetail.requestId.personId.fullName}</h5>\n            </div>\n            <div class=\"col-lg-12\">\n              <h5>Email: ${selectedRequestDetail.requestId.personId.email}</h5>\n            </div>\n            <div class=\"col-lg-12\">\n              <h5>Institution: ${selectedRequestDetail.requestId.personId.institutionId | lookupValue:people.institutionsArray:'_id':'name'}</h5>\n            </div>\n            <div class=\"col-lg-12\">\n              <h5>Phone: ${selectedRequestDetail.requestId.personId.phone | phoneNumber} Mobile: ${selectedRequestDetail.requestId.personId.mobile | phoneNumber}</h5>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n          <div class=\"col-lg-12\">\n              <h5><strong>IDs Required: ${idsRequired}</strong></h5>\n          </div>\n            <div class=\"col-lg-12\">\n              <h5><strong>IDs Assigned: ${totalIdsAssigned}</strong></h5>\n          </div>\n            <div class=\"col-lg-12\">\n              <h5><strong>IDs Remaining: ${idsRemaining}</strong></h5>\n          </div>\n        </div>\n    </div>\n    \n  </div>\n  <div show.bind=\"showAudit\">\n    <table class=\"table table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Property</th>\n          <th>Old Value</th>\n          <th>New Value</th>\n          <th>Person</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr  repeat.for=\"item of selectedRequestDetail.requestId.audit\">\n          <td>${item.eventDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n          <td>${item.property}</td>\n          <td>${item.oldValue}</td>\n          <td>${item.newValue}</td>\n          <td>${item.personId | lookupValue:people.uccPeople:\"_id\":\"fullName\"}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n    \n  <div show.bind=\"!showAudit\" class=\"row\">\n    <div show.bind=\"showSettings\">\n      <div class=\"panel panel-default leftMargin rightMargin editPanel\">\n        <div class=\"panel-body\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"saveSettings()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"restoreDefaults()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Restore Defaults\"><i class=\"fa fa-refresh fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div class=\"row\">\n            <div class=\"form-group col-lg-3\">\n              <label>Regular ID Buffer</label>\n              <input  value.bind=\"idBuffer\"  id=\"bufferIds\"  class=\"form-control\" type=\"number\" />\n              <label>Added to the number of ids requested.  Default is ${config.REGULAR_ID_BUFFER}</label>\n            </div>\n            <div class=\"form-group col-lg-3\">\n              <label>Number of Sandbox IDs</label>\n              <input  value.bind=\"sandBoxIDs\"  id=\"sandBoxIDs\"  class=\"form-control\" type=\"number\" />\n              <label>Number of sandbox IDs assigned.  Default is ${config.SANDBOX_ID_COUNT}</label>\n            </div>\n             <div class=\"form-group col-lg-3\">\n              <label>Sandbox ID  Bufffer</label>\n              <input  value.bind=\"sandBoxIDs\"  id=\"sandBoxIDs\"  class=\"form-control\" type=\"number\" />\n              <label>Number of IDs between assignments assigned.  Default is ${config.SANDBOX_ID_BUFFER}</label>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row leftMargin rightMargin\">\n      <table id=\"assignmentTable\" class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th class=\"col-sm-1\">System</th>\n            <th class=\"col-sm-1\">Client</th>\n            <th class=\"col-sm-1\">Assigned IDs</th>\n            <th>Student IDs</th>\n            <th>Student Password</th>\n            <th>Faculty IDs</th>\n            <th>Faculty Password</th>\n            <th>Assigned Date</th>\n            <th>Status</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"dropbtn\" click.trigger=\"selectProposedClient($index, $event)\" repeat.for=\"client of assignmentDetails\" class=\"${client.notValid}\">\n            <td>${client.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</td>\n            <td>${client.client}</td>\n            <td>${client.idsAssigned}</td>\n            <td>${client.studentUserIds}</td>\n            <td>${client.studentPassword}</td>\n            <td>${client.facultyUserIds}</td>\n            <td>${client.facultyPassword}</td>\n            <td>${client.assignedDate | dateFormat:config.DATE_FORMAT_TABLE}</td>\n            <td>${client.notValid | overlap}\n            <td><span click.delegate=\"deleteProposedClient($index)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></span></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <span id=\"errorRange\"></span>\n  <div show.bind=\"!showAudit\" class=\"row leftMargin\">\n    <div class=\"panel panel-default col-lg-5 leftMargin\">\n      <div class=\"panel-body\">\n\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n                <div class=\"form-group\">\n                    <div class=\"checkbox\">\n                        <label class=\"pull-left\">\n                            <input checked.bind=\"provisionalAssignment\" id=\"provisionalCheckBox\" type=\"checkbox\" data-toggle=\"checkbox\"> Provisional\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-12\">\n              <label for=\"studentIdTemplate\" class=\"col-sm-6 form-control-label topMargin\">\n                Student ID Template\n                <span class=\"smallLeftMargin\" click.delegate=\"openEditStudentTemplate()\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Edit Template\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\n              </label>\n              <select id=\"studentIdTemplate\" multiple value.bind=\"selectedStudentIDTemplate\" class=\"form-control input-md topMargin\">\n                  <option repeat.for=\"template of studentIDTemplates\" value.bind=\"$index\">${template}</option>\n              </select>\n            </div>\n        </div>\n\n            <div class=\"row\" show.bind=\"showAddStudentTemplate\">\n                <div class=\"panel panel-default col-md-12 editPanel\">\n                    <div class=\"panel-body\">\n                      <div class=\"bottomMargin\">\n                        <span click.delegate=\"saveStudentTemplate()\" class=\"smallLeftMargin\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Template\"><i class=\"fa fa-floppy-o fa-lg\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"cancelEditStudentTemplate()\" class=\"smallLeftMargin\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg\" aria-hidden=\"true\"></i></span>\n                      </div>\n                        <div class=\"form-group\">\n                            <input id=\"number\" value.bind=\"products.selectedProduct.defaultStudentIdPrefix\" type=\"text\" placeholder=\"Template\" class=\"form-control\"/>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n                <div class=\"form-group\">\n                    <div class=\"checkbox\">\n                        <label class=\"pull-left\">\n                            <input checked.bind=\"manualMode\" id=\"manualCheckBox\" type=\"checkbox\" change.trigger=\"changeManualMode()\" data-toggle=\"checkbox\"> Manual\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n          </div>\n\n        <div class=\"row\">\n          <div class=\"form-group col-lg-6\">\n            <label>Student IDs</label>\n            <input value.bind=\"assignmentDetails[assignmentDetailIndex].studentUserIds\" id=\"proposedIDRange\"  placeholder=\"Proposed IDs\" class=\"form-control\" type=\"text\" />\n          </div>\n          <div show.bind=\"studentIDTemplateAvailable\" class=\"form-group col-lg-2\">\n            <label>First ID</label>\n            <input disabled.bind=\"manualMode\" value.bind=\"firstID\" change.trigger =\"firstIDChanged()\" style=\"width:75px;margin-right:10px;\" id=\"firstID\"  class=\"form-control input-sm\"\n            type=\"number\" />\n          </div>\n          <div show.bind=\"studentIDTemplateAvailable\" class=\"form-group col-lg-2\">\n            <label>Last ID</label>\n            <input  disabled.bind=\"manualMode\" value.bind=\"lastID\" change.trigger =\"lastIDChanged()\" style=\"width:75px;margin-right:10px;\" id=\"lastID\"  class=\"form-control input-sm\"\n            type=\"number\" />\n          </div>\n        </div>\n        <div class=\"row\">\n         <fieldset class=\"form-group\">\n            <div class=\"col-lg-6\">\n              <input value.bind=\"assignmentDetails[assignmentDetailIndex].studentPassword\" id=\"proposedStudentPassword\"  placeholder=\"Proposed Password\" class=\"form-control\" type=\"text\"/>\n            </div>\n        </fieldset>\n        </div>\n        <div class=\"row\">\n          <div class=\"form-group col-lg-6\">\n            <label>Faculty IDs</label>\n              <input value.bind=\"assignmentDetails[assignmentDetailIndex].facultyUserIds\" id=\"proposedFacultyIDRange\"  placeholder=\"Proposed Faculty IDs\" class=\"form-control\" type=\"text\" />\n          </div>\n          <div show.bind=\"facultyIDTemplateAvailable\" class=\"form-group col-lg-2\">\n            <label>First ID</label>\n            <input disabled.bind=\"manualMode\" value.bind=\"firstNumericFacID\" change.trigger =\"firstFacIDChanged()\" style=\"width:75px;margin-right:10px;\" id=\"firstFacID\"  class=\"form-control input-sm\"\n            type=\"number\" />\n          </div>\n          <div show.bind=\"facultyIDTemplateAvailable\" class=\"form-group col-lg-2\">\n            <label>Last ID</label>\n            <input  disabled.bind=\"manualMode\" value.bind=\"lastNumericFacID\" change.trigger =\"lastFacIDChanged()\" style=\"width:75px;margin-right:10px;\" id=\"lastFacID\"  class=\"form-control input-sm\"\n            type=\"number\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <fieldset class=\"form-group\">\n              <div class=\"col-lg-6\">\n                <input value.bind=\"assignmentDetails[assignmentDetailIndex].facultyPassword\" id=\"proposedFacultyPassword\"  placeholder=\"Proposed Faculty Password\" class=\"form-control\" type=\"text\"/>\n              </div>\n          </fieldset>\n        </div>\n         <div class=\"row\"\n        <fieldset class=\"form-group\">\n            <div class=\"col-lg-12\">\n             <editor value.bind=\"selectedRequestDetail.techComments\" height=\"250\"></editor>\n            </div>\n        </fieldset>\n        </div>\n\n        <h3>Request Details</h3>\n          <h5 class=\"topMargin\">Product: ${selectedRequestDetail.productId.name}</h5>\n          <h5 class=\"topMargin\">Required Date: ${selectedRequestDetail.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</h5>\n          <h5 show.bind=\"selectedRequestDetail.requestId.courseId != config.SANDBOX_ID\" class=\"topMargin\">Undergraduates: ${selectedRequestDetail.requestId.undergradIds}</h5>\n          <h5 show.bind=\"selectedRequestDetail.requestId.courseId != config.SANDBOX_ID\" class=\"topMargin\">Graduates: ${selectedRequestDetail.requestId.graduateIds}</h5>\n          <h5 show.bind=\"selectedRequestDetail.requestId.courseId != config.SANDBOX_ID\" class=\"topMargin\">Add Undergraduates: ${selectedRequestDetail.requestId.addUndergraduates}</h5>\n          <h5 show.bind=\"selectedRequestDetail.requestId.courseId != config.SANDBOX_ID\" class=\"topMargin\">Add Graduates: ${selectedRequestDetail.requestId.addGraduates}</h5>\n          <h5 class=\"topMargin\">Begin Date: ${selectedRequestDetail.requestId.startDate | dateFormat:config.DATE_FORMAT_TABLE}</h5>\n          <h5 class=\"topMargin\">End Date: ${selectedRequestDetail.requestId.endDate | dateFormat:config.DATE_FORMAT_TABLE}</h5>\n          <div if.bind=\"selectedRequestDetail.requestId.comments.length > 0\" class=\"row topMargin\">\n            <div class=\"col-sm-12\">\n              <div class=\"form-group\">\n                <h5 >Comments:</h5>\n                <div class=\"topMargin\"  innerhtml.bind=\"selectedRequestDetail.requestId.comments\" ></div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n\n \n    <div  class=\"panel panel-default col-lg-6 rightMargin leftMargin\">\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 pull-right\">\n                <div class=\"col-lg-7\" show.bind=\"!sandBoxOnly\">\n                  <div class=\"checkbox\">\n                      <label>\n                          <input checked.bind=\"unassignedOnly\" id=\"unassignedCheckBox\" type=\"checkbox\" change.trigger=\"changeUnassignedOnly()\" data-toggle=\"checkbox\"> Unassigned only\n                      </label>\n                  </div>\n                </div>\n                <div class=\"col-lg-5 pull-right\">\n                  <div class=\"checkbox\">\n                      <label>\n                          <input checked.bind=\"sandBoxOnly\" id=\"sandBoxOnlyCheckBox\" type=\"checkbox\"  data-toggle=\"checkbox\"> Sandbox only\n                      </label>\n                  </div>\n                </div>\n            </div>\n        </div>\n \n        <div class=\"form-group\">\n            <label class=\"control-label col-sm-3 hideOnPhone\">Systems</label>\n            <select change.delegate=\"systemSelected()\" class=\"form-control\" value.bind=\"selectedSystemId\">\n                <option model.bind=\"null\">-- Select a System --</option>\n                <option  repeat.for='sys of products.selectedProduct.systems' model.bind=\"sys.systemId\">${sys.sid}</option>\n            </select>\n        </div>\n\n        <div  class=\"topMargin\">\n          <table id=\"clientTable\" class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th class=\"col-sm-1\">Client</th>\n                <th class=\"col-sm-1\">Status</th>\n                <th class=\"col-sm-1\">IDs Available</th>\n                <th>Product</th>\n                <th class=\"col-sm-6\">Assignments</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"dropbtn\" click.trigger=\"selectClient($index, client, $event)\" repeat.for=\"client of systems.selectedSystem.clients | \n                  filterClients:unassignedOnly:config.UNASSIGNED_CLIENT_CODE:sandBoxOnly:config.SANDBOX_CLIENT_CODE:products.selectedProduct._id\">\n                <td>${client.client}</td>\n                <td>${client.clientStatus | lookupValue:config.CLIENT_STATUSES:\"code\":\"description\"}</td>\n                <td>${client.idsAvailable}</td>\n                <td>${products.selectedProduct.name}</td>\n                <td>\n                  <table class=\"col-sm-12\">\n                    <tr repeat.for=\"assignment of client.assignments\">\n                      <td><div class=\"col-lg-12 list-group-item\"><h5 class=\"list-group-item-heading\">Request ${assignment.assignment | lookupValue:requests.requestsDetailsArray:\"_id\":\"requestNo\"}</h5><p class=\"list-group-item-text\"><strong>${assignment.studentIDRange}</strong> <br>${assignment.facultyIDRange} <br> ${assignment.institutionId | lookupValue:people.institutionsArray:\"_id\":\"name\"}</p></div></td>\n                    </tr>\n                  </table>\n                </td>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n</template>\n"; });
define('text!modules/tech/requests/components/viewRequestsTable.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"row\">\n      <!-- Session Select -->\n      <div class=\"col-lg-4\">\n        <div class=\"form-group topMargin leftMargin\">\n            <select value.bind=\"selectedSession\" change.delegate=\"getRequests()\" id=\"session\" class=\"form-control\">\n              <option repeat.for=\"session of sessions.sessionsArray\"\n                      value.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\n            </select>\n        </div>\n      </div>\n    </div>\n\n      <div show.bind=\"selectedSession\">\n        <div class=\"row\">\n          <div class=\"col-lg-12\">\n            <!-- Request Table -->\n            <compose view=\"./requestsTable.html\"></compose>\n          </div>\n      </div>\n  </div>\n\n  <compose view=\"./requestDetailDetails.html\"></compose>\n\n</template>\n"; });
define('text!modules/tech/support/components/helpTicketDetails.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n        <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Response\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    </div> \n    \n     <div class=\"col-lg-12 topMargin\">\n          <div id=\"container\" ></div>\n            \n        <!-- Additional Information Panel -->\n        <div class=\"col-lg-12 topMargin\" id=\"descriptionGroup\">\n            <div class=\"form-group\">\n            <label for=\"descriptionID\">Enter a description of the issue. Be as specific as possible and include steps that led up to the issue.</label>\n            <editor value.bind=\"helpTickets.selectedHelpTicketContent.content.comments\" height=\"250\"></editor>\n        </div>\n\n            <div class=\"panel panel-default\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <span class=\"btn btn-primary btn-fill btn-wd btn-file\">\n                        Browse...<input change.delegate=\"changeFiles()\" id=\"uploadFiles\" files.bind=\"files\" type=\"file\" multiple=true>\n                        </span>\n                    </span>\n                    <input type=\"text\" value.bind=\"filesSelected\" class=\"form-control\" readonly/>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/tech/support/components/helpTicketType.html', ['module'], function(module) { module.exports = "<template>\n \n    <div class=\"form-group topMargin\" >\n      <select value.bind=\"selectedInstitution\" change.delegate=\"changeInstitution()\" id=\"institution\" class=\"form-control\">\n        <option value=\"\">Select an institution</option>\n        <option repeat.for=\"institution of people.institutionsArray\"\n                value.bind=\"institution._id\">${institution.name}</option>\n      </select>\n    </div>\n\n    <div class=\"form-group\" show.bind=\"selectedInstitution != ''\">\n      <select value.bind=\"selectedPerson\" id=\"person\" change.delegate=\"changePerson()\" class=\"form-control\">\n        <option value=\"\">Select a person</option>\n        <option repeat.for=\"person of people.peopleArray\"\n                value.bind=\"person._id\">${person._id | lookupValue:people.peopleArray:\"_id\":\"fullName\"}</option>\n      </select>\n    </div>\n\n    <div show.bind=\"selectedPerson !== ''\">\n        <div class=\"form-group\">\n          <select show.bind=\"showCategories\" value.bind=\"helpTickets.selectedHelpTicket.helpTicketCategory\" change.delegate=\"categoryChanged()\" id=\"helpTicketCategory\" class=\"form-control\">\n            <option value=\"-1\">Select the category of help ticket</option>\n            <option repeat.for=\"types of helpTickets.helpTicketTypesArray\" \n                    model.bind=\"types.category\">${types.description}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <select show.bind=\"showTypes\" value.bind=\"helpTicketType\" change.delegate=\"typeChanged($event)\" id=\"helpTicketPurpose\"\n            class=\"form-control\">\n            <option value=\"NULL\">Select the type of help ticket</option>\n            <option repeat.for=\"types of helpTickets.helpTicketTypesArray[helpTickets.selectedHelpTicket.helpTicketCategory].subtypes\"\n                    model.bind=\"types.type\">${types.description}</option>\n          </select>\n        </div>\n    </div>\n</template>"; });
define('text!modules/tech/support/components/Requests.html', ['module'], function(module) { module.exports = "<template>\n      <div>\n        <h5 show.bind=\"clientRequestsArray.length === 0\">You have no product requests that apply to this type of help ticket.</h5>\n        <table id=\"clientTable\" show.bind=\"clientRequestsArray.length > 0\" class=\"table table-bordered table-responsive\" style=\"background:white;\">\n          <thead>\n          <tr class=\"header\">\n            <th>Course</th>\n            <th>Session</th>\n            <th>Product</th>\n            <th>System</th>\n            <th>Client</th>\n            <th>Status</th>\n          </tr>\n          </thead>\n          <tbody>\n            <tr id=\"${product.id}\" productId=\"${product.productId}\" \n                repeat.for=\"product of clientRequestsArray\"\n                click.trigger=\"requestChosen($event, $index)\">\n              <td>${product.courseId | courseName:people.coursesArray}</td>\n              <td>${product.sessionId | sessionName:sessions.sessionsArray}</td>\n              <td>${product.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</td>\n              <td>${product.systemId | lookupSid:systems.systemsArray}</td>\n              <td>${product.client}</td>\n              <td>${product.requestStatus | lookupDescription:config.REQUEST_STATUS}</td>\n            </tr>\n          </tbody>\n        </table>\n        <span id=\"client\"></span>\n      </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/tech/support/components/viewHTForm.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-12\">\n      <div class=\"row\">\n        <span class=\"leftMargin largeFont\">${viewHelpTicketsHeading}</span>\n      </div>\n\n    <!-- Buttons -->\n    <div class=\"row\">\n      <div class=\"bottomMargin list-group-item leftMargin rightMargin\" id=\"toolbar\">\n          <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span click.delegate=\"respond()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Respond\"><i class=\"fa fa-paper-plane fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span click.delegate=\"ownHelpTicket()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Take Ownership\"><i class=\"fa fa-child fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span click.delegate=\"flag()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Flag\"><i class=\"fa fa-flag fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span show.bind=\"showLockMessage\" click.delegate=\"_unlock()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Unlock\"><i class=\"fa fa-unlock-alt fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          <span class=\"pull-right\">${lockMessage}</span>\n      </div> \n    </div>\n    \n    <!-- Help Ticket Header -->\n    <div class=\"topMargin\">\n        <!-- Enter Response -->\n        <div show.bind=\"enterResponse\" class=\"topMargin bottomMargin \">\n\n          <div class=\"panel panel-default leftMargin rightMargin\" style=\"background-color:ghostwhite;\">\n            <div class=\"panel-body\">\n              <div class=\"list-group-item col-md-12 topMargin\">\n                <span  click.delegate=\"saveResponse(config.REVIEW_HELPTICKET_STATUS)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Response\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\" ></i></span>\n                <span  click.delegate=\"saveResponse(config.CUSTOMER_ACTION_HELPTICKET_STATUS)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save and Customer Action\"><i class=\"fa fa-users fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                <span  click.delegate=\"saveResponse(config.CLOSED_HELPTICKET_STATUS)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save and Close\"><i class=\"fa fa-window-close-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                <span  click.delegate=\"cancelResponse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n              </div>\n              <div class=\"row\">\n                  <div class=\"col-lg-1 topMargin\">\n                      <div class=\"checkbox \">\n                        <label>\n                          <input change.delegate=\"confidentialChecked()\" checked.bind=\"helpTickets.selectedHelpTicketContent.confidential\" id=\"confidentialCheckBox\" type=\"checkbox\"> Tech Staff\n                        </label>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-2 topMargin\">\n                      <div class=\"checkbox\">\n                        <label>\n                          <input disabled.bind=\"sendMailDisable\" checked.bind=\"sendEmail\" type=\"checkbox\"> Send Email\n                        </label>\n                      </div>\n                    </div>\n                </div>\n               \n                <div class=\"leftMargin rightMargin\">\n                      <editor value.bind=\"responseMessage\" height=\"250\"></editor>\n                      <p>&nbsp;</p>\n\n                      <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                          <div class=\"col-lg-3\">\n                              <label class=\"btn btn-primary\">\n                                  Browse for files <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\"files.bind=\"files\" multiple>\n                              </label>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                          <button click.delegate=\"insertDocument()\" class=\"btn btn-primary\">Insert Document</button>\n                        </div>\n                        <div class=\"col-lg-6 topMargin\">\n                          <div class=\"col-lg-10\">\n                              <ul>\n                                  <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                              </ul>\n                          </div>\n                        </div>\n                        <div class='col-lg-6 topMargin'>\n                          <div class=\"col-lg-10\">\n                            <ul>\n                                <li repeat.for = \"file of helpTickets.selectedHelpTicketContent.documents\" class=\"list-group-item\">${file.fileName}<span click.delegate=\"removeDocument($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                            </ul>\n                          </div>\n                      </div>\n                </div>\n            </div>\n          </div>\n          </div>\n        </div>\n\n        <!-- widget content -->\n        <div class=\"row\">\n          <div class=\"panel panel-default  leftMargin rightMargin\">        \n            <div class=\"panel-body\">\n              <div class=\"row\">\n                 <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Customer: ${helpTickets.selectedHelpTicket.personId.fullName}</h5>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Institution: ${helpTickets.selectedHelpTicket.institutionId.name}</h5>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Last modified: ${helpTickets.selectedHelpTicket.modifiedDate | dateFormat:config.DATE_FORMAT_TABLE:true}</h5>\n                  </div>\n                </div>\n                 <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Created: ${helpTickets.selectedHelpTicket.createdDate | dateFormat:'YYYY-MM-DD'} ${helpTickets.selectedHelpTicket.createdDate | dateFormat:'h:mm A'}</h5>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                 <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Session: ${helpTickets.selectedHelpTicket.sessionId | session:sessions.sessionsArray}</h5>\n                  </div>\n                </div>\n                 <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Keywords: ${helpTickets.selectedHelpTicket.keyWords}</h5>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <div class=\"form-group\">\n                    <h5 class=\"col-md-offset-1\">Owner: ${helpTickets.selectedHelpTicket.owner[0].personId.fullName}</h5>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                  <div class=\"form-group col-lg-3\">\n                    <div class=\"input-group col-lg-11\">\n                      <label class=\" col-md-offset-1\">Type:</label>\n                      <select value.bind=\"helpTickets.selectedHelpTicket.helpTicketType\" change.delegate=\"dataTable.filterList($event)\" class=\"form-control col-md-offset-1\" id=\"helpTicketType\">\n                          <option repeat.for=\"type of helpTickets.helpTicketTypesArray | helpTicketSubtypes\" model.bind=\"type.type\">${type.description}</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"form-group col-lg-3\">\n                    <div class=\"input-group col-lg-11\">\n                      <label class=\"col-md-offset-1\">Status</label>\n                      <select id=\"helpTicketStatus\" value.bind=\"helpTickets.selectedHelpTicket.helpTicketStatus\" class=\"form-control col-md-offset-1\">\n                        <option repeat.for=\"status of config.HELP_TICKET_STATUSES\" model.bind=\"status.code\">${status.description}</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"form-group col-lg-3\">\n                    <div class=\"input-group col-lg-11\">\n                      <label class=\"col-md-offset-1\">Priority</label>\n                      <select id=\"priority\" value.bind=\"helpTickets.selectedHelpTicket.priority\" class=\"form-control col-md-offset-1\">\n                        <option repeat.for=\"priority of config.HELP_TICKET_PRIORITIES\" model.bind=\"$index\">${priority.priority}</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"form-group col-lg-3\">\n                    <div class=\"input-group col-lg-11\">\n                      <label class=\"col-md-offset-1\">Keywords</label>\n                      <input type=\"text\" value.bind=\"helpTickets.selectedHelpTicket.keyWords\" class=\"form-control col-md-offset-1\">\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n\n        <compose view=\"../../../../resources/htTimeline/timeline.html\"></compose>\n  \n    </div>\n</template>"; });
define('text!modules/tech/support/components/viewHTTable.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"col-lg-12\">\n    <div class=\"hover\" innerhtml.bind=\"commentShown\"></div>\n    <div class=\"hoverProfile\" >\n        <span  click.delegate=\"hideProfile()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close\"><i class=\"fa fa-window-close-o\" aria-hidden=\"true\"></i></span>\n        <span  click.delegate=\"sendAnEmail(profileHelpTicket.personId)\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Send Email\"><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i></span>\n        <hr/>\n        <div class=\"col-md-4\">\n          <div  class=\"topMargin\">\n              <img if.bind=\"profileHelpTicket.personId.file.fileName\" class=\"circular--square leftMargin\" src =\"${config.PERSON_IMAGE_DOWNLOAD_URL}/${profileHelpTicket.personId.file.fileName}\" height=\"100\">\n          </div>\n          <div if.bind=\"!profileHelpTicket.personId.file.fileName\" style=\"height:100px;width:100px;\" innerhtml.bind=\"profileHelpTicket.personId.email | gravatarUrl:100:6\"></div>\n        </div>\n        <div class=\"col-md-8\">\n          <h5>Nickname: ${profileHelpTicket.personId.nickName}</h5>\n          <h5>Phone: ${profileHelpTicket.personId.phone  | formatPhone}</h5>\n          <h5>Mobile: ${profileHelpTicket.personId.mobile | formatPhone}</h5>\n        </div>\n    </div>\n\n    <div class='row'>\n      <div class='bottomMargin'>\n        <table id=\"helpTicketTable\" class=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n                <td colspan='colSpan'>\n                  <div class=\"checkbox\">\n                    <label>\n                      <input disabled.bind=\"sendMailDisable\" checked.bind=\"sendEmail\" type=\"checkbox\"> Send Email\n                    </label>\n                  </div>\n                </td>\n            </tr>\n            <tr>\n              <td colspan.bind='colSpan'><compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose></td>\n            </tr>\n            <tr>\n              <td colspan='colSpan'>\n                <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                <span click.delegate=\"_cleanUpFilters()\" class=\"mousePointer\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Clear Filters\"><i class=\"fa fa-filter fa-ban\" aria-hidden=\"true\"></i></span>\n                <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n              </td>\n            </tr>\n            <tr>\n              <th><span class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketNo'})\">No </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:20em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketType'})\">Type </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:15em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {type: 'custom', sorter: customOwnerSorter, propertyName: 'ownder'})\">Owner </span><i class=\"fa fa-sort\"></i></th>                   \n              <th style=\"width:10em;\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketStatus'})\">Status </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:8em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'createdDate'})\">Date Created </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:8em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'modifiedDate'})\">Modified Created </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:15em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'personId.lastName'})\">Faculty </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th style=\"width:20em\"><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'institutionId.name'})\">Institution </span><span><i class=\"fa fa-sort\"></i></span></th>\n              <th>Email</th>\n            </tr>\n            <tr>\n              <th></th>\n              <th>\n                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n              </th>\n              <th>\n                <input value.bind=\"ownerFilterValue\" input.delegate=\"dataTable.filterList(ownerFilterValue, { type: 'custom',  filter: customOwnerFilter, collectionProperty: 'owner', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n              </th>\n              <th>\n                <select value.bind=\"helpTicketStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'helpTicketStatusFilter',  collectionProperty: 'helpTicketStatus', displayProperty: 'helpTicketStatus',  compare:'match'} )\" class=\"form-control\">\n                  <option value=\"\"></option>\n                  <option repeat.for=\"status of helpTicketTypes\"\n                          value.bind=\"status.code\">${status.description}</option>\n                </select>\n              </th>\n              <th>\n                <input type=\"date\" value.bind=\"createdDateFilterValue\" input.delegate=\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\"  class=\"form-control\" />\n              </th>\n               <th>\n                <input type=\"date\" value.bind=\"modifiedDateFilterValue\" input.delegate=\"dataTable.filterList(modifiedDateFilterValue, {type: 'date', filter: 'modifiedDate',  collectionProperty: 'modifiedDate', compare: 'after'} )\"  class=\"form-control\" />\n              </th>\n              <th>\n                <input value.bind=\"personFilterValue\" input.delegate=\"dataTable.filterList(personFilterValue, { type: 'custom',  filter: customNameFilter,  compare:'custom'} )\"  class=\"form-control\" />\n              </th>\n              <th>\n                <input value.bind=\"institutionFilterValue\" input.delegate=\"dataTable.filterList(institutionFilterValue, { type: 'custom',  filter: institutionCustomFilter, compare:'custom'} )\"  class=\"form-control\" />\n              </th>\n              <th></th>\n            </tr>\n            \n          </thead>\n          <tbody>\n            <tr repeat.for=\"helpTicket of dataTable.displayArray\" class=\"${helpTicket.priority | getArrayValue:config.HELP_TICKET_PRIORITIES:'status'}\">\n              <td  data-title=\"referenceNo\">${helpTicket.helpTicketNo}</td>\n              <td  mouseover.delegate=\"showComment(helpTicket, $event)\" mouseout.delegate=\"hideComment()\" click.delegate=\"selectHelpTicket($event, $index)\"\n                data-title=\"type\">${helpTicket.helpTicketType | helpTicketType:helpTickets.helpTicketTypesArray}\n              </td>\n              <td data-title=\"Owner\">\n                <span show.bind=\"helpTicket.owner[0].personId === null\" click.trigger=\"ownHelpTicket(helpTicket)\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Take Ownership\"><i class=\"fa fa-child fa-lg\" aria-hidden=\"true\"></i></span>\n                <span class=\"dropbtn\" click.trigger=\"ownHelpTicket(helpTicket)\" show.bind=\"helpTicket.owner[0].personId !== null\"> ${helpTicket.owner[0].personId.fullName}</span>\n              </td>\n              <td class=\"dropbtn\" data-title=\"Status\">\n                <div class=\"dropdown\">\n                  <span class=\"dropbtn\"> ${helpTicket.helpTicketStatus | lookupValue:config.HELP_TICKET_STATUSES:\"code\":\"description\"}\n                    <div show.bind=\"helpTicket.helpTicketStatus !== config.CLOSED_HELPTICKET_STATUS && helpTicket.helpTicketStatus !== config.NEW_HELPTICKET_STATUS\" class=\"dropdown-content\">\n                      <a href=\"#\" click.trigger=\"changeStatus(helpTicket, status.code, status.description)\" repeat.for=\"status of config.HELP_TICKET_STATUSES | helpTicketStatuses:removeHTStatus\">${status.description}</a>\n                    </div>\n                  </span>\n                </div>\n              </td>\n              <td  data-title=\"Created Date\" click.delegate=\"selectHelpTicket($event, $index)\">${helpTicket.createdDate | dateFormat:config.DATE_FORMAT_TABLE:false}</td>\n              <td  data-title=\"Modified Date\" click.delegate=\"selectHelpTicket($event, $index)\">${helpTicket.modifiedDate | dateFormat:config.DATE_FORMAT_TABLE:false}</td>\n              <td class=\"dropbtn\" style=\"width:10rem;\" data-title=\"Customer\" click.delegate=\"showProfile(helpTicket, $event)\"  >${helpTicket.personId.firstName} ${helpTicket.personId.lastName}</td>\n              <td  data-title=\"Insitution\">${helpTicket.institutionId.name}</td>\n              <td class=\"dropbtn\"  click.delegate=\"sendAnEmail(helpTicket.personId)\" data-title=\"Email\" >${helpTicket.personId.email}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  </div>\n</template>"; });
define('text!modules/user/requests/components/assignmentDetails.html', ['module'], function(module) { module.exports = "<template>\n    <div show.bind=\"requests.selectedRequestDetail.assignments.length > 0\">\n      <div show.bind=\"requests.selectedRequestDetail.requestStatus == config.ASSIGNED_REQUEST_CODE\" class=\"panel panel-primary topMargin\">\n        <div class=\"panel-body\">  \n\n          <table class=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th>System</th>\n                <th>Client</th>\n                <th>Student IDs</th>\n                <th>Student Password</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr repeat.for=\"assign of requests.selectedRequestDetail.assignments\" click.trigger=\"selectAssignment(assign, $index)\">\n                <td>${assign.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</td>\n                <td>${assign.client}</td>\n                <td>${assign.studentUserIds}</td>\n                <td>${assign.studentPassword}</td>\n              </tr>\n            </tbody>\n          </table>\n         \n          <h4 show.bind=\"requests.selectedRequest.courseId != config.SANDBOX_ID\" class=\"topMargin\"><strong>Faculty IDs</strong></h4>\n          <div class=\"form-group\">\n            <h5 show.bind=\"requests.selectedRequest.courseId != config.SANDBOX_ID\" class=\"panel-title\">Faculty IDs: ${requests.selectedRequestDetail.assignments[selectedAssignmentIndex].facultyUserIds}</h3>\n          </div>\n          <div class=\"form-group\">\n            <h5 show.bind=\"requests.selectedRequest.courseId != config.SANDBOX_ID\" class=\"panel-title\">Faculty Password: ${requests.selectedRequestDetail.assignments[selectedAssignmentIndex].facultyPassword}</h5>\n          </div>\n       \n          <h4 class=\"bigTopMargin\"><strong>System Details</strong></h4>\n          <div class=\"form-group\">\n            <h5 class=\"panel-title\">SID: ${systems.selectedSystem.sid}</h3>\n          </div>\n          <div class=\"form-group\">\n            <h5 class=\"panel-title\">Server: ${systems.selectedSystem.server}</h3>\n          </div>\n          <div class=\"form-group\">\n            <h5 class=\"panel-title\">System Number: ${systems.selectedSystem.instance}</h3>\n          </div>\n          <div class=\"form-group\">\n            <h5 class=\"panel-title\">ITS: ${systems.selectedSystem.its}</h3>\n          </div>\n          <label show.bind=\"products.selectedProduct.documents && products.selectedProduct.documents.length > 0\" class=\"topMargin\">Helpful Documents</label>\n          <div class=\"list-group\">\n            <a repeat.for=\"document of products.selectedProduct.documents\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${document.categoryCode}/${document.categoryName}/${document.fileName}\"  target=\"_blank\">${document.fileName}</a>\n          </div>\n          <label show.bind=\"requests.selectedRequestDetail.techComments && requests.selectedRequestDetail.techComments.length > 0\" class=\"topMargin\">Assignment Comments</label>\n          <div show.bind=\"requests.selectedRequestDetail.techComments && requests.selectedRequestDetail.techComments.length > 0\" class=\"col-lg-12 topMargin well\" innerhtml.bind=\"requests.selectedRequestDetail.techComments\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"; });
define('text!modules/user/requests/components/client-request-step1.html', ['module'], function(module) { module.exports = "<template>\n  <!-- Term Select -->\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <div class=\"form-group leftJustify\">\n        <select value.bind=\"sessionId\" class=\"form-control\" change.delegate=\"changeSession($event)\" id=\"session\">\n          <option value=\"-1\">Select a session</option>\n          <option repeat.for=\"session of sessions.sessionsArray | filterSessions:config.ACTIVE_REQUEST_OVERLAP:'Requests'\"\n                  value.bind=\"session._id\">Session ${session.session} - ${session.year}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div show.bind=\"sessionSelected && useSandbox\" class=\"col-sm-12\">\n      <div class=\"form-group\">\n        <select value.bind=\"requestType\" change.delegate=\"changeRequestType($event)\" id=\"requestType\" class=\"form-control\">\n          <option value=\"-1\">Choose the Type of The Request</option>\n           <option value=\"sandboxCourse\">${config.SANDBOX_NAME}</option>\n           <option value=\"regularCourse\">Regular Course</option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <compose show.bind=\"regularClient && sessionSelected && typeSelected\" view='./Courses.html'></compose>\n\n  <!-- Number of students -->\n  <div class=\"row\"  id=\"numStudents\" show.bind=\"courseSelected\">\n    <div class=\"topMargin col-lg-10 leftMargin rightMargin\" innerhtml.bind=\"REGULAR_NUMBER_OF_STUDENTS.content\"></div>\n    <div class=\"topMargin col-lg-5\">\n      <div class=\"form-group\">\n        <label for=\"undergraduates\" class=\"col-sm-3 control-label\">Undergraduates</label>\n        <div class=\"col-sm-8\">\n          <input  id=\"undergraduates\"  type=\"number\" placeholder=\"Number of Undergraduates\"\n                  class=\"form-control\" value.bind=\"requests.selectedRequest.undergradIds\"/>\n        </div>\n      </div>\n    </div>\n    <div class=\"topMargin col-lg-5\">\n      <div class=\"form-group\">\n            <label for=\"graduates\" class=\"col-sm-3 control-label\">Graduates</label>\n            <div class=\"col-sm-8\">\n              <input id=\"graduates\" type=\"number\" placeholder=\"Number of Graduates\"\n                    class=\"form-control\" value.bind=\"requests.selectedRequest.graduateIds\"/>\n            </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row col-lg-offset-3\" show.bind=\"courseSelected\">\n      <span class=\"col-lg-8 \" id=\"numberOfStudentsError\"></span>\n  </div>\n\n  <!-- Begin and End Date -->\n  <div class=\"row\" show.bind=\"sandBoxClient || courseSelected\">\n    <div class=\"topMargin col-lg-10 leftMargin rightMargin\" innerhtml.bind=\"START_END_DATES.content\"></div>\n      <div class=\"col-lg-5\">\n        <div class=\"form-group topMargin\">\n           <label class=\"col-sm-3 form-control-label \">Start Date</label>\n           <div class=\"col-sm-8\">\n            <flat-picker disabled.bind=\"showLockMessage\" controlid=\"startDate\" config.bind=\"configDate\" change.delegate=\"changeBeginDate($event)\"  \n                value.bind=\"requests.selectedRequest.startDate\" startdate.bind=\"minStartDate\" enddate.bind=\"maxStartDate\"></flat-picker>\n           <span id='startDateError'></span>\n           </div>\n        </div>\n      </div>\n      <div class=\"col-lg-5\">\n        <div class=\"form-group topMargin\">\n          <label class=\"col-sm-3 form-control-label \">End Date</label>\n          <div class=\"col-sm-8\">\n            <flat-picker disabled.bind=\"showLockMessage\" controlid=\"endDate\" config.bind=\"configDate\" value.bind=\"requests.selectedRequest.endDate\" startdate.bind=\"minEndDate\" enddate.bind=\"maxEndDate\"></flat-picker>\n           <span id='endDateError'></span>\n          </div>\n        </div>\n      </div>\n       \n    </div>\n\n  <div show.bind=\"sessionId == -1 && requestType == -1\" innerhtml.bind=\"CLIENT_REQUEST_START.content\"></div>\n  <div show.bind=\"sessionId != -1 && requestType == -1 && useSandbox\" innerhtml.bind=\"SESSION_SELECTED.content\"></div>\n  \n  <div show.bind=\"showInfoBox\" class=\"topMargin leftMargin\" style=\"display: none;\" id=\"infoBox\"></div>\n</template>\n"; });
define('text!modules/user/requests/components/client-request-step2.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"row\">\n    <div class=\"col-md-12\"  >\n      <div  class=\"well well-sm col-md-10 col-sm-offset-1\" innerhtml.bind =\"siteInfo.selectMessageByKey('SELECT_PRODUCT_WELL').content.replace('REQUEST_LIMIT', config.REQUEST_LIMIT)\"></div>\n    </div>\n    \n    <div class=\"col-md-12\" >\n      <div class=\"col-md-5 topMargin\">\n        <label id=\"productList\">Available Products</label>\n        <div class=\"well well2 overFlow\" style=\"height:400px;\">\n          <input class=\"form-control\" value.bind=\"filter\" input.trigger=\"filterList()\" placeholder=\"Filter products\"/>\n          <ul class=\"list-group\">\n            <a  click.trigger=\"selectProduct($event)\" type=\"button\" repeat.for=\"product of filteredProductsArray\" id=\"${product._id}\"\n                    mouseover.delegate=\"showCurriculum(product, $event)\" mouseout.delegate=\"hideCurriculum()\"\n                    class=\"list-group-item dropbtn\">${product.name}</a>\n          </ul>\n        </div>\n      </div>\n      <div class=\"col-md-5 col-md-offset-1 topMargin\">\n        <label id=\"requestProductsLabel\">Requested Products</label>\n        <div class=\"well well2 overflow\" style=\"height:400px;\">\n          <ul class=\"list-group\">\n            <a show.bind=\"!product.delete\" click.trigger=\"removeProduct($event)\" type=\"button\" repeat.for=\"product of requests.selectedRequest.requestDetails\" id=\"${product.productId}\"\n                    class=\"list-group-item dropbtn\">${product.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</a>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"; });
define('text!modules/user/requests/components/client-request-step3.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div  class=\"well well-sm col-md-10 col-sm-offset-1\">${siteInfo.selectMessageByKey('CLIENT_REQUESTS_COMMENTS').content}</div>\n    </div>\n    <div class=\"form-group col-md-12\">\n      <editor value.bind=\"requests.selectedRequest.comments\" height=\"250\"></editor>\n    </div>\n  </div>\n</template>"; });
define('text!modules/user/requests/components/client-request-step4.html', ['module'], function(module) { module.exports = "<template>\n\n  <div class=\"col-md-12\" >\n    <div  class=\"well well-sm col-md-10 col-sm-offset-1\" innerhtml.bind=\"siteInfo.selectMessageByKey('CLIENT_REQUESTS_SUMMARY').content\"></div>\n  </div>\n  <div class=\"form-group col-md-12\">\n    <div class=\"row\">\n      <h4 show.bind=\"requestType != 'sandboxCourse'\" class=\"col-md-5 topMargin\">Course: <b>${courseId | courseName:people.coursesArray}</b></h4>\n      <h4 show.bind=\"requestType == 'sandboxCourse'\" class=\"col-md-5 topMargin\">Course: <b>Sandbox</b></h4>\n    </div>\n    <div class=\"row\">\n      <h4 class=\"col-md-5 topMargin\" show.bind=\"requestType != 'sandboxCourse'\">Undergraduates: <b>${requests.selectedRequest.undergradIds}</b></h4>\n      <h4 class=\"col-md-5 topMargin\" show.bind=\"requestType != 'sandboxCourse'\">Graduates: <b>${requests.selectedRequest.graduateIds}</b> </h4>\n    </div>\n    <div class=\"row\">\n      <h4 class=\"col-md-5 topMargin\">Course Begins: <b>${requests.selectedRequest.startDate | dateFormat:'YYYY-MM-DD'}</b></h4>\n      <h4 class=\"col-md-5 topMargin\">Course Ends: <b>${requests.selectedRequest.endDate | dateFormat:'YYYY-MM-DD'}</b></h4>\n    </div>\n    <div class=\"col-md-12\"></div>\n    <div class=\"row\" id=\"productListTable\">\n      <table class=\"table table-striped table-bordered col-md-10 topMargin\">\n        <thead>\n        <tr>\n          <th>Requested Product</th>\n          <th>Date Required</th>\n        </tr>\n        <tbody id=\"requiredProductsTable\">\n        <tr repeat.for=\"request of requests.selectedRequest.requestDetails\">\n          <td>${request.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</td>\n          <td> \n            <div class=\"form-group  col-md-8\">\n               <flat-picker controlid=\"requiredDate-${$index}\" config=\"configDate\" value.bind=\"request.requiredDate\" startdate.bind=\"minRequiredDate\" enddate.bind=\"maxRequiredDate\"></flat-picker>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"form-group\" show.bind=\"comments !== ''\">\n          <label >Comments:</label>\n          <div class=\"topMargin\" rows=\"12\" innerhtml.bind=\"requests.selectedRequest.comments\"></div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n"; });
define('text!modules/user/requests/components/Courses.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"topMargin\">\n        <H4>Choose a Course</h4>\n        <table id=\"coursesTable\" class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <td colspan='6'>\n                        <span click.delegate=\"refreshCourses()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                        <span click.delegate=\"newCourse()\" class=\"smallMarginRight\"  bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"New Course\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n                        <span style=\"margin-left:5px;\"  class=\"smallMarginRight\"  bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save\" click.delegate=\"editACourse()\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\n                        <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                    </td>\n                </tr>\n                <tr>\n                    <th style=\"width:20rem;\">Number </th>\n                    <th style=\"width:30rem;\">Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"selectCourse\" click.delegate=\"selectCourse($index, $event)\"  repeat.for=\"course of people.coursesArray\">\n                    <td data-title=\"nummber\">${course.number} </td>\n                    <td data-title=\"name\">${course.name}</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"row\" show.bind=\"editCourse\">\n            <div class=\"panel panel-default col-md-10 col-md-offset-1\" style=\"background-color:ghostwhite;\">\n                <div class=\"bottomMargin list-group-item leftMargin rightMargin topMargin\">\n                    <span click.trigger=\"saveCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Save Course\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                    <span click.trigger=\"cancelEditCourse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"form-group\">\n                        <input id=\"number\" value.bind=\"people.selectedCourse.number\" type=\"text\" placeholder=\"Course Number\"\n                            class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <input id=\"name\" value.bind=\"people.selectedCourse.name\" type=\"text\" placeholder=\"Course Name\"\n                            class=\"form-control\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <span id=\"course\"></span>\n</template>\n"; });
define('text!modules/user/requests/components/requestDetails.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-12\">\n\t\t\t<div class=\"panel panel-default topMargin\">\n\t\t\t\t<div class=\"panel-body leftJustify\">\n\t\t\t\t\t<div class=\"form-group bottomMargin\" show.bind=\"customerActionRequired\">\n\t\t\t\t\t\t<h5 for=\"message\">The UCC staff has asked you to provide additional information</h5>\n\t\t\t\t\t\t<div class=\"well col-lg-12\" id=\"message\" innerhtml.bind=\"customerMessage\" class=\"form-control\"></div>\n\t\t\t\t\t\t<h5>Enter your response in the comments box below and click save</h5>\n\t\t\t\t\t\t<editor value.bind=\"customerResponse\" height=\"250\"></editor>\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div show.bind=\"showDetails\" class=\"form-horizontal topMargin\">\n\t\t\t\t\t\t<h4>Product: ${requests.selectedRequestDetail.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</h4>\n\t\t\t\t\t\t<h5>Course: ${requests.selectedRequest.courseId | courseName:people.coursesArray}</h5>\n\t\t\t\t\t\t<div class=\"topMargin\" show.bind=\"requests.selectedRequest.courseId != config.SANDBOX_ID\">\n\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t<div class=\"col-lg-5 leftMargin\">\n\t\t\t\t\t\t\t\t\t<h5>Undergrads: <b>${requests.selectedRequest.undergradIds}</b></h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t\t\t\t\t<h5>Graduate: <b>${requests.selectedRequest.graduateIds}</b></h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-lg-5 leftMargin\">\n\t\t\t\t\t\t\t\t<h5>Start Date:  <b>${requests.selectedRequest.startDate | dateFormat:config.DATE_FORMAT_TABLE}</b></h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t\t\t\t<h5>End Date: <b>${requests.selectedRequest.endDate | dateFormat:config.DATE_FORMAT_TABLE}</b></h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"topMargin\" innerhtml.bind=\"requests.selectedRequest.comments\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div show.bind=\"products.selectedProduct.productDescription\">\n\t\t<h4>Product Information</h4>\n\t\t<div innerhtml.bind=\"products.selectedProduct.productDescription\"></div>\n\t</div>\n\n</template>"; });
define('text!modules/user/requests/components/viewRequestsForm.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"fluid-container\">\n\t\t<!-- Buttons -->\n\t\t<div class=\"bottomMargin list-group-item\">\n\t\t\t<span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"customerActionRequired\" click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n\t\t\t\tdata-original-title=\"Save\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\" ></i></span>\n\t\t\t<span show.bind=\"customerActionRequired\" click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n\t\t\t\tdata-title=\"Cancel\" title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n\t\t\t<span show.bind=\"requests.selectedRequestDetail.assignments.length === 0\" click.delegate=\"delete()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Delete\"><i class=\"fa fa-trash fa-lg fa-border text-danger\" aria-hidden=\"true\"></i></span>\n\t\t</div>\n\t\t<div class=\"col-lg-6\">\n\t\t\t<compose view=\"./requestDetails.html\"></compose>\n\t\t</div>\n\t\t<div class=\"col-lg-6\">\n\t\t\t<compose view=\"./assignmentDetails.html\"></compose>\n\t\t</div>\n\t</div>\n</template>"; });
define('text!modules/user/requests/components/viewRequestsTable.html', ['module'], function(module) { module.exports = "<template>\n\n  <div class=\"container\">\n    <div class='row'>\n      <div show.bind=\"dataTable.displayArray.length > 0\" class='bottomMargin'>\n        <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n        <div id=\"no-more-tables\">\n          <table class=\"table table-striped table-hover cf\">\n            <thead class=\"cf\">\n              <tr>\n                <td colspan='6'>\n                  <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                    title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                  <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                </td>\n              </tr>\n              <tr>\n                <th></th>\n                <th></th>\n                <th></th>\n              </tr>\n              <tr>\n                <th>\n                  Course <span click.trigger=\"dataTable.sortArray('courseId','id', people.coursesArray, '_id', 'name')\"><i class=\"fa fa-sort\"></i></span>\n                </th>\n                <th>\n                  Session <span click.trigger=\"dataTable.sortArray('sessionId','id',sessions.sessionsArray,'_id','startDate')\"><i class=\"fa fa-sort\"></i></span><br>\n                </th>\n                <th>\n                  Product Requests (Click to see the details)\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr  repeat.for=\"request of dataTable.displayArray\">\n                <td click.delegate=\"customerActionResponse(request, $event)\" data-title=\"Course\">\n                  <h5>${request.courseId | courseName:people.coursesArray:config.SANDBOX_ID:config.SANDBOX_NAME}</h5>\n                  <h6>Undergraduates: ${request.undergradIds} Graduates: ${request.graduateIds}</h6>\n                  <h7>Request No: ${request.clientRequestNo}</h7>\n                  <h6 show.bind=\"request.requestStatus == config.CUSTOMER_ACTION_REQUEST_CODE\" ><b>CUSTOMER ACTION REQUIRED (click here to respond)</b></h6>\n                </td>\n                <td data-title=\"Session\">\n                  <h5>${request.sessionId | sessionName:sessions.sessionsArray}</h5>\n                </td>\n                <td>\n                  <ul>\n                    <li class=\"${detail.requestStatus | requestStatusClass:statusClass:request:config.CUSTOMER_ACTION_REQUEST_CODE} list-group-item\" click.delegate=\"edit(detail, $event, $index)\" repeat.for=\"detail of request.requestDetails\" >\n                      <h5>${detail.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</h5>\n                      Status: ${detail.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}\n                      <h7 class=\"leftMargin\">Required: ${detail.requiredDate | dateFormat:config.DATE_FORMAT_TABLE}</h7>\n                      <h7 class=\"pull-right\" show.bind=\"detail.requestStatus == config.CUSTOMER_ACTION_REQUEST_CODE && request.requestStatus != config.CUSTOMER_ACTION_REQUEST_CODE\" ><b>CUSTOMER ACTION REQUIRED (click here to respond)</b></h7>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div show.bind=\"dataTable.displayArray.length === 0\" class=\"bottomMargin\">\n        <h4>You have no existing requests</h4>\n      </div>\n    </div>\n  </div>\n  </div>\n</template>"; });
define('text!modules/user/support/components/comment.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"smart-timeline-icon bottomMarginLg\" innerhtml.bind=\"comment.authorEmail | gravatarUrl:100:1\">\n\n  </div>\n  <div class=\"smart-timeline-time\">\n    <small>${comment.dateCreated | dateFormat:'YYYY-MM-DD':true}</small>\n  </div>\n  <div class=\"smart-timeline-content borderTop leftJustify\">\n\t<div class=\"form-group\">\n     \t<div innerhtml.bind=\"comment.comment\"></div>\n    </div>\n</div>\n</template>"; });
define('text!modules/user/support/components/helpTicketDetails.html', ['module'], function(module) { module.exports = "<template>\n\n    <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n        <span click.delegate=\"save()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Submit Help Ticket\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n        <span click.delegate=\"cancel()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n    </div> \n    \n    <div class=\"topMargin bottomMargin leftMargin rightMargin list-group-item\" show.bind=\"resources && resources.length > 0\">\n        <h5>Here are some resources that may be of help.</h5>\n        <ul>\n            <li style=\"list-style-type: none\" repeat.for=\"file of resources\"><a target=\"_blank\" href=\"${config.DOCUMENT_FILE_DOWNLOAD_URL}/${file.categoryCode}/${file.categoryName}/${file.fileName}\">${file.fileName}</a></li>\n        </ul>\n    </div>\n    <div class='col-lg-12'>\n        <div class='topMargin bottomMargin'>\n            <label for=\"prioritySelect\" class='control-label'>Priority</label>\n            <select class=\"bottomMargin form-control\" id=\"prioritySelect\" value.bind=\"helpTickets.selectedHelpTicket.priority\">\n                <option repeat.for = \"priority of config.HELP_TICKET_PRIORITIES\" value.bind=\"$index\">${priority.priority}</option>\n            </select>\n        </div>\n        <span>${config.HELP_TICKET_PRIORITIES[helpTickets.selectedHelpTicket.priority].message}</span>\n    </div>\n\n     <div class=\"col-lg-12 topMargin\">  \n         <div id=\"container\" ></div>\n        <!-- Additional Information Panel -->\n        <div class=\"col-lg-12 topMargin\" id=\"descriptionGroup\">\n            <div class=\"form-group\">\n                <div innerhtml.bind=\"editorMessage\"></div>\n                <p>&nbsp;</p>\n                <editor id=\"comments\" value.bind=\"helpTickets.selectedHelpTicketContent.content.comments\" height=\"250\"></editor>\n            </div>\n\n             <div class=\"form-group topMargin\">\n                <div innerhtml.bind=\"stepsMessage\"></div>\n                <p>&nbsp;</p>\n                <editor id=\"steps\" value.bind=\"helpTickets.selectedHelpTicketContent.content.steps\" height=\"250\"></editor>\n            </div>\n\n            <div innerhtml.bind=\"fileUploadMessage\"></div>\n\n            <div class=\"col-lg-2\">\n                <label class=\"btn btn-primary\">\n                    Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\"files.bind=\"files\" multiple>\n                </label>\n            </div>\n            <div class=\"col-lg-6\">\n                <ul>\n                    <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                </ul>\n            </div>\n\n        </div>\n    </div>\n</template>"; });
define('text!modules/user/support/components/helpTicketType.html', ['module'], function(module) { module.exports = "<template>\n\n   <!-- Category Select -->\n  <div class=\"form-group\">\n    <select value.bind=\"helpTickets.selectedHelpTicket.helpTicketCategory\" change.delegate=\"categoryChanged()\" id=\"helpTicketCategory\" class=\"form-control\">\n          <option value=\"-1\">Select the help ticket category</option>\n          <option repeat.for=\"types of helpTickets.helpTicketTypesArray\" \n                  model.bind=\"types.category\">${types.description}</option>\n        </select>\n  </div>\n\n   <!-- Type Select -->\n  <div class=\"form-group\">\n    <select show.bind=\"showTypes\" value.bind=\"helpTicketType\" change.delegate=\"typeChanged($event)\" id=\"helpTicketPurpose\"\n      class=\"form-control\">\n          <option value=\"NULL\">Select the help ticket type</option>\n          <option repeat.for=\"types of helpTickets.helpTicketTypesArray[helpTickets.selectedHelpTicket.helpTicketCategory].subtypes\"\n                  model.bind=\"types.type\">${types.description}</option>\n        </select>\n  </div>\n\n  <div show.bind=\"helpTicketTypeMessage\">\n    <div class=\"well well-sm\" innerhtml.bind=\"helpTicketTypeMessage\"></div>\n  </div>\n  \n</template>"; });
define('text!modules/user/support/components/Requests.html', ['module'], function(module) { module.exports = "<template>\n      <div class=\"topMargin\">\n        <h5 show.bind=\"clientRequestsArray.length === 0\">You have no product requests that apply to this type of help ticket.</h5>\n        <table id=\"clientTable\" show.bind=\"clientRequestsArray.length > 0\" class=\"table table-bordered table-responsive\" style=\"background:white;\">\n          <thead>\n          <tr class=\"header\">\n            <th>Course</th>\n            <th>Session</th>\n            <th>Product</th>\n            <th>System</th>\n            <th>Client</th>\n            <th>Status</th>\n          </tr>\n          </thead>\n          <tbody>\n            <tr id=\"${product.id}\" productId=\"${product.productId}\" \n                repeat.for=\"product of clientRequestsArray\"\n                click.trigger=\"requestChosen($event, $index)\">\n              <td>${product.courseId | lookupValue:people.coursesArray:\"_id\":\"name\"}</td>\n              <td>${product.sessionId | session:sessions.sessionsArray}</td>\n              <td>${product.productId | lookupValue:products.productsArray:\"_id\":\"name\"}</td> \n              <td>${product.systemId | lookupValue:systems.systemsArray:\"_id\":\"sid\"}</td>\n              <td>${product.client}</td>\n              <td>${product.requestStatus | lookupValue:config.REQUEST_STATUS:\"code\":\"description\"}</td>\n            </tr>\n          </tbody>\n        </table>\n        <span id=\"client\"></span>\n      </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/user/support/components/viewHTForm.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"fluid-container\">\n    <div class=\"row\">\n        <span class=\"leftMargin largeFont\">${viewHelpTicketsHeading}</span>\n      </div>\n\n    <!-- Buttons -->\n    <div class=\"bottomMargin list-group-item\">\n      <span click.delegate=\"back()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n        data-original-title=\"Back\"><i class=\"fa fa-arrow-left fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n      <span show.bind=\"helpTickets.selectedHelpTicket.helpTicketStatus !== config.CLOSED_HELPTICKET_STATUS\" click.delegate=\"respond()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n        title=\"\" data-original-title=\"Respond\"><i class=\"fa fa-paper-plane fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n      <span>${responseMessage}</span>\n    </div>\n\n    <!-- Help Ticket Header -->\n    <div class=\"topMargin\">\n      <!-- Enter Response -->\n      <div show.bind=\"enterResponse\" class=\"topMargin bottomMargin\">\n\n        <div class=\"panel panel-default leftMargin rightMargin\" style=\"background-color:ghostwhite;\">\n          <div class=\"panel-body\">\n    \n \n            <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n              <span click.delegate=\"saveResponse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Send Response\"><i class=\"fa fa-floppy-o fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n              <span click.delegate=\"cancelResponse()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                title=\"\" data-original-title=\"Cancel\"><i class=\"fa fa-ban fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            </div>\n\n            <div class=\"row leftMargin rightMargin\">\n              <editor value.bind=\"helpTickets.selectedHelpTicketContent.content.comments\" height=\"250\"></editor>\n      \n              <p>&nbsp;</p>\n              <div class=\"row\">\n                <h4>Upload screenshots or other files that will help us solve you problem</h4>\n                  <div class=\"col-lg-2\">\n                      <label class=\"btn btn-primary\">\n                          Browse for files&hellip; <input type=\"file\" style=\"display: none;\" change.delegate=\"changeFiles()\"files.bind=\"files\" multiple>\n                      </label>\n                  </div>\n                  <div class=\"col-lg-6\">\n                      <ul>\n                          <li repeat.for = \"file of filesToUpload\" class=\"list-group-item\">${file.name}<span click.delegate=\"removeFile($index)\" class=\"pull-right\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span></li>\n                      </ul>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"list-group-item leftMargin rightMargin\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <h4 class=\"col-md-offset-1\">Created: ${helpTickets.selectedHelpTicket.createdDate | dateFormat:'YYYY-MM-DD'} ${helpTickets.selectedHelpTicket.createdDate\n                    | dateFormat:'h:mm A'}</h4>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <h4>Type: ${helpTickets.selectedHelpTicket.helpTicketType | lookupValue:config.HELP_TICKET_TYPES:\"code\":\"description\"}</h4>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <h4 class=\"col-md-offset-1\">Session: ${helpTickets.selectedHelpTicket.sessionId | session:sessions.sessionsArray}</h4>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <h4>Status: ${helpTickets.selectedHelpTicket.helpTicketStatus | lookupValue:config.HELP_TICKET_STATUSES:\"code\":\"description\"}</h4>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-md-offset-1\">Owner: ${helpTickets.selectedHelpTicket.owner[0].personId |  lookupValue:people:\"_id\":'fullName'}</label>\n                </div>\n              </div>\n              <div class=\"col-md-5\">\n                <div class=\"form-group col-md-10\">\n                  <label>Keywords: ${helpTickets.selectedHelpTicket.keyWords}</label>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n    <compose view=\"../../../../resources/htTimeline/timeline.html\"></compose>\n</div>\n</template>"; });
define('text!modules/user/support/components/viewHTTable.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"container\">\n      <div class='bottomMargin'>\n        <compose view=\"../../../../resources/elements/table-navigation-bar.html\"></compose>\n        <div id=\"no-more-tables\">\n          <table class=\"table table-striped table-hover cf\">\n            <thead class=\"cf\">\n              <tr>\n                <td colspan='7'>\n                    <div class=\"checkbox\">\n                        <label>\n                            <input checked.bind=\"isChecked\" change.trigger=\"filterOutClosed()\" type=\"checkbox\"> Hide closed help tickets\n                        </label>\n                    </div>\n                </td>\n              </tr>\n              <tr>\n                <td colspan='7'>\n                  <span click.delegate=\"refresh()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\"\n                    title=\"\" data-original-title=\"Refresh\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></span>\n                  <span class=\"pull-right\" id=\"spinner\" innerhtml.bind=\"spinnerHTML\"></span>\n                </td>\n              </tr>\n              <tr> \n                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketNo'})\">Number </span><i class=\"fa fa-sort\"></i></th>\n                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketType'})\">Type </span><i class=\"fa fa-sort\"></i></th>\n                 <th>Owner</th>\n                <th></th>\n                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketStatus'})\">Status </span><i class=\"fa fa-sort\"></i></th>\n                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'createdDate'})\">Date Created </span><i class=\"fa fa-sort\"></i></th>\n                <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'modifiedDate'})\">Date Modified </span><i class=\"fa fa-sort\"></i></th>\n              </tr>\n               <tr>\n                <th></th>\n                <th>\n                  <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                </th>\n                <th></th>\n                <th></th>\n                <th> \n                  <select value.bind=\"helpTicketStatusFilter\" input.delegate=\"dataTable.filterList($event, { type: 'value',  filter: 'helpTicketStatusFilter',  collectionProperty: 'helpTicketStatus', displayProperty: 'helpTicketStatus',  compare:'match'} )\" class=\"form-control\">\n                        <option value=\"\"></option>\n                        <option repeat.for=\"status of config.HELP_TICKET_STATUSES\" value.bind=\"status.code\">${status.description}</option>\n                  </select>\n                </th>\n                <th>\n                  <input type=\"date\" value.bind=\"createdDateFilterValue\" input.delegate=\"dataTable.filterList(createdDateFilterValue, {type: 'date', filter: 'createdDate',  collectionProperty: 'createdDate', compare: 'after'} )\"  class=\"form-control\" />\n                </th>\n                 <th>\n                  <input type=\"date\" value.bind=\"modifiedDateFilterValue\" input.delegate=\"dataTable.filterList(modifiedDateFilterValue, {type: 'date', filter: 'modifiedDate',  collectionProperty: 'modifiedDate', compare: 'after'} )\"  class=\"form-control\" />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr repeat.for=\"helpTicket of dataTable.displayArray\">\n                <td click.delegate=\"selectHelpTicket($event, $index)\" data-title=\"Reference\">${helpTicket.helpTicketNo}</td>\n                <td click.delegate=\"selectHelpTicket($event, $index)\" data-title=\"Type\">${helpTicket.helpTicketType | helpTicketType:helpTickets.helpTicketTypesArray}</td>\n                <td style=\"width:12rem;\">${helpTicket.owner[0].personId | lookupValue:people:\"_id\":'fullName'}</td> \n                <td style=\"width:2rem;\" data-title=\"Update\">\n                  <span click.trigger=\"closeHelpTicket(helpTicket)\" show.bind=\"helpTicket.helpTicketStatus != config.CLOSED_HELPTICKET_STATUS\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Close Help Ticket\"><i class=\"fa fa-window-close-o fa-lg\" aria-hidden=\"true\"></i></span>\n                </td>  \n                <td click.delegate=\"selectHelpTicket($event, $index)\" data-title=\"Status\">${helpTicket.helpTicketStatus | lookupValue:config.HELP_TICKET_STATUSES:\"code\":\"description\"}</td>             \n                <td click.delegate=\"selectHelpTicket($event, $index)\" data-title=\"Created Date\">${helpTicket.createdDate | dateFormat:config.DATE_FORMAT_TABLE:false}</td>\n                <td data-title=\"Modified Date\" click.delegate=\"selectHelpTicket($event, $index)\">${helpTicket.modifiedDate | dateFormat:config.DATE_FORMAT_TABLE:false}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/admin/site/components/foreverLogs.html', ['module'], function(module) { module.exports = "<template>\n\t<div class=\"col-lg-3 topMargin\">\n\t\t<div  class=\"panel panel-default\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<div class=\"col-sm-12 col-lg-12\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t<span click.delegate=\"deleteFiles()\" class=\"smallMarginRight input-group-addon\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"Delete oldest files\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n\t\t\t\t\t\t\t<input value.bind=\"filesToDelete\" id=\"filesToDelete\" class=\"form-control\"  type=\"number\" ria-describedby=\"basic-addon1\" placeholder=\"# of oldest files to delete\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<label>Files</label>\n\t\t\t\t<div class=\"well well2 overFlow\" style=\"height:600px;\">\n\t\t\t\t\t<ul class=\"list-group\">\n\t\t\t\t\t\t<button click.trigger=\"fileSelected($index)\" type=\"button\" repeat.for=\"file of fileList\" id=\"${type.code}\" class=\"list-group-item\">${file}</button>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"col-lg-9 topMargin\">\n\t\t<textarea class=\"form-control col-lg-12\" show.bind=\"foreverLog.length > 0\" innerhtml.bind=\"foreverLog\" rows=\"50\"></textarea>\n\t</div>\n</template>"; });
define('text!modules/analytics/components/typeHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'description'})\">Type  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.description}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/typeHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!typeTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"typeChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/productHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'curriculumTitle'})\">Type  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.curriculumTitle}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/productHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!typeTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"curriculumChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/curriculumHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'curriculumTitle'})\">Type  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.curriculumTitle}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/curriculumHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!curriculumtableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"curriculumChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/helpTicketsByCurriculum.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showCurriculumTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showCurriculumGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"curriculumtableSelected\" class=\"col-lg-12\">\n              <compose view=\"./curriculumHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!curriculumtableSelected\" class=\"col-lg-12\">\n              <compose view=\"./curriculumHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/institutionHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'institution'})\">Institution  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.institution}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/institutionHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!institutiontableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"institutionChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/helpTicketsByPeople.html', ['module'], function(module) { module.exports = "<template>\n  <div>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showPeopleTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showPeopleGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"peopleTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./peopleHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!peopleTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./peopleHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/analytics/components/peopleHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'name'})\">Faculty  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.name}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/peopleHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!peopleTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"peopleChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
define('text!modules/analytics/components/helpTicketsByStatus.html', ['module'], function(module) { module.exports = "<template>\n  <div>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <div class=\"bottomMargin list-group-item leftMargin rightMargin\">\n            <span click.delegate=\"showStatusTable()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Table\"><i class=\"fa fa-table fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n            <span click.delegate=\"showStatusGraph()\" class=\"smallMarginRight\" bootstrap-tooltip data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"\n                data-original-title=\"Graphs\"><i class=\"fa fa-pie-chart fa-lg fa-border\" aria-hidden=\"true\"></i></span>\n          </div>\n          <div show.bind=\"statusTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./statusHTTable.html\"></compose>\n          </div> \n          <div show.bind=\"!statusTableSelected\" class=\"col-lg-12\">\n              <compose view=\"./statusHTChart.html\"></compose>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>"; });
define('text!modules/analytics/components/statusHTTable.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"col-lg-10 col-lg-offset-1\">\n        <div class='row'>\n            <compose view=\"../../../resources/elements/table-navigation-bar.html\"></compose>\n            <div id=\"no-more-tables\">\n                <table class=\"table table-striped table-hover cf\">\n                    <thead class=\"cf\">\n                        <tr>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'helpTicketStatus'})\">Status  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                            <th><span  class=\"sortable\" click.trigger=\"dataTable.sortArray($event, {propertyName: 'count'})\">Count  </span><span><i class=\"fa fa-sort\"></i></span></th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input value.bind=\"helpTicketTypeFilterValue\" input.delegate=\"dataTable.filterList(helpTicketTypeFilterValue, { type: 'custom',  filter: customHelpTicketTypeFilter, collectionProperty: 'helpTicketType', displayProperty: 'helpTicketType',  compare:'custom'} )\"  class=\"form-control\" />\n                            </th>\n                            <th></th>\n                        </tr>\n                        <tr>\n                            <th>Totals:</th>\n                            <th>${total}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr repeat.for=\"stat of dataTable.displayArray\">\n                            <td data-title=\"Type\">${stat.helpTicketStatus}</td>\n                            <td data-title=\"Total\">${stat.count}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>"; });
define('text!modules/analytics/components/statusHTChart.html', ['module'], function(module) { module.exports = "<template>\n\t\t<fieldset if.bind=\"!statusTableSelected\" class=\"col-lg-12\">\n\t\t\t<legend>Requests</legend>\n\t\t\t<chart id=\"typeChart\" type=\"horizontalBar\" native-options.bind=\"chartOptions\" style=\"width: 100%; height: 100%; display: block;\" should-update=\"true\" throttle=\"2000\" data.bind=\"statusChartData\"></chart>\n\t\t</fieldset>\n</template>"; });
//# sourceMappingURL=app-bundle.js.map