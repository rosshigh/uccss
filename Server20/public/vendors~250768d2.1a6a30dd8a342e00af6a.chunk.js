(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~250768d2"],{

/***/ "J3Cq":
/*!********************************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFlowUnionType;\n\nvar _generated = __webpack_require__(/*! ../generated */ \"OLqG\");\n\nvar _removeTypeDuplicates = _interopRequireDefault(__webpack_require__(/*! ../../modifications/flow/removeTypeDuplicates */ \"N5gB\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createFlowUnionType(types) {\n  var flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.unionTypeAnnotation)(flattened);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSjNDcS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9idWlsZGVycy9mbG93L2NyZWF0ZUZsb3dVbmlvblR5cGUuanM/YmRlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZUZsb3dVbmlvblR5cGU7XG5cbnZhciBfZ2VuZXJhdGVkID0gcmVxdWlyZShcIi4uL2dlbmVyYXRlZFwiKTtcblxudmFyIF9yZW1vdmVUeXBlRHVwbGljYXRlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL21vZGlmaWNhdGlvbnMvZmxvdy9yZW1vdmVUeXBlRHVwbGljYXRlc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGNyZWF0ZUZsb3dVbmlvblR5cGUodHlwZXMpIHtcbiAgY29uc3QgZmxhdHRlbmVkID0gKDAsIF9yZW1vdmVUeXBlRHVwbGljYXRlcy5kZWZhdWx0KSh0eXBlcyk7XG5cbiAgaWYgKGZsYXR0ZW5lZC5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZmxhdHRlbmVkWzBdO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAoMCwgX2dlbmVyYXRlZC51bmlvblR5cGVBbm5vdGF0aW9uKShmbGF0dGVuZWQpO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///J3Cq\n");

/***/ }),

/***/ "LL97":
/*!***************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/builder.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nvar _clone = _interopRequireDefault(__webpack_require__(/*! lodash/clone */ \"QJFq\"));\n\nvar _definitions = __webpack_require__(/*! ../definitions */ \"OCdj\");\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ../validators/validate */ \"o/VP\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction builder(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var keys = _definitions.BUILDER_KEYS[type];\n  var countArgs = args.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(type + \": Too many arguments passed. Received \" + countArgs + \" but can receive no more than \" + keys.length);\n  }\n\n  var node = {\n    type: type\n  };\n  var i = 0;\n  keys.forEach(function (key) {\n    var field = _definitions.NODE_FIELDS[type][key];\n    var arg;\n    if (i < countArgs) arg = args[i];\n    if (arg === undefined) arg = (0, _clone.default)(field.default);\n    node[key] = arg;\n    i++;\n  });\n\n  for (var _i = 0, _Object$keys = Object.keys(node); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTEw5Ny5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9idWlsZGVycy9idWlsZGVyLmpzPzUwOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBidWlsZGVyO1xuXG52YXIgX2Nsb25lID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwibG9kYXNoL2Nsb25lXCIpKTtcblxudmFyIF9kZWZpbml0aW9ucyA9IHJlcXVpcmUoXCIuLi9kZWZpbml0aW9uc1wiKTtcblxudmFyIF92YWxpZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3ZhbGlkYXRvcnMvdmFsaWRhdGVcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBidWlsZGVyKHR5cGUsIC4uLmFyZ3MpIHtcbiAgY29uc3Qga2V5cyA9IF9kZWZpbml0aW9ucy5CVUlMREVSX0tFWVNbdHlwZV07XG4gIGNvbnN0IGNvdW50QXJncyA9IGFyZ3MubGVuZ3RoO1xuXG4gIGlmIChjb3VudEFyZ3MgPiBrZXlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHt0eXBlfTogVG9vIG1hbnkgYXJndW1lbnRzIHBhc3NlZC4gUmVjZWl2ZWQgJHtjb3VudEFyZ3N9IGJ1dCBjYW4gcmVjZWl2ZSBubyBtb3JlIHRoYW4gJHtrZXlzLmxlbmd0aH1gKTtcbiAgfVxuXG4gIGNvbnN0IG5vZGUgPSB7XG4gICAgdHlwZVxuICB9O1xuICBsZXQgaSA9IDA7XG4gIGtleXMuZm9yRWFjaChrZXkgPT4ge1xuICAgIGNvbnN0IGZpZWxkID0gX2RlZmluaXRpb25zLk5PREVfRklFTERTW3R5cGVdW2tleV07XG4gICAgbGV0IGFyZztcbiAgICBpZiAoaSA8IGNvdW50QXJncykgYXJnID0gYXJnc1tpXTtcbiAgICBpZiAoYXJnID09PSB1bmRlZmluZWQpIGFyZyA9ICgwLCBfY2xvbmUuZGVmYXVsdCkoZmllbGQuZGVmYXVsdCk7XG4gICAgbm9kZVtrZXldID0gYXJnO1xuICAgIGkrKztcbiAgfSk7XG5cbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMobm9kZSkpIHtcbiAgICAoMCwgX3ZhbGlkYXRlLmRlZmF1bHQpKG5vZGUsIGtleSwgbm9kZVtrZXldKTtcbiAgfVxuXG4gIHJldHVybiBub2RlO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///LL97\n");

/***/ }),

/***/ "ND+W":
/*!************************************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTSUnionType;\n\nvar _generated = __webpack_require__(/*! ../generated */ \"OLqG\");\n\nvar _removeTypeDuplicates = _interopRequireDefault(__webpack_require__(/*! ../../modifications/typescript/removeTypeDuplicates */ \"c6wS\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createTSUnionType(typeAnnotations) {\n  var types = typeAnnotations.map(function (type) {\n    return type.typeAnnotations;\n  });\n  var flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.tsUnionType)(flattened);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTkQrVy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9idWlsZGVycy90eXBlc2NyaXB0L2NyZWF0ZVRTVW5pb25UeXBlLmpzPzBhNGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVUU1VuaW9uVHlwZTtcblxudmFyIF9nZW5lcmF0ZWQgPSByZXF1aXJlKFwiLi4vZ2VuZXJhdGVkXCIpO1xuXG52YXIgX3JlbW92ZVR5cGVEdXBsaWNhdGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vbW9kaWZpY2F0aW9ucy90eXBlc2NyaXB0L3JlbW92ZVR5cGVEdXBsaWNhdGVzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gY3JlYXRlVFNVbmlvblR5cGUodHlwZUFubm90YXRpb25zKSB7XG4gIGNvbnN0IHR5cGVzID0gdHlwZUFubm90YXRpb25zLm1hcCh0eXBlID0+IHR5cGUudHlwZUFubm90YXRpb25zKTtcbiAgY29uc3QgZmxhdHRlbmVkID0gKDAsIF9yZW1vdmVUeXBlRHVwbGljYXRlcy5kZWZhdWx0KSh0eXBlcyk7XG5cbiAgaWYgKGZsYXR0ZW5lZC5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZmxhdHRlbmVkWzBdO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAoMCwgX2dlbmVyYXRlZC50c1VuaW9uVHlwZSkoZmxhdHRlbmVkKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///ND+W\n");

/***/ }),

/***/ "OLqG":
/*!***********************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/generated/index.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayExpression = exports.arrayExpression = arrayExpression;\nexports.AssignmentExpression = exports.assignmentExpression = assignmentExpression;\nexports.BinaryExpression = exports.binaryExpression = binaryExpression;\nexports.InterpreterDirective = exports.interpreterDirective = interpreterDirective;\nexports.Directive = exports.directive = directive;\nexports.DirectiveLiteral = exports.directiveLiteral = directiveLiteral;\nexports.BlockStatement = exports.blockStatement = blockStatement;\nexports.BreakStatement = exports.breakStatement = breakStatement;\nexports.CallExpression = exports.callExpression = callExpression;\nexports.CatchClause = exports.catchClause = catchClause;\nexports.ConditionalExpression = exports.conditionalExpression = conditionalExpression;\nexports.ContinueStatement = exports.continueStatement = continueStatement;\nexports.DebuggerStatement = exports.debuggerStatement = debuggerStatement;\nexports.DoWhileStatement = exports.doWhileStatement = doWhileStatement;\nexports.EmptyStatement = exports.emptyStatement = emptyStatement;\nexports.ExpressionStatement = exports.expressionStatement = expressionStatement;\nexports.File = exports.file = file;\nexports.ForInStatement = exports.forInStatement = forInStatement;\nexports.ForStatement = exports.forStatement = forStatement;\nexports.FunctionDeclaration = exports.functionDeclaration = functionDeclaration;\nexports.FunctionExpression = exports.functionExpression = functionExpression;\nexports.Identifier = exports.identifier = identifier;\nexports.IfStatement = exports.ifStatement = ifStatement;\nexports.LabeledStatement = exports.labeledStatement = labeledStatement;\nexports.StringLiteral = exports.stringLiteral = stringLiteral;\nexports.NumericLiteral = exports.numericLiteral = numericLiteral;\nexports.NullLiteral = exports.nullLiteral = nullLiteral;\nexports.BooleanLiteral = exports.booleanLiteral = booleanLiteral;\nexports.RegExpLiteral = exports.regExpLiteral = regExpLiteral;\nexports.LogicalExpression = exports.logicalExpression = logicalExpression;\nexports.MemberExpression = exports.memberExpression = memberExpression;\nexports.NewExpression = exports.newExpression = newExpression;\nexports.Program = exports.program = program;\nexports.ObjectExpression = exports.objectExpression = objectExpression;\nexports.ObjectMethod = exports.objectMethod = objectMethod;\nexports.ObjectProperty = exports.objectProperty = objectProperty;\nexports.RestElement = exports.restElement = restElement;\nexports.ReturnStatement = exports.returnStatement = returnStatement;\nexports.SequenceExpression = exports.sequenceExpression = sequenceExpression;\nexports.ParenthesizedExpression = exports.parenthesizedExpression = parenthesizedExpression;\nexports.SwitchCase = exports.switchCase = switchCase;\nexports.SwitchStatement = exports.switchStatement = switchStatement;\nexports.ThisExpression = exports.thisExpression = thisExpression;\nexports.ThrowStatement = exports.throwStatement = throwStatement;\nexports.TryStatement = exports.tryStatement = tryStatement;\nexports.UnaryExpression = exports.unaryExpression = unaryExpression;\nexports.UpdateExpression = exports.updateExpression = updateExpression;\nexports.VariableDeclaration = exports.variableDeclaration = variableDeclaration;\nexports.VariableDeclarator = exports.variableDeclarator = variableDeclarator;\nexports.WhileStatement = exports.whileStatement = whileStatement;\nexports.WithStatement = exports.withStatement = withStatement;\nexports.AssignmentPattern = exports.assignmentPattern = assignmentPattern;\nexports.ArrayPattern = exports.arrayPattern = arrayPattern;\nexports.ArrowFunctionExpression = exports.arrowFunctionExpression = arrowFunctionExpression;\nexports.ClassBody = exports.classBody = classBody;\nexports.ClassExpression = exports.classExpression = classExpression;\nexports.ClassDeclaration = exports.classDeclaration = classDeclaration;\nexports.ExportAllDeclaration = exports.exportAllDeclaration = exportAllDeclaration;\nexports.ExportDefaultDeclaration = exports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.ExportNamedDeclaration = exports.exportNamedDeclaration = exportNamedDeclaration;\nexports.ExportSpecifier = exports.exportSpecifier = exportSpecifier;\nexports.ForOfStatement = exports.forOfStatement = forOfStatement;\nexports.ImportDeclaration = exports.importDeclaration = importDeclaration;\nexports.ImportDefaultSpecifier = exports.importDefaultSpecifier = importDefaultSpecifier;\nexports.ImportNamespaceSpecifier = exports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.ImportSpecifier = exports.importSpecifier = importSpecifier;\nexports.MetaProperty = exports.metaProperty = metaProperty;\nexports.ClassMethod = exports.classMethod = classMethod;\nexports.ObjectPattern = exports.objectPattern = objectPattern;\nexports.SpreadElement = exports.spreadElement = spreadElement;\nexports.super = exports.Super = _super;\nexports.TaggedTemplateExpression = exports.taggedTemplateExpression = taggedTemplateExpression;\nexports.TemplateElement = exports.templateElement = templateElement;\nexports.TemplateLiteral = exports.templateLiteral = templateLiteral;\nexports.YieldExpression = exports.yieldExpression = yieldExpression;\nexports.AwaitExpression = exports.awaitExpression = awaitExpression;\nexports.import = exports.Import = _import;\nexports.BigIntLiteral = exports.bigIntLiteral = bigIntLiteral;\nexports.ExportNamespaceSpecifier = exports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.OptionalMemberExpression = exports.optionalMemberExpression = optionalMemberExpression;\nexports.OptionalCallExpression = exports.optionalCallExpression = optionalCallExpression;\nexports.AnyTypeAnnotation = exports.anyTypeAnnotation = anyTypeAnnotation;\nexports.ArrayTypeAnnotation = exports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.BooleanTypeAnnotation = exports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = exports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.NullLiteralTypeAnnotation = exports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.ClassImplements = exports.classImplements = classImplements;\nexports.DeclareClass = exports.declareClass = declareClass;\nexports.DeclareFunction = exports.declareFunction = declareFunction;\nexports.DeclareInterface = exports.declareInterface = declareInterface;\nexports.DeclareModule = exports.declareModule = declareModule;\nexports.DeclareModuleExports = exports.declareModuleExports = declareModuleExports;\nexports.DeclareTypeAlias = exports.declareTypeAlias = declareTypeAlias;\nexports.DeclareOpaqueType = exports.declareOpaqueType = declareOpaqueType;\nexports.DeclareVariable = exports.declareVariable = declareVariable;\nexports.DeclareExportDeclaration = exports.declareExportDeclaration = declareExportDeclaration;\nexports.DeclareExportAllDeclaration = exports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.DeclaredPredicate = exports.declaredPredicate = declaredPredicate;\nexports.ExistsTypeAnnotation = exports.existsTypeAnnotation = existsTypeAnnotation;\nexports.FunctionTypeAnnotation = exports.functionTypeAnnotation = functionTypeAnnotation;\nexports.FunctionTypeParam = exports.functionTypeParam = functionTypeParam;\nexports.GenericTypeAnnotation = exports.genericTypeAnnotation = genericTypeAnnotation;\nexports.InferredPredicate = exports.inferredPredicate = inferredPredicate;\nexports.InterfaceExtends = exports.interfaceExtends = interfaceExtends;\nexports.InterfaceDeclaration = exports.interfaceDeclaration = interfaceDeclaration;\nexports.InterfaceTypeAnnotation = exports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = exports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.MixedTypeAnnotation = exports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.EmptyTypeAnnotation = exports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.NullableTypeAnnotation = exports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.NumberLiteralTypeAnnotation = exports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.NumberTypeAnnotation = exports.numberTypeAnnotation = numberTypeAnnotation;\nexports.ObjectTypeAnnotation = exports.objectTypeAnnotation = objectTypeAnnotation;\nexports.ObjectTypeInternalSlot = exports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.ObjectTypeCallProperty = exports.objectTypeCallProperty = objectTypeCallProperty;\nexports.ObjectTypeIndexer = exports.objectTypeIndexer = objectTypeIndexer;\nexports.ObjectTypeProperty = exports.objectTypeProperty = objectTypeProperty;\nexports.ObjectTypeSpreadProperty = exports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.OpaqueType = exports.opaqueType = opaqueType;\nexports.QualifiedTypeIdentifier = exports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.StringLiteralTypeAnnotation = exports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.StringTypeAnnotation = exports.stringTypeAnnotation = stringTypeAnnotation;\nexports.SymbolTypeAnnotation = exports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.ThisTypeAnnotation = exports.thisTypeAnnotation = thisTypeAnnotation;\nexports.TupleTypeAnnotation = exports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.TypeofTypeAnnotation = exports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.TypeAlias = exports.typeAlias = typeAlias;\nexports.TypeAnnotation = exports.typeAnnotation = typeAnnotation;\nexports.TypeCastExpression = exports.typeCastExpression = typeCastExpression;\nexports.TypeParameter = exports.typeParameter = typeParameter;\nexports.TypeParameterDeclaration = exports.typeParameterDeclaration = typeParameterDeclaration;\nexports.TypeParameterInstantiation = exports.typeParameterInstantiation = typeParameterInstantiation;\nexports.UnionTypeAnnotation = exports.unionTypeAnnotation = unionTypeAnnotation;\nexports.Variance = exports.variance = variance;\nexports.VoidTypeAnnotation = exports.voidTypeAnnotation = voidTypeAnnotation;\nexports.EnumDeclaration = exports.enumDeclaration = enumDeclaration;\nexports.EnumBooleanBody = exports.enumBooleanBody = enumBooleanBody;\nexports.EnumNumberBody = exports.enumNumberBody = enumNumberBody;\nexports.EnumStringBody = exports.enumStringBody = enumStringBody;\nexports.EnumSymbolBody = exports.enumSymbolBody = enumSymbolBody;\nexports.EnumBooleanMember = exports.enumBooleanMember = enumBooleanMember;\nexports.EnumNumberMember = exports.enumNumberMember = enumNumberMember;\nexports.EnumStringMember = exports.enumStringMember = enumStringMember;\nexports.EnumDefaultedMember = exports.enumDefaultedMember = enumDefaultedMember;\nexports.jSXAttribute = exports.JSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.JSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXElement = exports.JSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.JSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.JSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXSpreadChild = exports.JSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXIdentifier = exports.JSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.JSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.JSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.JSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXSpreadAttribute = exports.JSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXText = exports.JSXText = exports.jsxText = jsxText;\nexports.jSXFragment = exports.JSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXOpeningFragment = exports.JSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXClosingFragment = exports.JSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.Noop = exports.noop = noop;\nexports.Placeholder = exports.placeholder = placeholder;\nexports.V8IntrinsicIdentifier = exports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.ArgumentPlaceholder = exports.argumentPlaceholder = argumentPlaceholder;\nexports.BindExpression = exports.bindExpression = bindExpression;\nexports.ClassProperty = exports.classProperty = classProperty;\nexports.PipelineTopicExpression = exports.pipelineTopicExpression = pipelineTopicExpression;\nexports.PipelineBareFunction = exports.pipelineBareFunction = pipelineBareFunction;\nexports.PipelinePrimaryTopicReference = exports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.ClassPrivateProperty = exports.classPrivateProperty = classPrivateProperty;\nexports.ClassPrivateMethod = exports.classPrivateMethod = classPrivateMethod;\nexports.ImportAttribute = exports.importAttribute = importAttribute;\nexports.Decorator = exports.decorator = decorator;\nexports.DoExpression = exports.doExpression = doExpression;\nexports.ExportDefaultSpecifier = exports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.PrivateName = exports.privateName = privateName;\nexports.RecordExpression = exports.recordExpression = recordExpression;\nexports.TupleExpression = exports.tupleExpression = tupleExpression;\nexports.DecimalLiteral = exports.decimalLiteral = decimalLiteral;\nexports.StaticBlock = exports.staticBlock = staticBlock;\nexports.tSParameterProperty = exports.TSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSDeclareFunction = exports.TSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.TSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSQualifiedName = exports.TSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSCallSignatureDeclaration = exports.TSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConstructSignatureDeclaration = exports.TSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSPropertySignature = exports.TSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSMethodSignature = exports.TSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSIndexSignature = exports.TSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSAnyKeyword = exports.TSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSBooleanKeyword = exports.TSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSBigIntKeyword = exports.TSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSIntrinsicKeyword = exports.TSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSNeverKeyword = exports.TSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNullKeyword = exports.TSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.TSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.TSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSStringKeyword = exports.TSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.TSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSUndefinedKeyword = exports.TSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnknownKeyword = exports.TSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.TSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tSThisType = exports.TSThisType = exports.tsThisType = tsThisType;\nexports.tSFunctionType = exports.TSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSConstructorType = exports.TSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSTypeReference = exports.TSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSTypePredicate = exports.TSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.TSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeLiteral = exports.TSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSArrayType = exports.TSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSTupleType = exports.TSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSOptionalType = exports.TSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSRestType = exports.TSRestType = exports.tsRestType = tsRestType;\nexports.tSNamedTupleMember = exports.TSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSUnionType = exports.TSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSIntersectionType = exports.TSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSConditionalType = exports.TSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSInferType = exports.TSInferType = exports.tsInferType = tsInferType;\nexports.tSParenthesizedType = exports.TSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSTypeOperator = exports.TSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSIndexedAccessType = exports.TSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSMappedType = exports.TSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSLiteralType = exports.TSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSExpressionWithTypeArguments = exports.TSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSInterfaceDeclaration = exports.TSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSInterfaceBody = exports.TSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSTypeAliasDeclaration = exports.TSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSAsExpression = exports.TSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSTypeAssertion = exports.TSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSEnumDeclaration = exports.TSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.TSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSModuleDeclaration = exports.TSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSModuleBlock = exports.TSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSImportType = exports.TSImportType = exports.tsImportType = tsImportType;\nexports.tSImportEqualsDeclaration = exports.TSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSExternalModuleReference = exports.TSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSNonNullExpression = exports.TSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSExportAssignment = exports.TSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSNamespaceExportDeclaration = exports.TSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSTypeAnnotation = exports.TSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeParameterInstantiation = exports.TSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypeParameterDeclaration = exports.TSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameter = exports.TSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.numberLiteral = exports.NumberLiteral = NumberLiteral;\nexports.regexLiteral = exports.RegexLiteral = RegexLiteral;\nexports.restProperty = exports.RestProperty = RestProperty;\nexports.spreadProperty = exports.SpreadProperty = SpreadProperty;\n\nvar _builder = _interopRequireDefault(__webpack_require__(/*! ../builder */ \"LL97\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction arrayExpression() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ArrayExpression\"].concat(args));\n}\n\nfunction assignmentExpression() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"AssignmentExpression\"].concat(args));\n}\n\nfunction binaryExpression() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BinaryExpression\"].concat(args));\n}\n\nfunction interpreterDirective() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"InterpreterDirective\"].concat(args));\n}\n\nfunction directive() {\n  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    args[_key5] = arguments[_key5];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Directive\"].concat(args));\n}\n\nfunction directiveLiteral() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DirectiveLiteral\"].concat(args));\n}\n\nfunction blockStatement() {\n  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BlockStatement\"].concat(args));\n}\n\nfunction breakStatement() {\n  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    args[_key8] = arguments[_key8];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BreakStatement\"].concat(args));\n}\n\nfunction callExpression() {\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"CallExpression\"].concat(args));\n}\n\nfunction catchClause() {\n  for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    args[_key10] = arguments[_key10];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"CatchClause\"].concat(args));\n}\n\nfunction conditionalExpression() {\n  for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    args[_key11] = arguments[_key11];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ConditionalExpression\"].concat(args));\n}\n\nfunction continueStatement() {\n  for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    args[_key12] = arguments[_key12];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ContinueStatement\"].concat(args));\n}\n\nfunction debuggerStatement() {\n  for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    args[_key13] = arguments[_key13];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DebuggerStatement\"].concat(args));\n}\n\nfunction doWhileStatement() {\n  for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    args[_key14] = arguments[_key14];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DoWhileStatement\"].concat(args));\n}\n\nfunction emptyStatement() {\n  for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    args[_key15] = arguments[_key15];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EmptyStatement\"].concat(args));\n}\n\nfunction expressionStatement() {\n  for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n    args[_key16] = arguments[_key16];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExpressionStatement\"].concat(args));\n}\n\nfunction file() {\n  for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    args[_key17] = arguments[_key17];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"File\"].concat(args));\n}\n\nfunction forInStatement() {\n  for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n    args[_key18] = arguments[_key18];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ForInStatement\"].concat(args));\n}\n\nfunction forStatement() {\n  for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ForStatement\"].concat(args));\n}\n\nfunction functionDeclaration() {\n  for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n    args[_key20] = arguments[_key20];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"FunctionDeclaration\"].concat(args));\n}\n\nfunction functionExpression() {\n  for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n    args[_key21] = arguments[_key21];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"FunctionExpression\"].concat(args));\n}\n\nfunction identifier() {\n  for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n    args[_key22] = arguments[_key22];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Identifier\"].concat(args));\n}\n\nfunction ifStatement() {\n  for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n    args[_key23] = arguments[_key23];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"IfStatement\"].concat(args));\n}\n\nfunction labeledStatement() {\n  for (var _len24 = arguments.length, args = new Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n    args[_key24] = arguments[_key24];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"LabeledStatement\"].concat(args));\n}\n\nfunction stringLiteral() {\n  for (var _len25 = arguments.length, args = new Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n    args[_key25] = arguments[_key25];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"StringLiteral\"].concat(args));\n}\n\nfunction numericLiteral() {\n  for (var _len26 = arguments.length, args = new Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n    args[_key26] = arguments[_key26];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NumericLiteral\"].concat(args));\n}\n\nfunction nullLiteral() {\n  for (var _len27 = arguments.length, args = new Array(_len27), _key27 = 0; _key27 < _len27; _key27++) {\n    args[_key27] = arguments[_key27];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NullLiteral\"].concat(args));\n}\n\nfunction booleanLiteral() {\n  for (var _len28 = arguments.length, args = new Array(_len28), _key28 = 0; _key28 < _len28; _key28++) {\n    args[_key28] = arguments[_key28];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BooleanLiteral\"].concat(args));\n}\n\nfunction regExpLiteral() {\n  for (var _len29 = arguments.length, args = new Array(_len29), _key29 = 0; _key29 < _len29; _key29++) {\n    args[_key29] = arguments[_key29];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"RegExpLiteral\"].concat(args));\n}\n\nfunction logicalExpression() {\n  for (var _len30 = arguments.length, args = new Array(_len30), _key30 = 0; _key30 < _len30; _key30++) {\n    args[_key30] = arguments[_key30];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"LogicalExpression\"].concat(args));\n}\n\nfunction memberExpression() {\n  for (var _len31 = arguments.length, args = new Array(_len31), _key31 = 0; _key31 < _len31; _key31++) {\n    args[_key31] = arguments[_key31];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"MemberExpression\"].concat(args));\n}\n\nfunction newExpression() {\n  for (var _len32 = arguments.length, args = new Array(_len32), _key32 = 0; _key32 < _len32; _key32++) {\n    args[_key32] = arguments[_key32];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NewExpression\"].concat(args));\n}\n\nfunction program() {\n  for (var _len33 = arguments.length, args = new Array(_len33), _key33 = 0; _key33 < _len33; _key33++) {\n    args[_key33] = arguments[_key33];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Program\"].concat(args));\n}\n\nfunction objectExpression() {\n  for (var _len34 = arguments.length, args = new Array(_len34), _key34 = 0; _key34 < _len34; _key34++) {\n    args[_key34] = arguments[_key34];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectExpression\"].concat(args));\n}\n\nfunction objectMethod() {\n  for (var _len35 = arguments.length, args = new Array(_len35), _key35 = 0; _key35 < _len35; _key35++) {\n    args[_key35] = arguments[_key35];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectMethod\"].concat(args));\n}\n\nfunction objectProperty() {\n  for (var _len36 = arguments.length, args = new Array(_len36), _key36 = 0; _key36 < _len36; _key36++) {\n    args[_key36] = arguments[_key36];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectProperty\"].concat(args));\n}\n\nfunction restElement() {\n  for (var _len37 = arguments.length, args = new Array(_len37), _key37 = 0; _key37 < _len37; _key37++) {\n    args[_key37] = arguments[_key37];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"RestElement\"].concat(args));\n}\n\nfunction returnStatement() {\n  for (var _len38 = arguments.length, args = new Array(_len38), _key38 = 0; _key38 < _len38; _key38++) {\n    args[_key38] = arguments[_key38];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ReturnStatement\"].concat(args));\n}\n\nfunction sequenceExpression() {\n  for (var _len39 = arguments.length, args = new Array(_len39), _key39 = 0; _key39 < _len39; _key39++) {\n    args[_key39] = arguments[_key39];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SequenceExpression\"].concat(args));\n}\n\nfunction parenthesizedExpression() {\n  for (var _len40 = arguments.length, args = new Array(_len40), _key40 = 0; _key40 < _len40; _key40++) {\n    args[_key40] = arguments[_key40];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ParenthesizedExpression\"].concat(args));\n}\n\nfunction switchCase() {\n  for (var _len41 = arguments.length, args = new Array(_len41), _key41 = 0; _key41 < _len41; _key41++) {\n    args[_key41] = arguments[_key41];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SwitchCase\"].concat(args));\n}\n\nfunction switchStatement() {\n  for (var _len42 = arguments.length, args = new Array(_len42), _key42 = 0; _key42 < _len42; _key42++) {\n    args[_key42] = arguments[_key42];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SwitchStatement\"].concat(args));\n}\n\nfunction thisExpression() {\n  for (var _len43 = arguments.length, args = new Array(_len43), _key43 = 0; _key43 < _len43; _key43++) {\n    args[_key43] = arguments[_key43];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ThisExpression\"].concat(args));\n}\n\nfunction throwStatement() {\n  for (var _len44 = arguments.length, args = new Array(_len44), _key44 = 0; _key44 < _len44; _key44++) {\n    args[_key44] = arguments[_key44];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ThrowStatement\"].concat(args));\n}\n\nfunction tryStatement() {\n  for (var _len45 = arguments.length, args = new Array(_len45), _key45 = 0; _key45 < _len45; _key45++) {\n    args[_key45] = arguments[_key45];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TryStatement\"].concat(args));\n}\n\nfunction unaryExpression() {\n  for (var _len46 = arguments.length, args = new Array(_len46), _key46 = 0; _key46 < _len46; _key46++) {\n    args[_key46] = arguments[_key46];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"UnaryExpression\"].concat(args));\n}\n\nfunction updateExpression() {\n  for (var _len47 = arguments.length, args = new Array(_len47), _key47 = 0; _key47 < _len47; _key47++) {\n    args[_key47] = arguments[_key47];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"UpdateExpression\"].concat(args));\n}\n\nfunction variableDeclaration() {\n  for (var _len48 = arguments.length, args = new Array(_len48), _key48 = 0; _key48 < _len48; _key48++) {\n    args[_key48] = arguments[_key48];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"VariableDeclaration\"].concat(args));\n}\n\nfunction variableDeclarator() {\n  for (var _len49 = arguments.length, args = new Array(_len49), _key49 = 0; _key49 < _len49; _key49++) {\n    args[_key49] = arguments[_key49];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"VariableDeclarator\"].concat(args));\n}\n\nfunction whileStatement() {\n  for (var _len50 = arguments.length, args = new Array(_len50), _key50 = 0; _key50 < _len50; _key50++) {\n    args[_key50] = arguments[_key50];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"WhileStatement\"].concat(args));\n}\n\nfunction withStatement() {\n  for (var _len51 = arguments.length, args = new Array(_len51), _key51 = 0; _key51 < _len51; _key51++) {\n    args[_key51] = arguments[_key51];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"WithStatement\"].concat(args));\n}\n\nfunction assignmentPattern() {\n  for (var _len52 = arguments.length, args = new Array(_len52), _key52 = 0; _key52 < _len52; _key52++) {\n    args[_key52] = arguments[_key52];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"AssignmentPattern\"].concat(args));\n}\n\nfunction arrayPattern() {\n  for (var _len53 = arguments.length, args = new Array(_len53), _key53 = 0; _key53 < _len53; _key53++) {\n    args[_key53] = arguments[_key53];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ArrayPattern\"].concat(args));\n}\n\nfunction arrowFunctionExpression() {\n  for (var _len54 = arguments.length, args = new Array(_len54), _key54 = 0; _key54 < _len54; _key54++) {\n    args[_key54] = arguments[_key54];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ArrowFunctionExpression\"].concat(args));\n}\n\nfunction classBody() {\n  for (var _len55 = arguments.length, args = new Array(_len55), _key55 = 0; _key55 < _len55; _key55++) {\n    args[_key55] = arguments[_key55];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassBody\"].concat(args));\n}\n\nfunction classExpression() {\n  for (var _len56 = arguments.length, args = new Array(_len56), _key56 = 0; _key56 < _len56; _key56++) {\n    args[_key56] = arguments[_key56];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassExpression\"].concat(args));\n}\n\nfunction classDeclaration() {\n  for (var _len57 = arguments.length, args = new Array(_len57), _key57 = 0; _key57 < _len57; _key57++) {\n    args[_key57] = arguments[_key57];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassDeclaration\"].concat(args));\n}\n\nfunction exportAllDeclaration() {\n  for (var _len58 = arguments.length, args = new Array(_len58), _key58 = 0; _key58 < _len58; _key58++) {\n    args[_key58] = arguments[_key58];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportAllDeclaration\"].concat(args));\n}\n\nfunction exportDefaultDeclaration() {\n  for (var _len59 = arguments.length, args = new Array(_len59), _key59 = 0; _key59 < _len59; _key59++) {\n    args[_key59] = arguments[_key59];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportDefaultDeclaration\"].concat(args));\n}\n\nfunction exportNamedDeclaration() {\n  for (var _len60 = arguments.length, args = new Array(_len60), _key60 = 0; _key60 < _len60; _key60++) {\n    args[_key60] = arguments[_key60];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportNamedDeclaration\"].concat(args));\n}\n\nfunction exportSpecifier() {\n  for (var _len61 = arguments.length, args = new Array(_len61), _key61 = 0; _key61 < _len61; _key61++) {\n    args[_key61] = arguments[_key61];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportSpecifier\"].concat(args));\n}\n\nfunction forOfStatement() {\n  for (var _len62 = arguments.length, args = new Array(_len62), _key62 = 0; _key62 < _len62; _key62++) {\n    args[_key62] = arguments[_key62];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ForOfStatement\"].concat(args));\n}\n\nfunction importDeclaration() {\n  for (var _len63 = arguments.length, args = new Array(_len63), _key63 = 0; _key63 < _len63; _key63++) {\n    args[_key63] = arguments[_key63];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ImportDeclaration\"].concat(args));\n}\n\nfunction importDefaultSpecifier() {\n  for (var _len64 = arguments.length, args = new Array(_len64), _key64 = 0; _key64 < _len64; _key64++) {\n    args[_key64] = arguments[_key64];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ImportDefaultSpecifier\"].concat(args));\n}\n\nfunction importNamespaceSpecifier() {\n  for (var _len65 = arguments.length, args = new Array(_len65), _key65 = 0; _key65 < _len65; _key65++) {\n    args[_key65] = arguments[_key65];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ImportNamespaceSpecifier\"].concat(args));\n}\n\nfunction importSpecifier() {\n  for (var _len66 = arguments.length, args = new Array(_len66), _key66 = 0; _key66 < _len66; _key66++) {\n    args[_key66] = arguments[_key66];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ImportSpecifier\"].concat(args));\n}\n\nfunction metaProperty() {\n  for (var _len67 = arguments.length, args = new Array(_len67), _key67 = 0; _key67 < _len67; _key67++) {\n    args[_key67] = arguments[_key67];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"MetaProperty\"].concat(args));\n}\n\nfunction classMethod() {\n  for (var _len68 = arguments.length, args = new Array(_len68), _key68 = 0; _key68 < _len68; _key68++) {\n    args[_key68] = arguments[_key68];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassMethod\"].concat(args));\n}\n\nfunction objectPattern() {\n  for (var _len69 = arguments.length, args = new Array(_len69), _key69 = 0; _key69 < _len69; _key69++) {\n    args[_key69] = arguments[_key69];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectPattern\"].concat(args));\n}\n\nfunction spreadElement() {\n  for (var _len70 = arguments.length, args = new Array(_len70), _key70 = 0; _key70 < _len70; _key70++) {\n    args[_key70] = arguments[_key70];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SpreadElement\"].concat(args));\n}\n\nfunction _super() {\n  for (var _len71 = arguments.length, args = new Array(_len71), _key71 = 0; _key71 < _len71; _key71++) {\n    args[_key71] = arguments[_key71];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Super\"].concat(args));\n}\n\nfunction taggedTemplateExpression() {\n  for (var _len72 = arguments.length, args = new Array(_len72), _key72 = 0; _key72 < _len72; _key72++) {\n    args[_key72] = arguments[_key72];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TaggedTemplateExpression\"].concat(args));\n}\n\nfunction templateElement() {\n  for (var _len73 = arguments.length, args = new Array(_len73), _key73 = 0; _key73 < _len73; _key73++) {\n    args[_key73] = arguments[_key73];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TemplateElement\"].concat(args));\n}\n\nfunction templateLiteral() {\n  for (var _len74 = arguments.length, args = new Array(_len74), _key74 = 0; _key74 < _len74; _key74++) {\n    args[_key74] = arguments[_key74];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TemplateLiteral\"].concat(args));\n}\n\nfunction yieldExpression() {\n  for (var _len75 = arguments.length, args = new Array(_len75), _key75 = 0; _key75 < _len75; _key75++) {\n    args[_key75] = arguments[_key75];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"YieldExpression\"].concat(args));\n}\n\nfunction awaitExpression() {\n  for (var _len76 = arguments.length, args = new Array(_len76), _key76 = 0; _key76 < _len76; _key76++) {\n    args[_key76] = arguments[_key76];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"AwaitExpression\"].concat(args));\n}\n\nfunction _import() {\n  for (var _len77 = arguments.length, args = new Array(_len77), _key77 = 0; _key77 < _len77; _key77++) {\n    args[_key77] = arguments[_key77];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Import\"].concat(args));\n}\n\nfunction bigIntLiteral() {\n  for (var _len78 = arguments.length, args = new Array(_len78), _key78 = 0; _key78 < _len78; _key78++) {\n    args[_key78] = arguments[_key78];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BigIntLiteral\"].concat(args));\n}\n\nfunction exportNamespaceSpecifier() {\n  for (var _len79 = arguments.length, args = new Array(_len79), _key79 = 0; _key79 < _len79; _key79++) {\n    args[_key79] = arguments[_key79];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportNamespaceSpecifier\"].concat(args));\n}\n\nfunction optionalMemberExpression() {\n  for (var _len80 = arguments.length, args = new Array(_len80), _key80 = 0; _key80 < _len80; _key80++) {\n    args[_key80] = arguments[_key80];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"OptionalMemberExpression\"].concat(args));\n}\n\nfunction optionalCallExpression() {\n  for (var _len81 = arguments.length, args = new Array(_len81), _key81 = 0; _key81 < _len81; _key81++) {\n    args[_key81] = arguments[_key81];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"OptionalCallExpression\"].concat(args));\n}\n\nfunction anyTypeAnnotation() {\n  for (var _len82 = arguments.length, args = new Array(_len82), _key82 = 0; _key82 < _len82; _key82++) {\n    args[_key82] = arguments[_key82];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"AnyTypeAnnotation\"].concat(args));\n}\n\nfunction arrayTypeAnnotation() {\n  for (var _len83 = arguments.length, args = new Array(_len83), _key83 = 0; _key83 < _len83; _key83++) {\n    args[_key83] = arguments[_key83];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ArrayTypeAnnotation\"].concat(args));\n}\n\nfunction booleanTypeAnnotation() {\n  for (var _len84 = arguments.length, args = new Array(_len84), _key84 = 0; _key84 < _len84; _key84++) {\n    args[_key84] = arguments[_key84];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BooleanTypeAnnotation\"].concat(args));\n}\n\nfunction booleanLiteralTypeAnnotation() {\n  for (var _len85 = arguments.length, args = new Array(_len85), _key85 = 0; _key85 < _len85; _key85++) {\n    args[_key85] = arguments[_key85];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BooleanLiteralTypeAnnotation\"].concat(args));\n}\n\nfunction nullLiteralTypeAnnotation() {\n  for (var _len86 = arguments.length, args = new Array(_len86), _key86 = 0; _key86 < _len86; _key86++) {\n    args[_key86] = arguments[_key86];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NullLiteralTypeAnnotation\"].concat(args));\n}\n\nfunction classImplements() {\n  for (var _len87 = arguments.length, args = new Array(_len87), _key87 = 0; _key87 < _len87; _key87++) {\n    args[_key87] = arguments[_key87];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassImplements\"].concat(args));\n}\n\nfunction declareClass() {\n  for (var _len88 = arguments.length, args = new Array(_len88), _key88 = 0; _key88 < _len88; _key88++) {\n    args[_key88] = arguments[_key88];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareClass\"].concat(args));\n}\n\nfunction declareFunction() {\n  for (var _len89 = arguments.length, args = new Array(_len89), _key89 = 0; _key89 < _len89; _key89++) {\n    args[_key89] = arguments[_key89];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareFunction\"].concat(args));\n}\n\nfunction declareInterface() {\n  for (var _len90 = arguments.length, args = new Array(_len90), _key90 = 0; _key90 < _len90; _key90++) {\n    args[_key90] = arguments[_key90];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareInterface\"].concat(args));\n}\n\nfunction declareModule() {\n  for (var _len91 = arguments.length, args = new Array(_len91), _key91 = 0; _key91 < _len91; _key91++) {\n    args[_key91] = arguments[_key91];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareModule\"].concat(args));\n}\n\nfunction declareModuleExports() {\n  for (var _len92 = arguments.length, args = new Array(_len92), _key92 = 0; _key92 < _len92; _key92++) {\n    args[_key92] = arguments[_key92];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareModuleExports\"].concat(args));\n}\n\nfunction declareTypeAlias() {\n  for (var _len93 = arguments.length, args = new Array(_len93), _key93 = 0; _key93 < _len93; _key93++) {\n    args[_key93] = arguments[_key93];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareTypeAlias\"].concat(args));\n}\n\nfunction declareOpaqueType() {\n  for (var _len94 = arguments.length, args = new Array(_len94), _key94 = 0; _key94 < _len94; _key94++) {\n    args[_key94] = arguments[_key94];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareOpaqueType\"].concat(args));\n}\n\nfunction declareVariable() {\n  for (var _len95 = arguments.length, args = new Array(_len95), _key95 = 0; _key95 < _len95; _key95++) {\n    args[_key95] = arguments[_key95];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareVariable\"].concat(args));\n}\n\nfunction declareExportDeclaration() {\n  for (var _len96 = arguments.length, args = new Array(_len96), _key96 = 0; _key96 < _len96; _key96++) {\n    args[_key96] = arguments[_key96];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareExportDeclaration\"].concat(args));\n}\n\nfunction declareExportAllDeclaration() {\n  for (var _len97 = arguments.length, args = new Array(_len97), _key97 = 0; _key97 < _len97; _key97++) {\n    args[_key97] = arguments[_key97];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclareExportAllDeclaration\"].concat(args));\n}\n\nfunction declaredPredicate() {\n  for (var _len98 = arguments.length, args = new Array(_len98), _key98 = 0; _key98 < _len98; _key98++) {\n    args[_key98] = arguments[_key98];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DeclaredPredicate\"].concat(args));\n}\n\nfunction existsTypeAnnotation() {\n  for (var _len99 = arguments.length, args = new Array(_len99), _key99 = 0; _key99 < _len99; _key99++) {\n    args[_key99] = arguments[_key99];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExistsTypeAnnotation\"].concat(args));\n}\n\nfunction functionTypeAnnotation() {\n  for (var _len100 = arguments.length, args = new Array(_len100), _key100 = 0; _key100 < _len100; _key100++) {\n    args[_key100] = arguments[_key100];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"FunctionTypeAnnotation\"].concat(args));\n}\n\nfunction functionTypeParam() {\n  for (var _len101 = arguments.length, args = new Array(_len101), _key101 = 0; _key101 < _len101; _key101++) {\n    args[_key101] = arguments[_key101];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"FunctionTypeParam\"].concat(args));\n}\n\nfunction genericTypeAnnotation() {\n  for (var _len102 = arguments.length, args = new Array(_len102), _key102 = 0; _key102 < _len102; _key102++) {\n    args[_key102] = arguments[_key102];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"GenericTypeAnnotation\"].concat(args));\n}\n\nfunction inferredPredicate() {\n  for (var _len103 = arguments.length, args = new Array(_len103), _key103 = 0; _key103 < _len103; _key103++) {\n    args[_key103] = arguments[_key103];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"InferredPredicate\"].concat(args));\n}\n\nfunction interfaceExtends() {\n  for (var _len104 = arguments.length, args = new Array(_len104), _key104 = 0; _key104 < _len104; _key104++) {\n    args[_key104] = arguments[_key104];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"InterfaceExtends\"].concat(args));\n}\n\nfunction interfaceDeclaration() {\n  for (var _len105 = arguments.length, args = new Array(_len105), _key105 = 0; _key105 < _len105; _key105++) {\n    args[_key105] = arguments[_key105];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"InterfaceDeclaration\"].concat(args));\n}\n\nfunction interfaceTypeAnnotation() {\n  for (var _len106 = arguments.length, args = new Array(_len106), _key106 = 0; _key106 < _len106; _key106++) {\n    args[_key106] = arguments[_key106];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"InterfaceTypeAnnotation\"].concat(args));\n}\n\nfunction intersectionTypeAnnotation() {\n  for (var _len107 = arguments.length, args = new Array(_len107), _key107 = 0; _key107 < _len107; _key107++) {\n    args[_key107] = arguments[_key107];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"IntersectionTypeAnnotation\"].concat(args));\n}\n\nfunction mixedTypeAnnotation() {\n  for (var _len108 = arguments.length, args = new Array(_len108), _key108 = 0; _key108 < _len108; _key108++) {\n    args[_key108] = arguments[_key108];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"MixedTypeAnnotation\"].concat(args));\n}\n\nfunction emptyTypeAnnotation() {\n  for (var _len109 = arguments.length, args = new Array(_len109), _key109 = 0; _key109 < _len109; _key109++) {\n    args[_key109] = arguments[_key109];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EmptyTypeAnnotation\"].concat(args));\n}\n\nfunction nullableTypeAnnotation() {\n  for (var _len110 = arguments.length, args = new Array(_len110), _key110 = 0; _key110 < _len110; _key110++) {\n    args[_key110] = arguments[_key110];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NullableTypeAnnotation\"].concat(args));\n}\n\nfunction numberLiteralTypeAnnotation() {\n  for (var _len111 = arguments.length, args = new Array(_len111), _key111 = 0; _key111 < _len111; _key111++) {\n    args[_key111] = arguments[_key111];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NumberLiteralTypeAnnotation\"].concat(args));\n}\n\nfunction numberTypeAnnotation() {\n  for (var _len112 = arguments.length, args = new Array(_len112), _key112 = 0; _key112 < _len112; _key112++) {\n    args[_key112] = arguments[_key112];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NumberTypeAnnotation\"].concat(args));\n}\n\nfunction objectTypeAnnotation() {\n  for (var _len113 = arguments.length, args = new Array(_len113), _key113 = 0; _key113 < _len113; _key113++) {\n    args[_key113] = arguments[_key113];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeAnnotation\"].concat(args));\n}\n\nfunction objectTypeInternalSlot() {\n  for (var _len114 = arguments.length, args = new Array(_len114), _key114 = 0; _key114 < _len114; _key114++) {\n    args[_key114] = arguments[_key114];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeInternalSlot\"].concat(args));\n}\n\nfunction objectTypeCallProperty() {\n  for (var _len115 = arguments.length, args = new Array(_len115), _key115 = 0; _key115 < _len115; _key115++) {\n    args[_key115] = arguments[_key115];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeCallProperty\"].concat(args));\n}\n\nfunction objectTypeIndexer() {\n  for (var _len116 = arguments.length, args = new Array(_len116), _key116 = 0; _key116 < _len116; _key116++) {\n    args[_key116] = arguments[_key116];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeIndexer\"].concat(args));\n}\n\nfunction objectTypeProperty() {\n  for (var _len117 = arguments.length, args = new Array(_len117), _key117 = 0; _key117 < _len117; _key117++) {\n    args[_key117] = arguments[_key117];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeProperty\"].concat(args));\n}\n\nfunction objectTypeSpreadProperty() {\n  for (var _len118 = arguments.length, args = new Array(_len118), _key118 = 0; _key118 < _len118; _key118++) {\n    args[_key118] = arguments[_key118];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ObjectTypeSpreadProperty\"].concat(args));\n}\n\nfunction opaqueType() {\n  for (var _len119 = arguments.length, args = new Array(_len119), _key119 = 0; _key119 < _len119; _key119++) {\n    args[_key119] = arguments[_key119];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"OpaqueType\"].concat(args));\n}\n\nfunction qualifiedTypeIdentifier() {\n  for (var _len120 = arguments.length, args = new Array(_len120), _key120 = 0; _key120 < _len120; _key120++) {\n    args[_key120] = arguments[_key120];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"QualifiedTypeIdentifier\"].concat(args));\n}\n\nfunction stringLiteralTypeAnnotation() {\n  for (var _len121 = arguments.length, args = new Array(_len121), _key121 = 0; _key121 < _len121; _key121++) {\n    args[_key121] = arguments[_key121];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"StringLiteralTypeAnnotation\"].concat(args));\n}\n\nfunction stringTypeAnnotation() {\n  for (var _len122 = arguments.length, args = new Array(_len122), _key122 = 0; _key122 < _len122; _key122++) {\n    args[_key122] = arguments[_key122];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"StringTypeAnnotation\"].concat(args));\n}\n\nfunction symbolTypeAnnotation() {\n  for (var _len123 = arguments.length, args = new Array(_len123), _key123 = 0; _key123 < _len123; _key123++) {\n    args[_key123] = arguments[_key123];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SymbolTypeAnnotation\"].concat(args));\n}\n\nfunction thisTypeAnnotation() {\n  for (var _len124 = arguments.length, args = new Array(_len124), _key124 = 0; _key124 < _len124; _key124++) {\n    args[_key124] = arguments[_key124];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ThisTypeAnnotation\"].concat(args));\n}\n\nfunction tupleTypeAnnotation() {\n  for (var _len125 = arguments.length, args = new Array(_len125), _key125 = 0; _key125 < _len125; _key125++) {\n    args[_key125] = arguments[_key125];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TupleTypeAnnotation\"].concat(args));\n}\n\nfunction typeofTypeAnnotation() {\n  for (var _len126 = arguments.length, args = new Array(_len126), _key126 = 0; _key126 < _len126; _key126++) {\n    args[_key126] = arguments[_key126];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeofTypeAnnotation\"].concat(args));\n}\n\nfunction typeAlias() {\n  for (var _len127 = arguments.length, args = new Array(_len127), _key127 = 0; _key127 < _len127; _key127++) {\n    args[_key127] = arguments[_key127];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeAlias\"].concat(args));\n}\n\nfunction typeAnnotation() {\n  for (var _len128 = arguments.length, args = new Array(_len128), _key128 = 0; _key128 < _len128; _key128++) {\n    args[_key128] = arguments[_key128];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeAnnotation\"].concat(args));\n}\n\nfunction typeCastExpression() {\n  for (var _len129 = arguments.length, args = new Array(_len129), _key129 = 0; _key129 < _len129; _key129++) {\n    args[_key129] = arguments[_key129];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeCastExpression\"].concat(args));\n}\n\nfunction typeParameter() {\n  for (var _len130 = arguments.length, args = new Array(_len130), _key130 = 0; _key130 < _len130; _key130++) {\n    args[_key130] = arguments[_key130];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeParameter\"].concat(args));\n}\n\nfunction typeParameterDeclaration() {\n  for (var _len131 = arguments.length, args = new Array(_len131), _key131 = 0; _key131 < _len131; _key131++) {\n    args[_key131] = arguments[_key131];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeParameterDeclaration\"].concat(args));\n}\n\nfunction typeParameterInstantiation() {\n  for (var _len132 = arguments.length, args = new Array(_len132), _key132 = 0; _key132 < _len132; _key132++) {\n    args[_key132] = arguments[_key132];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TypeParameterInstantiation\"].concat(args));\n}\n\nfunction unionTypeAnnotation() {\n  for (var _len133 = arguments.length, args = new Array(_len133), _key133 = 0; _key133 < _len133; _key133++) {\n    args[_key133] = arguments[_key133];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"UnionTypeAnnotation\"].concat(args));\n}\n\nfunction variance() {\n  for (var _len134 = arguments.length, args = new Array(_len134), _key134 = 0; _key134 < _len134; _key134++) {\n    args[_key134] = arguments[_key134];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Variance\"].concat(args));\n}\n\nfunction voidTypeAnnotation() {\n  for (var _len135 = arguments.length, args = new Array(_len135), _key135 = 0; _key135 < _len135; _key135++) {\n    args[_key135] = arguments[_key135];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"VoidTypeAnnotation\"].concat(args));\n}\n\nfunction enumDeclaration() {\n  for (var _len136 = arguments.length, args = new Array(_len136), _key136 = 0; _key136 < _len136; _key136++) {\n    args[_key136] = arguments[_key136];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumDeclaration\"].concat(args));\n}\n\nfunction enumBooleanBody() {\n  for (var _len137 = arguments.length, args = new Array(_len137), _key137 = 0; _key137 < _len137; _key137++) {\n    args[_key137] = arguments[_key137];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumBooleanBody\"].concat(args));\n}\n\nfunction enumNumberBody() {\n  for (var _len138 = arguments.length, args = new Array(_len138), _key138 = 0; _key138 < _len138; _key138++) {\n    args[_key138] = arguments[_key138];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumNumberBody\"].concat(args));\n}\n\nfunction enumStringBody() {\n  for (var _len139 = arguments.length, args = new Array(_len139), _key139 = 0; _key139 < _len139; _key139++) {\n    args[_key139] = arguments[_key139];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumStringBody\"].concat(args));\n}\n\nfunction enumSymbolBody() {\n  for (var _len140 = arguments.length, args = new Array(_len140), _key140 = 0; _key140 < _len140; _key140++) {\n    args[_key140] = arguments[_key140];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumSymbolBody\"].concat(args));\n}\n\nfunction enumBooleanMember() {\n  for (var _len141 = arguments.length, args = new Array(_len141), _key141 = 0; _key141 < _len141; _key141++) {\n    args[_key141] = arguments[_key141];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumBooleanMember\"].concat(args));\n}\n\nfunction enumNumberMember() {\n  for (var _len142 = arguments.length, args = new Array(_len142), _key142 = 0; _key142 < _len142; _key142++) {\n    args[_key142] = arguments[_key142];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumNumberMember\"].concat(args));\n}\n\nfunction enumStringMember() {\n  for (var _len143 = arguments.length, args = new Array(_len143), _key143 = 0; _key143 < _len143; _key143++) {\n    args[_key143] = arguments[_key143];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumStringMember\"].concat(args));\n}\n\nfunction enumDefaultedMember() {\n  for (var _len144 = arguments.length, args = new Array(_len144), _key144 = 0; _key144 < _len144; _key144++) {\n    args[_key144] = arguments[_key144];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"EnumDefaultedMember\"].concat(args));\n}\n\nfunction jsxAttribute() {\n  for (var _len145 = arguments.length, args = new Array(_len145), _key145 = 0; _key145 < _len145; _key145++) {\n    args[_key145] = arguments[_key145];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXAttribute\"].concat(args));\n}\n\nfunction jsxClosingElement() {\n  for (var _len146 = arguments.length, args = new Array(_len146), _key146 = 0; _key146 < _len146; _key146++) {\n    args[_key146] = arguments[_key146];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXClosingElement\"].concat(args));\n}\n\nfunction jsxElement() {\n  for (var _len147 = arguments.length, args = new Array(_len147), _key147 = 0; _key147 < _len147; _key147++) {\n    args[_key147] = arguments[_key147];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXElement\"].concat(args));\n}\n\nfunction jsxEmptyExpression() {\n  for (var _len148 = arguments.length, args = new Array(_len148), _key148 = 0; _key148 < _len148; _key148++) {\n    args[_key148] = arguments[_key148];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXEmptyExpression\"].concat(args));\n}\n\nfunction jsxExpressionContainer() {\n  for (var _len149 = arguments.length, args = new Array(_len149), _key149 = 0; _key149 < _len149; _key149++) {\n    args[_key149] = arguments[_key149];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXExpressionContainer\"].concat(args));\n}\n\nfunction jsxSpreadChild() {\n  for (var _len150 = arguments.length, args = new Array(_len150), _key150 = 0; _key150 < _len150; _key150++) {\n    args[_key150] = arguments[_key150];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXSpreadChild\"].concat(args));\n}\n\nfunction jsxIdentifier() {\n  for (var _len151 = arguments.length, args = new Array(_len151), _key151 = 0; _key151 < _len151; _key151++) {\n    args[_key151] = arguments[_key151];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXIdentifier\"].concat(args));\n}\n\nfunction jsxMemberExpression() {\n  for (var _len152 = arguments.length, args = new Array(_len152), _key152 = 0; _key152 < _len152; _key152++) {\n    args[_key152] = arguments[_key152];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXMemberExpression\"].concat(args));\n}\n\nfunction jsxNamespacedName() {\n  for (var _len153 = arguments.length, args = new Array(_len153), _key153 = 0; _key153 < _len153; _key153++) {\n    args[_key153] = arguments[_key153];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXNamespacedName\"].concat(args));\n}\n\nfunction jsxOpeningElement() {\n  for (var _len154 = arguments.length, args = new Array(_len154), _key154 = 0; _key154 < _len154; _key154++) {\n    args[_key154] = arguments[_key154];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXOpeningElement\"].concat(args));\n}\n\nfunction jsxSpreadAttribute() {\n  for (var _len155 = arguments.length, args = new Array(_len155), _key155 = 0; _key155 < _len155; _key155++) {\n    args[_key155] = arguments[_key155];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXSpreadAttribute\"].concat(args));\n}\n\nfunction jsxText() {\n  for (var _len156 = arguments.length, args = new Array(_len156), _key156 = 0; _key156 < _len156; _key156++) {\n    args[_key156] = arguments[_key156];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXText\"].concat(args));\n}\n\nfunction jsxFragment() {\n  for (var _len157 = arguments.length, args = new Array(_len157), _key157 = 0; _key157 < _len157; _key157++) {\n    args[_key157] = arguments[_key157];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXFragment\"].concat(args));\n}\n\nfunction jsxOpeningFragment() {\n  for (var _len158 = arguments.length, args = new Array(_len158), _key158 = 0; _key158 < _len158; _key158++) {\n    args[_key158] = arguments[_key158];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXOpeningFragment\"].concat(args));\n}\n\nfunction jsxClosingFragment() {\n  for (var _len159 = arguments.length, args = new Array(_len159), _key159 = 0; _key159 < _len159; _key159++) {\n    args[_key159] = arguments[_key159];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"JSXClosingFragment\"].concat(args));\n}\n\nfunction noop() {\n  for (var _len160 = arguments.length, args = new Array(_len160), _key160 = 0; _key160 < _len160; _key160++) {\n    args[_key160] = arguments[_key160];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Noop\"].concat(args));\n}\n\nfunction placeholder() {\n  for (var _len161 = arguments.length, args = new Array(_len161), _key161 = 0; _key161 < _len161; _key161++) {\n    args[_key161] = arguments[_key161];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Placeholder\"].concat(args));\n}\n\nfunction v8IntrinsicIdentifier() {\n  for (var _len162 = arguments.length, args = new Array(_len162), _key162 = 0; _key162 < _len162; _key162++) {\n    args[_key162] = arguments[_key162];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"V8IntrinsicIdentifier\"].concat(args));\n}\n\nfunction argumentPlaceholder() {\n  for (var _len163 = arguments.length, args = new Array(_len163), _key163 = 0; _key163 < _len163; _key163++) {\n    args[_key163] = arguments[_key163];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ArgumentPlaceholder\"].concat(args));\n}\n\nfunction bindExpression() {\n  for (var _len164 = arguments.length, args = new Array(_len164), _key164 = 0; _key164 < _len164; _key164++) {\n    args[_key164] = arguments[_key164];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"BindExpression\"].concat(args));\n}\n\nfunction classProperty() {\n  for (var _len165 = arguments.length, args = new Array(_len165), _key165 = 0; _key165 < _len165; _key165++) {\n    args[_key165] = arguments[_key165];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassProperty\"].concat(args));\n}\n\nfunction pipelineTopicExpression() {\n  for (var _len166 = arguments.length, args = new Array(_len166), _key166 = 0; _key166 < _len166; _key166++) {\n    args[_key166] = arguments[_key166];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"PipelineTopicExpression\"].concat(args));\n}\n\nfunction pipelineBareFunction() {\n  for (var _len167 = arguments.length, args = new Array(_len167), _key167 = 0; _key167 < _len167; _key167++) {\n    args[_key167] = arguments[_key167];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"PipelineBareFunction\"].concat(args));\n}\n\nfunction pipelinePrimaryTopicReference() {\n  for (var _len168 = arguments.length, args = new Array(_len168), _key168 = 0; _key168 < _len168; _key168++) {\n    args[_key168] = arguments[_key168];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"PipelinePrimaryTopicReference\"].concat(args));\n}\n\nfunction classPrivateProperty() {\n  for (var _len169 = arguments.length, args = new Array(_len169), _key169 = 0; _key169 < _len169; _key169++) {\n    args[_key169] = arguments[_key169];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassPrivateProperty\"].concat(args));\n}\n\nfunction classPrivateMethod() {\n  for (var _len170 = arguments.length, args = new Array(_len170), _key170 = 0; _key170 < _len170; _key170++) {\n    args[_key170] = arguments[_key170];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ClassPrivateMethod\"].concat(args));\n}\n\nfunction importAttribute() {\n  for (var _len171 = arguments.length, args = new Array(_len171), _key171 = 0; _key171 < _len171; _key171++) {\n    args[_key171] = arguments[_key171];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ImportAttribute\"].concat(args));\n}\n\nfunction decorator() {\n  for (var _len172 = arguments.length, args = new Array(_len172), _key172 = 0; _key172 < _len172; _key172++) {\n    args[_key172] = arguments[_key172];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"Decorator\"].concat(args));\n}\n\nfunction doExpression() {\n  for (var _len173 = arguments.length, args = new Array(_len173), _key173 = 0; _key173 < _len173; _key173++) {\n    args[_key173] = arguments[_key173];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DoExpression\"].concat(args));\n}\n\nfunction exportDefaultSpecifier() {\n  for (var _len174 = arguments.length, args = new Array(_len174), _key174 = 0; _key174 < _len174; _key174++) {\n    args[_key174] = arguments[_key174];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"ExportDefaultSpecifier\"].concat(args));\n}\n\nfunction privateName() {\n  for (var _len175 = arguments.length, args = new Array(_len175), _key175 = 0; _key175 < _len175; _key175++) {\n    args[_key175] = arguments[_key175];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"PrivateName\"].concat(args));\n}\n\nfunction recordExpression() {\n  for (var _len176 = arguments.length, args = new Array(_len176), _key176 = 0; _key176 < _len176; _key176++) {\n    args[_key176] = arguments[_key176];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"RecordExpression\"].concat(args));\n}\n\nfunction tupleExpression() {\n  for (var _len177 = arguments.length, args = new Array(_len177), _key177 = 0; _key177 < _len177; _key177++) {\n    args[_key177] = arguments[_key177];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TupleExpression\"].concat(args));\n}\n\nfunction decimalLiteral() {\n  for (var _len178 = arguments.length, args = new Array(_len178), _key178 = 0; _key178 < _len178; _key178++) {\n    args[_key178] = arguments[_key178];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"DecimalLiteral\"].concat(args));\n}\n\nfunction staticBlock() {\n  for (var _len179 = arguments.length, args = new Array(_len179), _key179 = 0; _key179 < _len179; _key179++) {\n    args[_key179] = arguments[_key179];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"StaticBlock\"].concat(args));\n}\n\nfunction tsParameterProperty() {\n  for (var _len180 = arguments.length, args = new Array(_len180), _key180 = 0; _key180 < _len180; _key180++) {\n    args[_key180] = arguments[_key180];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSParameterProperty\"].concat(args));\n}\n\nfunction tsDeclareFunction() {\n  for (var _len181 = arguments.length, args = new Array(_len181), _key181 = 0; _key181 < _len181; _key181++) {\n    args[_key181] = arguments[_key181];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSDeclareFunction\"].concat(args));\n}\n\nfunction tsDeclareMethod() {\n  for (var _len182 = arguments.length, args = new Array(_len182), _key182 = 0; _key182 < _len182; _key182++) {\n    args[_key182] = arguments[_key182];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSDeclareMethod\"].concat(args));\n}\n\nfunction tsQualifiedName() {\n  for (var _len183 = arguments.length, args = new Array(_len183), _key183 = 0; _key183 < _len183; _key183++) {\n    args[_key183] = arguments[_key183];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSQualifiedName\"].concat(args));\n}\n\nfunction tsCallSignatureDeclaration() {\n  for (var _len184 = arguments.length, args = new Array(_len184), _key184 = 0; _key184 < _len184; _key184++) {\n    args[_key184] = arguments[_key184];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSCallSignatureDeclaration\"].concat(args));\n}\n\nfunction tsConstructSignatureDeclaration() {\n  for (var _len185 = arguments.length, args = new Array(_len185), _key185 = 0; _key185 < _len185; _key185++) {\n    args[_key185] = arguments[_key185];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSConstructSignatureDeclaration\"].concat(args));\n}\n\nfunction tsPropertySignature() {\n  for (var _len186 = arguments.length, args = new Array(_len186), _key186 = 0; _key186 < _len186; _key186++) {\n    args[_key186] = arguments[_key186];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSPropertySignature\"].concat(args));\n}\n\nfunction tsMethodSignature() {\n  for (var _len187 = arguments.length, args = new Array(_len187), _key187 = 0; _key187 < _len187; _key187++) {\n    args[_key187] = arguments[_key187];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSMethodSignature\"].concat(args));\n}\n\nfunction tsIndexSignature() {\n  for (var _len188 = arguments.length, args = new Array(_len188), _key188 = 0; _key188 < _len188; _key188++) {\n    args[_key188] = arguments[_key188];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSIndexSignature\"].concat(args));\n}\n\nfunction tsAnyKeyword() {\n  for (var _len189 = arguments.length, args = new Array(_len189), _key189 = 0; _key189 < _len189; _key189++) {\n    args[_key189] = arguments[_key189];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSAnyKeyword\"].concat(args));\n}\n\nfunction tsBooleanKeyword() {\n  for (var _len190 = arguments.length, args = new Array(_len190), _key190 = 0; _key190 < _len190; _key190++) {\n    args[_key190] = arguments[_key190];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSBooleanKeyword\"].concat(args));\n}\n\nfunction tsBigIntKeyword() {\n  for (var _len191 = arguments.length, args = new Array(_len191), _key191 = 0; _key191 < _len191; _key191++) {\n    args[_key191] = arguments[_key191];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSBigIntKeyword\"].concat(args));\n}\n\nfunction tsIntrinsicKeyword() {\n  for (var _len192 = arguments.length, args = new Array(_len192), _key192 = 0; _key192 < _len192; _key192++) {\n    args[_key192] = arguments[_key192];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSIntrinsicKeyword\"].concat(args));\n}\n\nfunction tsNeverKeyword() {\n  for (var _len193 = arguments.length, args = new Array(_len193), _key193 = 0; _key193 < _len193; _key193++) {\n    args[_key193] = arguments[_key193];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNeverKeyword\"].concat(args));\n}\n\nfunction tsNullKeyword() {\n  for (var _len194 = arguments.length, args = new Array(_len194), _key194 = 0; _key194 < _len194; _key194++) {\n    args[_key194] = arguments[_key194];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNullKeyword\"].concat(args));\n}\n\nfunction tsNumberKeyword() {\n  for (var _len195 = arguments.length, args = new Array(_len195), _key195 = 0; _key195 < _len195; _key195++) {\n    args[_key195] = arguments[_key195];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNumberKeyword\"].concat(args));\n}\n\nfunction tsObjectKeyword() {\n  for (var _len196 = arguments.length, args = new Array(_len196), _key196 = 0; _key196 < _len196; _key196++) {\n    args[_key196] = arguments[_key196];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSObjectKeyword\"].concat(args));\n}\n\nfunction tsStringKeyword() {\n  for (var _len197 = arguments.length, args = new Array(_len197), _key197 = 0; _key197 < _len197; _key197++) {\n    args[_key197] = arguments[_key197];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSStringKeyword\"].concat(args));\n}\n\nfunction tsSymbolKeyword() {\n  for (var _len198 = arguments.length, args = new Array(_len198), _key198 = 0; _key198 < _len198; _key198++) {\n    args[_key198] = arguments[_key198];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSSymbolKeyword\"].concat(args));\n}\n\nfunction tsUndefinedKeyword() {\n  for (var _len199 = arguments.length, args = new Array(_len199), _key199 = 0; _key199 < _len199; _key199++) {\n    args[_key199] = arguments[_key199];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSUndefinedKeyword\"].concat(args));\n}\n\nfunction tsUnknownKeyword() {\n  for (var _len200 = arguments.length, args = new Array(_len200), _key200 = 0; _key200 < _len200; _key200++) {\n    args[_key200] = arguments[_key200];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSUnknownKeyword\"].concat(args));\n}\n\nfunction tsVoidKeyword() {\n  for (var _len201 = arguments.length, args = new Array(_len201), _key201 = 0; _key201 < _len201; _key201++) {\n    args[_key201] = arguments[_key201];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSVoidKeyword\"].concat(args));\n}\n\nfunction tsThisType() {\n  for (var _len202 = arguments.length, args = new Array(_len202), _key202 = 0; _key202 < _len202; _key202++) {\n    args[_key202] = arguments[_key202];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSThisType\"].concat(args));\n}\n\nfunction tsFunctionType() {\n  for (var _len203 = arguments.length, args = new Array(_len203), _key203 = 0; _key203 < _len203; _key203++) {\n    args[_key203] = arguments[_key203];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSFunctionType\"].concat(args));\n}\n\nfunction tsConstructorType() {\n  for (var _len204 = arguments.length, args = new Array(_len204), _key204 = 0; _key204 < _len204; _key204++) {\n    args[_key204] = arguments[_key204];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSConstructorType\"].concat(args));\n}\n\nfunction tsTypeReference() {\n  for (var _len205 = arguments.length, args = new Array(_len205), _key205 = 0; _key205 < _len205; _key205++) {\n    args[_key205] = arguments[_key205];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeReference\"].concat(args));\n}\n\nfunction tsTypePredicate() {\n  for (var _len206 = arguments.length, args = new Array(_len206), _key206 = 0; _key206 < _len206; _key206++) {\n    args[_key206] = arguments[_key206];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypePredicate\"].concat(args));\n}\n\nfunction tsTypeQuery() {\n  for (var _len207 = arguments.length, args = new Array(_len207), _key207 = 0; _key207 < _len207; _key207++) {\n    args[_key207] = arguments[_key207];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeQuery\"].concat(args));\n}\n\nfunction tsTypeLiteral() {\n  for (var _len208 = arguments.length, args = new Array(_len208), _key208 = 0; _key208 < _len208; _key208++) {\n    args[_key208] = arguments[_key208];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeLiteral\"].concat(args));\n}\n\nfunction tsArrayType() {\n  for (var _len209 = arguments.length, args = new Array(_len209), _key209 = 0; _key209 < _len209; _key209++) {\n    args[_key209] = arguments[_key209];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSArrayType\"].concat(args));\n}\n\nfunction tsTupleType() {\n  for (var _len210 = arguments.length, args = new Array(_len210), _key210 = 0; _key210 < _len210; _key210++) {\n    args[_key210] = arguments[_key210];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTupleType\"].concat(args));\n}\n\nfunction tsOptionalType() {\n  for (var _len211 = arguments.length, args = new Array(_len211), _key211 = 0; _key211 < _len211; _key211++) {\n    args[_key211] = arguments[_key211];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSOptionalType\"].concat(args));\n}\n\nfunction tsRestType() {\n  for (var _len212 = arguments.length, args = new Array(_len212), _key212 = 0; _key212 < _len212; _key212++) {\n    args[_key212] = arguments[_key212];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSRestType\"].concat(args));\n}\n\nfunction tsNamedTupleMember() {\n  for (var _len213 = arguments.length, args = new Array(_len213), _key213 = 0; _key213 < _len213; _key213++) {\n    args[_key213] = arguments[_key213];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNamedTupleMember\"].concat(args));\n}\n\nfunction tsUnionType() {\n  for (var _len214 = arguments.length, args = new Array(_len214), _key214 = 0; _key214 < _len214; _key214++) {\n    args[_key214] = arguments[_key214];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSUnionType\"].concat(args));\n}\n\nfunction tsIntersectionType() {\n  for (var _len215 = arguments.length, args = new Array(_len215), _key215 = 0; _key215 < _len215; _key215++) {\n    args[_key215] = arguments[_key215];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSIntersectionType\"].concat(args));\n}\n\nfunction tsConditionalType() {\n  for (var _len216 = arguments.length, args = new Array(_len216), _key216 = 0; _key216 < _len216; _key216++) {\n    args[_key216] = arguments[_key216];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSConditionalType\"].concat(args));\n}\n\nfunction tsInferType() {\n  for (var _len217 = arguments.length, args = new Array(_len217), _key217 = 0; _key217 < _len217; _key217++) {\n    args[_key217] = arguments[_key217];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSInferType\"].concat(args));\n}\n\nfunction tsParenthesizedType() {\n  for (var _len218 = arguments.length, args = new Array(_len218), _key218 = 0; _key218 < _len218; _key218++) {\n    args[_key218] = arguments[_key218];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSParenthesizedType\"].concat(args));\n}\n\nfunction tsTypeOperator() {\n  for (var _len219 = arguments.length, args = new Array(_len219), _key219 = 0; _key219 < _len219; _key219++) {\n    args[_key219] = arguments[_key219];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeOperator\"].concat(args));\n}\n\nfunction tsIndexedAccessType() {\n  for (var _len220 = arguments.length, args = new Array(_len220), _key220 = 0; _key220 < _len220; _key220++) {\n    args[_key220] = arguments[_key220];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSIndexedAccessType\"].concat(args));\n}\n\nfunction tsMappedType() {\n  for (var _len221 = arguments.length, args = new Array(_len221), _key221 = 0; _key221 < _len221; _key221++) {\n    args[_key221] = arguments[_key221];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSMappedType\"].concat(args));\n}\n\nfunction tsLiteralType() {\n  for (var _len222 = arguments.length, args = new Array(_len222), _key222 = 0; _key222 < _len222; _key222++) {\n    args[_key222] = arguments[_key222];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSLiteralType\"].concat(args));\n}\n\nfunction tsExpressionWithTypeArguments() {\n  for (var _len223 = arguments.length, args = new Array(_len223), _key223 = 0; _key223 < _len223; _key223++) {\n    args[_key223] = arguments[_key223];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSExpressionWithTypeArguments\"].concat(args));\n}\n\nfunction tsInterfaceDeclaration() {\n  for (var _len224 = arguments.length, args = new Array(_len224), _key224 = 0; _key224 < _len224; _key224++) {\n    args[_key224] = arguments[_key224];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSInterfaceDeclaration\"].concat(args));\n}\n\nfunction tsInterfaceBody() {\n  for (var _len225 = arguments.length, args = new Array(_len225), _key225 = 0; _key225 < _len225; _key225++) {\n    args[_key225] = arguments[_key225];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSInterfaceBody\"].concat(args));\n}\n\nfunction tsTypeAliasDeclaration() {\n  for (var _len226 = arguments.length, args = new Array(_len226), _key226 = 0; _key226 < _len226; _key226++) {\n    args[_key226] = arguments[_key226];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeAliasDeclaration\"].concat(args));\n}\n\nfunction tsAsExpression() {\n  for (var _len227 = arguments.length, args = new Array(_len227), _key227 = 0; _key227 < _len227; _key227++) {\n    args[_key227] = arguments[_key227];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSAsExpression\"].concat(args));\n}\n\nfunction tsTypeAssertion() {\n  for (var _len228 = arguments.length, args = new Array(_len228), _key228 = 0; _key228 < _len228; _key228++) {\n    args[_key228] = arguments[_key228];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeAssertion\"].concat(args));\n}\n\nfunction tsEnumDeclaration() {\n  for (var _len229 = arguments.length, args = new Array(_len229), _key229 = 0; _key229 < _len229; _key229++) {\n    args[_key229] = arguments[_key229];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSEnumDeclaration\"].concat(args));\n}\n\nfunction tsEnumMember() {\n  for (var _len230 = arguments.length, args = new Array(_len230), _key230 = 0; _key230 < _len230; _key230++) {\n    args[_key230] = arguments[_key230];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSEnumMember\"].concat(args));\n}\n\nfunction tsModuleDeclaration() {\n  for (var _len231 = arguments.length, args = new Array(_len231), _key231 = 0; _key231 < _len231; _key231++) {\n    args[_key231] = arguments[_key231];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSModuleDeclaration\"].concat(args));\n}\n\nfunction tsModuleBlock() {\n  for (var _len232 = arguments.length, args = new Array(_len232), _key232 = 0; _key232 < _len232; _key232++) {\n    args[_key232] = arguments[_key232];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSModuleBlock\"].concat(args));\n}\n\nfunction tsImportType() {\n  for (var _len233 = arguments.length, args = new Array(_len233), _key233 = 0; _key233 < _len233; _key233++) {\n    args[_key233] = arguments[_key233];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSImportType\"].concat(args));\n}\n\nfunction tsImportEqualsDeclaration() {\n  for (var _len234 = arguments.length, args = new Array(_len234), _key234 = 0; _key234 < _len234; _key234++) {\n    args[_key234] = arguments[_key234];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSImportEqualsDeclaration\"].concat(args));\n}\n\nfunction tsExternalModuleReference() {\n  for (var _len235 = arguments.length, args = new Array(_len235), _key235 = 0; _key235 < _len235; _key235++) {\n    args[_key235] = arguments[_key235];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSExternalModuleReference\"].concat(args));\n}\n\nfunction tsNonNullExpression() {\n  for (var _len236 = arguments.length, args = new Array(_len236), _key236 = 0; _key236 < _len236; _key236++) {\n    args[_key236] = arguments[_key236];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNonNullExpression\"].concat(args));\n}\n\nfunction tsExportAssignment() {\n  for (var _len237 = arguments.length, args = new Array(_len237), _key237 = 0; _key237 < _len237; _key237++) {\n    args[_key237] = arguments[_key237];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSExportAssignment\"].concat(args));\n}\n\nfunction tsNamespaceExportDeclaration() {\n  for (var _len238 = arguments.length, args = new Array(_len238), _key238 = 0; _key238 < _len238; _key238++) {\n    args[_key238] = arguments[_key238];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSNamespaceExportDeclaration\"].concat(args));\n}\n\nfunction tsTypeAnnotation() {\n  for (var _len239 = arguments.length, args = new Array(_len239), _key239 = 0; _key239 < _len239; _key239++) {\n    args[_key239] = arguments[_key239];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeAnnotation\"].concat(args));\n}\n\nfunction tsTypeParameterInstantiation() {\n  for (var _len240 = arguments.length, args = new Array(_len240), _key240 = 0; _key240 < _len240; _key240++) {\n    args[_key240] = arguments[_key240];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeParameterInstantiation\"].concat(args));\n}\n\nfunction tsTypeParameterDeclaration() {\n  for (var _len241 = arguments.length, args = new Array(_len241), _key241 = 0; _key241 < _len241; _key241++) {\n    args[_key241] = arguments[_key241];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeParameterDeclaration\"].concat(args));\n}\n\nfunction tsTypeParameter() {\n  for (var _len242 = arguments.length, args = new Array(_len242), _key242 = 0; _key242 < _len242; _key242++) {\n    args[_key242] = arguments[_key242];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"TSTypeParameter\"].concat(args));\n}\n\nfunction NumberLiteral() {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n\n  for (var _len243 = arguments.length, args = new Array(_len243), _key243 = 0; _key243 < _len243; _key243++) {\n    args[_key243] = arguments[_key243];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"NumberLiteral\"].concat(args));\n}\n\nfunction RegexLiteral() {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n\n  for (var _len244 = arguments.length, args = new Array(_len244), _key244 = 0; _key244 < _len244; _key244++) {\n    args[_key244] = arguments[_key244];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"RegexLiteral\"].concat(args));\n}\n\nfunction RestProperty() {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n\n  for (var _len245 = arguments.length, args = new Array(_len245), _key245 = 0; _key245 < _len245; _key245++) {\n    args[_key245] = arguments[_key245];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"RestProperty\"].concat(args));\n}\n\nfunction SpreadProperty() {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n\n  for (var _len246 = arguments.length, args = new Array(_len246), _key246 = 0; _key246 < _len246; _key246++) {\n    args[_key246] = arguments[_key246];\n  }\n\n  return (0, _builder.default).apply(void 0, [\"SpreadProperty\"].concat(args));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///OLqG\n");

/***/ }),

/***/ "OqMQ":
/*!**********************************************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTypeAnnotationBasedOnTypeof;\n\nvar _generated = __webpack_require__(/*! ../generated */ \"OLqG\");\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === \"string\") {\n    return (0, _generated.stringTypeAnnotation)();\n  } else if (type === \"number\") {\n    return (0, _generated.numberTypeAnnotation)();\n  } else if (type === \"undefined\") {\n    return (0, _generated.voidTypeAnnotation)();\n  } else if (type === \"boolean\") {\n    return (0, _generated.booleanTypeAnnotation)();\n  } else if (type === \"function\") {\n    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Function\"));\n  } else if (type === \"object\") {\n    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Object\"));\n  } else if (type === \"symbol\") {\n    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Symbol\"));\n  } else {\n    throw new Error(\"Invalid typeof value\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3FNUS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9idWlsZGVycy9mbG93L2NyZWF0ZVR5cGVBbm5vdGF0aW9uQmFzZWRPblR5cGVvZi5qcz80MTg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlVHlwZUFubm90YXRpb25CYXNlZE9uVHlwZW9mO1xuXG52YXIgX2dlbmVyYXRlZCA9IHJlcXVpcmUoXCIuLi9nZW5lcmF0ZWRcIik7XG5cbmZ1bmN0aW9uIGNyZWF0ZVR5cGVBbm5vdGF0aW9uQmFzZWRPblR5cGVvZih0eXBlKSB7XG4gIGlmICh0eXBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuICgwLCBfZ2VuZXJhdGVkLnN0cmluZ1R5cGVBbm5vdGF0aW9uKSgpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwibnVtYmVyXCIpIHtcbiAgICByZXR1cm4gKDAsIF9nZW5lcmF0ZWQubnVtYmVyVHlwZUFubm90YXRpb24pKCk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiAoMCwgX2dlbmVyYXRlZC52b2lkVHlwZUFubm90YXRpb24pKCk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJib29sZWFuXCIpIHtcbiAgICByZXR1cm4gKDAsIF9nZW5lcmF0ZWQuYm9vbGVhblR5cGVBbm5vdGF0aW9uKSgpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiAoMCwgX2dlbmVyYXRlZC5nZW5lcmljVHlwZUFubm90YXRpb24pKCgwLCBfZ2VuZXJhdGVkLmlkZW50aWZpZXIpKFwiRnVuY3Rpb25cIikpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwib2JqZWN0XCIpIHtcbiAgICByZXR1cm4gKDAsIF9nZW5lcmF0ZWQuZ2VuZXJpY1R5cGVBbm5vdGF0aW9uKSgoMCwgX2dlbmVyYXRlZC5pZGVudGlmaWVyKShcIk9iamVjdFwiKSk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJzeW1ib2xcIikge1xuICAgIHJldHVybiAoMCwgX2dlbmVyYXRlZC5nZW5lcmljVHlwZUFubm90YXRpb24pKCgwLCBfZ2VuZXJhdGVkLmlkZW50aWZpZXIpKFwiU3ltYm9sXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHR5cGVvZiB2YWx1ZVwiKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///OqMQ\n");

/***/ }),

/***/ "cObX":
/*!***************************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/builders/react/buildChildren.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildChildren;\n\nvar _generated = __webpack_require__(/*! ../../validators/generated */ \"7ow7\");\n\nvar _cleanJSXElementLiteralChild = _interopRequireDefault(__webpack_require__(/*! ../../utils/react/cleanJSXElementLiteralChild */ \"Fz8t\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction buildChildren(node) {\n  var elements = [];\n\n  for (var i = 0; i < node.children.length; i++) {\n    var child = node.children[i];\n\n    if ((0, _generated.isJSXText)(child)) {\n      (0, _cleanJSXElementLiteralChild.default)(child, elements);\n      continue;\n    }\n\n    if ((0, _generated.isJSXExpressionContainer)(child)) child = child.expression;\n    if ((0, _generated.isJSXEmptyExpression)(child)) continue;\n    elements.push(child);\n  }\n\n  return elements;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY09iWC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9idWlsZGVycy9yZWFjdC9idWlsZENoaWxkcmVuLmpzP2Y1OGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBidWlsZENoaWxkcmVuO1xuXG52YXIgX2dlbmVyYXRlZCA9IHJlcXVpcmUoXCIuLi8uLi92YWxpZGF0b3JzL2dlbmVyYXRlZFwiKTtcblxudmFyIF9jbGVhbkpTWEVsZW1lbnRMaXRlcmFsQ2hpbGQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi91dGlscy9yZWFjdC9jbGVhbkpTWEVsZW1lbnRMaXRlcmFsQ2hpbGRcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBidWlsZENoaWxkcmVuKG5vZGUpIHtcbiAgY29uc3QgZWxlbWVudHMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldO1xuXG4gICAgaWYgKCgwLCBfZ2VuZXJhdGVkLmlzSlNYVGV4dCkoY2hpbGQpKSB7XG4gICAgICAoMCwgX2NsZWFuSlNYRWxlbWVudExpdGVyYWxDaGlsZC5kZWZhdWx0KShjaGlsZCwgZWxlbWVudHMpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKCgwLCBfZ2VuZXJhdGVkLmlzSlNYRXhwcmVzc2lvbkNvbnRhaW5lcikoY2hpbGQpKSBjaGlsZCA9IGNoaWxkLmV4cHJlc3Npb247XG4gICAgaWYgKCgwLCBfZ2VuZXJhdGVkLmlzSlNYRW1wdHlFeHByZXNzaW9uKShjaGlsZCkpIGNvbnRpbnVlO1xuICAgIGVsZW1lbnRzLnB1c2goY2hpbGQpO1xuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///cObX\n");

/***/ }),

/***/ "cZad":
/*!**********************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/asserts/generated/index.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertArrayExpression = assertArrayExpression;\nexports.assertAssignmentExpression = assertAssignmentExpression;\nexports.assertBinaryExpression = assertBinaryExpression;\nexports.assertInterpreterDirective = assertInterpreterDirective;\nexports.assertDirective = assertDirective;\nexports.assertDirectiveLiteral = assertDirectiveLiteral;\nexports.assertBlockStatement = assertBlockStatement;\nexports.assertBreakStatement = assertBreakStatement;\nexports.assertCallExpression = assertCallExpression;\nexports.assertCatchClause = assertCatchClause;\nexports.assertConditionalExpression = assertConditionalExpression;\nexports.assertContinueStatement = assertContinueStatement;\nexports.assertDebuggerStatement = assertDebuggerStatement;\nexports.assertDoWhileStatement = assertDoWhileStatement;\nexports.assertEmptyStatement = assertEmptyStatement;\nexports.assertExpressionStatement = assertExpressionStatement;\nexports.assertFile = assertFile;\nexports.assertForInStatement = assertForInStatement;\nexports.assertForStatement = assertForStatement;\nexports.assertFunctionDeclaration = assertFunctionDeclaration;\nexports.assertFunctionExpression = assertFunctionExpression;\nexports.assertIdentifier = assertIdentifier;\nexports.assertIfStatement = assertIfStatement;\nexports.assertLabeledStatement = assertLabeledStatement;\nexports.assertStringLiteral = assertStringLiteral;\nexports.assertNumericLiteral = assertNumericLiteral;\nexports.assertNullLiteral = assertNullLiteral;\nexports.assertBooleanLiteral = assertBooleanLiteral;\nexports.assertRegExpLiteral = assertRegExpLiteral;\nexports.assertLogicalExpression = assertLogicalExpression;\nexports.assertMemberExpression = assertMemberExpression;\nexports.assertNewExpression = assertNewExpression;\nexports.assertProgram = assertProgram;\nexports.assertObjectExpression = assertObjectExpression;\nexports.assertObjectMethod = assertObjectMethod;\nexports.assertObjectProperty = assertObjectProperty;\nexports.assertRestElement = assertRestElement;\nexports.assertReturnStatement = assertReturnStatement;\nexports.assertSequenceExpression = assertSequenceExpression;\nexports.assertParenthesizedExpression = assertParenthesizedExpression;\nexports.assertSwitchCase = assertSwitchCase;\nexports.assertSwitchStatement = assertSwitchStatement;\nexports.assertThisExpression = assertThisExpression;\nexports.assertThrowStatement = assertThrowStatement;\nexports.assertTryStatement = assertTryStatement;\nexports.assertUnaryExpression = assertUnaryExpression;\nexports.assertUpdateExpression = assertUpdateExpression;\nexports.assertVariableDeclaration = assertVariableDeclaration;\nexports.assertVariableDeclarator = assertVariableDeclarator;\nexports.assertWhileStatement = assertWhileStatement;\nexports.assertWithStatement = assertWithStatement;\nexports.assertAssignmentPattern = assertAssignmentPattern;\nexports.assertArrayPattern = assertArrayPattern;\nexports.assertArrowFunctionExpression = assertArrowFunctionExpression;\nexports.assertClassBody = assertClassBody;\nexports.assertClassExpression = assertClassExpression;\nexports.assertClassDeclaration = assertClassDeclaration;\nexports.assertExportAllDeclaration = assertExportAllDeclaration;\nexports.assertExportDefaultDeclaration = assertExportDefaultDeclaration;\nexports.assertExportNamedDeclaration = assertExportNamedDeclaration;\nexports.assertExportSpecifier = assertExportSpecifier;\nexports.assertForOfStatement = assertForOfStatement;\nexports.assertImportDeclaration = assertImportDeclaration;\nexports.assertImportDefaultSpecifier = assertImportDefaultSpecifier;\nexports.assertImportNamespaceSpecifier = assertImportNamespaceSpecifier;\nexports.assertImportSpecifier = assertImportSpecifier;\nexports.assertMetaProperty = assertMetaProperty;\nexports.assertClassMethod = assertClassMethod;\nexports.assertObjectPattern = assertObjectPattern;\nexports.assertSpreadElement = assertSpreadElement;\nexports.assertSuper = assertSuper;\nexports.assertTaggedTemplateExpression = assertTaggedTemplateExpression;\nexports.assertTemplateElement = assertTemplateElement;\nexports.assertTemplateLiteral = assertTemplateLiteral;\nexports.assertYieldExpression = assertYieldExpression;\nexports.assertAwaitExpression = assertAwaitExpression;\nexports.assertImport = assertImport;\nexports.assertBigIntLiteral = assertBigIntLiteral;\nexports.assertExportNamespaceSpecifier = assertExportNamespaceSpecifier;\nexports.assertOptionalMemberExpression = assertOptionalMemberExpression;\nexports.assertOptionalCallExpression = assertOptionalCallExpression;\nexports.assertAnyTypeAnnotation = assertAnyTypeAnnotation;\nexports.assertArrayTypeAnnotation = assertArrayTypeAnnotation;\nexports.assertBooleanTypeAnnotation = assertBooleanTypeAnnotation;\nexports.assertBooleanLiteralTypeAnnotation = assertBooleanLiteralTypeAnnotation;\nexports.assertNullLiteralTypeAnnotation = assertNullLiteralTypeAnnotation;\nexports.assertClassImplements = assertClassImplements;\nexports.assertDeclareClass = assertDeclareClass;\nexports.assertDeclareFunction = assertDeclareFunction;\nexports.assertDeclareInterface = assertDeclareInterface;\nexports.assertDeclareModule = assertDeclareModule;\nexports.assertDeclareModuleExports = assertDeclareModuleExports;\nexports.assertDeclareTypeAlias = assertDeclareTypeAlias;\nexports.assertDeclareOpaqueType = assertDeclareOpaqueType;\nexports.assertDeclareVariable = assertDeclareVariable;\nexports.assertDeclareExportDeclaration = assertDeclareExportDeclaration;\nexports.assertDeclareExportAllDeclaration = assertDeclareExportAllDeclaration;\nexports.assertDeclaredPredicate = assertDeclaredPredicate;\nexports.assertExistsTypeAnnotation = assertExistsTypeAnnotation;\nexports.assertFunctionTypeAnnotation = assertFunctionTypeAnnotation;\nexports.assertFunctionTypeParam = assertFunctionTypeParam;\nexports.assertGenericTypeAnnotation = assertGenericTypeAnnotation;\nexports.assertInferredPredicate = assertInferredPredicate;\nexports.assertInterfaceExtends = assertInterfaceExtends;\nexports.assertInterfaceDeclaration = assertInterfaceDeclaration;\nexports.assertInterfaceTypeAnnotation = assertInterfaceTypeAnnotation;\nexports.assertIntersectionTypeAnnotation = assertIntersectionTypeAnnotation;\nexports.assertMixedTypeAnnotation = assertMixedTypeAnnotation;\nexports.assertEmptyTypeAnnotation = assertEmptyTypeAnnotation;\nexports.assertNullableTypeAnnotation = assertNullableTypeAnnotation;\nexports.assertNumberLiteralTypeAnnotation = assertNumberLiteralTypeAnnotation;\nexports.assertNumberTypeAnnotation = assertNumberTypeAnnotation;\nexports.assertObjectTypeAnnotation = assertObjectTypeAnnotation;\nexports.assertObjectTypeInternalSlot = assertObjectTypeInternalSlot;\nexports.assertObjectTypeCallProperty = assertObjectTypeCallProperty;\nexports.assertObjectTypeIndexer = assertObjectTypeIndexer;\nexports.assertObjectTypeProperty = assertObjectTypeProperty;\nexports.assertObjectTypeSpreadProperty = assertObjectTypeSpreadProperty;\nexports.assertOpaqueType = assertOpaqueType;\nexports.assertQualifiedTypeIdentifier = assertQualifiedTypeIdentifier;\nexports.assertStringLiteralTypeAnnotation = assertStringLiteralTypeAnnotation;\nexports.assertStringTypeAnnotation = assertStringTypeAnnotation;\nexports.assertSymbolTypeAnnotation = assertSymbolTypeAnnotation;\nexports.assertThisTypeAnnotation = assertThisTypeAnnotation;\nexports.assertTupleTypeAnnotation = assertTupleTypeAnnotation;\nexports.assertTypeofTypeAnnotation = assertTypeofTypeAnnotation;\nexports.assertTypeAlias = assertTypeAlias;\nexports.assertTypeAnnotation = assertTypeAnnotation;\nexports.assertTypeCastExpression = assertTypeCastExpression;\nexports.assertTypeParameter = assertTypeParameter;\nexports.assertTypeParameterDeclaration = assertTypeParameterDeclaration;\nexports.assertTypeParameterInstantiation = assertTypeParameterInstantiation;\nexports.assertUnionTypeAnnotation = assertUnionTypeAnnotation;\nexports.assertVariance = assertVariance;\nexports.assertVoidTypeAnnotation = assertVoidTypeAnnotation;\nexports.assertEnumDeclaration = assertEnumDeclaration;\nexports.assertEnumBooleanBody = assertEnumBooleanBody;\nexports.assertEnumNumberBody = assertEnumNumberBody;\nexports.assertEnumStringBody = assertEnumStringBody;\nexports.assertEnumSymbolBody = assertEnumSymbolBody;\nexports.assertEnumBooleanMember = assertEnumBooleanMember;\nexports.assertEnumNumberMember = assertEnumNumberMember;\nexports.assertEnumStringMember = assertEnumStringMember;\nexports.assertEnumDefaultedMember = assertEnumDefaultedMember;\nexports.assertJSXAttribute = assertJSXAttribute;\nexports.assertJSXClosingElement = assertJSXClosingElement;\nexports.assertJSXElement = assertJSXElement;\nexports.assertJSXEmptyExpression = assertJSXEmptyExpression;\nexports.assertJSXExpressionContainer = assertJSXExpressionContainer;\nexports.assertJSXSpreadChild = assertJSXSpreadChild;\nexports.assertJSXIdentifier = assertJSXIdentifier;\nexports.assertJSXMemberExpression = assertJSXMemberExpression;\nexports.assertJSXNamespacedName = assertJSXNamespacedName;\nexports.assertJSXOpeningElement = assertJSXOpeningElement;\nexports.assertJSXSpreadAttribute = assertJSXSpreadAttribute;\nexports.assertJSXText = assertJSXText;\nexports.assertJSXFragment = assertJSXFragment;\nexports.assertJSXOpeningFragment = assertJSXOpeningFragment;\nexports.assertJSXClosingFragment = assertJSXClosingFragment;\nexports.assertNoop = assertNoop;\nexports.assertPlaceholder = assertPlaceholder;\nexports.assertV8IntrinsicIdentifier = assertV8IntrinsicIdentifier;\nexports.assertArgumentPlaceholder = assertArgumentPlaceholder;\nexports.assertBindExpression = assertBindExpression;\nexports.assertClassProperty = assertClassProperty;\nexports.assertPipelineTopicExpression = assertPipelineTopicExpression;\nexports.assertPipelineBareFunction = assertPipelineBareFunction;\nexports.assertPipelinePrimaryTopicReference = assertPipelinePrimaryTopicReference;\nexports.assertClassPrivateProperty = assertClassPrivateProperty;\nexports.assertClassPrivateMethod = assertClassPrivateMethod;\nexports.assertImportAttribute = assertImportAttribute;\nexports.assertDecorator = assertDecorator;\nexports.assertDoExpression = assertDoExpression;\nexports.assertExportDefaultSpecifier = assertExportDefaultSpecifier;\nexports.assertPrivateName = assertPrivateName;\nexports.assertRecordExpression = assertRecordExpression;\nexports.assertTupleExpression = assertTupleExpression;\nexports.assertDecimalLiteral = assertDecimalLiteral;\nexports.assertStaticBlock = assertStaticBlock;\nexports.assertTSParameterProperty = assertTSParameterProperty;\nexports.assertTSDeclareFunction = assertTSDeclareFunction;\nexports.assertTSDeclareMethod = assertTSDeclareMethod;\nexports.assertTSQualifiedName = assertTSQualifiedName;\nexports.assertTSCallSignatureDeclaration = assertTSCallSignatureDeclaration;\nexports.assertTSConstructSignatureDeclaration = assertTSConstructSignatureDeclaration;\nexports.assertTSPropertySignature = assertTSPropertySignature;\nexports.assertTSMethodSignature = assertTSMethodSignature;\nexports.assertTSIndexSignature = assertTSIndexSignature;\nexports.assertTSAnyKeyword = assertTSAnyKeyword;\nexports.assertTSBooleanKeyword = assertTSBooleanKeyword;\nexports.assertTSBigIntKeyword = assertTSBigIntKeyword;\nexports.assertTSIntrinsicKeyword = assertTSIntrinsicKeyword;\nexports.assertTSNeverKeyword = assertTSNeverKeyword;\nexports.assertTSNullKeyword = assertTSNullKeyword;\nexports.assertTSNumberKeyword = assertTSNumberKeyword;\nexports.assertTSObjectKeyword = assertTSObjectKeyword;\nexports.assertTSStringKeyword = assertTSStringKeyword;\nexports.assertTSSymbolKeyword = assertTSSymbolKeyword;\nexports.assertTSUndefinedKeyword = assertTSUndefinedKeyword;\nexports.assertTSUnknownKeyword = assertTSUnknownKeyword;\nexports.assertTSVoidKeyword = assertTSVoidKeyword;\nexports.assertTSThisType = assertTSThisType;\nexports.assertTSFunctionType = assertTSFunctionType;\nexports.assertTSConstructorType = assertTSConstructorType;\nexports.assertTSTypeReference = assertTSTypeReference;\nexports.assertTSTypePredicate = assertTSTypePredicate;\nexports.assertTSTypeQuery = assertTSTypeQuery;\nexports.assertTSTypeLiteral = assertTSTypeLiteral;\nexports.assertTSArrayType = assertTSArrayType;\nexports.assertTSTupleType = assertTSTupleType;\nexports.assertTSOptionalType = assertTSOptionalType;\nexports.assertTSRestType = assertTSRestType;\nexports.assertTSNamedTupleMember = assertTSNamedTupleMember;\nexports.assertTSUnionType = assertTSUnionType;\nexports.assertTSIntersectionType = assertTSIntersectionType;\nexports.assertTSConditionalType = assertTSConditionalType;\nexports.assertTSInferType = assertTSInferType;\nexports.assertTSParenthesizedType = assertTSParenthesizedType;\nexports.assertTSTypeOperator = assertTSTypeOperator;\nexports.assertTSIndexedAccessType = assertTSIndexedAccessType;\nexports.assertTSMappedType = assertTSMappedType;\nexports.assertTSLiteralType = assertTSLiteralType;\nexports.assertTSExpressionWithTypeArguments = assertTSExpressionWithTypeArguments;\nexports.assertTSInterfaceDeclaration = assertTSInterfaceDeclaration;\nexports.assertTSInterfaceBody = assertTSInterfaceBody;\nexports.assertTSTypeAliasDeclaration = assertTSTypeAliasDeclaration;\nexports.assertTSAsExpression = assertTSAsExpression;\nexports.assertTSTypeAssertion = assertTSTypeAssertion;\nexports.assertTSEnumDeclaration = assertTSEnumDeclaration;\nexports.assertTSEnumMember = assertTSEnumMember;\nexports.assertTSModuleDeclaration = assertTSModuleDeclaration;\nexports.assertTSModuleBlock = assertTSModuleBlock;\nexports.assertTSImportType = assertTSImportType;\nexports.assertTSImportEqualsDeclaration = assertTSImportEqualsDeclaration;\nexports.assertTSExternalModuleReference = assertTSExternalModuleReference;\nexports.assertTSNonNullExpression = assertTSNonNullExpression;\nexports.assertTSExportAssignment = assertTSExportAssignment;\nexports.assertTSNamespaceExportDeclaration = assertTSNamespaceExportDeclaration;\nexports.assertTSTypeAnnotation = assertTSTypeAnnotation;\nexports.assertTSTypeParameterInstantiation = assertTSTypeParameterInstantiation;\nexports.assertTSTypeParameterDeclaration = assertTSTypeParameterDeclaration;\nexports.assertTSTypeParameter = assertTSTypeParameter;\nexports.assertExpression = assertExpression;\nexports.assertBinary = assertBinary;\nexports.assertScopable = assertScopable;\nexports.assertBlockParent = assertBlockParent;\nexports.assertBlock = assertBlock;\nexports.assertStatement = assertStatement;\nexports.assertTerminatorless = assertTerminatorless;\nexports.assertCompletionStatement = assertCompletionStatement;\nexports.assertConditional = assertConditional;\nexports.assertLoop = assertLoop;\nexports.assertWhile = assertWhile;\nexports.assertExpressionWrapper = assertExpressionWrapper;\nexports.assertFor = assertFor;\nexports.assertForXStatement = assertForXStatement;\nexports.assertFunction = assertFunction;\nexports.assertFunctionParent = assertFunctionParent;\nexports.assertPureish = assertPureish;\nexports.assertDeclaration = assertDeclaration;\nexports.assertPatternLike = assertPatternLike;\nexports.assertLVal = assertLVal;\nexports.assertTSEntityName = assertTSEntityName;\nexports.assertLiteral = assertLiteral;\nexports.assertImmutable = assertImmutable;\nexports.assertUserWhitespacable = assertUserWhitespacable;\nexports.assertMethod = assertMethod;\nexports.assertObjectMember = assertObjectMember;\nexports.assertProperty = assertProperty;\nexports.assertUnaryLike = assertUnaryLike;\nexports.assertPattern = assertPattern;\nexports.assertClass = assertClass;\nexports.assertModuleDeclaration = assertModuleDeclaration;\nexports.assertExportDeclaration = assertExportDeclaration;\nexports.assertModuleSpecifier = assertModuleSpecifier;\nexports.assertFlow = assertFlow;\nexports.assertFlowType = assertFlowType;\nexports.assertFlowBaseAnnotation = assertFlowBaseAnnotation;\nexports.assertFlowDeclaration = assertFlowDeclaration;\nexports.assertFlowPredicate = assertFlowPredicate;\nexports.assertEnumBody = assertEnumBody;\nexports.assertEnumMember = assertEnumMember;\nexports.assertJSX = assertJSX;\nexports.assertPrivate = assertPrivate;\nexports.assertTSTypeElement = assertTSTypeElement;\nexports.assertTSType = assertTSType;\nexports.assertTSBaseType = assertTSBaseType;\nexports.assertNumberLiteral = assertNumberLiteral;\nexports.assertRegexLiteral = assertRegexLiteral;\nexports.assertRestProperty = assertRestProperty;\nexports.assertSpreadProperty = assertSpreadProperty;\n\nvar _is = _interopRequireDefault(__webpack_require__(/*! ../../validators/is */ \"gmqe\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction assert(type, node, opts) {\n  if (!(0, _is.default)(type, node, opts)) {\n    throw new Error(\"Expected type \\\"\" + type + \"\\\" with option \" + JSON.stringify(opts) + \", \" + (\"but instead got \\\"\" + node.type + \"\\\".\"));\n  }\n}\n\nfunction assertArrayExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ArrayExpression\", node, opts);\n}\n\nfunction assertAssignmentExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"AssignmentExpression\", node, opts);\n}\n\nfunction assertBinaryExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BinaryExpression\", node, opts);\n}\n\nfunction assertInterpreterDirective(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"InterpreterDirective\", node, opts);\n}\n\nfunction assertDirective(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Directive\", node, opts);\n}\n\nfunction assertDirectiveLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DirectiveLiteral\", node, opts);\n}\n\nfunction assertBlockStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BlockStatement\", node, opts);\n}\n\nfunction assertBreakStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BreakStatement\", node, opts);\n}\n\nfunction assertCallExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"CallExpression\", node, opts);\n}\n\nfunction assertCatchClause(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"CatchClause\", node, opts);\n}\n\nfunction assertConditionalExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ConditionalExpression\", node, opts);\n}\n\nfunction assertContinueStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ContinueStatement\", node, opts);\n}\n\nfunction assertDebuggerStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DebuggerStatement\", node, opts);\n}\n\nfunction assertDoWhileStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DoWhileStatement\", node, opts);\n}\n\nfunction assertEmptyStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EmptyStatement\", node, opts);\n}\n\nfunction assertExpressionStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExpressionStatement\", node, opts);\n}\n\nfunction assertFile(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"File\", node, opts);\n}\n\nfunction assertForInStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ForInStatement\", node, opts);\n}\n\nfunction assertForStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ForStatement\", node, opts);\n}\n\nfunction assertFunctionDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FunctionDeclaration\", node, opts);\n}\n\nfunction assertFunctionExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FunctionExpression\", node, opts);\n}\n\nfunction assertIdentifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Identifier\", node, opts);\n}\n\nfunction assertIfStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"IfStatement\", node, opts);\n}\n\nfunction assertLabeledStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"LabeledStatement\", node, opts);\n}\n\nfunction assertStringLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"StringLiteral\", node, opts);\n}\n\nfunction assertNumericLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NumericLiteral\", node, opts);\n}\n\nfunction assertNullLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NullLiteral\", node, opts);\n}\n\nfunction assertBooleanLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BooleanLiteral\", node, opts);\n}\n\nfunction assertRegExpLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"RegExpLiteral\", node, opts);\n}\n\nfunction assertLogicalExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"LogicalExpression\", node, opts);\n}\n\nfunction assertMemberExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"MemberExpression\", node, opts);\n}\n\nfunction assertNewExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NewExpression\", node, opts);\n}\n\nfunction assertProgram(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Program\", node, opts);\n}\n\nfunction assertObjectExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectExpression\", node, opts);\n}\n\nfunction assertObjectMethod(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectMethod\", node, opts);\n}\n\nfunction assertObjectProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectProperty\", node, opts);\n}\n\nfunction assertRestElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"RestElement\", node, opts);\n}\n\nfunction assertReturnStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ReturnStatement\", node, opts);\n}\n\nfunction assertSequenceExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"SequenceExpression\", node, opts);\n}\n\nfunction assertParenthesizedExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ParenthesizedExpression\", node, opts);\n}\n\nfunction assertSwitchCase(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"SwitchCase\", node, opts);\n}\n\nfunction assertSwitchStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"SwitchStatement\", node, opts);\n}\n\nfunction assertThisExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ThisExpression\", node, opts);\n}\n\nfunction assertThrowStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ThrowStatement\", node, opts);\n}\n\nfunction assertTryStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TryStatement\", node, opts);\n}\n\nfunction assertUnaryExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"UnaryExpression\", node, opts);\n}\n\nfunction assertUpdateExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"UpdateExpression\", node, opts);\n}\n\nfunction assertVariableDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"VariableDeclaration\", node, opts);\n}\n\nfunction assertVariableDeclarator(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"VariableDeclarator\", node, opts);\n}\n\nfunction assertWhileStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"WhileStatement\", node, opts);\n}\n\nfunction assertWithStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"WithStatement\", node, opts);\n}\n\nfunction assertAssignmentPattern(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"AssignmentPattern\", node, opts);\n}\n\nfunction assertArrayPattern(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ArrayPattern\", node, opts);\n}\n\nfunction assertArrowFunctionExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\n\nfunction assertClassBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassBody\", node, opts);\n}\n\nfunction assertClassExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassExpression\", node, opts);\n}\n\nfunction assertClassDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassDeclaration\", node, opts);\n}\n\nfunction assertExportAllDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportAllDeclaration\", node, opts);\n}\n\nfunction assertExportDefaultDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\n\nfunction assertExportNamedDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\n\nfunction assertExportSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportSpecifier\", node, opts);\n}\n\nfunction assertForOfStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ForOfStatement\", node, opts);\n}\n\nfunction assertImportDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ImportDeclaration\", node, opts);\n}\n\nfunction assertImportDefaultSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\n\nfunction assertImportNamespaceSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertImportSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ImportSpecifier\", node, opts);\n}\n\nfunction assertMetaProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"MetaProperty\", node, opts);\n}\n\nfunction assertClassMethod(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassMethod\", node, opts);\n}\n\nfunction assertObjectPattern(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectPattern\", node, opts);\n}\n\nfunction assertSpreadElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"SpreadElement\", node, opts);\n}\n\nfunction assertSuper(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Super\", node, opts);\n}\n\nfunction assertTaggedTemplateExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\n\nfunction assertTemplateElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TemplateElement\", node, opts);\n}\n\nfunction assertTemplateLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TemplateLiteral\", node, opts);\n}\n\nfunction assertYieldExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"YieldExpression\", node, opts);\n}\n\nfunction assertAwaitExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"AwaitExpression\", node, opts);\n}\n\nfunction assertImport(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Import\", node, opts);\n}\n\nfunction assertBigIntLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BigIntLiteral\", node, opts);\n}\n\nfunction assertExportNamespaceSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertOptionalMemberExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"OptionalMemberExpression\", node, opts);\n}\n\nfunction assertOptionalCallExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"OptionalCallExpression\", node, opts);\n}\n\nfunction assertAnyTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\n\nfunction assertArrayTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanLiteralTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNullLiteralTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertClassImplements(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassImplements\", node, opts);\n}\n\nfunction assertDeclareClass(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareClass\", node, opts);\n}\n\nfunction assertDeclareFunction(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareFunction\", node, opts);\n}\n\nfunction assertDeclareInterface(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareInterface\", node, opts);\n}\n\nfunction assertDeclareModule(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareModule\", node, opts);\n}\n\nfunction assertDeclareModuleExports(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareModuleExports\", node, opts);\n}\n\nfunction assertDeclareTypeAlias(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareTypeAlias\", node, opts);\n}\n\nfunction assertDeclareOpaqueType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareOpaqueType\", node, opts);\n}\n\nfunction assertDeclareVariable(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareVariable\", node, opts);\n}\n\nfunction assertDeclareExportDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\n\nfunction assertDeclareExportAllDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\n\nfunction assertDeclaredPredicate(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DeclaredPredicate\", node, opts);\n}\n\nfunction assertExistsTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeParam(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FunctionTypeParam\", node, opts);\n}\n\nfunction assertGenericTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\n\nfunction assertInferredPredicate(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"InferredPredicate\", node, opts);\n}\n\nfunction assertInterfaceExtends(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"InterfaceExtends\", node, opts);\n}\n\nfunction assertInterfaceDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"InterfaceDeclaration\", node, opts);\n}\n\nfunction assertInterfaceTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\n\nfunction assertIntersectionTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\n\nfunction assertMixedTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\n\nfunction assertEmptyTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\n\nfunction assertNullableTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberLiteralTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeInternalSlot(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\n\nfunction assertObjectTypeCallProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\n\nfunction assertObjectTypeIndexer(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\n\nfunction assertObjectTypeProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeProperty\", node, opts);\n}\n\nfunction assertObjectTypeSpreadProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\n\nfunction assertOpaqueType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"OpaqueType\", node, opts);\n}\n\nfunction assertQualifiedTypeIdentifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\n\nfunction assertStringLiteralTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertStringTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"StringTypeAnnotation\", node, opts);\n}\n\nfunction assertSymbolTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\n\nfunction assertThisTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\n\nfunction assertTupleTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeofTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeAlias(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeAlias\", node, opts);\n}\n\nfunction assertTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeAnnotation\", node, opts);\n}\n\nfunction assertTypeCastExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeCastExpression\", node, opts);\n}\n\nfunction assertTypeParameter(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeParameter\", node, opts);\n}\n\nfunction assertTypeParameterDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTypeParameterInstantiation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\n\nfunction assertUnionTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\n\nfunction assertVariance(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Variance\", node, opts);\n}\n\nfunction assertVoidTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\n\nfunction assertEnumDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumDeclaration\", node, opts);\n}\n\nfunction assertEnumBooleanBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumBooleanBody\", node, opts);\n}\n\nfunction assertEnumNumberBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumNumberBody\", node, opts);\n}\n\nfunction assertEnumStringBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumStringBody\", node, opts);\n}\n\nfunction assertEnumSymbolBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumSymbolBody\", node, opts);\n}\n\nfunction assertEnumBooleanMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumBooleanMember\", node, opts);\n}\n\nfunction assertEnumNumberMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumNumberMember\", node, opts);\n}\n\nfunction assertEnumStringMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumStringMember\", node, opts);\n}\n\nfunction assertEnumDefaultedMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumDefaultedMember\", node, opts);\n}\n\nfunction assertJSXAttribute(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXAttribute\", node, opts);\n}\n\nfunction assertJSXClosingElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXClosingElement\", node, opts);\n}\n\nfunction assertJSXElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXElement\", node, opts);\n}\n\nfunction assertJSXEmptyExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXEmptyExpression\", node, opts);\n}\n\nfunction assertJSXExpressionContainer(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXExpressionContainer\", node, opts);\n}\n\nfunction assertJSXSpreadChild(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXSpreadChild\", node, opts);\n}\n\nfunction assertJSXIdentifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXIdentifier\", node, opts);\n}\n\nfunction assertJSXMemberExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXMemberExpression\", node, opts);\n}\n\nfunction assertJSXNamespacedName(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXNamespacedName\", node, opts);\n}\n\nfunction assertJSXOpeningElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXOpeningElement\", node, opts);\n}\n\nfunction assertJSXSpreadAttribute(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\n\nfunction assertJSXText(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXText\", node, opts);\n}\n\nfunction assertJSXFragment(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXFragment\", node, opts);\n}\n\nfunction assertJSXOpeningFragment(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXOpeningFragment\", node, opts);\n}\n\nfunction assertJSXClosingFragment(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSXClosingFragment\", node, opts);\n}\n\nfunction assertNoop(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Noop\", node, opts);\n}\n\nfunction assertPlaceholder(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Placeholder\", node, opts);\n}\n\nfunction assertV8IntrinsicIdentifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\n\nfunction assertArgumentPlaceholder(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\n\nfunction assertBindExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BindExpression\", node, opts);\n}\n\nfunction assertClassProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassProperty\", node, opts);\n}\n\nfunction assertPipelineTopicExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"PipelineTopicExpression\", node, opts);\n}\n\nfunction assertPipelineBareFunction(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"PipelineBareFunction\", node, opts);\n}\n\nfunction assertPipelinePrimaryTopicReference(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\n\nfunction assertClassPrivateProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassPrivateProperty\", node, opts);\n}\n\nfunction assertClassPrivateMethod(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ClassPrivateMethod\", node, opts);\n}\n\nfunction assertImportAttribute(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ImportAttribute\", node, opts);\n}\n\nfunction assertDecorator(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Decorator\", node, opts);\n}\n\nfunction assertDoExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DoExpression\", node, opts);\n}\n\nfunction assertExportDefaultSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\n\nfunction assertPrivateName(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"PrivateName\", node, opts);\n}\n\nfunction assertRecordExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"RecordExpression\", node, opts);\n}\n\nfunction assertTupleExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TupleExpression\", node, opts);\n}\n\nfunction assertDecimalLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"DecimalLiteral\", node, opts);\n}\n\nfunction assertStaticBlock(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"StaticBlock\", node, opts);\n}\n\nfunction assertTSParameterProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSParameterProperty\", node, opts);\n}\n\nfunction assertTSDeclareFunction(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSDeclareFunction\", node, opts);\n}\n\nfunction assertTSDeclareMethod(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSDeclareMethod\", node, opts);\n}\n\nfunction assertTSQualifiedName(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSQualifiedName\", node, opts);\n}\n\nfunction assertTSCallSignatureDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSConstructSignatureDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSPropertySignature(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSPropertySignature\", node, opts);\n}\n\nfunction assertTSMethodSignature(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSMethodSignature\", node, opts);\n}\n\nfunction assertTSIndexSignature(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSIndexSignature\", node, opts);\n}\n\nfunction assertTSAnyKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSAnyKeyword\", node, opts);\n}\n\nfunction assertTSBooleanKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSBooleanKeyword\", node, opts);\n}\n\nfunction assertTSBigIntKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSBigIntKeyword\", node, opts);\n}\n\nfunction assertTSIntrinsicKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\n\nfunction assertTSNeverKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNeverKeyword\", node, opts);\n}\n\nfunction assertTSNullKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNullKeyword\", node, opts);\n}\n\nfunction assertTSNumberKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNumberKeyword\", node, opts);\n}\n\nfunction assertTSObjectKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSObjectKeyword\", node, opts);\n}\n\nfunction assertTSStringKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSStringKeyword\", node, opts);\n}\n\nfunction assertTSSymbolKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSSymbolKeyword\", node, opts);\n}\n\nfunction assertTSUndefinedKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\n\nfunction assertTSUnknownKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSUnknownKeyword\", node, opts);\n}\n\nfunction assertTSVoidKeyword(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSVoidKeyword\", node, opts);\n}\n\nfunction assertTSThisType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSThisType\", node, opts);\n}\n\nfunction assertTSFunctionType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSFunctionType\", node, opts);\n}\n\nfunction assertTSConstructorType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSConstructorType\", node, opts);\n}\n\nfunction assertTSTypeReference(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeReference\", node, opts);\n}\n\nfunction assertTSTypePredicate(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypePredicate\", node, opts);\n}\n\nfunction assertTSTypeQuery(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeQuery\", node, opts);\n}\n\nfunction assertTSTypeLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeLiteral\", node, opts);\n}\n\nfunction assertTSArrayType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSArrayType\", node, opts);\n}\n\nfunction assertTSTupleType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTupleType\", node, opts);\n}\n\nfunction assertTSOptionalType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSOptionalType\", node, opts);\n}\n\nfunction assertTSRestType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSRestType\", node, opts);\n}\n\nfunction assertTSNamedTupleMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNamedTupleMember\", node, opts);\n}\n\nfunction assertTSUnionType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSUnionType\", node, opts);\n}\n\nfunction assertTSIntersectionType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSIntersectionType\", node, opts);\n}\n\nfunction assertTSConditionalType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSConditionalType\", node, opts);\n}\n\nfunction assertTSInferType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSInferType\", node, opts);\n}\n\nfunction assertTSParenthesizedType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSParenthesizedType\", node, opts);\n}\n\nfunction assertTSTypeOperator(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeOperator\", node, opts);\n}\n\nfunction assertTSIndexedAccessType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSIndexedAccessType\", node, opts);\n}\n\nfunction assertTSMappedType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSMappedType\", node, opts);\n}\n\nfunction assertTSLiteralType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSLiteralType\", node, opts);\n}\n\nfunction assertTSExpressionWithTypeArguments(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\n\nfunction assertTSInterfaceDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\n\nfunction assertTSInterfaceBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSInterfaceBody\", node, opts);\n}\n\nfunction assertTSTypeAliasDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\n\nfunction assertTSAsExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSAsExpression\", node, opts);\n}\n\nfunction assertTSTypeAssertion(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeAssertion\", node, opts);\n}\n\nfunction assertTSEnumDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSEnumDeclaration\", node, opts);\n}\n\nfunction assertTSEnumMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSEnumMember\", node, opts);\n}\n\nfunction assertTSModuleDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSModuleDeclaration\", node, opts);\n}\n\nfunction assertTSModuleBlock(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSModuleBlock\", node, opts);\n}\n\nfunction assertTSImportType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSImportType\", node, opts);\n}\n\nfunction assertTSImportEqualsDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\n\nfunction assertTSExternalModuleReference(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSExternalModuleReference\", node, opts);\n}\n\nfunction assertTSNonNullExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNonNullExpression\", node, opts);\n}\n\nfunction assertTSExportAssignment(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSExportAssignment\", node, opts);\n}\n\nfunction assertTSNamespaceExportDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\n\nfunction assertTSTypeAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeAnnotation\", node, opts);\n}\n\nfunction assertTSTypeParameterInstantiation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\n\nfunction assertTSTypeParameterDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTSTypeParameter(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeParameter\", node, opts);\n}\n\nfunction assertExpression(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Expression\", node, opts);\n}\n\nfunction assertBinary(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Binary\", node, opts);\n}\n\nfunction assertScopable(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Scopable\", node, opts);\n}\n\nfunction assertBlockParent(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"BlockParent\", node, opts);\n}\n\nfunction assertBlock(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Block\", node, opts);\n}\n\nfunction assertStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Statement\", node, opts);\n}\n\nfunction assertTerminatorless(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Terminatorless\", node, opts);\n}\n\nfunction assertCompletionStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"CompletionStatement\", node, opts);\n}\n\nfunction assertConditional(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Conditional\", node, opts);\n}\n\nfunction assertLoop(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Loop\", node, opts);\n}\n\nfunction assertWhile(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"While\", node, opts);\n}\n\nfunction assertExpressionWrapper(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExpressionWrapper\", node, opts);\n}\n\nfunction assertFor(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"For\", node, opts);\n}\n\nfunction assertForXStatement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ForXStatement\", node, opts);\n}\n\nfunction assertFunction(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Function\", node, opts);\n}\n\nfunction assertFunctionParent(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FunctionParent\", node, opts);\n}\n\nfunction assertPureish(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Pureish\", node, opts);\n}\n\nfunction assertDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Declaration\", node, opts);\n}\n\nfunction assertPatternLike(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"PatternLike\", node, opts);\n}\n\nfunction assertLVal(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"LVal\", node, opts);\n}\n\nfunction assertTSEntityName(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSEntityName\", node, opts);\n}\n\nfunction assertLiteral(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Literal\", node, opts);\n}\n\nfunction assertImmutable(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Immutable\", node, opts);\n}\n\nfunction assertUserWhitespacable(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"UserWhitespacable\", node, opts);\n}\n\nfunction assertMethod(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Method\", node, opts);\n}\n\nfunction assertObjectMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ObjectMember\", node, opts);\n}\n\nfunction assertProperty(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Property\", node, opts);\n}\n\nfunction assertUnaryLike(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"UnaryLike\", node, opts);\n}\n\nfunction assertPattern(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Pattern\", node, opts);\n}\n\nfunction assertClass(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Class\", node, opts);\n}\n\nfunction assertModuleDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ModuleDeclaration\", node, opts);\n}\n\nfunction assertExportDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ExportDeclaration\", node, opts);\n}\n\nfunction assertModuleSpecifier(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"ModuleSpecifier\", node, opts);\n}\n\nfunction assertFlow(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Flow\", node, opts);\n}\n\nfunction assertFlowType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FlowType\", node, opts);\n}\n\nfunction assertFlowBaseAnnotation(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\n\nfunction assertFlowDeclaration(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FlowDeclaration\", node, opts);\n}\n\nfunction assertFlowPredicate(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"FlowPredicate\", node, opts);\n}\n\nfunction assertEnumBody(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumBody\", node, opts);\n}\n\nfunction assertEnumMember(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"EnumMember\", node, opts);\n}\n\nfunction assertJSX(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"JSX\", node, opts);\n}\n\nfunction assertPrivate(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"Private\", node, opts);\n}\n\nfunction assertTSTypeElement(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSTypeElement\", node, opts);\n}\n\nfunction assertTSType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSType\", node, opts);\n}\n\nfunction assertTSBaseType(node, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  assert(\"TSBaseType\", node, opts);\n}\n\nfunction assertNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\n\nfunction assertRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\n\nfunction assertRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  assert(\"RestProperty\", node, opts);\n}\n\nfunction assertSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///cZad\n");

/***/ }),

/***/ "te7x":
/*!*****************************************************************************************************************!*\
  !*** C:/Users/rhigh/AppData/Local/Microsoft/TypeScript/4.0/node_modules/@babel/types/lib/asserts/assertNode.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = _interopRequireDefault(__webpack_require__(/*! ../validators/isNode */ \"D+c9\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    var type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(\"Not a valid node of type \\\"\" + type + \"\\\"\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGU3eC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9DOi9Vc2Vycy9yaGlnaC9BcHBEYXRhL0xvY2FsL01pY3Jvc29mdC9UeXBlU2NyaXB0LzQuMC9ub2RlX21vZHVsZXMvQGJhYmVsL3R5cGVzL2xpYi9hc3NlcnRzL2Fzc2VydE5vZGUuanM/YjZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFzc2VydE5vZGU7XG5cbnZhciBfaXNOb2RlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdmFsaWRhdG9ycy9pc05vZGVcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBhc3NlcnROb2RlKG5vZGUpIHtcbiAgaWYgKCEoMCwgX2lzTm9kZS5kZWZhdWx0KShub2RlKSkge1xuICAgIHZhciBfbm9kZSR0eXBlO1xuXG4gICAgY29uc3QgdHlwZSA9IChfbm9kZSR0eXBlID0gbm9kZSA9PSBudWxsID8gdm9pZCAwIDogbm9kZS50eXBlKSAhPSBudWxsID8gX25vZGUkdHlwZSA6IEpTT04uc3RyaW5naWZ5KG5vZGUpO1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5vdCBhIHZhbGlkIG5vZGUgb2YgdHlwZSBcIiR7dHlwZX1cImApO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///te7x\n");

/***/ })

}]);