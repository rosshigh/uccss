{"version":3,"file":"app-5faa557d.c2f6f034a062b3d7f766.bundle.js","mappings":"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","sources":["webpack://client/./src/resources/data/admin.js","webpack://client/./src/resources/data/apjClientRequests.js","webpack://client/./src/resources/data/auth.js"],"sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './dataServices';\r\n\r\n@inject(DataServices)\r\nexport class AdminData{\r\n\tAUTH_SERVICE = \"/adminLog/\";\r\n\tLOG_SERVICE = \"/log/\";\r\n\tFILES_SERVICE = '/files/';\r\n\tFOREVER_SERVICE = '/pm2Log/'\r\n\r\n\tconstructor(data){\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\tasync getLogs(type){\r\n\t\tlet url;\r\n\t\tswitch(type){\r\n\t\t\tcase 'auth':\r\n\t\t\t\turl = this.AUTH_SERVICE;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'log':\r\n\t\t\t\turl = this.LOG_SERVICE;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'forl':\r\n\t\t\t\turl = this.FOREVER_SERVICE + 'fileList/out';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fore':\r\n\t\t\t\turl = this.FOREVER_SERVICE + 'fileList/err';\r\n\t\t\t\tbreak;\r\n\t\t\t// case 'foro':\r\n\t\t\t// \turl = this.FOREVER_SERVICE + 'fileList/o';\r\n\t\t\t// \tbreak;\r\n\t\t}\r\n\t\tlet response = await this.data.get(url);\r\n\t\tif(!response.error){\r\n\t\t\tthis.logFileArray = response;\r\n\t\t} \r\n\t\treturn response;\r\n\r\n\t}\r\n\r\n\tasync getLogFile(fileName, type){ \r\n\t\tif(fileName && type){\r\n\t\t\t\tlet url; \r\n\t\t\tswitch(type){\r\n\t\t\t\tcase 'auth':\r\n\t\t\t\t\turl = this.AUTH_SERVICE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'log':\r\n\t\t\t\t\turl = this.LOG_SERVICE;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'forl':\r\n\t\t\t\tcase 'fore':\r\n\t\t\t\tcase 'foreo':\r\n\t\t\t\t\turl = this.FOREVER_SERVICE;\r\n\t\t\t}\r\n\t\t\tlet response = await this.data.get(url + fileName);\r\n\t\t\tif(!response.error){\r\n\t\t\t\tthis.logContents = response;\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t}\r\n\t}\r\n\r\n\t// async getAuthLogs(){\r\n\t// \tlet response = await this.data.get(this.AUTH_SERVICE);\r\n\t// \tif(!response.error){\r\n\t// \t\tthis.authLogFileArray = response;\r\n\t// \t} \r\n\t// \treturn response;\r\n\t// }\r\n\r\n\tasync getAuthLogFile(fileName){\r\n\t\tif(fileName){\r\n\t\t\tlet response = await this.data.get(this.AUTH_SERVICE + fileName);\r\n\t\t\tif(!response.error){\r\n\t\t\t\tthis.authLogContents = response;\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t}\r\n\t}\r\n\r\n\tasync deleteAuthFiles(filesToDelete){\r\n\t\tlet obj = {\r\n\t\t\tfiles: filesToDelete\r\n\t\t};\r\n\t\tlet response = await this.data.saveObject(obj, this.AUTH_SERVICE, \"put\");\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\t// async getLogs(){\r\n\t// \tlet response = await this.data.get(this.LOG_SERVICE);\r\n\t// \tif(!response.error){\r\n\t// \t\tthis.authLogFileArray = response;\r\n\t// \t} \r\n\t// \treturn response;\r\n\t// }\r\n\r\n\t// async getLogFile(fileName){\r\n\t// \tif(fileName){\r\n\t// \t\tlet response = await this.data.get(this.LOG_SERVICE + fileName);\r\n\t// \t\tif(!response.error){\r\n\t// \t\t\tthis.logContents = response;\r\n\t// \t\t}\r\n\t// \t\treturn response;\r\n\t// \t}\r\n\t// }\r\n\r\n\tasync deleteLogFiles(filesToDelete){\r\n\t\tlet obj = {\r\n\t\t\tfiles: filesToDelete\r\n\t\t};\r\n\t\tlet response = await this.data.saveObject(obj, this.LOG_SERVICE, \"put\");\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tasync getFiles(){\r\n\t\tlet response = await this.data.get(this.FILES_SERVICE);\r\n\t\tif(!response.error){\r\n\t\t\tthis.parseFileList(response);\r\n\t\t} \r\n\t\treturn response;\r\n\t}\r\n\r\n\tparseFileList(response){\r\n\t\tthis.files = response;\r\n\t\tthis.filesList = {\r\n\t\t\tname: \"Uploaded Files\",\r\n\t\t\tvalue: \"root\",\r\n\t\t\tfile: false,\r\n\t\t\tchildren: new Array()\r\n\t\t};\r\n\t\tthis.files.forEach(item => {\r\n\t\t\tlet parts = item.split('\\\\');\r\n\t\t\tlet index = this.categoryIndex(parts[2]);\r\n\t\t\tif(index === -1){\r\n\t\t\t\tthis.filesList.children.push({\r\n\t\t\t\t\tname: parts[2],\r\n\t\t\t\t\tvalue: parts[2],\r\n\t\t\t\t\tfile: false,\r\n\t\t\t\t\tchildren: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tfor( let index = 0; index < this.files.length; index++){\r\n\t\t\tlet parts = this.files[index].split('\\\\');\r\n\t\t\tlet fileListindex = this.categoryIndex(parts[2]);\r\n\t\t\tif(parts.length === 4){\r\n\t\t\t\tindex = this.processShallowTree(fileListindex, index);\r\n\t\t\t} else {\r\n\t\t\t\tindex = this.processDeepTree(fileListindex, index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tprocessShallowTree(fileListindex, index){\r\n\t\tvar parts = this.files[index].split('\\\\');\r\n\t\tvar thisCategory = parts[2];\r\n\t\tvar fileName = parts[3];\r\n\t\tdo {\r\n\t\t\tthis.filesList.children[fileListindex].children.push({\r\n\t\t\t\tname: fileName,\r\n\t\t\t\tvalue: thisCategory +'-'+ fileName,\r\n\t\t\t\tfile: true,\r\n\t\t\t\tpath: this.files[index]\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t\tparts = this.files[index].split('\\\\');\r\n\t\t\tfileName = parts[3];\r\n\t\t} while(thisCategory === parts[2])\r\n\r\n\t\treturn --index;\r\n\t}\r\n\r\n\tprocessDeepTree(fileListindex, index){\r\n\t\tvar parts = this.files[index].split('\\\\');\r\n\t\tvar thisCategory = parts[2];\r\n\t\tvar thisSubCategory = parts[3];\r\n\t\tvar fileName = parts[4];\r\n\t\tthis.filesList.children[fileListindex].children.push({\r\n\t\t\tname: thisSubCategory,\r\n\t\t\tvalue: thisCategory +'-'+ thisSubCategory,\r\n\t\t\tfile: false,\r\n\t\t\tchildren: [{\r\n\t\t\t\tname: fileName,\r\n\t\t\t\tvalue: thisSubCategory + '-' + fileName,\r\n\t\t\t\tfile: true,\r\n\t\t\t\tpath: this.files[index]\r\n\t\t\t}]\r\n\t\t});\r\n\t\tindex++;\r\n\t\tif(index < this.files.length){\r\n\t\tparts = this.files[index].split('\\\\');\r\n\t\tvar childIndex = this.filesList.children[fileListindex].children.length - 1;\r\n\t\twhile(thisSubCategory === parts[3]) {\r\n\t\t\tfileName = parts[4];\r\n\t\t\tthis.filesList.children[fileListindex].children[childIndex].children.push({\r\n\t\t\t\tname: fileName,\r\n\t\t\t\tvalue: thisSubCategory +'-'+ fileName,\r\n\t\t\t\tfile: true,\r\n\t\t\t\tpath: this.files[index]\r\n\t\t\t});\r\n\t\t\tindex++;\r\n\t\t\tif(index < this.files.length) {\r\n\t\t\t\tparts = this.files[index].split('\\\\');\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn --index;\r\n\t}\r\n\r\n\tcategoryIndex(category){\r\n\t\tfor(let i = 0; i < this.filesList.children.length; i++){\r\n\t\tif(this.filesList.children[i].name === category) return i;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tasync deleteFile(file){\r\n\t\tif(file){ \r\n\t\t\tfile = file.split('\\\\').join('$@');\r\n\t\t\tlet response = await this.data.deleteObject(this.FILES_SERVICE + \"/\" + file);\r\n\t\t\treturn response\r\n\t\t}\r\n\t}\r\n\r\n\tasync renameALogFile(oldFile, newFile){\r\n\t\tif(oldFile && newFile){ \r\n\t\t\toldFile = oldFile.split('\\\\').join('$@');\r\n\t\t\tnewFile = newFile.split('\\\\').join('$@');\t\t\t\r\n\t\t\tlet response = await this.data.saveObject({}, this.FOREVER_SERVICE + \"/rename/\" + oldFile + \"/\" + newFile, \"put\");\r\n\t\t\treturn response\r\n\t\t}\r\n\t}\r\n\r\n}","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './dataServices';\r\nimport { Utils } from '../utils/utils';\r\nimport { AppConfig } from '../../config/appConfig';\r\n\r\n@inject(DataServices, Utils, AppConfig)\r\nexport class APJClientRequests {\r\n\r\n  CLIENT_REQUESTS_SERVICES = 'apj/clientRequests';\r\n  CLIENT_REQUEST_DETAILS = 'apj/clientRequestsDetails';\r\n\r\n  CUSTOMER_ACTION = 'clientRequests/customerAction';\r\n  CLIENT_REQUEST_EMAIL = \"clientRequests/sendMail\";\r\n  INVOICE_DATA = \"apj/invoicedata\";\r\n  INVOICES_SERVICE = 'apj/invoices';\r\n\r\n  constructor(data, utils, config) {\r\n    this.data = data;\r\n    this.utils = utils;\r\n    this.config = config;\r\n  }\r\n\r\n  async getClientRequestsDetailsArray(options, refresh) {\r\n    if (!this.requestsArray || refresh) {\r\n      var url = this.CLIENT_REQUEST_DETAILS;\r\n      url += options ? options : \"\";\r\n      try {\r\n        let serverResponse = await this.data.get(url);\r\n        if (!serverResponse.error) {\r\n          this.requestsDetailsArray = serverResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async getAPJInstitutionRequests(options, refresh) {\r\n    if (!this.apjInstitutionRequestArray || refresh) {\r\n      var url = this.CLIENT_REQUESTS_SERVICES;\r\n      url += options ? options : \"\";\r\n      let response = await this.data.get(url)\r\n      if (!response.error) {\r\n        this.apjInstitutionRequestArray = response;\r\n      } else {\r\n        this.apjInstitutionRequestArray = undefined;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  async getRequestDetail(id) {\r\n\r\n    let serverResponse = await this.data.get(this.CLIENT_REQUEST_DETAILS + \"/\" + id);\r\n    if (!serverResponse.error) {\r\n      this.selectedRequestDetail = serverResponse;\r\n\r\n    } else {\r\n      this.selectedRequestDetail = null;\r\n    }\r\n    return serverResponse;\r\n  }\r\n\r\n  selectRequest(index) {\r\n    if (index === undefined) {\r\n      this.selectedRequest = this.emptyRequest();\r\n    } else {\r\n      try {\r\n        this.selectedRequest = this.utils.copyObject(this.apjInstitutionRequestArray[index]);\r\n        this.editRequestIndex = index;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.selectedRequest = this.emptyRequest();\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  emptyRequest() {\r\n    var newObj = new Object();;\r\n    newObj.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;\r\n    newObj.startDate = \"\";\r\n    newObj.endDate = \"\";\r\n    newObj.comments = \"\";\r\n    newObj.requestDetails = new Array();\r\n    newObj.audit = new Array();\r\n    newObj.audit.push({\r\n      event: 'Created',\r\n      eventDate: new Date(),\r\n      personId: \"\"\r\n    })\r\n    return newObj;\r\n  }\r\n\r\n  setTheSelectedRequestDetail(request) {\r\n    this.selectedRequestDetail = this.utils.copyObject(request);\r\n    if (this.requestsDetailsArray) {\r\n      for (let i = 0; i < this.requestsDetailsArray.length; i++) {\r\n        if (this.requestsDetailsArray[i]._id === request._id) {\r\n          this.requestDetailIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  emptyRequestDetail() {\r\n    var newObj = new Object();;\r\n    newObj.createdDate = new Date();\r\n    newObj.modifiedDate = new Date();\r\n    newObj.requestStatus = this.config.UNASSIGNED_REQUEST_CODE;\r\n    return newObj;\r\n  }\r\n\r\n  async saveRequestDetail() {\r\n    if (!this.selectedRequestDetail) {\r\n      return;\r\n    }\r\n    let response = await this.data.saveObject(this.selectedRequestDetail, this.CLIENT_REQUEST_DETAILS, \"put\");\r\n    if (!response.error) {\r\n      this.selectedRequestDetail = response;\r\n      this.requestsDetailsArray[this.requestDetailIndex] = this.utils.copyObject(this.selectedRequestDetail);\r\n      return response;\r\n    }\r\n  }\r\n\r\n  setSelectedRequest(request) {\r\n    this.selectedRequest = this.utils.copyObject(request);\r\n  }\r\n\r\n  async assignRequest(index) {\r\n    if (!this.selectedRequest) {\r\n      return;\r\n    }\r\n    var url = this.CLIENT_REQUESTS_SERVICES + '/assign';\r\n    var serverResponse = await this.data.saveObject(this.selectedRequest, url, \"put\");\r\n    if (!serverResponse.error) {\r\n      this.selectedRequestDetail = serverResponse;\r\n      // if(!this.selectedRequestDetail.requestId.courseId || this.selectedRequestDetail.requestId.courseId === null){\r\n      //   this.selectedRequestDetail.requestId.courseId = {_id: this.config.SANDBOX_ID, name: this.config.SANDBOX_NAME};\r\n      // }\r\n      this.requestsDetailsArray[index] = this.utils.copyObject(this.selectedRequestDetail);\r\n    }\r\n    return serverResponse;\r\n  }\r\n\r\n  async saveRequest() {\r\n    if (!this.selectedRequest) {\r\n      return;\r\n    }\r\n    var url = this.CLIENT_REQUESTS_SERVICES;\r\n\r\n    if (!this.selectedRequest._id) {\r\n      let serverResponse = await this.data.saveObject(this.selectedRequest, url, \"post\");\r\n      if (!serverResponse.error) {\r\n        if (this.requestsArray) {\r\n          this.requestsArray.push(this.selectedRequest);\r\n        }\r\n      }\r\n      return serverResponse;\r\n    } else {\r\n      var serverResponse = await this.data.saveObject(this.selectedRequest, url, \"put\");\r\n      if (!serverResponse.error) {\r\n        if (this.requestsArray && this.editRequestIndex) {\r\n          this.requestsArray[this.editRequestIndex] = this.utils.copyObject(this.selectedRequest);\r\n        }\r\n      }\r\n      return serverResponse;\r\n    }\r\n  }\r\n\r\n  async saveRequestWithId() {\r\n    if (!this.selectedRequest) {\r\n      return;\r\n    }\r\n\r\n    var serverResponse = await this.data.saveObject(this.selectedRequest, this.CLIENT_REQUESTS_SERVICES + \"/\" + this.selectedRequest._id, \"put\");\r\n    if (!serverResponse.error) {\r\n      if (this.requestsArray && this.editRequestIndex) {\r\n        this.requestsArray[this.editRequestIndex] = this.utils.copyObject(this.selectedRequest);\r\n      }\r\n    }\r\n    return serverResponse;\r\n  }\r\n\r\n  async getInvoiceDataArray(options, refresh) {\r\n    if (!this.invoiceDataArray || refresh) {\r\n      var url = this.INVOICE_DATA;\r\n      url += options ? options : \"\";\r\n      try {\r\n        let serverResponse = await this.data.get(url);\r\n        if (!serverResponse.error) {\r\n          this.invoiceDataArray = serverResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async getInvoices(options){\r\n    var url = this.INVOICES_SERVICE;\r\n      url += options ? options : \"\";\r\n      try {\r\n        let serverResponse = await this.data.get(url);\r\n        if (!serverResponse.error) {\r\n          this.invoicesArray = serverResponse;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n  }\r\n\r\n  async saveInvoice(invoiceToSave) {\r\n    if (!invoiceToSave) {\r\n      return;\r\n    }\r\n    let response = await this.data.saveObject(invoiceToSave, this.INVOICES_SERVICE, \"post\");\r\n    if (!response.error) {\r\n      return response;\r\n    }\r\n  }\r\n\r\n  async createPDF(object) {\r\n    let url = 'apj/invoices/createPDF';\r\n    // let object = {page: html};\r\n    let serverResponse = await this.data.saveObject(object, url, \"post\");\r\n    return serverResponse;\r\n    // http://localhost/api/apj/invoices/createPDF\r\n  }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {DataServices} from './dataServices';\r\nimport {AppConfig} from '../../config/appConfig';\r\n \r\n@inject(EventAggregator, DataServices, AppConfig)\r\nexport class Auth {\r\n\r\n\tloginUrl = 'users/login';\r\n\tlogoutUrl = 'users/logout';\r\n\r\n\tconstructor(eventAggregator, data, config){\r\n\t\tthis.eventAggregator = eventAggregator;\r\n\t\tthis.data = data;\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tasync login(email, password) {\r\n\t\tlet content = {\r\n\t\t\t'email': email,\r\n\t\t\t'password': password\r\n\t\t};\r\n\r\n\t\tlet response = await this.data.login(content, this.loginUrl);\r\n\t\tif(!response.error){\r\n\t\t\tresponse.user.userRole = this.setRole(response.user.roles);\r\n\t\t\t\r\n\t\t\tsessionStorage.setItem('token', response.token);\r\n\t\t\tsessionStorage.setItem('user', JSON.stringify(response.user));\r\n\t\t\tthis.config.token = response.token;\r\n\t\t\tthis.config.user = response.user;\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.eventAggregator.publish('auth:login', response);\r\n\t\treturn response;\r\n\t}\r\n\r\n\tlogout(email){\r\n\t\tthis.data.saveObject({email: email}, this.logoutUrl,'post');\r\n\t\tsessionStorage.removeItem('token');\r\n\t\tsessionStorage.removeItem('user');\r\n\t\tsessionStorage.removeItem('role');\r\n\t\tsessionStorage.removeItem('alert');\r\n\t}\r\n\r\n\tisAuthenticated() {\r\n\t\tlet token = sessionStorage.getItem('token');\r\n\r\n\t\t// There's no token, so user is not authenticated.\r\n\t\tif (!token) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// There is a token, but in a different format. Return true.\r\n\t\tif (token.split('.').length !== 3) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet exp;\r\n\t\ttry {\r\n\t\t\tlet base64Url = token.split('.')[1];\r\n\t\t\tlet base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n\t\t\texp = JSON.parse(window.atob(base64)).exp;\r\n\t\t} catch (error) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (exp) {\r\n\t\t\treturn Math.round(new Date().getTime() / 1000) <= exp;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*****************************************************************************\r\n * Determine users role for authorizations\r\n ****************************************************************************/\r\nsetRole(roles){\r\n\tlet userRole = 1;\r\n\r\n\tfor(let i = 0; i < roles.length; i++){\r\n\t\tthis.config.ROLES.forEach(item => {\r\n\t\t\tif(roles[i] == item.role){\r\n\t\t\t\tuserRole = item.authLevel > userRole ? item.authLevel : userRole;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\treturn userRole;\r\n}\r\n\r\n}\r\n"],"names":[],"sourceRoot":""}