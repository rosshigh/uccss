{"version":3,"file":"app-92bcf446.c2f6f034a062b3d7f766.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdA;;AAAA;AAiBA;AACA;;AAlBA;AAqBA;AACA;;AAtBA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAFA;AAAA;;AAAA;AAKA;AAEA;AAPA;AAAA;;AAAA;AASA;;AATA;AAWA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlCA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAgDA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;;AAvEA;AAAA;AAyEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;AAAA;AAGA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAzEA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAgFA;AACA;AACA;;AAlFA;AAqFA;AACA;AACA;AACA;;AAxFA;AA2FA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAjGA;AAqGA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AA7GA;AAgHA;AACA;;AAjHA;AAoHA;AACA;;AArHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdA;;AAAA;AAiBA;AACA;;AAlBA;AAqBA;AACA;;AAtBA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAkCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAFA;AAAA;;AAAA;AAIA;AACA;AACA;AACA;AAPA;AAAA;;AAAA;AASA;;AATA;AAWA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlCA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAgDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;AAAA;AAGA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhDA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAuDA;AACA;AACA;AACA;AACA;;AA3DA;AA8DA;AACA;AACA;AACA;;AAjEA;AAoEA;AACA;AACA;AACA;AACA;;AACA;AACA;;AA1EA;AA8EA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAtFA;AAyFA;AACA;;AA1FA;AA6FA;AACA;;AA9FA;AAAA;;;;;;;;;;;ACZA;AACA;AACA;AACA;;;;;;;;;;;ACHA;AACA;AACA;AACA","sources":["webpack://client/./src/modules/facco/viewAssignments.js","webpack://client/./src/modules/facco/viewRequests.js","webpack://client/./src/modules/facco/viewAssignments.html","webpack://client/./src/modules/facco/viewRequests.html"],"sourcesContent":["import {inject} from 'aurelia-framework';\r\nimport {DataTable} from '../../resources/utils/dataTable';\r\nimport {Sessions} from '../../resources/data/sessions';\r\nimport {Systems} from '../../resources/data/systems';\r\nimport {Products} from '../../resources/data/products';\r\nimport {ClientRequests} from '../../resources/data/clientRequests';\r\nimport {AppConfig} from '../../config/appConfig';\r\nimport {Utils} from '../../resources/utils/utils';\r\nimport {People} from '../../resources/data/people';\r\n\r\n\r\n@inject( AppConfig, People, DataTable, Utils, Sessions, Products, Systems, ClientRequests)\r\nexport class ViewAssignments {\r\n\t\r\n    spinnerHTML = \"\";\r\n\t\r\n\tconstructor(config,  people,  datatable, utils, sessions, products, systems, requests) {\r\n\t\tthis.config = config;\r\n\t\tthis.people = people;\r\n\t\tthis.dataTable = datatable;\r\n\t\tthis.dataTable.initialize(this);\r\n\t\tthis.utils = utils;\r\n\t\tthis.sessions = sessions;\r\n\t\tthis.products = products;\r\n\t\tthis.requests = requests;\r\n\t\tthis.systems = systems;\r\n\t};\r\n\r\n\tattached(){\r\n\t\t$('[data-toggle=\"tooltip\"]').tooltip();\r\n\t}\r\n\t\r\n\tcanActivate(){\r\n\t\t\tthis.userObj = JSON.parse(sessionStorage.getItem('user'));\r\n\t}\r\n\r\n\tasync activate() {\r\n\t\tlet responses = await Promise.all([\r\n\t\t\tthis.sessions.getSessionsArray('?order=startDate:DSC', true),\r\n\t\t\tthis.people.getInstitutionPeople('?filter=institutionId|eq|' + this.userObj.institutionId._id + '&order=lastName'),\r\n\t\t\tthis.products.getProductsArray('?filter=active|eq|true&order=name'),\r\n\t\t\tthis.systems.getSystemsArray(),\r\n\t\t\tthis.config.getConfig()\r\n\t\t]);\r\n\t}\r\n\r\n\tasync getAssignments() {\r\n\t\tif (this.selectedSession) {\r\n\t\t\tthis.sessions.selectSessionById(this.selectedSession);\r\n\t\t\tawait this.requests.getClientRequestsDetailFaccoArray(this.selectedSession,  this.userObj.institutionId._id, true);\r\n\r\n\t\t\tthis.getAssignmentsArray();\r\n\r\n\t\t\tthis.dataTable.updateArray(this.assignmentsArray);\r\n\t\t} else {\r\n\t\t\tthis.dataTable.updateArray([]);\r\n\t\t}\r\n\t\tthis.clearFilters();\r\n\t}\r\n\r\n\tgetAssignmentsArray(){\r\n\t\tthis.assignmentsArray = [];\r\n\t\tthis.requests.requestsDetailsArray.forEach(item => {\r\n\t\t\tif(item.assignments){\r\n\t\t\t\titem.assignments.forEach(assign => {\r\n\t\t\t\t\tthis.assignmentsArray.push({\r\n\t\t\t\t\t\tperson: item.requestId.personId.fullName,\r\n\t\t\t\t\t\tlastName: item.requestId.personId.lastName,\r\n\t\t\t\t\t\tproduct: item.productId.name,\r\n\t\t\t\t\t\tdateRequested: item.createdDate,\r\n\t\t\t\t\t\tdateRequired: item.requiredDate,\r\n\t\t\t\t\t\tdateAssigned: assign.assignedDate,\r\n\t\t\t\t\t\tsystemId: assign.systemId,\r\n\t\t\t\t\t\tclient: assign.client,\r\n\t\t\t\t\t\tstudentUserIds: assign.studentUserIds,\r\n\t\t\t\t\t\tfacultyUserIds: assign.facultyUserIds,\r\n\t\t\t\t\t\tstudentPasswords: assign.studentPassword,\r\n\t\t\t\t\t\tfacultyPasswords: assign.facultyPassword,\r\n\t\t\t\t\t\tcourse: item.requestId.courseId !== null ? item.requestId.courseId.number : this.config.SANDBOX_NAME\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync refresh() {\r\n\t\tthis.spinnerHTML = \"<i class='fa fa-spinner fa-spin'></i>\";\r\n\t\tawait this.getAssignments();\r\n\t\tthis.spinnerHTML = \"\";\r\n\t}\r\n\r\n\tclearFilters(){\r\n\t\tthis.productFilterValue = \"\";\r\n\t\tthis.helpTicketTypeFilterValue = \"\";\r\n\t} \r\n\r\n\tcourseCustomFilter(value, item, context){\r\n\t\tif(value == 'Regular' && item.requestId.courseId != context.config.SANDBOX_ID)  return true;\r\n\t\tif(value == context.config.SANDBOX_ID && item.requestId.courseId == context.config.SANDBOX_ID) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnameCustomFilter(value, item, context){\r\n\t\tfor(let i = 0; i < context.people.instutionPeopleArray.length; i++){\r\n\t\t\tif(item.requestId.personId == context.people.instutionPeopleArray[i]._id) {\r\n\t\t\t\treturn context.people.instutionPeopleArray[i].fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tcustomPersonSorter(sortProperty, sortDirection, sortArray, context){ \r\n\t\treturn sortArray.sort((a, b) => {\r\n\t\t\tif(a['requestId']['personId']['lastName'] && b['requestId']['personId']['lastName']){\r\n\t\t\t\tvar result = (a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName']) ? -1 : (a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName']) ? 1 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tvar result = -1;\r\n\t\t\t}\r\n\t\t\treturn result * sortDirection;\r\n\t\t});\r\n\t}\r\n\r\n\tcustomNameFilter(value, item, context){\r\n\t\treturn item.person.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n\t}\r\n\r\n\tcustomProductNameFilter(value, item, context){\r\n        return item.product.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {DataTable} from '../../resources/utils/dataTable';\r\nimport {Sessions} from '../../resources/data/sessions';\r\nimport {Systems} from '../../resources/data/systems';\r\nimport {Products} from '../../resources/data/products';\r\nimport {ClientRequests} from '../../resources/data/clientRequests';\r\nimport {AppConfig} from '../../config/appConfig';\r\nimport {Utils} from '../../resources/utils/utils';\r\nimport {People} from '../../resources/data/people';\r\n\r\n\r\n@inject( AppConfig, People, DataTable, Utils, Sessions, Products, Systems, ClientRequests)\r\nexport class ViewRequests {\r\n\r\n    spinnerHTML = \"\";\r\n\r\n    constructor(config,  people,  datatable, utils, sessions, products, systems, requests) {\r\n        this.config = config;\r\n        this.people = people;\r\n        this.dataTable = datatable;\r\n        this.dataTable.initialize(this);\r\n        this.utils = utils;\r\n        this.sessions = sessions;\r\n        this.products = products;\r\n        this.requests = requests;\r\n        this.systems = systems;\r\n    };\r\n\r\n    attached(){\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n    }\r\n    \r\n    canActivate(){\r\n         this.userObj = JSON.parse(sessionStorage.getItem('user'));\r\n    }\r\n\r\n    async activate() {\r\n        let responses = await Promise.all([\r\n            this.sessions.getSessionsArray('?order=startDate:DSC', true),\r\n            this.people.getInstitutionPeople('?filter=institutionId|eq|' + this.userObj.institutionId._id + '&order=lastName'),\r\n            this.products.getProductsArray('?filter=active|eq|true&order=name'),\r\n            this.systems.getSystemsArray(),\r\n            this.config.getConfig()\r\n        ]);\r\n    }\r\n\r\n    async getRequests() {\r\n        if (this.selectedSession) { \r\n            this.sessions.selectSessionById(this.selectedSession);\r\n            await this.requests.getClientRequestsDetailFaccoArray(this.selectedSession,  this.userObj.institutionId._id, true);\r\n            this.requests.requestsDetailsArray.forEach(item => {\r\n                item.course = item.requestId.courseId !== null ? item.requestId.courseId.number : this.config.SANDBOX_NAME\r\n            })\r\n            this.dataTable.updateArray(this.requests.requestsDetailsArray);\r\n        } else {\r\n            this.dataTable.updateArray([]);\r\n        }\r\n        this.clearFilters();\r\n    }\r\n\r\n    async refresh() {\r\n        this.spinnerHTML = \"<i class='fa fa-spinner fa-spin'></i>\";\r\n        await this.getRequests();\r\n        this.spinnerHTML = \"\";\r\n    }\r\n\r\n    clearFilters(){\r\n        this.courseFilter = \"\";\r\n        this.requestStatusFilter = \"\";\r\n        this.productFilterValue = \"\";\r\n        this.helpTicketTypeFilterValue = \"\";\r\n    }\r\n\r\n    courseCustomFilter(value, item, context){\r\n        if(value == 'Regular' && item.requestId.courseId != context.config.SANDBOX_ID)  return true;\r\n        if(value == context.config.SANDBOX_ID && item.requestId.courseId == context.config.SANDBOX_ID) return true;\r\n        return false;\r\n    }\r\n\r\n    nameCustomFilter(value, item, context){\r\n        for(let i = 0; i < context.people.instutionPeopleArray.length; i++){\r\n            if(item.requestId.personId == context.people.instutionPeopleArray[i]._id) {\r\n                return context.people.instutionPeopleArray[i].fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    customPersonSorter(sortProperty, sortDirection, sortArray, context){ \r\n        return sortArray.sort((a, b) => {\r\n            if(a['requestId']['personId']['lastName'] && b['requestId']['personId']['lastName']){\r\n                var result = (a['requestId']['personId']['lastName'] < b['requestId']['personId']['lastName']) ? -1 : (a['requestId']['personId']['lastName'] > b['requestId']['personId']['lastName']) ? 1 : 0;\r\n            } else {\r\n                var result = -1;\r\n            }\r\n            return result * sortDirection;\r\n        });\r\n    }\r\n\r\n    customNameFilter(value, item, context){\r\n        return item.requestId && item.requestId.personId.fullName.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n\r\n    customProductNameFilter(value, item, context){\r\n        return item.productId.name.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }\r\n}","// Module\nvar code = \"<template>\\r\\n\\t<div class=\\\"panel panel-default rightMargin leftMargin\\\">\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t<compose view=\\\"./components/viewAssignmentsTable.html\\\"></compose>\\r\\n\\t\\t</div> <!-- Panel Body -->\\r\\n\\t</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n   <div class=\\\"panel panel-default rightMargin leftMargin\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n            <compose view=\\\"./components/viewRequestsTable.html\\\"></compose>\\r\\n    </div> <!-- Panel Body -->\\r\\n   </div>\\r\\n</template>\\r\\n\";\n// Exports\nexport default code;"],"names":[],"sourceRoot":""}